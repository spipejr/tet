/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ingredent_bom;

import dbutility.dbUtility;
import frmlist.listBranchGroup2;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import masterfile.NimbusFrame;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import report.Report;
import utilititiesfunction.TableTestFormatRenderer;
import utilititiesfunction.ThaiUtilities;

/**
 *
 * @author natee
 */
public class setup_posbom extends javax.swing.JDialog {

    /**
     * Creates new form setup_posbom
     */
    formatDateNumber fdn = new formatDateNumber();
    showMessage msn = new showMessage();
    dbUtility db = new dbUtility();
    ThaiUtilities cvth = new ThaiUtilities();
    Statement stmt;
    DefaultTableModel tbBgroup;
//    getLanguage lang = new getLanguage();

    public setup_posbom(java.awt.Frame parent, boolean modal, String pcode) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
        setTable();
        initable();
        clearAll();

        loadDataPLU(pcode);
        loadbgroup();
        loadcmd() ;
        btn_import.setVisible(false);
        btn_import.setFocusable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_print = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_list = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        btn_import = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_pdesc = new javax.swing.JTextField();
        txt_pcode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_punit1 = new javax.swing.JTextField();
        txt_groupname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_pgroup = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_plcode = new javax.swing.JTextField();
        txt_pqty = new javax.swing.JTextField();
        btn_plcode = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_plname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_psubunit = new javax.swing.JTextField();
        chk_w = new javax.swing.JCheckBox();
        chk_e = new javax.swing.JCheckBox();
        chk_t = new javax.swing.JCheckBox();
        chk_d = new javax.swing.JCheckBox();
        chk_p = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        btn_remove = new javax.swing.JButton();
        btn_add = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btn_clearChk = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txt_formula = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltable = new javax.swing.JTable();
        txt_count = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        txtfBgroup1 = new javax.swing.JTextField();
        txtfBranchName = new javax.swing.JTextField();
        d_lblb1 = new javax.swing.JLabel();
        db_btnOK = new javax.swing.JButton();
        db_btnCancel = new javax.swing.JButton();
        cmformula = new javax.swing.JComboBox();
        d_lblb2 = new javax.swing.JLabel();
        db_btnCancel1 = new javax.swing.JButton();
        db_btnCancel2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBgroup = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        menu_list = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBorder(null);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_print.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        btn_print.setText("พิมพ์");
        btn_print.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_print.setIconTextGap(0);
        btn_print.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });
        jPanel1.add(btn_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, 100, 65));

        btn_cancel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Cancel-icon.png"))); // NOI18N
        btn_cancel.setText("ยกเลิก");
        btn_cancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_cancel.setIconTextGap(0);
        btn_cancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 65));

        btn_save.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/save-icon.png"))); // NOI18N
        btn_save.setText("บันทึกรายการ");
        btn_save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_save.setIconTextGap(0);
        btn_save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        jPanel1.add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 100, 65));

        btn_delete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        btn_delete.setText("ลบรายการ");
        btn_delete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_delete.setIconTextGap(0);
        btn_delete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        jPanel1.add(btn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 100, 65));

        btn_list.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_list.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/list-icon.png"))); // NOI18N
        btn_list.setText("แสดงรายการ");
        btn_list.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_list.setIconTextGap(0);
        btn_list.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_listActionPerformed(evt);
            }
        });
        jPanel1.add(btn_list, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 100, 65));

        btn_exit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btn_exit.setText("ออก");
        btn_exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_exit.setIconTextGap(0);
        btn_exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });
        jPanel1.add(btn_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 0, 100, 65));

        btn_import.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_import.setText("รับข้อมูลเข้า");
        btn_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_importActionPerformed(evt);
            }
        });
        jPanel1.add(btn_import, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 100, 65));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("รหัสสินค้า");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 35));

        txt_pdesc.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_pdesc.setText("txt_pdesc");
        jPanel2.add(txt_pdesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 340, 30));

        txt_pcode.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_pcode.setText("txt_pcode");
        jPanel2.add(txt_pcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 130, 30));

        jLabel2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("หน่วยนับ");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, 100, 35));

        txt_punit1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_punit1.setText("txt_punit1");
        jPanel2.add(txt_punit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 70, 30));

        txt_groupname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_groupname.setText("txt_groupname");
        jPanel2.add(txt_groupname, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 210, 30));

        jLabel3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("กลุ่มสินค้า");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 100, 35));

        txt_pgroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_pgroup.setText("txt_pgroup");
        jPanel2.add(txt_pgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 70, 30));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("ปริมาณที่ใช้");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 80, 35));

        txt_plcode.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_plcode.setText("txt_plcode");
        txt_plcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_plcodeFocusGained(evt);
            }
        });
        txt_plcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_plcodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_plcodeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_plcodeKeyTyped(evt);
            }
        });
        jPanel3.add(txt_plcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 100, 30));

        txt_pqty.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_pqty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_pqty.setText("txt_pqty");
        txt_pqty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pqtyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_pqtyFocusLost(evt);
            }
        });
        txt_pqty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pqtyKeyPressed(evt);
            }
        });
        jPanel3.add(txt_pqty, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 100, 30));

        btn_plcode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_plcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_plcodeActionPerformed(evt);
            }
        });
        jPanel3.add(btn_plcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 30, 30));

        jLabel5.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("รหัสวัตถุดิบ");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 90, 35));

        txt_plname.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_plname.setText("txt_plname");
        jPanel3.add(txt_plname, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 230, 30));

        jLabel6.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("ชื่อวัตถุดิบ");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 220, 35));

        jLabel7.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Sale Type");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, 70, 35));

        txt_psubunit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_psubunit.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_psubunit.setText("txt_psubunit");
        jPanel3.add(txt_psubunit, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, 70, 30));

        chk_w.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        chk_w.setText("W");
        jPanel3.add(chk_w, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 50, -1, -1));

        chk_e.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        chk_e.setText("E");
        jPanel3.add(chk_e, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, -1, -1));

        chk_t.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        chk_t.setText("T");
        jPanel3.add(chk_t, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, -1, -1));

        chk_d.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        chk_d.setText("D");
        jPanel3.add(chk_d, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 50, -1, -1));

        chk_p.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        chk_p.setText("P");
        jPanel3.add(chk_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 50, -1, -1));

        jLabel8.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("หน่วยใช้");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 50, 35));

        btn_remove.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        btn_remove.setText("ลบรายการ");
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeActionPerformed(evt);
            }
        });
        jPanel3.add(btn_remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 140, 30));

        btn_add.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Add-icon.png"))); // NOI18N
        btn_add.setText("เพิ่มรายการ");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        btn_add.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btn_addFocusLost(evt);
            }
        });
        btn_add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_addKeyPressed(evt);
            }
        });
        jPanel3.add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 50, 140, 30));

        jLabel9.setFont(new java.awt.Font("Norasi", 0, 13)); // NOI18N
        jLabel9.setForeground(java.awt.Color.red);
        jLabel9.setText("* E = Eat In , T = Take Away , D = Delivery , P = Pinto , W = Wholesale");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 460, 30));

        btn_clearChk.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btn_clearChk.setText("เลือกทั้งหมด");
        btn_clearChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearChkActionPerformed(evt);
            }
        });
        jPanel3.add(btn_clearChk, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 100, 30));

        jLabel12.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("สูตร");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 35));

        txt_formula.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_formula.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_formula.setText("txt_formula");
        txt_formula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_formulaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_formulaFocusLost(evt);
            }
        });
        txt_formula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_formulaKeyPressed(evt);
            }
        });
        jPanel3.add(txt_formula, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 40, 30));

        tbltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "สูตร", "รหัสวัตถุดิบ", "ชื่อวัตถุดิบ", "ปริมาณที่ใช้", "หน่วยนับ", "Sale Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltableMouseClicked(evt);
            }
        });
        tbltable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbltableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbltable);
        tbltable.getColumnModel().getColumn(0).setPreferredWidth(40);
        tbltable.getColumnModel().getColumn(1).setPreferredWidth(100);
        tbltable.getColumnModel().getColumn(2).setPreferredWidth(200);
        tbltable.getColumnModel().getColumn(3).setPreferredWidth(80);
        tbltable.getColumnModel().getColumn(4).setPreferredWidth(60);
        tbltable.getColumnModel().getColumn(5).setPreferredWidth(80);

        txt_count.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_count.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_count.setText("txt_count");

        jLabel10.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel10.setText("รายการ");

        jLabel11.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("จำนวนรายการ");

        jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtfBgroup1.setEditable(false);
        txtfBgroup1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfBgroup1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfBgroup1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfBgroup1FocusLost(evt);
            }
        });
        txtfBgroup1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyTyped(evt);
            }
        });
        jPanel19.add(txtfBgroup1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 40, 30));

        txtfBranchName.setBackground(new java.awt.Color(255, 246, 143));
        txtfBranchName.setEditable(false);
        txtfBranchName.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jPanel19.add(txtfBranchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 140, 30));

        d_lblb1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblb1.setText("สูตร");
        d_lblb1.setName("d_lblb1"); // NOI18N
        jPanel19.add(d_lblb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, -1, -1));

        db_btnOK.setText("OK");
        db_btnOK.setName("db_btnOK"); // NOI18N
        db_btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnOKActionPerformed(evt);
            }
        });
        jPanel19.add(db_btnOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 70, 30));

        db_btnCancel.setText("Clear");
        db_btnCancel.setName("db_btnCancel2"); // NOI18N
        db_btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnCancelActionPerformed(evt);
            }
        });
        jPanel19.add(db_btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 70, 30));

        cmformula.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        cmformula.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        jPanel19.add(cmformula, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 50, 30));

        d_lblb2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblb2.setText("รหัสกลุ่มสาขา (Branch Group)");
        d_lblb2.setName("d_lblb1"); // NOI18N
        jPanel19.add(d_lblb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        db_btnCancel1.setForeground(new java.awt.Color(244, 15, 15));
        db_btnCancel1.setText("Link All");
        db_btnCancel1.setName("db_btnCancel2"); // NOI18N
        db_btnCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnCancel1ActionPerformed(evt);
            }
        });
        jPanel19.add(db_btnCancel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 80, 30));

        db_btnCancel2.setForeground(new java.awt.Color(244, 15, 15));
        db_btnCancel2.setText("Clear All");
        db_btnCancel2.setName("db_btnCancel2"); // NOI18N
        db_btnCancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnCancel2ActionPerformed(evt);
            }
        });
        jPanel19.add(db_btnCancel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 80, 30));

        tblBgroup.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        tblBgroup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "สูตร", "รหัสกลุ่มสาขา", "ชื่อกลุ่มสาขา"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBgroup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblBgroupMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblBgroup);
        tblBgroup.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblBgroup.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblBgroup.getColumnModel().getColumn(2).setPreferredWidth(250);

        jMenu1.setText("ฟังก์ชั่น");
        jMenu1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem1.setText("ยกเลิก");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem2.setText("บันทึกรายการ");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem3.setText("ลบรายการ");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        menu_list.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        menu_list.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menu_list.setText("แสดงรายการ");
        menu_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_listActionPerformed(evt);
            }
        });
        jMenu1.add(menu_list);
        jMenu1.add(jSeparator1);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem5.setText("ออก");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(254, 254, 254)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_count, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_count, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1032)/2, (screenSize.height-796)/2, 1032, 796);
    }// </editor-fold>//GEN-END:initComponents

    private void loadcmd() {
        cmformula.removeAllItems();
        cmformula.addItem("0");
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select formula from posbom where pcode ='" + cvth.Unicode2ASCII(txt_pcode.getText()) + "' group by formula";
                rs = stmt.executeQuery(sql);
                rs.first();
                if (rs.getRow()==0) {
                } else {
                    do {
                       cmformula.addItem(rs.getString("formula"));  
                    } while (rs.next()) ;
                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select formula from posbom where pcode ='" +txt_pcode.getText() + "' group by formula";
                rs = stmt.executeQuery(sql);
                rs.first();
                if (rs.getRow()==0) {
                } else {
                    do {
                       cmformula.addItem(rs.getString("formula"));  
                    } while (rs.next()) ;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        if (loadDataItem(txt_plcode.getText())) {
            btnAdd();
            loadcmd();
        } else {
            msn.showMessageInformation("ไม่พบรหัสวัตถุดิบ(" + txt_plcode.getText() + ")นี้ในระบบ กรุณาตรวจสอบ ...");
            clearItem();
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeActionPerformed
        btnRemove();
        loadcmd();
    }//GEN-LAST:event_btn_removeActionPerformed

    private void btn_plcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_plcodeActionPerformed
        btnIngredent();
    }//GEN-LAST:event_btn_plcodeActionPerformed

    private void txt_plcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_plcodeKeyReleased
        String pcode = txt_plcode.getText().trim();
        loadDataItem(pcode);
    }//GEN-LAST:event_txt_plcodeKeyReleased

    private void txt_plcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_plcodeKeyPressed
        String data = txt_plcode.getText().trim();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (loadDataItem(data)) {
                txt_pqty.requestFocus();
            } else {
                msn.showMessageInformation("ไม่พบรหัสวัตถุดิบ(" + data + ")นี้ในระบบ กรุณาตรวจสอบ ...");
                clearItem();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            clearItem();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnIngredent();
        } else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_INSERT) {
            btnAdd();
        } else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_DELETE) {
            btnRemove();
        }
    }//GEN-LAST:event_txt_plcodeKeyPressed

    private void txt_pqtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pqtyKeyPressed
        String data = txt_pqty.getText().trim();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_add.setFocusable(true);
            btn_add.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            clearItem();
        } else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_INSERT) {
            btnAdd();
        } else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_DELETE) {
            btnRemove();
        }
    }//GEN-LAST:event_txt_pqtyKeyPressed

    private void txt_pqtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pqtyFocusGained
        String data = fdn.convertDoubleString(txt_pqty.getText().trim());

        if (data.length() > 0) {
            if (!fdn.isNumberic(data)) {
                txt_pqty.setText("0.000");
            } else {
                txt_pqty.setText(data);
            }
        } else {
            txt_pqty.setText("0.000");
        }
        txt_pqty.selectAll();
    }//GEN-LAST:event_txt_pqtyFocusGained

    private void txt_pqtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pqtyFocusLost
        String data = fdn.convertDoubleString(txt_pqty.getText().trim());

        if (data.length() > 0) {
            if (!fdn.isNumberic(data)) {
                txt_pqty.setText("0.000");
            } else {
                Double d = Double.parseDouble(data);
                txt_pqty.setText(fdn.double3Fmt(d));
            }
        } else {
            txt_pqty.setText("0.000");
        }
    }//GEN-LAST:event_txt_pqtyFocusLost

    private void btn_addFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_addFocusLost
        btn_add.setFocusable(false);
    }//GEN-LAST:event_btn_addFocusLost

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        dispose();
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        String pcode = txt_pcode.getText().trim();
        if (pcode.length() <= 0) {
            return;
        }
        msn.showMessageInformation("บันทึกข้อมูลเรียบร้อยแล้ว ...");
        clearAll();
        loadDataPLU(pcode);
    }//GEN-LAST:event_btn_saveActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        btn_cancelActionPerformed(null);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        btn_saveActionPerformed(null);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        btn_deleteActionPerformed(null);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        String pcode = txt_pcode.getText().trim();
        if (pcode.length() <= 0) {
            return;
        }
        btnDelete();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_listActionPerformed
        btnList();
    }//GEN-LAST:event_btn_listActionPerformed

    private void menu_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_listActionPerformed
        btn_listActionPerformed(null);
    }//GEN-LAST:event_menu_listActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        String pcode = txt_pcode.getText().trim();
        int count = tbltable.getRowCount();

        if (pcode.length() > 0 && count > 0) {
            btnPrint();
        }
    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_clearChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearChkActionPerformed
        btnChkAll();
    }//GEN-LAST:event_btn_clearChkActionPerformed

    private void tbltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltableMouseClicked
        int index = tbltable.getSelectedRow();
        if (evt.getClickCount() == 2) {
            clearItem();
            String formula = tbltable.getValueAt(index, 0).toString();
            String plcode = tbltable.getValueAt(index, 1).toString();
            String plname = tbltable.getValueAt(index, 2).toString();
            String pqty = tbltable.getValueAt(index, 3).toString();
            String psubunit = tbltable.getValueAt(index, 4).toString();
            String saletype = tbltable.getValueAt(index, 5).toString();

            txt_formula.setText(formula);
            txt_plcode.setText(plcode);
            txt_plname.setText(plname);
            txt_pqty.setText(pqty);
            txt_psubunit.setText(psubunit);
            setSaleType(saletype);
            txt_plcode.requestFocus();
        }
    }//GEN-LAST:event_tbltableMouseClicked

    private void tbltableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbltableKeyPressed
        int index = tbltable.getSelectedRow();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clearItem();
            String plcode = tbltable.getValueAt(index, 0).toString();
            String plname = tbltable.getValueAt(index, 1).toString();
            String pqty = tbltable.getValueAt(index, 2).toString();
            String psubunit = tbltable.getValueAt(index, 3).toString();
            String saletype = tbltable.getValueAt(index, 4).toString();

            txt_plcode.setText(plcode);
            txt_plname.setText(plname);
            txt_pqty.setText(pqty);
            txt_psubunit.setText(psubunit);
            setSaleType(saletype);
            txt_plcode.requestFocus();
        }
    }//GEN-LAST:event_tbltableKeyPressed

    private void btn_addKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_addKeyPressed
        if (!fdn.chkos.equalsIgnoreCase("linux")) {
            btnAdd();
        }
    }//GEN-LAST:event_btn_addKeyPressed

    private void txt_plcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_plcodeKeyTyped
        if (txt_plcode.getText().length() >= 13) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_plcodeKeyTyped

    private void txt_formulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_formulaFocusGained
        String data = fdn.convertDoubleString(txt_formula.getText().trim());

        if (data.length() > 0) {
            if (!fdn.isNumberic(data)) {
                txt_formula.setText("1");
            } else {
                txt_formula.setText(data);
            }
        } else {
            txt_formula.setText("1");
        }
        txt_formula.selectAll();
    }//GEN-LAST:event_txt_formulaFocusGained

    private void txt_formulaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_formulaFocusLost
        String data = fdn.convertDoubleString(txt_formula.getText().trim());

        if (data.length() > 0){
            if (!fdn.isNumberic(data)) {
                txt_formula.setText("1");
            } else {
                int d = Integer.parseInt(data);
                txt_formula.setText(fdn.intFmtShow(d));
            }
        } else {
            txt_formula.setText("1");
        }
        if (txt_formula.getText().equals("0")) {
            txt_formula.setText("1");
        }
    }//GEN-LAST:event_txt_formulaFocusLost

    private void txt_formulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_formulaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clearItem();
            loadDetail();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_formula.setText("1");
        }
    }//GEN-LAST:event_txt_formulaKeyPressed

    private void btn_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_importActionPerformed
        btnImport();
    }//GEN-LAST:event_btn_importActionPerformed

    private void txt_plcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_plcodeFocusGained
        String data = txt_plcode.getText().trim();

        if (data.length() > 0) {
            txt_plcode.selectAll();
        } else {
            txt_plcode.setText("1");
            txt_plcode.selectAll();
            txt_plcode.setText("");
        }

    }//GEN-LAST:event_txt_plcodeFocusGained

    private void txtfBgroup1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfBgroup1FocusGained
        txtfBgroup1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1FocusGained

    private void txtfBgroup1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfBgroup1FocusLost
        if (!txtfBgroup1.getText().trim().equals("")) {
            if (!setbgroup(txtfBgroup1.getText())) {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                txtfBgroup1.requestFocus();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1FocusLost

    private void txtfBgroup1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnfindbgroup();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1KeyPressed

    public boolean setbgroup(String bgroupcode) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + cvth.Unicode2ASCII(bgroupcode) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfBranchName.setText(cvth.ASCII2Unicode(rs.getString("bgroupname")));
                    chk = true;
                } else {
                    return false;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + bgroupcode + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfBranchName.setText(rs.getString("bgroupname"));
                    chk = true;
                } else {
                    return false;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public void btnfindbgroup() {
        listBranchGroup2 f = new listBranchGroup2(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.bcode.equals("")) {
            txtfBgroup1.setText(f.bcode);
            setbgroup(txtfBgroup1.getText());

        }

    }
    private void txtfBgroup1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyReleased
        txtfBgroup1.setText(txtfBgroup1.getText().toUpperCase());
        if (!setbgroup(txtfBgroup1.getText())) {
            txtfBranchName.setText("");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1KeyReleased

    private void txtfBgroup1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyTyped
        if (txtfBgroup1.getText().length() >= 3) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1KeyTyped

    private void db_btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnOKActionPerformed
        //save data to blink
        String sql = "update blink set bformula=? "
                + " where pcode=? and bgroup=?";
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setInt(1, Integer.parseInt(cmformula.getSelectedItem().toString()));
                pre.setString(2, cvth.Unicode2ASCII(txt_pcode.getText()));
                pre.setString(3, cvth.Unicode2ASCII(txtfBgroup1.getText()));
                pre.executeUpdate();
                pre.close();
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setInt(1, Integer.parseInt(cmformula.getSelectedItem().toString()));
                pre.setString(2, txt_pcode.getText());
                pre.setString(3, txtfBgroup1.getText());
                pre.executeUpdate();
                pre.close();
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }
        txtfBgroup1.setText("");
        txtfBranchName.setText("");
        loadbgroup();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnOKActionPerformed

    private void db_btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnCancelActionPerformed
//        String sql = "update blink set bformula=? "
//                + " where pcode=? ";
//        try {
//            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
//                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
//                pre.setInt(1, 0);
//                pre.setString(2, cvth.Unicode2ASCII(txt_pcode.getText()));
//                pre.executeUpdate();
//                pre.close();
//                pre = null;
//            } else {
//                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
//                pre.setInt(1, 0);
//                pre.setString(2, txt_pcode.getText());
//                pre.executeUpdate();
//                pre.close();
//                pre = null;
//            }
//        } catch (Exception e) {
//            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
//            e.printStackTrace();
//            return;
//        }
        txtfBgroup1.setText("");
        txtfBranchName.setText("");
        //loadbgroup();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnCancelActionPerformed

    private void db_btnCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnCancel1ActionPerformed
        // TODO add your handling code here:
        String sql = "update blink set bformula=? "
                + " where pcode=? ";
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setInt(1, Integer.parseInt(cmformula.getSelectedItem().toString()));
                pre.setString(2, cvth.Unicode2ASCII(txt_pcode.getText()));
                pre.executeUpdate();
                pre.close();
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setInt(1, Integer.parseInt(cmformula.getSelectedItem().toString()));
                pre.setString(2, txt_pcode.getText());
                pre.executeUpdate();
                pre.close();
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }
        txtfBgroup1.setText("");
        txtfBranchName.setText("");
        loadbgroup();
    }//GEN-LAST:event_db_btnCancel1ActionPerformed

    private void tblBgroupMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBgroupMouseReleased
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int rowSelect = tblBgroup.getSelectedRow();
            String pcode = tblBgroup.getValueAt(rowSelect, 1).toString();
            String pname = tblBgroup.getValueAt(rowSelect, 2).toString();
            txtfBgroup1.setText(pcode);
            txtfBranchName.setText(pname);
        }
    }//GEN-LAST:event_tblBgroupMouseReleased

    private void db_btnCancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnCancel2ActionPerformed
        // TODO add your handling code here:
                String sql = "update blink set bformula=? "
                + " where pcode=? ";
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setInt(1, 0);
                pre.setString(2, cvth.Unicode2ASCII(txt_pcode.getText()));
                pre.executeUpdate();
                pre.close();
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setInt(1, 0);
                pre.setString(2, txt_pcode.getText());
                pre.executeUpdate();
                pre.close();
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }
        txtfBgroup1.setText("");
        txtfBranchName.setText("");
        loadbgroup();
    }//GEN-LAST:event_db_btnCancel2ActionPerformed

    private void initable() {
        model2 = (DefaultTableModel) tblBgroup.getModel();
        tblBgroup.setShowGrid(true);
        //tblPLU.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblBgroup.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblBgroup.setRowSelectionAllowed(true);
        tblBgroup.setBackground(java.awt.Color.WHITE);
        tblBgroup.setGridColor(java.awt.Color.gray);
        JTableHeader header = tblBgroup.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        //tblBtype.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tblBgroup.setRowHeight(25);
        tblBgroup.setAutoCreateRowSorter(true);
    }

    private void clearTablegroup() {
        int size = tblBgroup.getRowCount();
        for (int i = 0; i < size; i++) {
            model2.removeRow(0);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(setup_posbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(setup_posbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(setup_posbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(setup_posbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                setup_posbom dialog = new setup_posbom(new javax.swing.JFrame(), true, "");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_clearChk;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_import;
    private javax.swing.JButton btn_list;
    private javax.swing.JButton btn_plcode;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_remove;
    private javax.swing.JButton btn_save;
    private javax.swing.JCheckBox chk_d;
    private javax.swing.JCheckBox chk_e;
    private javax.swing.JCheckBox chk_p;
    private javax.swing.JCheckBox chk_t;
    private javax.swing.JCheckBox chk_w;
    private javax.swing.JComboBox cmformula;
    private javax.swing.JLabel d_lblb1;
    private javax.swing.JLabel d_lblb2;
    private javax.swing.JButton db_btnCancel;
    private javax.swing.JButton db_btnCancel1;
    private javax.swing.JButton db_btnCancel2;
    private javax.swing.JButton db_btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem menu_list;
    private javax.swing.JTable tblBgroup;
    private javax.swing.JTable tbltable;
    private javax.swing.JTextField txt_count;
    private javax.swing.JTextField txt_formula;
    private javax.swing.JTextField txt_groupname;
    private javax.swing.JTextField txt_pcode;
    private javax.swing.JTextField txt_pdesc;
    private javax.swing.JTextField txt_pgroup;
    private javax.swing.JTextField txt_plcode;
    private javax.swing.JTextField txt_plname;
    private javax.swing.JTextField txt_pqty;
    private javax.swing.JTextField txt_psubunit;
    private javax.swing.JTextField txt_punit1;
    private javax.swing.JTextField txtfBgroup1;
    private javax.swing.JTextField txtfBranchName;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel model;
    private DefaultTableModel model2;

    private void setTable() {

        model = (DefaultTableModel) tbltable.getModel();
        tbltable.setShowGrid(true);
        tbltable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbltable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbltable.setRowSelectionAllowed(true);
        tbltable.setBackground(java.awt.Color.WHITE);
        tbltable.setGridColor(java.awt.Color.gray);
        tbltable.setRowHeight(24);
        tbltable.setFont(new Font("Norasi", Font.PLAIN, 14));
        JTableHeader tHeader = tbltable.getTableHeader();
        tHeader.setFont(new Font("Norasi", Font.BOLD, 14));
        DefaultTableCellRenderer l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);
        DefaultTableCellRenderer r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        TableColumnModel tcm = tbltable.getColumnModel();
        tcm.getColumn(0).setCellRenderer(c);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(l);
        tcm.getColumn(3).setCellRenderer(r);
        tcm.getColumn(4).setCellRenderer(l);
        tcm.getColumn(5).setCellRenderer(l);

    }

    private void clearTable() {
        int size = tbltable.getRowCount();
        for (int i = 0; i < size; i++) {
            model.removeRow(0);
        }
    }

    private void clearAll() {
        btn_list.setVisible(false);

//        txt_pcode.setText("");
        txt_pcode.setFocusable(false);
        txt_pcode.setBackground(fdn.colorDisable());

//        txt_pdesc.setText("");
        txt_pdesc.setFocusable(false);
        txt_pdesc.setBackground(fdn.colorDisable());

//        txt_pgroup.setText("");
        txt_pgroup.setFocusable(false);
        txt_pgroup.setBackground(fdn.colorDisable());

//        txt_groupname.setText("");
        txt_groupname.setFocusable(false);
        txt_groupname.setBackground(fdn.colorDisable());

//        txt_punit1.setText("");
        txt_punit1.setFocusable(false);
        txt_punit1.setBackground(fdn.colorDisable());

        txt_formula.setText("1");
        txt_formula.setFocusable(true);
        txt_formula.setBackground(fdn.colorEnable());

        txt_plcode.setText("");
        txt_plcode.setFocusable(false);
        txt_plcode.setBackground(fdn.colorDisable());
        btn_plcode.setEnabled(false);

        txt_plname.setText("");
        txt_plname.setFocusable(false);
        txt_plname.setBackground(fdn.colorDisable());

        txt_pqty.setText("0.000");
        txt_pqty.setFocusable(false);
        txt_pqty.setBackground(fdn.colorDisable());

        txt_psubunit.setText("");
        txt_psubunit.setFocusable(false);
        txt_psubunit.setBackground(fdn.colorDisable());

        chk_e.setEnabled(false);
        chk_t.setEnabled(false);
        chk_d.setEnabled(false);
        chk_p.setEnabled(false);
        chk_w.setEnabled(false);
        btn_clearChk.setFocusable(false);
        btn_clearChk.setVisible(false);

        btn_remove.setEnabled(false);
        btn_add.setEnabled(false);

        txt_count.setText("0");
        txt_count.setFocusable(false);
        txt_count.setEditable(false);
        txt_count.setBackground(fdn.colorDisable());

        clearTable();
    }

    private void clearItem() {
        btn_cancel.setFocusable(false);
        btn_save.setFocusable(false);
        btn_delete.setFocusable(false);
        btn_list.setFocusable(false);
        btn_print.setFocusable(false);
        btn_exit.setFocusable(false);

        txt_plcode.setText("");
        txt_plcode.setFocusable(true);
        txt_plcode.setBackground(fdn.colorEnable());
        txt_plcode.requestFocus();
        btn_plcode.setEnabled(true);

        txt_plname.setText("");

        txt_pqty.setText("0.000");
        txt_pqty.setFocusable(true);
        txt_pqty.setBackground(fdn.colorEnable());

        txt_psubunit.setText("");

        chk_e.setEnabled(true);
        chk_e.setSelected(true);

        chk_t.setEnabled(true);
        chk_t.setSelected(true);
        chk_d.setEnabled(true);
        chk_d.setSelected(true);
        chk_p.setEnabled(true);
        chk_p.setSelected(true);
        chk_w.setEnabled(true);
        chk_w.setSelected(true);

        btn_add.setFocusable(false);
        btn_remove.setFocusable(false);
        btn_add.setEnabled(true);
        btn_remove.setEnabled(true);
    }

    private void loadbgroup() {
        clearTablegroup();
        String pcode = txt_pcode.getText().trim();
        String sql = "select bformula,bgroup,bgroupname from blink  "
                + "inner join branchgroup on bgroupcode=bgroup "
                + "where pcode=? "
                + "order by bgroup";

        int count = 0;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        count++;
                        model2.addRow(new Object[]{
                                    cvth.ASCII2Unicode(rs.getString("bformula")),
                                    cvth.ASCII2Unicode(rs.getString("bgroup")),
                                    cvth.ASCII2Unicode(rs.getString("bgroupname"))
                                });
                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, (pcode));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        count++;

                        model2.addRow(new Object[]{
                                    rs.getString("bformula"),
                                    rs.getString("bgroup"),
                                    (rs.getString("bgroupname"))
                                });

                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }
        //txt_count.setText(fdn.intFmtShow(count));
        //clearItem();
    }

    private void loadDetail() {
        clearTable();
        new setupbomFactory();

//        String formula = txt_formula.getText().trim();

        String pcode = txt_pcode.getText().trim();
        String sql = "select b.formula,b.plcode, p.pdesc, b.pqty, p.psubunit, b.saletype "
                + "from posbom b "
                + "left join product p on b.plcode=p.pcode "
                + "where b.pcode=? "
                //                + "where b.pcode=? and formula=? "
                + "order by b.formula,b.saletype";

        int count = 0;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
//                pre.setString(2, cvth.Unicode2ASCII(formula));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        count++;
                        String pdesc = "";
                        String psubunit = "";
                        if (rs.getString("p.pdesc") != null) {
                            pdesc = cvth.ASCII2Unicode(rs.getString("p.pdesc"));
                        }
                        if (rs.getString("p.psubunit") != null) {
                            psubunit = cvth.ASCII2Unicode(rs.getString("p.psubunit"));
                        }
                        model.addRow(new Object[]{
                                    cvth.ASCII2Unicode(rs.getString("b.formula")),
                                    cvth.ASCII2Unicode(rs.getString("b.plcode")),
                                    pdesc,
                                    fdn.double3Fmt(rs.getDouble("b.pqty")),
                                    psubunit,
                                    cvth.ASCII2Unicode(rs.getString("b.saletype"))
                                });
                        new setupbomFactory(
                                rs.getInt("b.formula"),
                                cvth.ASCII2Unicode(rs.getString("b.plcode")),
                                pdesc,
                                rs.getDouble("b.pqty"),
                                psubunit,
                                cvth.ASCII2Unicode(rs.getString("b.saletype")));
                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, (pcode));
//                pre.setString(2, (formula));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        count++;
                        String pdesc = "";
                        String psubunit = "";
                        if (rs.getString("p.pdesc") != null) {
                            pdesc = (rs.getString("p.pdesc"));
                        }
                        if (rs.getString("p.psubunit") != null) {
                            psubunit = (rs.getString("p.psubunit"));
                        }
                        model.addRow(new Object[]{
                                    rs.getString("b.formula"),
                                    rs.getString("b.plcode"),
                                    pdesc,
                                    fdn.double3Fmt(rs.getDouble("b.pqty")),
                                    psubunit,
                                    (rs.getString("b.saletype"))
                                });
                        new setupbomFactory(
                                rs.getInt("b.formula"),
                                rs.getString("b.plcode"),
                                pdesc,
                                rs.getDouble("b.pqty"),
                                psubunit,
                                rs.getString("b.saletype"));
                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }

        txt_count.setText(fdn.intFmtShow(count));
        clearItem();
    }

    private void loadDataPLU(String pcode) {
        String sql = "select p.pdesc, p.pgroup, p.punit1, g.groupname "
                + "from product p "
                + "left join groupfile g on p.pgroup=g.groupcode "
                + "where p.pcode=?";
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    String pdesc = "";
                    String pgroup = "";
                    String groupname = "";
                    String punit1 = "";

                    if (rs.getString("p.pdesc") != null) {
                        pdesc = cvth.ASCII2Unicode(rs.getString("p.pdesc"));
                    }
                    if (rs.getString("p.pgroup") != null) {
                        pgroup = cvth.ASCII2Unicode(rs.getString("p.pgroup"));
                    }
                    if (rs.getString("g.groupname") != null) {
                        groupname = cvth.ASCII2Unicode(rs.getString("g.groupname"));
                    }
                    if (rs.getString("p.punit1") != null) {
                        punit1 = cvth.ASCII2Unicode(rs.getString("p.punit1"));
                    }

                    txt_pcode.setText(pcode);
                    txt_pdesc.setText(pdesc);
                    txt_pgroup.setText(pgroup);
                    txt_groupname.setText(groupname);
                    txt_punit1.setText(punit1);
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, (pcode));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    String pdesc = "";
                    String pgroup = "";
                    String groupname = "";
                    String punit1 = "";

                    if (rs.getString("p.pdesc") != null) {
                        pdesc = (rs.getString("p.pdesc"));
                    }
                    if (rs.getString("p.pgroup") != null) {
                        pgroup = (rs.getString("p.pgroup"));
                    }
                    if (rs.getString("g.groupname") != null) {
                        groupname = (rs.getString("g.groupname"));
                    }
                    if (rs.getString("p.punit1") != null) {
                        punit1 = (rs.getString("p.punit1"));
                    }

                    txt_pcode.setText(pcode);
                    txt_pdesc.setText(pdesc);
                    txt_pgroup.setText(pgroup);
                    txt_groupname.setText(groupname);
                    txt_punit1.setText(punit1);
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }

        loadDetail();
    }

    private void btnAdd() {
        if (txt_pcode.getText().equals(txt_plcode.getText())) {
            JOptionPane.showMessageDialog(null, "กรุณากำหนดรหัสวัตถุดิบให้ถูกต้อง...");
            return ;
        }
        String pcode = txt_pcode.getText().trim();
        String plcode = txt_plcode.getText().trim();
        Double pqty = Double.parseDouble(fdn.convertDoubleString(txt_pqty.getText().trim()));
        String saletype = getSaleType();
        int formula = Integer.parseInt(fdn.convertDoubleString(txt_formula.getText().trim()));

        try {
            String sql = "select pcode, plcode from posbom where pcode=? and plcode=? and formula=?";
            String sqlDel = "delete from posbom where pcode=? and plcode=? and formula=?";
            String sqlIns = "insert into posbom(pcode, plcode, pqty, saletype, formula) values(?,?,?,?,?)";
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
                pre.setString(2, cvth.Unicode2ASCII(plcode));
                pre.setInt(3, formula);
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    PreparedStatement del = dbUtility.con.prepareStatement(sqlDel);
                    del.setString(1, cvth.Unicode2ASCII(pcode));
                    del.setString(2, cvth.Unicode2ASCII(plcode));
                    del.setInt(3, formula);
                    del.executeUpdate();
                    del.close();
                    del = null;
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;

                pre = dbUtility.con.prepareStatement(sqlIns);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
                pre.setString(2, cvth.Unicode2ASCII(plcode));
                pre.setDouble(3, pqty);
                pre.setString(4, cvth.Unicode2ASCII(saletype));
                pre.setInt(5, formula);
                pre.executeUpdate();
                pre.close();
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, (pcode));
                pre.setString(2, (plcode));
                pre.setInt(3, formula);
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    PreparedStatement del = dbUtility.con.prepareStatement(sqlDel);
                    del.setString(1, (pcode));
                    del.setString(2, (plcode));
                    del.setInt(3, formula);
                    del.executeUpdate();
                    del.close();
                    del = null;
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;

                pre = dbUtility.con.prepareStatement(sqlIns);
                pre.setString(1, (pcode));
                pre.setString(2, (plcode));
                pre.setDouble(3, pqty);
                pre.setString(4, (saletype));
                pre.setInt(5, formula);
                pre.executeUpdate();
                pre.close();
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }

        loadDetail();
    }

    private void btnRemove() {
        String pcode = txt_pcode.getText().trim();
        String plcode = txt_plcode.getText().trim();
        String pdesc = txt_plname.getText();
        int formula = Integer.parseInt(fdn.convertDoubleString(txt_formula.getText().trim()));

        int confirm = msn.showMessageConfirm("Yes", "No", "คุณต้องการลบวัตถุดิบ \"" + pdesc + "\" รายการนี้ ใช่หรือไม่ ...?");
        if (confirm != 0) {
            return;
        }

        String sql = "delete from posbom where pcode=? and plcode=? and formula=?";
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
                pre.setString(2, cvth.Unicode2ASCII(plcode));
                pre.setInt(3, formula);
                pre.executeUpdate();
                pre.close();
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, (pcode));
                pre.setString(2, (plcode));
                pre.setInt(3, formula);
                pre.executeUpdate();
                pre.close();
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }

        loadDetail();
    }

    private void setSaleType(String saletype) {

        if (fdn.searchSaleType(saletype, "E")) {
            chk_e.setSelected(true);
        }
        if (fdn.searchSaleType(saletype, "T")) {
            chk_t.setSelected(true);
        }
        if (fdn.searchSaleType(saletype, "D")) {
            chk_d.setSelected(true);
        }
        if (fdn.searchSaleType(saletype, "P")) {
            chk_p.setSelected(true);
        }
        if (fdn.searchSaleType(saletype, "W")) {
            chk_w.setSelected(true);
        }
    }

    private String getSaleType() {
        String result = "";

        if (chk_e.isSelected()) {
            result = result + "E,";
        }
        if (chk_t.isSelected()) {
            result = result + "T,";
        }
        if (chk_d.isSelected()) {
            result = result + "D,";
        }
        if (chk_p.isSelected()) {
            result = result + "P,";
        }
        if (chk_w.isSelected()) {
            result = result + "W,";
        }

        result = result.substring(0, (result.length() - 1));

        return result;
    }

    private void btnIngredent() {
        listIngredent f = new listIngredent(new NimbusFrame(), true, "L");
        f.setVisible(true);
        if (!f.code.equals("")) {
            txt_plcode.setText(f.code);
            loadDataItem(f.code);
            txt_plcode.requestFocus();
        } else {
            txt_plcode.requestFocus();
        }
    }

    private boolean loadDataItem(String pcode) {
        boolean have = false;
        String sql = "select pcode, pdesc, psubunit from product where pcode=? ";
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    String pdesc = "";
                    String psubunit = "";
                    if (rs.getString("pdesc") != null) {
                        pdesc = cvth.ASCII2Unicode(rs.getString("pdesc"));
                    }
                    if (rs.getString("psubunit") != null) {
                        psubunit = cvth.ASCII2Unicode(rs.getString("psubunit"));
                    }

                    txt_plname.setText(pdesc);
                    txt_psubunit.setText(psubunit);
                    have = true;
                } else {
                    txt_plname.setText("");
                    txt_psubunit.setText("");
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    String pdesc = "";
                    String psubunit = "";
                    if (rs.getString("pdesc") != null) {
                        pdesc = (rs.getString("pdesc"));
                    }
                    if (rs.getString("psubunit") != null) {
                        psubunit = (rs.getString("psubunit"));
                    }
                    txt_plname.setText(pdesc);
                    txt_psubunit.setText(psubunit);
                    have = true;
                } else {
                    txt_plname.setText("");
                    txt_psubunit.setText("");
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return false;
        }
        return have;
    }

    private void btnDelete() {
        String pcode = txt_pcode.getText().trim();

        int confirm = msn.showMessageConfirm("Yes", "No", "คุณต้องการลบรายการรหัสสินค้าที่ " + pcode + " ใช่หรือไม่ ...?");
        if (confirm != 0) {
            return;
        }

        String sql = "delete from posbom where pcode=?";
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
                pre.executeUpdate();
                pre.close();
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, (pcode));
                pre.executeUpdate();
                pre.close();
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }

        msn.showMessageInformation("ลบรายการเสร็จสิ้น ...");
        clearAll();
    }

    private void btnList() {
    }

    private void btnPrint() {
        Report r = new Report();
        Map map = new HashMap();
        JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(
                setupbomFactory.createBeanCollection());

        String filename = "posbom_plu";

        String pcode = txt_pcode.getText().trim();
        String pdesc = txt_pdesc.getText().trim();
        String pgroup = txt_pgroup.getText().trim();
        String groupname = txt_groupname.getText().trim();
        String punit1 = txt_punit1.getText().trim();

        map.put("pcode", pcode);
        map.put("pdesc", pdesc);
        map.put("pgroup", pgroup);
        map.put("groupname", groupname);
        map.put("punit1", punit1);

        r.viewReportbean(filename, map, "setup BOM", ds);
    }

    private void btnChkAll() {
        chk_d.setSelected(true);
        chk_e.setSelected(true);
        chk_t.setSelected(true);
        chk_p.setSelected(true);
        chk_w.setSelected(true);
    }

    private void btnImport() {
        import_posbom frm = new import_posbom(null, true);
        frm.setVisible(true);
    }
}
