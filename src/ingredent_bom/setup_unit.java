/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ingredent_bom;

import dbutility.dbUtility;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.*;
import javax.swing.table.*;
import utilititiesfunction.ThaiUtilities;
import utilititiesfunction.UserLogin;

/**
 *
 * @author natee
 */
public class setup_unit extends javax.swing.JDialog {

    /**
     * Creates new form setup_unit
     */
    dbUtility db = new dbUtility();
    ThaiUtilities cvt = new ThaiUtilities();
    showMessage msn = new showMessage();
    boolean edit = false;

    public setup_unit(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        db.dbconnect();
        checkuserconfig();
        setTable();
        btn_save.setFocusable(false);
        btn_exit.setFocusable(false);

        loadData();

        txt_unitname.setText("");
        txt_unitname.setFocusable(true);
        txt_unitname.requestFocus();
    }
    private void checkuserconfig() {
        //MenuName = Mast1
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getM215().equals("1")) {
            btn_save.setEnabled(false);
            menuSave.setEnabled(false);
            txt_unitname.setEditable(false);
            tbltable.setEnabled(false);
        }
        if (userrec.getM215().equals("2")) {
            btn_save.setEnabled(true);
            menuSave.setEnabled(true);
            txt_unitname.setEditable(true);
            tbltable.setEnabled(true);
        }
        if (userrec.getM215().equals("3")) {
            btn_save.setEnabled(true);
            menuSave.setEnabled(true);
            txt_unitname.setEditable(true);
            tbltable.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuDeleteUnit = new javax.swing.JPopupMenu();
        deleteItem = new javax.swing.JMenuItem();
        deleteAllItem = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        btn_save = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltable = new javax.swing.JTable();
        txt_unitname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu1 = new javax.swing.JMenu();
        menuSave = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menu1_02 = new javax.swing.JMenuItem();

        deleteItem.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        deleteItem.setText("ลบรายการเดียว");
        deleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemActionPerformed(evt);
            }
        });
        menuDeleteUnit.add(deleteItem);

        deleteAllItem.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        deleteAllItem.setText("ลบทุกรายการ");
        deleteAllItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllItemActionPerformed(evt);
            }
        });
        menuDeleteUnit.add(deleteAllItem);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("กำหนดหน่วยนับ");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_save.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Actions-document-save-icon1.png"))); // NOI18N
        btn_save.setText("บันทึกข้อมูล");
        btn_save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_save.setIconTextGap(0);
        btn_save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_exit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btn_exit.setText("ออก");
        btn_exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_exit.setIconTextGap(0);
        btn_exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_save, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btn_exit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tbltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "หน่วยนับ", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbltableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbltableMouseReleased(evt);
            }
        });
        tbltable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbltableFocusLost(evt);
            }
        });
        tbltable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbltableKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbltableKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tbltable);
        tbltable.getColumnModel().getColumn(0).setResizable(false);
        tbltable.getColumnModel().getColumn(0).setPreferredWidth(5);
        tbltable.getColumnModel().getColumn(1).setPreferredWidth(200);
        tbltable.getColumnModel().getColumn(2).setResizable(false);
        tbltable.getColumnModel().getColumn(2).setPreferredWidth(5);

        txt_unitname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_unitname.setText("txt_unitname");
        txt_unitname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_unitnameKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel1.setText("หน่วยนับ");

        menu1.setText("ฟังก์ชั่น");
        menu1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSave.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuSave.setText("บันทึกข้อมูล");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        menu1.add(menuSave);
        menu1.add(jSeparator1);

        menu1_02.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menu1_02.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menu1_02.setText("ออก");
        menu1_02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu1_02ActionPerformed(evt);
            }
        });
        menu1.add(menu1_02);

        jMenuBar1.add(menu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_unitname)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_unitname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-239)/2, (screenSize.height-549)/2, 239, 549);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        dispose();
    }//GEN-LAST:event_btn_exitActionPerformed

    private void menu1_02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu1_02ActionPerformed
        btn_exitActionPerformed(null);
    }//GEN-LAST:event_menu1_02ActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        btnSave();
    }//GEN-LAST:event_btn_saveActionPerformed

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed
        btn_saveActionPerformed(null);
    }//GEN-LAST:event_menuSaveActionPerformed

    private void tbltableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbltableKeyPressed
        int index = tbltable.getSelectedRow();
        edit = true;

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        }
    }//GEN-LAST:event_tbltableKeyPressed

    private void tbltableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbltableFocusLost
        if (edit) {
            editDataInTable();
        }
    }//GEN-LAST:event_tbltableFocusLost

    private void txt_unitnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_unitnameKeyPressed
        String data = txt_unitname.getText().trim();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (data.length() <= 0) {
                return;
            }
            btn_saveActionPerformed(null);
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            btn_exitActionPerformed(null);
        }
    }//GEN-LAST:event_txt_unitnameKeyPressed

    private void tbltableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbltableKeyTyped
    }//GEN-LAST:event_tbltableKeyTyped

    private void deleteAllItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllItemActionPerformed
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getM215().equals("3")) {
            btnDeleteAll();
        }
    }//GEN-LAST:event_deleteAllItemActionPerformed

    private void deleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemActionPerformed
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getM215().equals("3")) {
           btnDeleteItem();
        }
    }//GEN-LAST:event_deleteItemActionPerformed

    private void tbltableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltableMousePressed
        if (evt.isPopupTrigger()) {
            menuDeleteUnit.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tbltableMousePressed

    private void tbltableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltableMouseReleased
        if (evt.isPopupTrigger()) {
            menuDeleteUnit.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tbltableMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(setup_unit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(setup_unit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(setup_unit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(setup_unit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                setup_unit dialog = new setup_unit(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_save;
    private javax.swing.JMenuItem deleteAllItem;
    private javax.swing.JMenuItem deleteItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menu1;
    private javax.swing.JMenuItem menu1_02;
    private javax.swing.JPopupMenu menuDeleteUnit;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JTable tbltable;
    private javax.swing.JTextField txt_unitname;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel model;

    private void setTable() {

        model = (DefaultTableModel) tbltable.getModel();
        tbltable.setShowGrid(true);
        tbltable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbltable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbltable.setRowSelectionAllowed(true);
        tbltable.setBackground(java.awt.Color.WHITE);
        tbltable.setGridColor(java.awt.Color.gray);
        tbltable.setRowHeight(24);
        tbltable.setFont(new Font("Norasi", Font.PLAIN, 14));
        JTableHeader tHeader = tbltable.getTableHeader();
        tHeader.setFont(new Font("Norasi", Font.BOLD, 14));
        DefaultTableCellRenderer l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);
        DefaultTableCellRenderer r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        TableColumnModel tcm = tbltable.getColumnModel();

        l.setBackground(Color.yellow);
        tcm.getColumn(0).setCellRenderer(l);

        c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        c.setBackground(java.awt.Color.WHITE);
        tcm.getColumn(1).setCellRenderer(c);

        l.setBackground(Color.yellow);
        tcm.getColumn(2).setCellRenderer(l);

        //======================================================================
    }

    private void loadData() {
        int size = tbltable.getRowCount();
        for (int i = 0; i < size; i++) {
            model.removeRow(0);
        }

        String sql = "select * from unitfile order by unitname";
        try {
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        model.addRow(new Object[]{
                                    "",
                                    cvt.ASCII2Unicode(rs.getString("unitname")),
                                    ""
                                });
                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } else {
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        model.addRow(new Object[]{
                                    "",
                                    rs.getString("unitname"),
                                    ""
                                });
                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            }

//            if (tbltable.getRowCount() > 0) {
//                tbltable.setRowSelectionInterval(1, 0);
//                tbltable.setFocusable(true);
//                tbltable.requestFocus();
//            }
        } catch (Exception e) {
            msn.showMessageError("เกิดข้อผิดพลาดบางประการ");
            e.printStackTrace();
            return;
        }
    }

    private void btnSave() {
        int row = tbltable.getRowCount();
        String unitname = txt_unitname.getText().trim();

        if (unitname.length() <= 0) {
            editDataInTable();
            return;
        }

        for (int i = 0; i < row; i++) {
            if (unitname.equals(tbltable.getValueAt(i, 1).toString())) {
                msn.showMessageWarning("พบหน่วยนี้ในระบบแล้ว ...");

                txt_unitname.setText("");
                txt_unitname.requestFocus();
                return;
            }
        }

        String sql = "insert into unitfile(unitname) values(?)";
        try {
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                pre.setString(1, cvt.Unicode2ASCII(unitname));
            } else {
                pre.setString(1, unitname);
            }
            pre.executeUpdate();
            pre.close();
            pre = null;
        } catch (Exception e) {
            msn.showMessageError("เกิดข้อผิดพลาดบางประการ");
            e.printStackTrace();
            return;
        }

        loadData();
        txt_unitname.setText("");
    }

    private void editDataInTable() {
        int row = tbltable.getRowCount();

        String sqlDel = "delete from unitfile";
        String sqlIns = "insert into unitfile(unitname) values(?)";

        try {
            PreparedStatement pre = dbUtility.con.prepareStatement(sqlDel);
            pre.executeUpdate();
            pre.close();
            pre = null;
            for (int i = 0; i < row; i++) {
                String unitname = tbltable.getValueAt(i, 1).toString();

                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                    pre = dbUtility.con.prepareStatement(sqlIns);
                    pre.setString(1, cvt.Unicode2ASCII(unitname));
                    pre.executeUpdate();
                    pre.close();
                    pre = null;
                } else {

                    pre = dbUtility.con.prepareStatement(sqlIns);
                    pre.setString(1, unitname);
                    pre.executeUpdate();
                    pre.close();
                    pre = null;
                }
            }
        } catch (Exception e) {
            msn.showMessageError("เกิดข้อผิดพลาดบางประการ");
            e.printStackTrace();
        }

        loadData();
    }

    private void btnDeleteAll() {
        try {
            String sqlDel = "delete from unitfile";
            PreparedStatement pre = dbUtility.con.prepareStatement(sqlDel);
            pre.executeUpdate();
            pre.close();
            pre = null;
        } catch (Exception e) {
            msn.showMessageError("เกิดข้อผิดพลาดบางประการ");
            e.printStackTrace();
        }

        loadData();
    }

    private void btnDeleteItem() {
        int index = tbltable.getSelectedRow();
        if (index < 0) {
            return;
        }

        String unitname = tbltable.getValueAt(index, 1).toString();
        String sqlDel = "delete from unitfile where unitname=?";

        if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
            unitname = cvt.Unicode2ASCII(unitname);
        }

        try {
            PreparedStatement pre = dbUtility.con.prepareStatement(sqlDel);
            pre.setString(1, unitname);
            pre.executeUpdate();
            pre.close();
            pre = null;
        } catch (Exception e) {
            msn.showMessageError("เกิดข้อผิดพลาดบางประการ");
            e.printStackTrace();
        }

        loadData();
    }
}
