/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ingredent_bom;

import dbutility.dbUtility;
import frmlist.ListProduct;
import frmlist.listGroupfile;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.*;
import jxl.write.WriteException;
import masterfile.NimbusFrame;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import report.Report;
import utilititiesfunction.Export2Excel;
import utilititiesfunction.FormatCell;
import utilititiesfunction.ThaiUtilities;
import utilititiesfunction.UserLogin;

/**
 *
 * @author natee
 */
public class report_posbom extends javax.swing.JDialog {

    /**
     * Creates new form report_posbom_treetable
     */
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    ThaiUtilities cvth = new ThaiUtilities();
    dbUtility db = new dbUtility();
    formatDateNumber f = new formatDateNumber();
    showMessage msn = new showMessage();

    public report_posbom(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        db.dbconnect();
        inittbl();
        clearAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_pcode1 = new javax.swing.JTextField();
        btn_pcode1 = new javax.swing.JButton();
        txt_pcode2 = new javax.swing.JTextField();
        btn_pcode2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txt_pgroup1 = new javax.swing.JTextField();
        btn_pgroup1 = new javax.swing.JButton();
        txt_pgroup2 = new javax.swing.JTextField();
        btn_pgroup2 = new javax.swing.JButton();
        btn_process = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        chk_detail = new javax.swing.JCheckBox();
        db_btnExpand = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new org.jdesktop.swingx.JXTreeTable();
        btn_excel = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "กำหนดรหัสสินค้า", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Norasi", 0, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_pcode1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_pcode1.setText("txt_pcode1");
        txt_pcode1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pcode1FocusGained(evt);
            }
        });
        txt_pcode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pcode1KeyPressed(evt);
            }
        });
        jPanel2.add(txt_pcode1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 110, 30));

        btn_pcode1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_pcode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pcode1ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_pcode1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 30, 30));

        txt_pcode2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_pcode2.setText("txt_pcode2");
        txt_pcode2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pcode2FocusGained(evt);
            }
        });
        txt_pcode2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pcode2KeyPressed(evt);
            }
        });
        jPanel2.add(txt_pcode2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 110, 30));

        btn_pcode2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_pcode2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pcode2ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_pcode2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 30, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 310, 90));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "กำหนดกลุ่มสินค้า", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Norasi", 0, 14))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_pgroup1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_pgroup1.setText("txt_pgroup1");
        txt_pgroup1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pgroup1FocusGained(evt);
            }
        });
        txt_pgroup1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pgroup1KeyPressed(evt);
            }
        });
        jPanel3.add(txt_pgroup1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 60, 30));

        btn_pgroup1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_pgroup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pgroup1ActionPerformed(evt);
            }
        });
        jPanel3.add(btn_pgroup1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 30, 30));

        txt_pgroup2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_pgroup2.setText("txt_pgroup2");
        txt_pgroup2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pgroup2FocusGained(evt);
            }
        });
        txt_pgroup2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pgroup2KeyPressed(evt);
            }
        });
        jPanel3.add(txt_pgroup2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 60, 30));

        btn_pgroup2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_pgroup2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pgroup2ActionPerformed(evt);
            }
        });
        jPanel3.add(btn_pgroup2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 30, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 210, 90));

        btn_process.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_process.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hourglass-icon.png"))); // NOI18N
        btn_process.setText("F5-ประมวลผล");
        btn_process.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_process.setIconTextGap(0);
        btn_process.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_processActionPerformed(evt);
            }
        });
        btn_process.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btn_processFocusLost(evt);
            }
        });
        jPanel1.add(btn_process, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 120, 65));

        btn_exit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btn_exit.setText("ออก");
        btn_exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_exit.setIconTextGap(0);
        btn_exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });
        jPanel1.add(btn_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 30, 100, 65));

        chk_detail.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        chk_detail.setText("แสดงรายละเอียดในการพิมพ์");
        jPanel1.add(chk_detail, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 0, 200, 30));

        db_btnExpand.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExpand.setText("Expand On/Off");
        db_btnExpand.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExpand.setIconTextGap(0);
        db_btnExpand.setName("db_btnExpand"); // NOI18N
        db_btnExpand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExpand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExpandActionPerformed(evt);
            }
        });
        jPanel1.add(db_btnExpand, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 130, 40));

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbl.setName("tbl"); // NOI18N
        jScrollPane1.setViewportView(tbl);

        btn_excel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_excel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        btn_excel.setText("Excel File");
        btn_excel.setIconTextGap(10);
        btn_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excelActionPerformed(evt);
            }
        });

        btn_print.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        btn_print.setText("พิมพ์ (Print)");
        btn_print.setIconTextGap(10);
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_excel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 992, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 276, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(338, 338, 338))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_print, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_excel))
                        .addGap(34, 34, 34))))
        );

        setSize(new java.awt.Dimension(1032, 796));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_pcode1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pcode1FocusGained
        String data = txt_pcode1.getText().trim();

        if (data.length() > 0) {
            txt_pcode1.selectAll();
        } else {
            txt_pcode1.setText("0");
            txt_pcode1.selectAll();
            txt_pcode1.setText("");
        }
    }//GEN-LAST:event_txt_pcode1FocusGained

    private void txt_pcode1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pcode1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_pcode2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_P) {
            btnPrint();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchProduct1();
        }
    }//GEN-LAST:event_txt_pcode1KeyPressed

    private void btn_pcode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pcode1ActionPerformed
        btnSearchProduct1();
    }//GEN-LAST:event_btn_pcode1ActionPerformed

    private void txt_pcode2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pcode2FocusGained
        String data = txt_pcode2.getText().trim();

        if (data.length() > 0) {
            txt_pcode2.selectAll();
        } else {
            txt_pcode2.setText("0");
            txt_pcode2.selectAll();
            txt_pcode2.setText("");
        }
    }//GEN-LAST:event_txt_pcode2FocusGained

    private void txt_pcode2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pcode2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_pgroup1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_pcode1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_P) {
            btnPrint();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchProduct2();
        }
    }//GEN-LAST:event_txt_pcode2KeyPressed

    private void btn_pcode2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pcode2ActionPerformed
        btnSearchProduct2();
    }//GEN-LAST:event_btn_pcode2ActionPerformed

    private void txt_pgroup1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pgroup1FocusGained
        String data = txt_pgroup1.getText().trim();

        if (data.length() > 0) {
            txt_pgroup1.selectAll();
        } else {
            txt_pgroup1.setText("0");
            txt_pgroup1.selectAll();
            txt_pgroup1.setText("");
        }
    }//GEN-LAST:event_txt_pgroup1FocusGained

    private void txt_pgroup1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pgroup1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_pgroup2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_pcode2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_P) {
            btnPrint();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchgroupfile1();
        }
    }//GEN-LAST:event_txt_pgroup1KeyPressed

    private void btn_pgroup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pgroup1ActionPerformed
        btnSearchgroupfile1();
    }//GEN-LAST:event_btn_pgroup1ActionPerformed

    private void txt_pgroup2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pgroup2FocusGained
        String data = txt_pgroup2.getText().trim();

        if (data.length() > 0) {
            txt_pgroup2.selectAll();
        } else {
            txt_pgroup2.setText("0");
            txt_pgroup2.selectAll();
            txt_pgroup2.setText("");
        }
    }//GEN-LAST:event_txt_pgroup2FocusGained

    private void txt_pgroup2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pgroup2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_process.setFocusable(true);
            btn_process.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_pgroup1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_P) {
            btnPrint();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchgroupfile2();
        }
    }//GEN-LAST:event_txt_pgroup2KeyPressed

    private void btn_pgroup2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pgroup2ActionPerformed
        btnSearchgroupfile2();
    }//GEN-LAST:event_btn_pgroup2ActionPerformed

    private void btn_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_processActionPerformed
        btnProcess();
    }//GEN-LAST:event_btn_processActionPerformed

    private void btn_processFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_processFocusLost
        btn_process.setFocusable(false);
    }//GEN-LAST:event_btn_processFocusLost

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        dispose();
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        btnPrint();
    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excelActionPerformed
        btnExcel();
    }//GEN-LAST:event_btn_excelActionPerformed

    private void db_btnExpandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExpandActionPerformed
        if (tbl.isExpanded(0)) {
            tbl.collapseAll();
        } else {
            tbl.expandAll();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnExpandActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(report_posbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(report_posbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(report_posbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(report_posbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                report_posbom dialog = new report_posbom(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_excel;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_pcode1;
    private javax.swing.JButton btn_pcode2;
    private javax.swing.JButton btn_pgroup1;
    private javax.swing.JButton btn_pgroup2;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_process;
    private javax.swing.JCheckBox chk_detail;
    private javax.swing.JButton db_btnExpand;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTreeTable tbl;
    private javax.swing.JTextField txt_pcode1;
    private javax.swing.JTextField txt_pcode2;
    private javax.swing.JTextField txt_pgroup1;
    private javax.swing.JTextField txt_pgroup2;
    // End of variables declaration//GEN-END:variables

    private void btnSearchProduct1() {
        ListProduct f = new ListProduct(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txt_pcode1.setText(f.code);
            txt_pcode2.requestFocus();
        }

    }

    private void btnSearchProduct2() {
        ListProduct f = new ListProduct(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txt_pcode2.setText(f.code);
            txt_pgroup1.requestFocus();
        }

    }

    private void btnSearchgroupfile1() {
        listGroupfile f = new listGroupfile(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txt_pgroup1.setText(f.code);
            txt_pgroup2.requestFocus();
        }

    }

    private void btnSearchgroupfile2() {
        listGroupfile f = new listGroupfile(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txt_pgroup2.setText(f.code);
            btn_process.setFocusable(true);
            btn_process.requestFocus();
        }

    }

    private void inittbl() {
        try {

            TableColumnModel tcm = new DefaultTableColumnModel();

            TableColumn tc1 = new TableColumn(0, 350);
            tc1.setHeaderValue("รหัสสินค้า");
            TableColumn tc2 = new TableColumn(1, 100);
            tc2.setHeaderValue("รหัสวัตถุดิบ");
            TableColumn tc3 = new TableColumn(2, 220);
            tc3.setHeaderValue("ชื่อวัตถุดิบ / รายการ");
            TableColumn tc4 = new TableColumn(3, 50);
            tc4.setHeaderValue("Active");
            TableColumn tc5 = new TableColumn(4, 70);
            tc5.setHeaderValue("ปริมาณที่ใช้");
            TableColumn tc6 = new TableColumn(5, 70);
            tc6.setHeaderValue("หน่วยที่ใช้");
            TableColumn tc7 = new TableColumn(6, 80);
            tc7.setHeaderValue("Sale Type");
            TableColumn tc8 = new TableColumn(7, 35);
            tc8.setHeaderValue("สูตร");

            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);

            tcm.getColumn(0).setCellRenderer(FormatCell.l());
            tcm.getColumn(1).setCellRenderer(FormatCell.l());
            tcm.getColumn(2).setCellRenderer(FormatCell.l());
            tcm.getColumn(3).setCellRenderer(FormatCell.c());
            tcm.getColumn(4).setCellRenderer(FormatCell.r());
            tcm.getColumn(5).setCellRenderer(FormatCell.l());
            tcm.getColumn(6).setCellRenderer(FormatCell.l());
            tcm.getColumn(7).setCellRenderer(FormatCell.l());

            tbl.setEditable(false);//ห้ามแก้ไขตาราง
            tbl.setShowGrid(true);
            tbl.setFont(fontplain);
            tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tbl.setRowSelectionAllowed(true);
            tbl.setBackground(java.awt.Color.WHITE);
            tbl.setGridColor(java.awt.Color.gray);
            tbl.setRowHeight(20);

            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);

            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
            //   h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);
        } catch (Exception ex) {
        }
    }

    private void btnProcess() {
        try {
            String pcode1 = txt_pcode1.getText().trim();
            String pcode2 = txt_pcode2.getText().trim();
            String pgroup1 = txt_pgroup1.getText().trim();
            String pgroup2 = txt_pgroup2.getText().trim();

            if (pcode2.length() <= 0) {
                pcode2 = "ZZZZZZZZZZZZZZZZ";
            }
            if (pgroup2.length() <= 0) {
                pgroup2 = "ZZZZZ";
            }
            int count = 0;

            TableColumnModel tcm = new DefaultTableColumnModel();

            TableColumn tc1 = new TableColumn(0, 350);
            tc1.setHeaderValue("รหัสสินค้า");
            TableColumn tc2 = new TableColumn(1, 100);
            tc2.setHeaderValue("รหัสวัตถุดิบ");
            TableColumn tc3 = new TableColumn(2, 220);
            tc3.setHeaderValue("ชื่อวัตถุดิบ / รายการ");
            TableColumn tc4 = new TableColumn(3, 50);
            tc4.setHeaderValue("Active");
            TableColumn tc5 = new TableColumn(4, 70);
            tc5.setHeaderValue("ปริมาณที่ใช้");
            TableColumn tc6 = new TableColumn(5, 70);
            tc6.setHeaderValue("หน่วยที่ใช้");
            TableColumn tc7 = new TableColumn(6, 80);
            tc7.setHeaderValue("Sale Type");
            TableColumn tc8 = new TableColumn(7, 35);
            tc8.setHeaderValue("สูตร");

            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);

            tcm.getColumn(0).setCellRenderer(FormatCell.l());
            tcm.getColumn(1).setCellRenderer(FormatCell.l());
            tcm.getColumn(2).setCellRenderer(FormatCell.l());
            tcm.getColumn(3).setCellRenderer(FormatCell.c());
            tcm.getColumn(4).setCellRenderer(FormatCell.r());
            tcm.getColumn(5).setCellRenderer(FormatCell.l());
            tcm.getColumn(6).setCellRenderer(FormatCell.l());
            tcm.getColumn(7).setCellRenderer(FormatCell.l());

            tbl.setEditable(false);//ห้ามแก้ไขตาราง
            tbl.setShowGrid(true);
            tbl.setFont(fontplain);
            tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tbl.setRowSelectionAllowed(true);
            tbl.setBackground(java.awt.Color.WHITE);
            tbl.setGridColor(java.awt.Color.gray);
            tbl.setRowHeight(20);

            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

            String sql = "select "
                    + "b.pcode as pcode,    p.pdesc as pdesc,"
                    + "p.punit1 as unit,    p.pprice11 as price,"
                    + "b.plcode as plcode,  b.pqty as qty,"
                    + "p1.pdesc as plname,  p1.psubunit as subunit,"
                    + "b.saletype as saletype, "
                    + "b.formula as formula , p.pactive as pactive "
                    + "from posbom b "
                    + "left join product p on b.pcode=p.pcode "
                    + "left join product p1 on b.plcode=p1.pcode "
                    + "where (b.pcode>='" + pcode1 + "' and b.pcode<='" + pcode2 + "') "
                    + "and (p.pgroup>='" + pgroup1 + "' and p.pgroup<='" + pgroup2 + "') "
                    + "order by p.pgroup, b.pcode, b.formula, b.plcode";
            System.out.println("sql " + sql);
            reportPOSBOM_model treemodel = new reportPOSBOM_model(sql);
            tbl.setTreeTableModel(treemodel);
            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);
            ((JXTree) tbl.getCellRenderer(0, tbl.getHierarchicalColumn())).setFont(fontplain);

            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
            h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);
        } catch (Exception e) {
        }

    }

    private void btnPrint() {
        Report r = new Report();
        Map map = new HashMap();

        btnProcess();
        int totalPLU = 0;

        boolean detail = chk_detail.isSelected();
        String pcode1 = txt_pcode1.getText().trim();
        String pcode2 = txt_pcode2.getText().trim();
        String pgroup1 = txt_pgroup1.getText().trim();
        String pgroup2 = txt_pgroup2.getText().trim();

        String temppcodeOLD = "";

        if (pcode2.length() <= 0) {
            pcode2 = "ZZZZZZZZZZZZZZZZ";
        }
        if (pgroup2.length() <= 0) {
            pgroup2 = "ZZZZZ";
        }

        new bomFactory();
        String sql1 = "select "
                + "b.pcode as pcode,    p.pdesc as pdesc,"
                + "p.punit1 as unit,    p.pprice11 as price,"
                + "b.plcode as plcode,  b.pqty as qty,"
                + "p1.pdesc as plname,  p1.psubunit as subunit,"
                + "b.saletype as saletype, "
                + "b.formula as formula  , p.pactive as pactive "
                + "from posbom b "
                + "left join product p on b.plcode=p.pcode "
                + "left join product p1 on b.plcode=p1.pcode "
                + "where (b.pcode>=? and b.pcode<=?) and (p.pgroup>=? and p.pgroup<=?) "
                + "order by p.pgroup, b.pcode, b.formula, b.plcode";
        String sql2 = "select "
                + "b.pcode as pcode,    p.pdesc as pdesc,"
                + "p.punit1 as unit,    p.pprice11 as price,"
                + "count(b.plcode) as qty  , p.pactive  as pactive "
                + "from posbom b "
                + "left join product p on b.pcode=p.pcode "
                + "where (b.pcode>=? and b.pcode<=?) and (p.pgroup>=? and p.pgroup<=?) "
                + "group by b.pcode "
                + "order by p.pgroup, b.pcode, b.formula, b.plcode";
        String sql = "";
        String filename = "";

        if (detail) {
            sql = sql1;
            filename = "report_bomdetail";
        } else {
            sql = sql2;
            filename = "report_bom";
        }
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(pcode1));
                pre.setString(2, cvth.Unicode2ASCII(pcode2));
                pre.setString(3, cvth.Unicode2ASCII(pgroup1));
                pre.setString(4, cvth.Unicode2ASCII(pgroup2));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        String pcode = "";
                        String pdesc = "";
                        String unit = "";
                        Double price = 0.000;
                        String plcode = "";
                        String plname = "";
                        Double pqty = 0.000;
                        String psubunit = "";
                        String saletype = "";
                        int formula = 0;
                        String pactive = "N";
                        if (rs.getString("pcode") != null) {
                            pcode = cvth.ASCII2Unicode(rs.getString("pcode"));
                        }
                        if (rs.getString("pdesc") != null) {
                            pdesc = cvth.ASCII2Unicode(rs.getString("pdesc"));
                        }
                        if (rs.getString("unit") != null) {
                            unit = cvth.ASCII2Unicode(rs.getString("unit"));
                        }
                        if (rs.getString("price") != null) {
                            price = rs.getDouble("price");
                        }

                        if (detail) {
                            if (!temppcodeOLD.equals(pcode)) {
                                totalPLU++;
                            }
                            if (rs.getString("qty") != null) {
                                pqty = rs.getDouble("qty");
                            }
                            if (rs.getString("plcode") != null) {
                                plcode = cvth.ASCII2Unicode(rs.getString("plcode"));
                            }
                            if (rs.getString("plname") != null) {
                                plname = cvth.ASCII2Unicode(rs.getString("plname"));
                            }
                            if (rs.getString("subunit") != null) {
                                psubunit = cvth.ASCII2Unicode(rs.getString("subunit"));
                            }
                            if (rs.getString("saletype") != null) {
                                saletype = cvth.ASCII2Unicode(rs.getString("saletype"));
                            }
                            if (rs.getString("formula") != null) {
                                formula = rs.getInt("formula");
                            }
                            if (rs.getString("pactive") != null) {
                                pactive = cvth.ASCII2Unicode(rs.getString("pactive"));
                            }

                            new bomFactory(pcode, pdesc, unit, price, 0, plcode, plname, pqty, psubunit, saletype, formula, pactive);
                        } else {
                            totalPLU++;
                            if (rs.getString("qty") != null) {
                                pqty = rs.getDouble("qty");
                            }
                            int qty = pqty.intValue();

                            new bomFactory(pcode, pdesc, unit, price, qty, plcode, plname, pqty, psubunit, saletype, formula, pactive);
                        }

                        if (rs.getString("pcode") != null) {
                            temppcodeOLD = cvth.ASCII2Unicode(rs.getString("pcode"));
                        }

                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, (pcode1));
                pre.setString(2, (pcode2));
                pre.setString(3, (pgroup1));
                pre.setString(4, (pgroup2));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        String pcode = "";
                        String pdesc = "";
                        String unit = "";
                        Double price = 0.000;
                        String plcode = "";
                        String plname = "";
                        Double pqty = 0.000;
                        String psubunit = "";
                        String saletype = "";
                        int formula = 0;
                         String pactive = "";
                        if (rs.getString("pcode") != null) {
                            pcode = (rs.getString("pcode"));
                        }
                        if (rs.getString("pdesc") != null) {
                            pdesc = (rs.getString("pdesc"));
                        }
                        if (rs.getString("unit") != null) {
                            unit = (rs.getString("unit"));
                        }
                        if (rs.getString("price") != null) {
                            price = rs.getDouble("price");
                        }

                        if (detail) {
                            if (!temppcodeOLD.equals(pcode)) {
                                totalPLU++;
                            }
                            if (rs.getString("qty") != null) {
                                pqty = rs.getDouble("qty");
                            }
                            if (rs.getString("plcode") != null) {
                                plcode = (rs.getString("plcode"));
                            }
                            if (rs.getString("plname") != null) {
                                plname = (rs.getString("plname"));
                            }
                            if (rs.getString("subunit") != null) {
                                psubunit = (rs.getString("subunit"));
                            }
                            if (rs.getString("saletype") != null) {
                                saletype = (rs.getString("saletype"));
                            }
                            if (rs.getString("formula") != null) {
                                formula = rs.getInt("formula");
                            }
                              if (rs.getString("pactive") != null) {
                                pactive = (rs.getString("pactive"));
                            }

                            new bomFactory(pcode, pdesc, unit, price, 0, plcode, plname, pqty, psubunit, saletype, formula,pactive);
                        } else {
                            totalPLU++;
                            if (rs.getString("qty") != null) {
                                pqty = rs.getDouble("qty");
                            }
                            int qty = pqty.intValue();

                            new bomFactory(pcode, pdesc, unit, price, qty, plcode, plname, pqty, psubunit, saletype, formula,pactive);
                        }

                        if (rs.getString("pcode") != null) {
                            temppcodeOLD = (rs.getString("pcode"));
                        }
                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }

        if (pcode1.equals("")) {
            pcode1 = "ไม่ระบุ";
        }
        if (pcode2.equals("ZZZZZZZZZZZZZZZZ")) {
            pcode2 = "ไม่ระบุ";
        }
        if (pgroup1.equals("")) {
            pgroup1 = "ไม่ระบุ";
        }
        if (pgroup2.equals("ZZZZZ")) {
            pgroup2 = "ไม่ระบุ";
        }

        JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(
                bomFactory.createBeanCollection());

        map.put("pcode1", pcode1);
        map.put("pcode2", pcode2);
        map.put("group1", pgroup1);
        map.put("group2", pgroup2);
        map.put("totalplu", f.intFmtShow(totalPLU));
//        map.put("totalplu", "0");
        r.viewReportbean(filename, map, "report_BOM", ds);
    }

    private void clearAll() {

        txt_pcode1.setText("");
        txt_pcode1.setFocusable(true);
        txt_pcode1.requestFocus();
        btn_pcode1.setEnabled(true);
        btn_pcode1.setFocusable(false);

        txt_pcode2.setText("");
        txt_pcode2.setFocusable(true);
        btn_pcode2.setEnabled(true);
        btn_pcode2.setFocusable(false);

        txt_pgroup1.setText("");
        txt_pgroup1.setFocusable(true);
        btn_pgroup1.setEnabled(true);
        btn_pgroup1.setFocusable(false);

        txt_pgroup2.setText("");
        txt_pgroup2.setFocusable(true);
        btn_pgroup2.setEnabled(true);
        btn_pgroup2.setFocusable(false);

        btn_process.setFocusable(false);
        btn_print.setFocusable(false);
        btn_exit.setFocusable(false);

        chk_detail.setSelected(false);
        chk_detail.setFocusable(false);

        db_btnExpand.setFocusable(false);
    }

    private void btnExcel() {

        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
//        String condition = "Group " + t_inggroup1.getText() + " - " + t_inggroup1.getText();
        String condition = "";
        try {

            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();

                if (curFile.exists()) {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        btn_excelActionPerformed(null);

                        return;

                    }

                }

                try {
                    test.setOutputFile(curFile.toString());
                    test.writeTreetableContditionNoSum(tbl, tbl.getColumnModel(), condition);
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }

            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
}
