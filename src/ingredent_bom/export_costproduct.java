/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ingredent_bom;

import dbutility.dbUtility;
import frmlist.BrowserBranch;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Locale;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.Export2Excel;
import utilititiesfunction.ThaiUtilities;

/**
 *
 * @author natee
 */
public class export_costproduct extends javax.swing.JDialog {

    /**
     * Creates new form export_costproduct
     */
    ThaiUtilities cvth = new ThaiUtilities();
    dbUtility db = new dbUtility();
    formatDateNumber f = new formatDateNumber();
    showMessage msn = new showMessage();

    public export_costproduct(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        setTable1();
        clearAll();
        btn_print.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_date2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_date1 = new javax.swing.JTextField();
        btn_date2 = new javax.swing.JButton();
        btn_date1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txt_branch1 = new javax.swing.JTextField();
        btn_branch1 = new javax.swing.JButton();
        txt_branch2 = new javax.swing.JTextField();
        btn_branch2 = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        btn_process = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        btn_excel = new javax.swing.JButton();
        btn_export = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltable1 = new javax.swing.JTable();
        txt_total = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export CSV File (POS BOM)");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "กำหนดวันที่", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Norasi", 0, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_date2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_date2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_date2.setText("txt_date2");
        txt_date2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_date2FocusGained(evt);
            }
        });
        txt_date2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_date2KeyPressed(evt);
            }
        });
        jPanel2.add(txt_date2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 100, 30));

        jLabel1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ถึง");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 30, 30));

        txt_date1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_date1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_date1.setText("txt_date1");
        txt_date1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_date1FocusGained(evt);
            }
        });
        txt_date1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_date1KeyPressed(evt);
            }
        });
        jPanel2.add(txt_date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 100, 30));

        btn_date2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_date2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_date2ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_date2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 30, 30));

        btn_date1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_date1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_date1ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 30, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 310, 80));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "กำหนดสาขา", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Norasi", 0, 14))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_branch1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_branch1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_branch1.setText("txt_branch1");
        txt_branch1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_branch1FocusGained(evt);
            }
        });
        txt_branch1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_branch1KeyPressed(evt);
            }
        });
        jPanel3.add(txt_branch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 70, 30));

        btn_branch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_branch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_branch1ActionPerformed(evt);
            }
        });
        jPanel3.add(btn_branch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 30, 30));

        txt_branch2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_branch2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_branch2.setText("txt_branch2");
        txt_branch2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_branch2FocusGained(evt);
            }
        });
        txt_branch2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_branch2KeyPressed(evt);
            }
        });
        jPanel3.add(txt_branch2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 70, 30));

        btn_branch2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_branch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_branch2ActionPerformed(evt);
            }
        });
        jPanel3.add(btn_branch2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 30, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 120, 120));

        btn_exit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btn_exit.setText("ออก");
        btn_exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_exit.setIconTextGap(0);
        btn_exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });
        jPanel1.add(btn_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 20, 100, 65));

        btn_process.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_process.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hourglass-icon.png"))); // NOI18N
        btn_process.setText("ประมวลผล");
        btn_process.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_process.setIconTextGap(0);
        btn_process.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_processActionPerformed(evt);
            }
        });
        btn_process.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btn_processFocusLost(evt);
            }
        });
        btn_process.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_processKeyPressed(evt);
            }
        });
        jPanel1.add(btn_process, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 100, 65));

        btn_print.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        btn_print.setText("พิมพ์");
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });
        jPanel1.add(btn_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, 200, 30));

        btn_excel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_excel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        btn_excel.setText("Excel");
        btn_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excelActionPerformed(evt);
            }
        });
        jPanel1.add(btn_excel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 150, 30));

        btn_export.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Action-arrow-blue-double-up-icon.png"))); // NOI18N
        btn_export.setText("Export File");
        btn_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exportActionPerformed(evt);
            }
        });
        jPanel1.add(btn_export, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 150, 30));

        tbltable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "Account Number", "Amount", "Account Description", "Subledger Type", "Subledger", "Subledger Description", "Remark", "Posted Code", "Company", "R V"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbltable1);
        tbltable1.getColumnModel().getColumn(0).setMinWidth(0);
        tbltable1.getColumnModel().getColumn(0).setPreferredWidth(0);
        tbltable1.getColumnModel().getColumn(1).setMinWidth(0);
        tbltable1.getColumnModel().getColumn(1).setPreferredWidth(0);
        tbltable1.getColumnModel().getColumn(1).setMaxWidth(0);
        tbltable1.getColumnModel().getColumn(2).setMinWidth(0);
        tbltable1.getColumnModel().getColumn(2).setPreferredWidth(0);
        tbltable1.getColumnModel().getColumn(2).setMaxWidth(0);
        tbltable1.getColumnModel().getColumn(3).setPreferredWidth(150);
        tbltable1.getColumnModel().getColumn(4).setPreferredWidth(120);
        tbltable1.getColumnModel().getColumn(5).setResizable(false);
        tbltable1.getColumnModel().getColumn(5).setPreferredWidth(50);
        tbltable1.getColumnModel().getColumn(6).setResizable(false);
        tbltable1.getColumnModel().getColumn(6).setPreferredWidth(50);
        tbltable1.getColumnModel().getColumn(7).setResizable(false);
        tbltable1.getColumnModel().getColumn(7).setPreferredWidth(50);
        tbltable1.getColumnModel().getColumn(8).setResizable(false);
        tbltable1.getColumnModel().getColumn(8).setPreferredWidth(50);
        tbltable1.getColumnModel().getColumn(9).setPreferredWidth(140);
        tbltable1.getColumnModel().getColumn(10).setResizable(false);
        tbltable1.getColumnModel().getColumn(10).setPreferredWidth(50);
        tbltable1.getColumnModel().getColumn(11).setResizable(false);
        tbltable1.getColumnModel().getColumn(11).setPreferredWidth(50);
        tbltable1.getColumnModel().getColumn(12).setResizable(false);
        tbltable1.getColumnModel().getColumn(12).setPreferredWidth(50);

        txt_total.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_total.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_total.setText("txt_total");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-740)/2, (screenSize.height-508)/2, 740, 508);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_date1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_date1ActionPerformed
        DateChoose1();
    }//GEN-LAST:event_btn_date1ActionPerformed

    private void btn_date2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_date2ActionPerformed
        DateChoose2();
    }//GEN-LAST:event_btn_date2ActionPerformed

    private void btn_branch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_branch1ActionPerformed
        browseBranch1();
    }//GEN-LAST:event_btn_branch1ActionPerformed

    private void btn_branch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_branch2ActionPerformed
        browseBranch2();
    }//GEN-LAST:event_btn_branch2ActionPerformed

    private void btn_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_processActionPerformed
        btnProcess();
    }//GEN-LAST:event_btn_processActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        dispose();
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        btnPrint();
    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excelActionPerformed
        btnExcel();
    }//GEN-LAST:event_btn_excelActionPerformed

    private void btn_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exportActionPerformed
        btnExportFile();
    }//GEN-LAST:event_btn_exportActionPerformed

    private void txt_date1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_date1FocusGained
        String data = txt_date1.getText().trim();
        if (data.length() > 0) {
            txt_date1.selectAll();
        } else {
            txt_date1.setText(f.dateFmtShow(f.nowDate()));
            txt_date1.selectAll();
        }
    }//GEN-LAST:event_txt_date1FocusGained

    private void txt_date2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_date2FocusGained
        String data = txt_date2.getText().trim();
        if (data.length() > 0) {
            txt_date2.selectAll();
        } else {
            txt_date2.setText(f.dateFmtShow(f.nowDate()));
            txt_date2.selectAll();
        }
    }//GEN-LAST:event_txt_date2FocusGained

    private void txt_branch1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_branch1FocusGained
        String data = txt_branch1.getText().trim();
        if (data.length() > 0) {
            txt_branch1.selectAll();
        } else {
            txt_branch1.setText("1");
            txt_branch1.selectAll();
            txt_branch1.setText("");
        }
    }//GEN-LAST:event_txt_branch1FocusGained

    private void txt_branch2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_branch2FocusGained
        String data = txt_branch2.getText().trim();
        if (data.length() > 0) {
            txt_branch2.selectAll();
        } else {
            txt_branch2.setText("1");
            txt_branch2.selectAll();
            txt_branch2.setText("");
        }
    }//GEN-LAST:event_txt_branch2FocusGained

    private void txt_date1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_date1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            DateChoose1();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_date2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        }
    }//GEN-LAST:event_txt_date1KeyPressed

    private void txt_date2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_date2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            DateChoose2();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_branch1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_date1.requestFocus();
        }
    }//GEN-LAST:event_txt_date2KeyPressed

    private void txt_branch1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_branch1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            browseBranch1();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_branch2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_date2.requestFocus();
        }
    }//GEN-LAST:event_txt_branch1KeyPressed

    private void txt_branch2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_branch2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            browseBranch2();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_process.setFocusable(true);
            btn_process.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_branch1.requestFocus();
        }
    }//GEN-LAST:event_txt_branch2KeyPressed

    private void btn_processFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_processFocusLost
        btn_process.setFocusable(false);
    }//GEN-LAST:event_btn_processFocusLost

    private void btn_processKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_processKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!f.chkos.equalsIgnoreCase("linux")) {
                btnProcess();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_branch2.requestFocus();
        }
    }//GEN-LAST:event_btn_processKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(export_costproduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(export_costproduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(export_costproduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(export_costproduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                export_costproduct dialog = new export_costproduct(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_branch1;
    private javax.swing.JButton btn_branch2;
    private javax.swing.JButton btn_date1;
    private javax.swing.JButton btn_date2;
    private javax.swing.JButton btn_excel;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_export;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_process;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbltable1;
    private javax.swing.JTextField txt_branch1;
    private javax.swing.JTextField txt_branch2;
    private javax.swing.JTextField txt_date1;
    private javax.swing.JTextField txt_date2;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel model1;

    private void setTable1() {

        model1 = (DefaultTableModel) tbltable1.getModel();
        tbltable1.setShowGrid(true);
        tbltable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbltable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbltable1.setRowSelectionAllowed(true);
        tbltable1.setBackground(java.awt.Color.WHITE);
        tbltable1.setGridColor(java.awt.Color.gray);
        tbltable1.setRowHeight(24);
        tbltable1.setFont(new Font("Norasi", Font.PLAIN, 14));
        JTableHeader tHeader = tbltable1.getTableHeader();
        tHeader.setFont(new Font("Norasi", Font.BOLD, 14));
        DefaultTableCellRenderer l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);
        DefaultTableCellRenderer r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        TableColumnModel tcm = tbltable1.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(l);
        tcm.getColumn(3).setCellRenderer(l);
        tcm.getColumn(4).setCellRenderer(r);
        tcm.getColumn(5).setCellRenderer(l);
        tcm.getColumn(6).setCellRenderer(l);
        tcm.getColumn(7).setCellRenderer(l);
        tcm.getColumn(8).setCellRenderer(l);
        tcm.getColumn(9).setCellRenderer(l);
        tcm.getColumn(10).setCellRenderer(l);
        tcm.getColumn(11).setCellRenderer(l);
        tcm.getColumn(12).setCellRenderer(l);
    }

    private void resetTable1() {
        int size = tbltable1.getRowCount();
        for (int i = 0; i < size; i++) {
            model1.removeRow(0);
        }
        txt_total.setText("จำนวน 0 รายการ");
    }

    private void DateChoose1() {
        DateUtil.showDateChooserDialog(txt_date1, btn_date1);
        txt_date1.requestFocus();
    }

    private void DateChoose2() {
        DateUtil.showDateChooserDialog(txt_date2, btn_date2);
        txt_date2.requestFocus();
    }

    private void browseBranch1() {
        BrowserBranch frm = new BrowserBranch(null, true);
        frm.setVisible(true);

        if (frm.code.length() <= 0) {
            return;
        }
        txt_branch1.setText(frm.code);
        txt_branch1.requestFocus();
    }

    private void browseBranch2() {
        BrowserBranch frm = new BrowserBranch(null, true);
        frm.setVisible(true);

        if (frm.code.length() <= 0) {
            return;
        }
        txt_branch2.setText(frm.code);
        txt_branch2.requestFocus();
    }

    private void btnProcess() {
        resetTable1();
        String date1 = f.convertDateshowToSQL(txt_date1.getText().trim());
        String date2 = f.convertDateshowToSQL(txt_date2.getText().trim());

        String branch1 = txt_branch1.getText().trim();
        String branch2 = txt_branch2.getText().trim();

        if (branch2.length() <= 0) {
            branch2 = "ZZZ";
        }
        String acc = "";

        Double amount = 0.00;
        Double sumamount = 0.00;

        String Dept = "";
        String tempDept = "";

        String DeptAcc = "";
        String tempDeptAcc = "";

        String tempBranch = "";
        String tempPBOMacc = "";
        String tempAccnumber = "";
        String accnumber = "";

        String remark = "โอนต้นทุนจากการขาย-POS";

        int count = 0;
        int countItem = 0;
        try {
            String sql = "select s.s_bran as branch,"
                    + "s.s_date as date,"
                    + "s.pdept as dept,"
                    + "s.plcode as pcode,"
                    + "sum(s.plqty) as qty,"
                    + "g.bomacc as bomacc,"
                    + "p.pscost as scost,"
                    + "p.account as acc, "
                    + "p.bomacc as pbomacc "
                    //                    + "sum(p.pscost * s.plqty) "
                    + "from s_bom s "
                    + "left join groupfile g on g.groupcode=s.pdept "
                    + "left join product p on p.pcode=s.plcode "
                    + "where (s.s_bran>=? and s.s_bran<=?) "
                    + "and (s.s_date>=? and s.s_date<=?) "
                    + "group by s.s_bran,s.plcode "
                    + "order by s.s_bran,s.pdept";
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            pre.setString(1, branch1);
            pre.setString(2, branch2);
            pre.setString(3, date1);
            pre.setString(4, date2);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                do {
                    acc = rs.getString("acc");
                    if (!acc.equals("N")) {

                        tempDept = rs.getString("dept");
                        tempBranch = rs.getString("branch");
//
                        tempPBOMacc = rs.getString("pbomacc");
                        tempDeptAcc = rs.getString("bomacc");

                        amount = rs.getDouble("scost") * rs.getDouble("qty");

                        if (count == 0) {
                            accnumber = tempAccnumber;
                            Dept = tempDept;
                        }
                        if (!tempDept.equals(Dept) && count > 0) {
                            tempAccnumber = tempBranch + "000." + DeptAcc;
                            model1.addRow(new Object[]{
                                        "",
                                        "",
                                        "",
                                        tempAccnumber,
                                        f.doubleFmtShow(sumamount),
                                        "",
                                        "",
                                        "",
                                        "",
                                        remark,
                                        "",
                                        "",
                                        ""
                                    });
                            sumamount = 0.00;
                            countItem++;
                        }
                        sumamount = sumamount + amount;
                        tempAccnumber = tempBranch + "000." + tempPBOMacc;
                        model1.addRow(new Object[]{
                                    "",
                                    "",
                                    "",
                                    tempAccnumber,
                                    f.doubleFmtShow(-1*amount),
                                    "",
                                    "",
                                    "",
                                    "",
                                    remark,
                                    "",
                                    "",
                                    ""
                                });

                        Dept = tempDept;
                        DeptAcc = tempDeptAcc;
                        count++;
                        countItem++;
                    }
                } while (rs.next());

                tempAccnumber = tempBranch + "000." + DeptAcc;
                model1.addRow(new Object[]{
                            "",
                            "",
                            "",
                            tempAccnumber,
                            f.doubleFmtShow(sumamount),
                            "",
                            "",
                            "",
                            "",
                            remark,
                            "",
                            "",
                            ""
                        });
                countItem++;
            }
            rs.close();
            pre.close();
            rs = null;
            pre = null;
            txt_total.setText("จำนวน " + f.intFmtShow(countItem) + " รายการ");
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }
    }

    private void btnPrint() {
    }

    private void addCredit(String branch, String dept, Double sumamount) {
        String date1 = f.convertDateshowToSQL(txt_date1.getText().trim());
        String date2 = f.convertDateshowToSQL(txt_date2.getText().trim());
        String remark = "โอนต้นทุนจากการขาย-POS";

        double qty = 0.000;
        double cost = 0.0000;
        double amount = 0.00;
        String bomacc = "";
        Double sum = sumamount;

        String sql = "select s.s_bran as branch,"
                + "s.s_date as date,"
                + "s.pdept as dept,"
                + "s.plcode as pcode,"
                + "sum(s.plqty) as qty,"
                + "p.bomacc as bomacc,"
                + "p.pscost as scost, "
                + "p.account as acc "
                //                    + "sum(p.pscost * s.plqty) "
                + "from s_bom s "
                + "left join groupfile g on g.groupcode=s.pdept "
                + "left join product p on p.pcode=s.plcode "
                + "where s.s_bran=? and s.pdept=? "
                + "and (s.s_date>=? and s.s_date<=?) "
                + "group by s.s_bran,s.pdept,s.plcode "
                + "order by s.s_bran,s.pdept";
        try {
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            pre.setString(1, branch);
            pre.setString(2, dept);
            pre.setString(3, date1);
            pre.setString(4, date2);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                do {
                    if (!rs.getString("acc").equals("N")) {

                        bomacc = rs.getString("bomacc");
                        cost = rs.getDouble("scost");
                        qty = rs.getDouble("qty");
                        amount = cost * qty;
                        sum = sum - amount;

                        String accNumber = branch + "000." + bomacc;
                        model1.addRow(new Object[]{
                                    "",
                                    "",
                                    "",
                                    accNumber,
                                    f.doubleFmtShow(amount),
                                    "",
                                    "",
                                    "",
                                    "",
                                    remark,
                                    "",
                                    "",
                                    ""
                                });
                    }
                } while (rs.next());
            }
            rs.close();
            pre.close();
            rs = null;
            pre = null;

            if (sum != 0) {
                int row = tbltable1.getRowCount() - 1;
                Double data = Double.parseDouble(f.convertDoubleString(tbltable1.getValueAt(row, 4).toString()));

                data = data + sum;
                tbltable1.setValueAt(f.doubleFmtShow(data), row, 4);
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }
    }

    private void btnExcel() {
        int row = tbltable1.getRowCount();
        if (row <= 0) {
            return;
        }
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        File file;

        String alert_save = "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?";
        String condition = "";
        try {
            file = new File(new File("excel.xls").getCanonicalPath());

            chooser.setSelectedFile(file);
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));



            int confirm2 = chooser.showSaveDialog(this);
            if (confirm2 == JFileChooser.APPROVE_OPTION) {


                File curFile = chooser.getSelectedFile();

                if (curFile.exists()) {
                    int confirm = JOptionPane.showConfirmDialog(this, alert_save, "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.NO_OPTION) {
                        return;

                    }
                    try {
                        test.setOutputFile(curFile.toString());
                        test.writetableNoSumNoHead(tbltable1, tbltable1.getColumnModel(), condition);
                    } catch (IOException ex) {
                    } catch (WriteException ex) {
                    }
                } else {
                    try {
                        test.setOutputFile(curFile.toString());
                        test.writetableNoSumNoHead(tbltable1, tbltable1.getColumnModel(), condition);
                    } catch (IOException ex) {
                    } catch (WriteException ex) {
                    }
                }
            }



        } catch (IOException e) {
        }
    }

    private void btnExportFile() {
        int row = tbltable1.getRowCount();
        if (row <= 0) {
            return;
        }
        StringBuilder str = new StringBuilder();

        String alert_save = "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?";
        JFileChooser chooser = new JFileChooser();
        File file;
        try {
            file = new File(new File("accountnumber.csv").getCanonicalPath());

            chooser.setSelectedFile(file);
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));

            int confirm2 = chooser.showSaveDialog(this);
            if (confirm2 == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();

                if (curFile.exists()) {
                    int confirm = msn.showMessageConfirm("Yes", "No", alert_save);
                    if (confirm == JOptionPane.NO_OPTION) {
                        return;

                    }

                    String head = "" + "\t"
                            + "" + "\t"
                            + "" + "\t"
                            + "Account Number" + "\t"
                            + "Amount" + "\t"
                            + "Account Description" + "\t"
                            + "Subledger Type" + "\t"
                            + "Subledger" + "\t"
                            + "Subledger Description" + "\t"
                            + "Remark" + "\t"
                            + "Posted Code" + "\t"
                            + "Company" + "\t"
                            + "R V";
                    str.append(head + "\n");
                    for (int i = 0; i < row; i++) {
                        String col1 = tbltable1.getValueAt(i, 0).toString();
                        String col2 = tbltable1.getValueAt(i, 1).toString();
                        String col3 = tbltable1.getValueAt(i, 2).toString();
                        String col4 = tbltable1.getValueAt(i, 3).toString();
                        String col5 = tbltable1.getValueAt(i, 4).toString();
                        String col6 = tbltable1.getValueAt(i, 5).toString();
                        String col7 = tbltable1.getValueAt(i, 6).toString();
                        String col8 = tbltable1.getValueAt(i, 7).toString();
                        String col9 = tbltable1.getValueAt(i, 8).toString();
                        String col10 = tbltable1.getValueAt(i, 9).toString();
                        String col11 = tbltable1.getValueAt(i, 10).toString();
                        String col12 = tbltable1.getValueAt(i, 11).toString();
                        String col13 = tbltable1.getValueAt(i, 12).toString();

                        String line = col1 + "\t" + col2 + "\t" + col3 + "\t"
                                + col4 + "\t" + col5 + "\t" + col6 + "\t"
                                + col7 + "\t" + col8 + "\t" + col9 + "\t"
                                + col10 + "\t" + col11 + "\t" + col12 + "\t"
                                + col13;
                        str.append(line + "\n");
                    }

                } else {
                    String head = "" + "\t"
                            + "" + "\t"
                            + "" + "\t"
                            + "Account Number" + "\t"
                            + "Amount" + "\t"
                            + "Account Description" + "\t"
                            + "Subledger Type" + "\t"
                            + "Subledger" + "\t"
                            + "Subledger Description" + "\t"
                            + "Remark" + "\t"
                            + "Posted Code" + "\t"
                            + "Company" + "\t"
                            + "R V";
                    str.append(head + "\n");
                    for (int i = 0; i < row; i++) {
                        String col1 = tbltable1.getValueAt(i, 0).toString();
                        String col2 = tbltable1.getValueAt(i, 1).toString();
                        String col3 = tbltable1.getValueAt(i, 2).toString();
                        String col4 = tbltable1.getValueAt(i, 3).toString();
                        String col5 = tbltable1.getValueAt(i, 4).toString();
                        String col6 = tbltable1.getValueAt(i, 5).toString();
                        String col7 = tbltable1.getValueAt(i, 6).toString();
                        String col8 = tbltable1.getValueAt(i, 7).toString();
                        String col9 = tbltable1.getValueAt(i, 8).toString();
                        String col10 = tbltable1.getValueAt(i, 9).toString();
                        String col11 = tbltable1.getValueAt(i, 10).toString();
                        String col12 = tbltable1.getValueAt(i, 11).toString();
                        String col13 = tbltable1.getValueAt(i, 12).toString();

                        String line = col1 + "\t" + col2 + "\t" + col3 + "\t"
                                + col4 + "\t" + col5 + "\t" + col6 + "\t"
                                + col7 + "\t" + col8 + "\t" + col9 + "\t"
                                + col10 + "\t" + col11 + "\t" + col12 + "\t"
                                + col13;
                        str.append(line + "\n");
                    }
                }
                f.writeFileIni(curFile.toString(), str);
            }
        } catch (Exception e) {
        }
    }

    private void clearAll() {
        txt_date1.setText(f.dateFmtShow(f.nowDate()));
        txt_date1.requestFocus();
        txt_date2.setText(f.dateFmtShow(f.nowDate()));
        txt_branch1.setText("");
        txt_branch2.setText("");

        txt_total.setText("จำนวน 0 รายการ");
        txt_total.setFocusable(false);
        txt_total.setBackground(f.colorDisable());

        btn_branch1.setFocusable(false);
        btn_branch2.setFocusable(false);

        btn_date1.setFocusable(false);
        btn_date2.setFocusable(false);

        btn_excel.setFocusable(false);
        btn_export.setFocusable(false);
        btn_print.setFocusable(false);
        btn_process.setFocusable(false);
        btn_exit.setFocusable(false);

        resetTable1();
    }
}
