/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ingredent_bom.s_bom;

import dbutility.dbUtility;
import frmlist.BrowserBranch;
import ingredent_bom.formatDateNumber;
import ingredent_bom.showMessage;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import report.Report;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.Export2Excel;
import utilititiesfunction.FormatCell;
import utilititiesfunction.ThaiUtilities;

/**
 *
 * @author natee
 */
public class report_sbom extends javax.swing.JDialog {

    /**
     * Creates new form report_sbom
     */
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    ThaiUtilities cvth = new ThaiUtilities();
    dbUtility db = new dbUtility();
    formatDateNumber f = new formatDateNumber();
    showMessage msn = new showMessage();

    public report_sbom(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        inittbl();
        txt_date1.setText(f.dateFmtShow(f.nowDate()));
        txt_date2.setText(f.dateFmtShow(f.nowDate()));
        txt_branch1.setText("");
        txt_branch2.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_date2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_date1 = new javax.swing.JTextField();
        btn_date2 = new javax.swing.JButton();
        btn_date1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txt_branch1 = new javax.swing.JTextField();
        btn_branch1 = new javax.swing.JButton();
        txt_branch2 = new javax.swing.JTextField();
        btn_branch2 = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        btn_process = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        btn_excel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new org.jdesktop.swingx.JXTreeTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "กำหนดวันที่", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Norasi", 0, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_date2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_date2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_date2.setText("txt_date2");
        txt_date2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_date2FocusGained(evt);
            }
        });
        txt_date2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_date2KeyPressed(evt);
            }
        });
        jPanel2.add(txt_date2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 100, 30));

        jLabel1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ถึง");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 30, 30));

        txt_date1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_date1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_date1.setText("txt_date1");
        txt_date1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_date1FocusGained(evt);
            }
        });
        txt_date1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_date1KeyPressed(evt);
            }
        });
        jPanel2.add(txt_date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 100, 30));

        btn_date2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_date2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_date2ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_date2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 30, 30));

        btn_date1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_date1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_date1ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 30, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 310, 80));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "กำหนดสาขา", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Norasi", 0, 14))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_branch1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_branch1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_branch1.setText("txt_branch1");
        txt_branch1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_branch1FocusGained(evt);
            }
        });
        txt_branch1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_branch1KeyPressed(evt);
            }
        });
        jPanel3.add(txt_branch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 70, 30));

        btn_branch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_branch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_branch1ActionPerformed(evt);
            }
        });
        jPanel3.add(btn_branch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 30, 30));

        txt_branch2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_branch2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_branch2.setText("txt_branch2");
        txt_branch2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_branch2FocusGained(evt);
            }
        });
        txt_branch2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_branch2KeyPressed(evt);
            }
        });
        jPanel3.add(txt_branch2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 70, 30));

        btn_branch2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_branch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_branch2ActionPerformed(evt);
            }
        });
        jPanel3.add(btn_branch2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 30, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 230, 80));

        btn_exit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btn_exit.setText("ออก");
        btn_exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_exit.setIconTextGap(0);
        btn_exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });
        jPanel1.add(btn_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 100, 65));

        btn_process.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_process.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hourglass-icon.png"))); // NOI18N
        btn_process.setText("ประมวลผล");
        btn_process.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_process.setIconTextGap(0);
        btn_process.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_processActionPerformed(evt);
            }
        });
        btn_process.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btn_processFocusLost(evt);
            }
        });
        btn_process.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btn_processKeyPressed(evt);
            }
        });
        jPanel1.add(btn_process, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, 100, 65));

        btn_print.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        btn_print.setText("พิมพ์");
        btn_print.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_print.setIconTextGap(0);
        btn_print.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });
        jPanel1.add(btn_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, 100, 65));

        btn_excel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_excel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        btn_excel.setText("Excel");
        btn_excel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_excel.setIconTextGap(0);
        btn_excel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excelActionPerformed(evt);
            }
        });
        jPanel1.add(btn_excel, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, 100, 65));

        jScrollPane1.setViewportView(tbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_date2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_date2FocusGained
        String data = txt_date2.getText().trim();
        if (data.length() > 0) {
            txt_date2.selectAll();
        } else {
            txt_date2.setText(f.dateFmtShow(f.nowDate()));
            txt_date2.selectAll();
        }
    }//GEN-LAST:event_txt_date2FocusGained

    private void txt_date2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_date2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            DateChoose2();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_branch1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_date1.requestFocus();
        }
    }//GEN-LAST:event_txt_date2KeyPressed

    private void txt_date1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_date1FocusGained
        String data = txt_date1.getText().trim();
        if (data.length() > 0) {
            txt_date1.selectAll();
        } else {
            txt_date1.setText(f.dateFmtShow(f.nowDate()));
            txt_date1.selectAll();
        }
    }//GEN-LAST:event_txt_date1FocusGained

    private void txt_date1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_date1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            DateChoose1();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_date2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        }
    }//GEN-LAST:event_txt_date1KeyPressed

    private void btn_date2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_date2ActionPerformed
        DateChoose2();
    }//GEN-LAST:event_btn_date2ActionPerformed

    private void btn_date1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_date1ActionPerformed
        DateChoose1();
    }//GEN-LAST:event_btn_date1ActionPerformed

    private void txt_branch1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_branch1FocusGained
        String data = txt_branch1.getText().trim();
        if (data.length() > 0) {
            txt_branch1.selectAll();
        } else {
            txt_branch1.setText("1");
            txt_branch1.selectAll();
            txt_branch1.setText("");
        }
    }//GEN-LAST:event_txt_branch1FocusGained

    private void txt_branch1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_branch1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            browseBranch1();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_branch2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_date2.requestFocus();
        }
    }//GEN-LAST:event_txt_branch1KeyPressed

    private void btn_branch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_branch1ActionPerformed
        browseBranch1();
    }//GEN-LAST:event_btn_branch1ActionPerformed

    private void txt_branch2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_branch2FocusGained
        String data = txt_branch2.getText().trim();
        if (data.length() > 0) {
            txt_branch2.selectAll();
        } else {
            txt_branch2.setText("1");
            txt_branch2.selectAll();
            txt_branch2.setText("");
        }
    }//GEN-LAST:event_txt_branch2FocusGained

    private void txt_branch2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_branch2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            browseBranch2();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_process.setFocusable(true);
            btn_process.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_branch1.requestFocus();
        }
    }//GEN-LAST:event_txt_branch2KeyPressed

    private void btn_branch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_branch2ActionPerformed
        browseBranch2();
    }//GEN-LAST:event_btn_branch2ActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        dispose();
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_processActionPerformed
        btnProcess();
    }//GEN-LAST:event_btn_processActionPerformed

    private void btn_processFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_processFocusLost
        btn_process.setFocusable(false);
    }//GEN-LAST:event_btn_processFocusLost

    private void btn_processKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_processKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcess();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!f.chkos.equalsIgnoreCase("linux")) {
                btnProcess();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_branch2.requestFocus();
        }
    }//GEN-LAST:event_btn_processKeyPressed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        btnPrint();
    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excelActionPerformed
        btnExcel();
    }//GEN-LAST:event_btn_excelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(report_sbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(report_sbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(report_sbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(report_sbom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                report_sbom dialog = new report_sbom(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_branch1;
    private javax.swing.JButton btn_branch2;
    private javax.swing.JButton btn_date1;
    private javax.swing.JButton btn_date2;
    private javax.swing.JButton btn_excel;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_process;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTreeTable tbl;
    private javax.swing.JTextField txt_branch1;
    private javax.swing.JTextField txt_branch2;
    private javax.swing.JTextField txt_date1;
    private javax.swing.JTextField txt_date2;
    // End of variables declaration//GEN-END:variables

    private void inittbl() {
        try {

            TableColumnModel tcm = new DefaultTableColumnModel();

            TableColumn tc1 = new TableColumn(0, 120);
            tc1.setHeaderValue("วันที่");

            TableColumn tc2 = new TableColumn(1, 50);
            tc2.setHeaderValue("สาขา");

            TableColumn tc3 = new TableColumn(2, 150);
            tc3.setHeaderValue("กลุ่มสินค้า");

            TableColumn tc4 = new TableColumn(3, 90);
            tc4.setHeaderValue("DeptAcc");

            TableColumn tc5 = new TableColumn(4, 250);
            tc5.setHeaderValue("สินค้า");

            TableColumn tc6 = new TableColumn(5, 80);
            tc6.setHeaderValue("จำนวนสินค้า");

            TableColumn tc7 = new TableColumn(6, 90);
            tc7.setHeaderValue("BOMAcc");

            TableColumn tc8 = new TableColumn(7, 260);
            tc8.setHeaderValue("วัตถุดิบ");

            TableColumn tc9 = new TableColumn(8, 80);
            tc9.setHeaderValue("จำนวน");

            TableColumn tc10 = new TableColumn(9, 80);
            tc10.setHeaderValue("ราคา/หน่วย");

            TableColumn tc11 = new TableColumn(10, 80);
            tc11.setHeaderValue("รวมเป็นเงิน");

            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            tcm.addColumn(tc11);

            tcm.getColumn(0).setCellRenderer(FormatCell.c());
            tcm.getColumn(1).setCellRenderer(FormatCell.c());
            tcm.getColumn(2).setCellRenderer(FormatCell.l());
            tcm.getColumn(3).setCellRenderer(FormatCell.l());
            tcm.getColumn(4).setCellRenderer(FormatCell.l());
            tcm.getColumn(5).setCellRenderer(FormatCell.r());
            tcm.getColumn(6).setCellRenderer(FormatCell.l());
            tcm.getColumn(7).setCellRenderer(FormatCell.l());
            tcm.getColumn(8).setCellRenderer(FormatCell.r());
            tcm.getColumn(9).setCellRenderer(FormatCell.r());
            tcm.getColumn(10).setCellRenderer(FormatCell.r());



            tbl.setEditable(false);//ห้ามแก้ไขตาราง
            tbl.setShowGrid(true);
            tbl.setFont(fontplain);
            tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tbl.setRowSelectionAllowed(true);
            tbl.setBackground(java.awt.Color.WHITE);
            tbl.setGridColor(java.awt.Color.gray);
            tbl.setRowHeight(20);

            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);

            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
            //   h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);
        } catch (Exception ex) {
        }
    }

    private void DateChoose1() {
        DateUtil.showDateChooserDialog(txt_date1, btn_date1);
        txt_date1.requestFocus();
    }

    private void DateChoose2() {
        DateUtil.showDateChooserDialog(txt_date2, btn_date2);
        txt_date2.requestFocus();
    }

    private void browseBranch1() {
        BrowserBranch frm = new BrowserBranch(null, true);
        frm.setVisible(true);

        if (frm.code.length() <= 0) {
            return;
        }
        txt_branch1.setText(frm.code);
        txt_branch1.requestFocus();
    }

    private void browseBranch2() {
        BrowserBranch frm = new BrowserBranch(null, true);
        frm.setVisible(true);

        if (frm.code.length() <= 0) {
            return;
        }
        txt_branch2.setText(frm.code);
        txt_branch2.requestFocus();
    }

    private void btnPrint() {
        Report r = new Report();
        Map map = new HashMap();

        new sbomfactory();

        String date1 = f.convertDateshowToSQL(txt_date1.getText().trim());
        String date2 = f.convertDateshowToSQL(txt_date2.getText().trim());
        String bran1 = txt_branch1.getText().trim();
        String bran2 = txt_branch2.getText().trim();

        if (bran2.length() <= 0) {
            bran2 = "ZZZ";
        }

        String sql = "SELECT s.*, "
                + "p.pdesc as pluname, "
                + "pl.pdesc as plname,"
                + "g.groupname as deptname, "
                + "g.bomacc as bomacc, "
                + "pl.bomacc as plbom,"
                + "pl.pacost as cost1,"
                + "pl.pscost as cost2 "
                + "FROM s_bom s  "
                + "left join product p on s.pcode=p.pcode  "
                + "left join product pl on s.plcode=pl.pcode "
                + "left join groupfile g on s.pdept=g.groupcode "
                + "where "
                + "(s.s_bran>='" + bran1 + "' and s.s_bran<='" + bran2 + "') and "
                + "(s.s_date>='" + date1 + "' and s.s_date<='" + date2 + "') "
                + "order by s.s_date, s.s_bran, s.pdept, s.pcode, s.plcode";
        String filename = "reportSBOM";


        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        String date = f.convertDatesqlToShow(cvth.ASCII2Unicode(rs.getString("s.s_date")));
                        String branch = cvth.ASCII2Unicode(rs.getString("s.s_bran"));
                        String dept = "(" + cvth.ASCII2Unicode(rs.getString("s.pdept")) + ") " + cvth.ASCII2Unicode(rs.getString("deptname"));
                        String bomacc = cvth.ASCII2Unicode(rs.getString("bomacc"));
                        String pcode = "(" + cvth.ASCII2Unicode(rs.getString("s.pcode")) + ") " + cvth.ASCII2Unicode(rs.getString("pluname"));
                        double pqty = rs.getDouble("s.pqty");
                        String plbomacc = cvth.ASCII2Unicode(rs.getString("plbom"));
                        String plcode = "(" + cvth.ASCII2Unicode(rs.getString("s.plcode")) + ") " + cvth.ASCII2Unicode(rs.getString("plname"));
                        double plqty = rs.getDouble("s.plqty");
                        double price = rs.getDouble("cost2");
                        double amount = plqty * price;

                        new sbomfactory(date, branch, dept, bomacc, pcode, pqty, plbomacc, plcode, plqty, price, amount);

                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } else {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        String date = f.convertDatesqlToShow(rs.getString("s.s_date"));
                        String branch = rs.getString("s.s_bran");
                        String dept = "(" + rs.getString("s.pdept") + ") " + rs.getString("deptname");
                        String bomacc = rs.getString("bomacc");
                        String pcode = "(" + rs.getString("s.pcode") + ") " + rs.getString("pluname");
                        double pqty = rs.getDouble("s.pqty");
                        String plbomacc = rs.getString("plbom");
                        String plcode = "(" + rs.getString("s.plcode") + ") " + rs.getString("plname");
                        double plqty = rs.getDouble("s.plqty");
                        double price = rs.getDouble("cost2");
                        double amount = plqty * price;

                        new sbomfactory(date, branch, dept, bomacc, pcode, pqty, plbomacc, plcode, plqty, price, amount);

                    } while (rs.next());
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            }
        } catch (Exception e) {
            msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
            e.printStackTrace();
            return;
        }

        if (bran1.equals("")) {
            bran1 = "ไม่ระบุ";
        }
        if (bran2.equals("ZZZ")) {
            bran2 = "ไม่ระบุ";
        }

        JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(
                sbomfactory.createBeanCollection());

        map.put("date1", f.convertDatesqlToShow(date1));
        map.put("date2", f.convertDatesqlToShow(date2));
        map.put("bran1", bran1);
        map.put("bran2", bran2);
        r.viewReportbean(filename, map, "report_SBOM", ds);
    }

    private void btnExcel() {

        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        String condition = "";
        try {


            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();




                if (curFile.exists()) {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        btn_excelActionPerformed(null);

                        return;

                    }

                }


                try {
                    test.setOutputFile(curFile.toString());
                    test.writeTreetableContditionNoSum(tbl, tbl.getColumnModel(), condition);
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }


            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    private void btnProcess() {

        String date1 = f.convertDateshowToSQL(txt_date1.getText().trim());
        String date2 = f.convertDateshowToSQL(txt_date2.getText().trim());
        String branch1 = txt_branch1.getText().trim();
        String branch2 = txt_branch2.getText().trim();

        if (branch2.length() <= 0) {
            branch2 = "ZZZ";
        }
        int count = 0;

        try {

            TableColumnModel tcm = new DefaultTableColumnModel();

            TableColumn tc1 = new TableColumn(0, 120);
            tc1.setHeaderValue("วันที่");

            TableColumn tc2 = new TableColumn(1, 50);
            tc2.setHeaderValue("สาขา");

            TableColumn tc3 = new TableColumn(2, 150);
            tc3.setHeaderValue("กลุ่มสินค้า");

            TableColumn tc4 = new TableColumn(3, 90);
            tc4.setHeaderValue("DeptAcc");

            TableColumn tc5 = new TableColumn(4, 250);
            tc5.setHeaderValue("สินค้า");

            TableColumn tc6 = new TableColumn(5, 80);
            tc6.setHeaderValue("จำนวนสินค้า");

            TableColumn tc7 = new TableColumn(6, 90);
            tc7.setHeaderValue("BOMAcc");

            TableColumn tc8 = new TableColumn(7, 260);
            tc8.setHeaderValue("วัตถุดิบ");

            TableColumn tc9 = new TableColumn(8, 80);
            tc9.setHeaderValue("จำนวน");

            TableColumn tc10 = new TableColumn(9, 80);
            tc10.setHeaderValue("ราคา/หน่วย");

            TableColumn tc11 = new TableColumn(10, 80);
            tc11.setHeaderValue("รวมเป็นเงิน");

            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            tcm.addColumn(tc11);

            tcm.getColumn(0).setCellRenderer(FormatCell.c());
            tcm.getColumn(1).setCellRenderer(FormatCell.c());
            tcm.getColumn(2).setCellRenderer(FormatCell.l());
            tcm.getColumn(3).setCellRenderer(FormatCell.l());
            tcm.getColumn(4).setCellRenderer(FormatCell.l());
            tcm.getColumn(5).setCellRenderer(FormatCell.r());
            tcm.getColumn(6).setCellRenderer(FormatCell.l());
            tcm.getColumn(7).setCellRenderer(FormatCell.l());
            tcm.getColumn(8).setCellRenderer(FormatCell.r());
            tcm.getColumn(9).setCellRenderer(FormatCell.r());
            tcm.getColumn(10).setCellRenderer(FormatCell.r());

            tbl.setEditable(false);//ห้ามแก้ไขตาราง
            tbl.setShowGrid(true);
            tbl.setFont(fontplain);
            tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tbl.setRowSelectionAllowed(true);
            tbl.setBackground(java.awt.Color.WHITE);
            tbl.setGridColor(java.awt.Color.gray);
            tbl.setRowHeight(20);

            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

            String sql = "SELECT s.*, "
                    + "p.pdesc as pluname, "
                    + "pl.pdesc as plname,"
                    + "g.groupname as deptname, "
                    + "g.bomacc as bomacc, "
                    + "pl.bomacc as plbom,"
                    + "pl.pacost as cost1,"
                    + "pl.pscost as cost2 "
                    + "FROM s_bom s  "
                    + "left join product p on s.pcode=p.pcode  "
                    + "left join product pl on s.plcode=pl.pcode "
                    + "left join groupfile g on s.pdept=g.groupcode "
                    + "where "
                    + "(s.s_bran>='" + branch1 + "' and s.s_bran<='" + branch2 + "') and "
                    + "(s.s_date>='" + date1 + "' and s.s_date<='" + date2 + "') "
                    + "order by s.s_date, s.s_bran, s.pdept, s.pcode, s.plcode";
            
            System.out.println("sql // " + sql);

            reportSBom_model treemodel = new reportSBom_model(sql);
            tbl.setTreeTableModel(treemodel);
            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);
            ((JXTree) tbl.getCellRenderer(0, tbl.getHierarchicalColumn())).setFont(fontplain);

            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
            h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);
        } catch (Exception e) {
        }
    }
}
