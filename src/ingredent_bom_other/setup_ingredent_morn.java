/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ingredent_bom_other;

import ingredent_bom.*;
import dbutility.dbUtility;
import frmlist.listGroupfile;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import masterfile.NimbusFrame;
import utilititiesfunction.ThaiUtilities;
import utilititiesfunction.UserLogin;

/**
 *
 * @author natee
 */
public class setup_ingredent_morn extends javax.swing.JDialog {

    /**
     * Creates new form setup_ingredent
     */
    dbUtility db = new dbUtility();
    ThaiUtilities cvth = new ThaiUtilities();
    formatDateNumber fdn = new formatDateNumber();
    showMessage msn = new showMessage();
    Statement stmt;
    Double cost = 0.0000;

    public setup_ingredent_morn(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
        //checkuserconfig();

        clearText();
        btn_import.setVisible(false);
        btn_import.setFocusable(false);
        
        btn_delete.setEnabled(false);
        menuDelete.setEnabled(false);
    }

    private void checkuserconfig() {
        //MenuName = Mast1
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getM212().equals("1")) {
            btn_save.setEnabled(false);
            btn_delete.setEnabled(false);
            menuSave.setEnabled(false);
            menuDelete.setEnabled(false);
        }
        if (userrec.getM212().equals("2")) {
            btn_save.setEnabled(true);
            btn_delete.setEnabled(false);
            menuSave.setEnabled(true);
            menuDelete.setEnabled(false);
        }
        if (userrec.getM212().equals("3")) {
            btn_save.setEnabled(true);
            btn_delete.setEnabled(true);
            menuSave.setEnabled(true);
            menuDelete.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_exit = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_import = new javax.swing.JButton();
        btn_list = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_pcode = new javax.swing.JTextField();
        btn_pcode = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_groupname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_pgroup = new javax.swing.JTextField();
        btn_group = new javax.swing.JButton();
        txt_pdesc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_punit1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_psubunit = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_scale = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_pacost = new javax.swing.JTextField();
        txt_1 = new javax.swing.JTextField();
        combo_punit1 = new javax.swing.JComboBox();
        combo_psubunit = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txt_bomacc = new javax.swing.JTextField();
        chk_account = new javax.swing.JCheckBox();
        CostUpdate = new javax.swing.JLabel();
        lbl_desc = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        menuDelete = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("กำหนดรายการวัตถุดิบ");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_exit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btn_exit.setText("ออก");
        btn_exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_exit.setIconTextGap(0);
        btn_exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });
        jPanel1.add(btn_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 0, 100, 65));

        btn_cancel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Cancel-icon.png"))); // NOI18N
        btn_cancel.setText("ยกเลิก");
        btn_cancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_cancel.setIconTextGap(0);
        btn_cancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 65));

        btn_save.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Actions-document-save-icon1.png"))); // NOI18N
        btn_save.setText("บันทึกข้อมูล");
        btn_save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_save.setIconTextGap(0);
        btn_save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        jPanel1.add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 100, 65));

        btn_delete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        btn_delete.setText("ลบข้อมูล");
        btn_delete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_delete.setIconTextGap(0);
        btn_delete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        jPanel1.add(btn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 100, 65));

        btn_import.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_import.setText("รับข้อมูลเข้า");
        btn_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_importActionPerformed(evt);
            }
        });
        jPanel1.add(btn_import, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 100, 65));

        btn_list.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_list.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/list-icon.png"))); // NOI18N
        btn_list.setText("แสดงรายงาน");
        btn_list.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_list.setIconTextGap(0);
        btn_list.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_listActionPerformed(evt);
            }
        });
        jPanel1.add(btn_list, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 100, 65));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("รหัสวัตถุดิบ");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 150, 35));

        txt_pcode.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_pcode.setText("txt_pcode");
        txt_pcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pcodeFocusGained(evt);
            }
        });
        txt_pcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pcodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_pcodeKeyTyped(evt);
            }
        });
        jPanel2.add(txt_pcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 150, 30));

        btn_pcode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_pcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pcodeActionPerformed(evt);
            }
        });
        jPanel2.add(btn_pcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 30, 30));

        jLabel2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ชื่อวัตถุดิบ");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 150, 35));

        txt_groupname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_groupname.setText("txt_groupname");
        jPanel2.add(txt_groupname, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, 270, 30));

        jLabel3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("กลุ่มวัตถุดิบ");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 150, 35));

        txt_pgroup.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_pgroup.setText("txt_pgroup");
        txt_pgroup.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pgroupFocusGained(evt);
            }
        });
        txt_pgroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pgroupKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_pgroupKeyTyped(evt);
            }
        });
        jPanel2.add(txt_pgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 120, 30));

        btn_group.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_groupActionPerformed(evt);
            }
        });
        jPanel2.add(btn_group, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 30, 30));

        txt_pdesc.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_pdesc.setText("txt_pdesc");
        txt_pdesc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pdescFocusGained(evt);
            }
        });
        txt_pdesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pdescKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_pdescKeyTyped(evt);
            }
        });
        jPanel2.add(txt_pdesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 430, 30));

        jLabel4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("หน่วยนับหลัก");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 150, 35));

        txt_punit1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_punit1.setText("txt_punit1");
        txt_punit1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_punit1FocusGained(evt);
            }
        });
        txt_punit1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_punit1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_punit1KeyTyped(evt);
            }
        });
        jPanel2.add(txt_punit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 50, 30));

        jLabel5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("หน่วยย่อย");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 140, 130, 35));

        txt_psubunit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_psubunit.setText("txt_psubunit");
        txt_psubunit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_psubunitFocusGained(evt);
            }
        });
        txt_psubunit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_psubunitKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_psubunitKeyTyped(evt);
            }
        });
        jPanel2.add(txt_psubunit, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 50, 30));

        jLabel6.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("อัตราส่วน / หน่วยนับหลัก");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 150, 35));

        txt_scale.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_scale.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_scale.setText("txt_scale");
        txt_scale.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_scaleFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_scaleFocusLost(evt);
            }
        });
        txt_scale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_scaleKeyPressed(evt);
            }
        });
        jPanel2.add(txt_scale, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 110, 30));

        jLabel7.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("ต้นทุนเฉลี่ย");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 150, 35));

        txt_pacost.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_pacost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_pacost.setText("txt_pacost");
        txt_pacost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_pacostFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_pacostFocusLost(evt);
            }
        });
        txt_pacost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pacostKeyPressed(evt);
            }
        });
        jPanel2.add(txt_pacost, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, 30));

        txt_1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_1.setText("1 x");
        jPanel2.add(txt_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 40, 30));

        combo_punit1.setEditable(true);
        combo_punit1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        combo_punit1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_punit1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                combo_punit1KeyTyped(evt);
            }
        });
        jPanel2.add(combo_punit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 130, 30));

        combo_psubunit.setEditable(true);
        combo_psubunit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        combo_psubunit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_psubunitKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                combo_psubunitKeyTyped(evt);
            }
        });
        jPanel2.add(combo_psubunit, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 130, 30));

        jLabel8.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("BOM Account");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 150, 35));

        txt_bomacc.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_bomacc.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_bomacc.setText("txt_bomacc");
        txt_bomacc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_bomaccFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_bomaccFocusLost(evt);
            }
        });
        txt_bomacc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_bomaccKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_bomaccKeyTyped(evt);
            }
        });
        jPanel2.add(txt_bomacc, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 260, 30));

        chk_account.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        chk_account.setText("สำหรับบัญชี");
        jPanel2.add(chk_account, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 100, 30));

        CostUpdate.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        CostUpdate.setForeground(new java.awt.Color(18, 31, 142));
        CostUpdate.setText("Cost Update By");
        jPanel2.add(CostUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 225, -1, -1));

        lbl_desc.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbl_desc.setText("lbl_desc");
        jPanel2.add(lbl_desc, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 130, 30));

        jMenu1.setText("ฟังก์ชั่น");
        jMenu1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem1.setText("ยกเลิก");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSave.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuSave.setText("บันทึกข้อมูล");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        jMenu1.add(menuSave);

        menuDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuDelete.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuDelete.setText("ลบข้อมูล");
        menuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteActionPerformed(evt);
            }
        });
        jMenu1.add(menuDelete);
        jMenu1.add(jSeparator1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem4.setText("ออก");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-680)/2, (screenSize.height-497)/2, 680, 497);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_pcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pcodeActionPerformed
        btnSearchProduct();
    }//GEN-LAST:event_btn_pcodeActionPerformed

    private void txt_pcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pcodeFocusGained
        String data = txt_pcode.getText().trim();
        if (data.length() > 0) {
            txt_pcode.selectAll();
        } else {
            txt_pcode.setText("1");
            txt_pcode.selectAll();
            txt_pcode.setText("");
        }
    }//GEN-LAST:event_txt_pcodeFocusGained

    private void txt_pdescFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pdescFocusGained
        String data = txt_pdesc.getText().trim();
        if (data.length() > 0) {
            txt_pdesc.selectAll();
        } else {
            txt_pdesc.setText("1");
            txt_pdesc.selectAll();
            txt_pdesc.setText("");
        }
    }//GEN-LAST:event_txt_pdescFocusGained

    private void txt_pgroupFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pgroupFocusGained
        String data = txt_pgroup.getText().trim();
        if (data.length() > 0) {
            txt_pgroup.selectAll();
        } else {
            txt_pgroup.setText("1");
            txt_pgroup.selectAll();
            txt_pgroup.setText("");
            txt_groupname.setText("");
        }
    }//GEN-LAST:event_txt_pgroupFocusGained

    private void txt_punit1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_punit1FocusGained
        String data = txt_punit1.getText().trim();
        if (data.length() > 0) {
            txt_punit1.selectAll();
        } else {
            txt_punit1.setText("1");
            txt_punit1.selectAll();
            txt_punit1.setText("");
        }
    }//GEN-LAST:event_txt_punit1FocusGained

    private void txt_psubunitFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_psubunitFocusGained
        String data = txt_psubunit.getText().trim();
        if (data.length() > 0) {
            txt_psubunit.selectAll();
        } else {
            txt_psubunit.setText("1");
            txt_psubunit.selectAll();
            txt_psubunit.setText("");
        }
    }//GEN-LAST:event_txt_psubunitFocusGained

    private void txt_scaleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_scaleFocusGained
        String data = fdn.convertDoubleString(txt_scale.getText().trim());
        if (data.length() > 0) {
            txt_scale.setText(data);
            txt_scale.selectAll();
        } else {
            txt_scale.setText("0.000");
            txt_scale.selectAll();
        }
    }//GEN-LAST:event_txt_scaleFocusGained

    private void txt_pacostFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pacostFocusGained
        String data = fdn.convertDoubleString(txt_pacost.getText().trim());
        if (data.length() > 0) {
            txt_pacost.setText(data);
            txt_pacost.selectAll();
        } else {
            txt_pacost.setText("0.0000");
            txt_pacost.selectAll();
        }
    }//GEN-LAST:event_txt_pacostFocusGained

    private void txt_scaleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_scaleFocusLost
        String data = fdn.convertDoubleString(txt_scale.getText().trim());
        if (data.length() > 0) {
            if (fdn.isNumberic(data)) {
                double d = Double.parseDouble(data);
                txt_scale.setText(fdn.double3Fmt(d));
            } else {
                txt_scale.setText("0.000");
            }
        } else {
            txt_scale.setText("0.000");
        }
    }//GEN-LAST:event_txt_scaleFocusLost

    private void txt_pacostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_pacostFocusLost
        String data = fdn.convertDoubleString(txt_pacost.getText().trim());
        if (data.length() > 0) {
            if (fdn.isNumberic(data)) {
                double d = Double.parseDouble(data);
                txt_pacost.setText(fdn.double3Fmt(d));
            } else {
                txt_pacost.setText("0.0000");
            }
        } else {
            txt_pacost.setText("0.0000");
        }
    }//GEN-LAST:event_txt_pacostFocusLost

    private void txt_pcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pcodeKeyPressed
        String data = txt_pcode.getText().trim();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (data.length() > 0) {
                searchDataIngredent();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchProduct();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            if (data.length() > 0) {
                clearText();
            } else {
                dispose();
            }
        }
    }//GEN-LAST:event_txt_pcodeKeyPressed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        dispose();
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        clearText();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        btnSave();
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        btnDelete();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void txt_pdescKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pdescKeyPressed
        String data = txt_pdesc.getText().trim();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (data.length() <= 0) {
                msn.showMessageWarning("กรุณาระบุชื่อวัตถุดิบ");
                txt_pdesc.requestFocus();
                return;
            } else {
                txt_pgroup.requestFocus();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            clearText();
        }
    }//GEN-LAST:event_txt_pdescKeyPressed

    private void txt_pgroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pgroupKeyPressed
        String data = txt_pgroup.getText().trim();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (data.length() > 0) {
                searchDataGroup("Y");
            } else {
                msn.showMessageWarning("กรุณาระบุกลุ่มวัตถุดิบ");
                txt_pgroup.requestFocus();
                txt_groupname.setText("");
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchGroup();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_pdesc.requestFocus();
        }
    }//GEN-LAST:event_txt_pgroupKeyPressed

    private void txt_punit1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_punit1KeyPressed
        String data = txt_punit1.getText().trim();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (data.length() <= 0) {
                msn.showMessageWarning("กรุณาระบุหน่วยนับหลัก ...");
                txt_punit1.requestFocus();
                return;
            } else {
                txt_psubunit.requestFocus();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_pgroup.requestFocus();
        }
    }//GEN-LAST:event_txt_punit1KeyPressed

    private void txt_psubunitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_psubunitKeyPressed
        String data = txt_psubunit.getText().trim();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (data.length() <= 0) {
                msn.showMessageWarning("กรุณาระบุหน่วยนับย่อย ...");
                txt_psubunit.requestFocus();
                return;
            } else {
                txt_scale.requestFocus();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_punit1.requestFocus();
        }
    }//GEN-LAST:event_txt_psubunitKeyPressed

    private void txt_scaleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_scaleKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_pacost.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_psubunit.requestFocus();
        }
    }//GEN-LAST:event_txt_scaleKeyPressed

    private void txt_pacostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pacostKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_bomacc.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_scale.requestFocus();
        }
    }//GEN-LAST:event_txt_pacostKeyPressed

    private void txt_pcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pcodeKeyTyped
        if (txt_pcode.getText().length() >= 13) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_pcodeKeyTyped

    private void txt_pdescKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pdescKeyTyped
        if (txt_pdesc.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_pdescKeyTyped

    private void txt_pgroupKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pgroupKeyTyped
        if (txt_pgroup.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_pgroupKeyTyped

    private void txt_punit1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_punit1KeyTyped
        if (txt_punit1.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_punit1KeyTyped

    private void txt_psubunitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_psubunitKeyTyped
        if (txt_psubunit.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_psubunitKeyTyped

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        btn_cancelActionPerformed(null);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed
        btn_saveActionPerformed(null);
    }//GEN-LAST:event_menuSaveActionPerformed

    private void menuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteActionPerformed
        btn_deleteActionPerformed(null);
    }//GEN-LAST:event_menuDeleteActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        btn_exitActionPerformed(null);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void btn_groupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_groupActionPerformed
        btnSearchGroup();
    }//GEN-LAST:event_btn_groupActionPerformed

    private void combo_punit1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_punit1KeyPressed
        String data = combo_punit1.getSelectedItem().toString();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (data.length() <= 0) {
                msn.showMessageWarning("กรุณาระบุหน่วยนับหลัก ...");
                combo_punit1.requestFocus();
            } else {
                combo_psubunit.requestFocus();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_pgroup.requestFocus();
        }
    }//GEN-LAST:event_combo_punit1KeyPressed

    private void combo_punit1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_punit1KeyTyped
        if (combo_punit1.getSelectedItem().toString().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_combo_punit1KeyTyped

    private void combo_psubunitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_psubunitKeyPressed
        String data = combo_psubunit.getSelectedItem().toString();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (data.length() <= 0) {
                msn.showMessageWarning("กรุณาระบุหน่วยนับย่อย ...");
                combo_psubunit.requestFocus();
                return;
            } else {
                txt_scale.requestFocus();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            combo_punit1.requestFocus();
        }
    }//GEN-LAST:event_combo_psubunitKeyPressed

    private void combo_psubunitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_psubunitKeyTyped
        if (combo_psubunit.getSelectedItem().toString().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_combo_psubunitKeyTyped

    private void btn_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_importActionPerformed
        btnImport();
    }//GEN-LAST:event_btn_importActionPerformed

    private void txt_bomaccFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_bomaccFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bomaccFocusGained

    private void txt_bomaccFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_bomaccFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bomaccFocusLost

    private void txt_bomaccKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_bomaccKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_pdesc.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txt_pacost.requestFocus();
        }
    }//GEN-LAST:event_txt_bomaccKeyPressed

    private void txt_bomaccKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_bomaccKeyTyped
        if (txt_bomacc.getText().trim().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_bomaccKeyTyped

    private void btn_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_listActionPerformed
        btnListAccount();
    }//GEN-LAST:event_btn_listActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(setup_ingredent_morn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(setup_ingredent_morn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(setup_ingredent_morn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(setup_ingredent_morn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                setup_ingredent_morn dialog = new setup_ingredent_morn(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CostUpdate;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_group;
    private javax.swing.JButton btn_import;
    private javax.swing.JButton btn_list;
    private javax.swing.JButton btn_pcode;
    private javax.swing.JButton btn_save;
    private javax.swing.JCheckBox chk_account;
    private javax.swing.JComboBox combo_psubunit;
    private javax.swing.JComboBox combo_punit1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lbl_desc;
    private javax.swing.JMenuItem menuDelete;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JTextField txt_1;
    private javax.swing.JTextField txt_bomacc;
    private javax.swing.JTextField txt_groupname;
    private javax.swing.JTextField txt_pacost;
    private javax.swing.JTextField txt_pcode;
    private javax.swing.JTextField txt_pdesc;
    private javax.swing.JTextField txt_pgroup;
    private javax.swing.JTextField txt_psubunit;
    private javax.swing.JTextField txt_punit1;
    private javax.swing.JTextField txt_scale;
    // End of variables declaration//GEN-END:variables

    public void btnSearchProduct() {
        ListProductMorn f = new ListProductMorn(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            openEdit();
            txt_pcode.setText(f.code);
            searchDataIngredent();
        }
    }

    public void btnSearchGroup() {
        listGroupfile f = new listGroupfile(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txt_pgroup.setText(f.code);
            txt_groupname.setText(f.name);
        }
    }

    private void clearText() {
        lbl_desc.setText("");
        btn_cancel.setFocusable(false);
        btn_save.setFocusable(false);
        btn_delete.setFocusable(false);
        btn_list.setFocusable(false);
        btn_exit.setFocusable(false);

        txt_pcode.setText("");
        txt_pcode.setFocusable(true);
        txt_pcode.requestFocus();
        txt_pcode.setBackground(fdn.colorEnable());

        txt_pdesc.setText("");
        txt_pdesc.setFocusable(false);
        txt_pdesc.setBackground(fdn.colorDisable());

        txt_pgroup.setText("");
        txt_pgroup.setFocusable(false);
        txt_pgroup.setBackground(fdn.colorDisable());

        txt_groupname.setText("");
        txt_groupname.setFocusable(false);
        txt_groupname.setBackground(fdn.colorDisable());

        txt_punit1.setVisible(false);
        txt_punit1.setText("");
        txt_punit1.setFocusable(false);
        txt_punit1.setBackground(fdn.colorDisable());

        txt_psubunit.setVisible(false);
        txt_psubunit.setText("");
        txt_psubunit.setFocusable(false);
        txt_psubunit.setBackground(fdn.colorDisable());

        txt_1.setText("1 x");
        txt_1.setFocusable(false);
        txt_1.setBackground(fdn.colorDisable());

        txt_scale.setText("0.000");
        txt_scale.setFocusable(false);
        txt_scale.setBackground(fdn.colorDisable());

        txt_pacost.setText("0.0000");
        txt_pacost.setFocusable(false);
        txt_pacost.setBackground(fdn.colorDisable());

        combo_punit1.setEnabled(false);
        combo_psubunit.setEnabled(false);

        chk_account.setSelected(false);
        chk_account.setEnabled(false);

        txt_bomacc.setText("");
        txt_bomacc.setFocusable(false);
        txt_bomacc.setBackground(fdn.colorDisable());
        CostUpdate.setText("");
    }
    
    private void closeEdit() {
        txt_pcode.setFocusable(false);
        txt_pcode.setBackground(fdn.colorDisable());

        txt_pdesc.setFocusable(false);
        txt_pdesc.setBackground(fdn.colorDisable());

        txt_pgroup.setFocusable(false);
        txt_pgroup.setBackground(fdn.colorDisable());
        btn_group.setEnabled(false);

        txt_punit1.setFocusable(false);
        txt_punit1.setBackground(fdn.colorDisable());

        txt_psubunit.setFocusable(false);
        txt_psubunit.setBackground(fdn.colorDisable());

        txt_scale.setFocusable(false);
        txt_scale.setBackground(fdn.colorDisable());

        txt_pacost.setFocusable(false);
        txt_pacost.setBackground(fdn.colorDisable());

        txt_bomacc.setFocusable(true);
        txt_bomacc.setBackground(fdn.colorEnable());
        txt_bomacc.requestFocus();

        chk_account.setEnabled(true);

        combo_punit1.setEnabled(false);
        combo_psubunit.setEnabled(false);
        loadcombounit();
    }

    private void openEdit() {
        txt_pcode.setFocusable(false);
        txt_pcode.setBackground(fdn.colorDisable());

        txt_pdesc.setFocusable(true);
        txt_pdesc.setBackground(fdn.colorEnable());
        txt_pdesc.requestFocus();

        txt_pgroup.setFocusable(true);
        txt_pgroup.setBackground(fdn.colorEnable());

        txt_punit1.setFocusable(true);
        txt_punit1.setBackground(fdn.colorEnable());

        txt_psubunit.setFocusable(true);
        txt_psubunit.setBackground(fdn.colorEnable());

        txt_scale.setFocusable(true);
        txt_scale.setBackground(fdn.colorEnable());

        txt_pacost.setFocusable(true);
        txt_pacost.setBackground(fdn.colorEnable());

        txt_bomacc.setFocusable(true);
        txt_bomacc.setBackground(fdn.colorEnable());

        chk_account.setEnabled(true);

        combo_punit1.setEnabled(true);
        combo_psubunit.setEnabled(true);
        loadcombounit();
    }

    private void searchDataIngredent() {
//        openEdit();
//        String fix = "L";
        String pcode = txt_pcode.getText().trim();

        if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
            String sql = "select "
                    + "p.pcode, p.pdesc, p.pgroup, g.groupname, p.punit1, p.psubunit, p.pscale, p.pacost, p.fix, p.account, "
                    + "p.bomacc,p.plastupdate,p.plasttime,p.puserupdate  "
                    + "from product p "
                    + "left join groupfile g on p.pgroup=g.groupcode "
                    + "where p.pcode=?";
            try {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
//                pre.setString(2, cvth.Unicode2ASCII(fix));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    closeEdit();
                    if (cvth.ASCII2Unicode(rs.getString("p.fix")).equalsIgnoreCase("l")) {
                        lbl_desc.setText("Low Material");
                        txt_pcode.setText(cvth.ASCII2Unicode(rs.getString("p.pcode")));
                        txt_pdesc.setText(cvth.ASCII2Unicode(rs.getString("p.pdesc")));
                        txt_pgroup.setText(cvth.ASCII2Unicode(rs.getString("p.pgroup")));
                        txt_groupname.setText(cvth.ASCII2Unicode(rs.getString("g.groupname")));
//                        txt_punit1.setText(cvth.ASCII2Unicode(rs.getString("p.punit1")));
//                        txt_psubunit.setText(cvth.ASCII2Unicode(rs.getString("p.psubunit")));
                        combo_punit1.setSelectedItem(cvth.ASCII2Unicode(rs.getString("p.punit1")));
                        combo_psubunit.setSelectedItem(cvth.ASCII2Unicode(rs.getString("p.psubunit")));
                        txt_scale.setText(fdn.double3Fmt(rs.getDouble("p.pscale")));
                        txt_pacost.setText(fdn.double3Fmt(rs.getDouble("p.pacost")));
                        txt_bomacc.setText(cvth.ASCII2Unicode(rs.getString("p.bomacc")));
                        if (!cvth.ASCII2Unicode(rs.getString("p.account")).equals("N")) {
                            chk_account.setSelected(true);
                        } else {
                            chk_account.setSelected(false);
                        }
                        cost = rs.getDouble("p.pacost");
                        CostUpdate.setText("Last Update " + fdn.dateFmtShow(rs.getDate("plastupdate")) + " " + rs.getString("plasttime") + " User " + rs.getString("puserupdate"));
                        
                    } else {
                        lbl_desc.setText("Finished goods");
//                        msn.showMessageWarning("รหัสวัตถุดิบรหัสนี้ " + pcode + " ไม่สามารถใช้ได้ กรุณาตรวจสอบ ...");
//                        clearText();
//                        txt_pcode.setText(pcode);
//                        txt_pcode.selectAll();
                        txt_pcode.setText(cvth.ASCII2Unicode(rs.getString("p.pcode")));
                        txt_pdesc.setText(cvth.ASCII2Unicode(rs.getString("p.pdesc")));
                        txt_pgroup.setText(cvth.ASCII2Unicode(rs.getString("p.pgroup")));
                        txt_groupname.setText(cvth.ASCII2Unicode(rs.getString("g.groupname")));
//                        txt_punit1.setText(cvth.ASCII2Unicode(rs.getString("p.punit1")));
//                        txt_psubunit.setText(cvth.ASCII2Unicode(rs.getString("p.psubunit")));
                        combo_punit1.setSelectedItem(cvth.ASCII2Unicode(rs.getString("p.punit1")));
                        combo_psubunit.setSelectedItem(cvth.ASCII2Unicode(rs.getString("p.psubunit")));
                        txt_scale.setText(fdn.double3Fmt(rs.getDouble("p.pscale")));
                        txt_pacost.setText(fdn.double3Fmt(rs.getDouble("p.pacost")));
                        txt_bomacc.setText(cvth.ASCII2Unicode(rs.getString("p.bomacc")));
                        if (!cvth.ASCII2Unicode(rs.getString("p.account")).equals("N")) {
                            chk_account.setSelected(true);
                        } else {
                            chk_account.setSelected(false);
                        }
                        cost = rs.getDouble("p.pacost");
                        CostUpdate.setText("Last Update " + fdn.dateFmtShow(rs.getDate("plastupdate")) + " " + rs.getString("plasttime") + " User " + rs.getString("puserupdate"));
                        
                    }
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } catch (Exception e) {
                msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                e.printStackTrace();
                return;
            }
        } else {
            String sql = "select "
                    + "p.pcode, p.pdesc, p.pgroup, g.groupname, p.punit1, p.psubunit, p.pscale, p.pacost, p.fix, p.account, "
                    + "p.bomacc, p.plastupdate,p.plasttime,p.puserupdate  "
                    + "from product p "
                    + "left join groupfile g on p.pgroup=g.groupcode "
                    + "where p.pcode=?";
            try {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, (pcode));
//                pre.setString(2, cvth.Unicode2ASCII(fix));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    if ((rs.getString("p.fix")).equalsIgnoreCase("l")) {
                        lbl_desc.setText("Low Material");
                        txt_pcode.setText((rs.getString("p.pcode")));
                        txt_pdesc.setText((rs.getString("p.pdesc")));
                        txt_pgroup.setText((rs.getString("p.pgroup")));
                        txt_groupname.setText((rs.getString("g.groupname")));
                        txt_punit1.setText((rs.getString("p.punit1")));
                        txt_psubunit.setText((rs.getString("p.psubunit")));
                        txt_scale.setText(fdn.double3Fmt(rs.getDouble("p.pscale")));
                        txt_pacost.setText(fdn.double3Fmt(rs.getDouble("p.pacost")));
                        txt_bomacc.setText((rs.getString("p.bomacc")));
                        if (!rs.getString("p.account").equals("N")) {
                            chk_account.setSelected(true);
                        } else {
                            chk_account.setSelected(false);
                        }
                        cost = rs.getDouble("p.pacost");
                        CostUpdate.setText("Last Update " + fdn.dateFmtShow(rs.getDate("plastupdate")) + " " + rs.getString("plasttime") + " User " + rs.getString("puserupdate"));
                        closeEdit();
                    } else {
                        lbl_desc.setText("Finished goods");
//                        msn.showMessageWarning("รหัสวัตถุดิบรหัสนี้ " + pcode + " ไม่สามารถใช้ได้ กรุณาตรวจสอบ ...");
//                        clearText();
//                        txt_pcode.setText(pcode);
//                        txt_pcode.selectAll();
                        txt_pcode.setText((rs.getString("p.pcode")));
                        txt_pdesc.setText((rs.getString("p.pdesc")));
                        txt_pgroup.setText((rs.getString("p.pgroup")));
                        txt_groupname.setText((rs.getString("g.groupname")));
                        txt_punit1.setText((rs.getString("p.punit1")));
                        txt_psubunit.setText((rs.getString("p.psubunit")));
                        txt_scale.setText(fdn.double3Fmt(rs.getDouble("p.pscale")));
                        txt_pacost.setText(fdn.double3Fmt(rs.getDouble("p.pacost")));
                        txt_bomacc.setText((rs.getString("p.bomacc")));
                        if (!rs.getString("p.account").equals("N")) {
                            chk_account.setSelected(true);
                        } else {
                            chk_account.setSelected(false);
                        }
                        cost = rs.getDouble("p.pacost");
                        CostUpdate.setText("Last Update " + fdn.dateFmtShow(rs.getDate("plastupdate")) + " " + rs.getString("plasttime") + " User " + rs.getString("puserupdate"));
                        closeEdit();
                    }
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } catch (Exception e) {
                msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                e.printStackTrace();
                return;
            }
        }
    }

    private void btnSave() {
        String pcode = txt_pcode.getText().trim();
        String pdesc = txt_pdesc.getText();
        String pgroup = txt_pgroup.getText().trim();
//        String punit1 = txt_punit1.getText();
//        String psubunit = txt_psubunit.getText();
        String punit1 = combo_punit1.getSelectedItem().toString();
        String psubunit = combo_psubunit.getSelectedItem().toString();
        String fix = "L";
        Double pscale = Double.parseDouble(fdn.convertDoubleString(txt_scale.getText().trim()));
        Double pacost = Double.parseDouble(fdn.convertDoubleString(txt_pacost.getText().trim()));
        String plastupdate = fdn.dateFmtSQL(fdn.nowDate());
        String plasttime = fdn.timeFmt(fdn.nowDate());
        String account = "N";
        String bomacc = txt_bomacc.getText().trim();

        if (chk_account.isSelected()) {
            account = "Y";
        }

        if (pcode.length() <= 0) {
            msn.showMessageWarning("กรุณาระบุรหัสวัตถุดิบ ...");
            clearText();
            return;
        }
        if (pdesc.length() <= 0) {
            msn.showMessageWarning("กรุณาระบุชื่อวัตถุดิบ ...");
            txt_pdesc.requestFocus();
            return;
        }
//        if (pgroup.length() <= 0) {
//            msn.showMessageWarning("กรุณาระบุกลุ่มสินค้า ...");
//            txt_pgroup.requestFocus();
//            return;
//        } else {
//            if (!searchDataGroup("N")) {
//                return;
//            }
//        }
//        if (punit1.length() <= 0) {
//            msn.showMessageWarning("กรุณาระบุหน่วยหลักของวัตถุดิบ ...");
////            txt_punit1.requestFocus();
//            combo_punit1.requestFocus();
//            return;
//        }
//        if (psubunit.length() <= 0) {
//            msn.showMessageWarning("กรุณาระบุหน่วยย่อยของวัตถุดิบ ...");
////            txt_psubunit.requestFocus();
//            combo_psubunit.requestFocus();
//            return;
//        }
//        if (txt_scale.getText().trim().length() <= 0) {
//            msn.showMessageWarning("กรุณาระบุอัตราส่วนต่อหน่วยนับหลัก ...");
//            txt_scale.requestFocus();
//            return;
//        } else {
//            if (pscale <= 0) {
//                msn.showMessageWarning("กรุณาระบุอัตราส่วนต่อหน่วยนับหลัก ให้มีค่ามากกว่าหรือเท่ากับ 1 ...");
//                txt_scale.requestFocus();
//                return;
//            }
//        }
//
//        if (txt_pacost.getText().trim().length() <= 0) {
//            msn.showMessageWarning("กรุณาระบุต้นทุนเฉลี่ย อย่างน้อย 0 ...");
//            txt_pacost.requestFocus();
//            return;
//        }

        if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
            try {
                String seekPcode = "select pcode,fix from product where pcode=?";
                PreparedStatement pre = dbUtility.con.prepareStatement(seekPcode);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
//            pre.setString(2, cvth.Unicode2ASCII(fix));
                UserLogin userrec = UserLogin.userlogin;
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
//                    if (cvth.ASCII2Unicode(rs.getString("fix")).equalsIgnoreCase("l")) {
                        String updPLU = "update product set "
                                + "plastupdate=?,"
                                + "plasttime=?, account=?,  bomacc=? ,puserupdate=? "
                                + "where pcode=?";
                        PreparedStatement preUpd = dbUtility.con.prepareStatement(updPLU);
                        preUpd.setString(1, cvth.Unicode2ASCII(plastupdate));
                        preUpd.setString(2, cvth.Unicode2ASCII(plasttime));
                        preUpd.setString(3, cvth.Unicode2ASCII(account));
                        preUpd.setString(4, cvth.Unicode2ASCII(bomacc));
                        preUpd.setString(5, cvth.Unicode2ASCII(userrec.getUserName()));
                        preUpd.setString(6, cvth.Unicode2ASCII(pcode));
                        preUpd.executeUpdate();
                        preUpd.close();
                        preUpd = null;
                        msn.showMessageInformation("บันทึกข้อมูลเรียบร้อยแล้ว ...");
//                    } else {
//                        msn.showMessageWarning("รหัส " + pcode + " นี้ ไม่สามารถบันทึกสร้างเป็นวัตถุดิบได้ กรุณาตรวจสอบ ...");
//                    }
                } else {
                    msn.showMessageWarning("รหัส " + pcode + " นี้ ไม่สามารถบันทึกสร้างเป็นวัตถุดิบได้ กรุณาตรวจสอบ ...");
//                    String insPLU = "insert into product("
//                            + "pcode,       pdesc,      pgroup,     punit1,"
//                            + "psubunit,    pscale,     pacost,     fix,"
//                            + "plastupdate, plasttime,  account,    bomacc ,puserupdate) values("
//                            + "?,?,?,?,?,?,?,?,?,?,?,?,?)";
//                    PreparedStatement preIns = dbUtility.con.prepareStatement(insPLU);
//                    preIns.setString(1, cvth.Unicode2ASCII(pcode));
//                    preIns.setString(2, cvth.Unicode2ASCII(pdesc));
//                    preIns.setString(3, cvth.Unicode2ASCII(pgroup));
//                    preIns.setString(4, cvth.Unicode2ASCII(punit1));
//                    preIns.setString(5, cvth.Unicode2ASCII(psubunit));
//                    preIns.setDouble(6, pscale);
//                    preIns.setDouble(7, pacost);
//                    preIns.setString(8, cvth.Unicode2ASCII(fix));
//                    preIns.setString(9, cvth.Unicode2ASCII(plastupdate));
//                    preIns.setString(10, cvth.Unicode2ASCII(plasttime));
//                    preIns.setString(11, cvth.Unicode2ASCII(account));
//                    preIns.setString(12, cvth.Unicode2ASCII(bomacc));
//                    preIns.setString(13, cvth.Unicode2ASCII(userrec.getUserName()));
//                    preIns.executeUpdate();
//                    preIns.close();
//                    preIns = null;
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } catch (Exception e) {
                msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                e.printStackTrace();
                return;
            }
        } else {
            try {
                String seekPcode = "select pcode from product where pcode=?";
                PreparedStatement pre = dbUtility.con.prepareStatement(seekPcode);
                pre.setString(1, pcode);
//            pre.setString(2, cvth.Unicode2ASCII(fix));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
//                    if (rs.getString("p.fix").equalsIgnoreCase("l")) {
                        String updPLU = "update product set "
                                + "plastupdate=?,"
                                + "plasttime=?, account=?,  bomacc=? "
                                + "where pcode=?";
                        PreparedStatement preUpd = dbUtility.con.prepareStatement(updPLU);
                        preUpd.setString(1, (plastupdate));
                        preUpd.setString(2, (plasttime));
                        preUpd.setString(3, (account));
                        preUpd.setString(4, (bomacc));
                        preUpd.setString(5, (pcode));
                        preUpd.executeUpdate();
                        preUpd.close();
                        preUpd = null;
                        msn.showMessageInformation("บันทึกข้อมูลเรียบร้อยแล้ว ...");
//                    } else {
//                        msn.showMessageWarning("รหัส " + pcode + " นี้ ไม่สามารถบันทึกสร้างเป็นวัตถุดิบได้ กรุณาตรวจสอบ ...");
//                    }
                } else {
                    msn.showMessageWarning("รหัส " + pcode + " นี้ ไม่สามารถบันทึกสร้างเป็นวัตถุดิบได้ กรุณาตรวจสอบ ...");
//                    String insPLU = "insert into product("
//                            + "pcode,       pdesc,      pgroup,     punit1,"
//                            + "psubunit,    pscale,     pacost,     fix,"
//                            + "plastupdate, plasttime,  account,    bomacc) values("
//                            + "?,?,?,?,?,?,?,?,?,?,?,?)";
//                    PreparedStatement preIns = dbUtility.con.prepareStatement(insPLU);
//                    preIns.setString(1, (pcode));
//                    preIns.setString(2, (pdesc));
//                    preIns.setString(3, (pgroup));
//                    preIns.setString(4, (punit1));
//                    preIns.setString(5, (psubunit));
//                    preIns.setDouble(6, pscale);
//                    preIns.setDouble(7, pacost);
//                    preIns.setString(8, (fix));
//                    preIns.setString(9, (plastupdate));
//                    preIns.setString(10, (plasttime));
//                    preIns.setString(11, (account));
//                    preIns.setString(12, (bomacc));
//                    preIns.executeUpdate();
//                    preIns.close();
//                    preIns = null;
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } catch (Exception e) {
                msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                e.printStackTrace();
                return;
            }
        }
//        if (cost != pacost) {
//            fdn.updateIngredent(pcode);
//        }
        clearText();
    }

    private void btnDelete() {
        String pcode = txt_pcode.getText().trim();
        String fix = "L";
        boolean delete = false;

        if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
            String seekPlcode = "select pcode from posbom where plcode=?";
            try {
                PreparedStatement pre = dbUtility.con.prepareStatement(seekPlcode);
                pre.setString(1, cvth.Unicode2ASCII(pcode));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    msn.showMessageWarning("<html>ไม่สามารถลบรหัสวัตถุดิบนี้ได้(" + pcode + ") เนื่องจาก<br>"
                            + "รหัสวัตถุดิบนี้ เป็นส่วนประกอบของรายการอาหารรหัสนี้ " + rs.getString("pcode") + " อยู่ กรุณาตรวจสอบ ...</html>");
                } else {
                    delete = true;
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } catch (Exception e) {
                msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                e.printStackTrace();
                return;
            }
        } else {
            String seekPlcode = "select pcode from posbom where plcode=?";
            try {
                PreparedStatement pre = dbUtility.con.prepareStatement(seekPlcode);
                pre.setString(1, (pcode));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    msn.showMessageWarning("<html>ไม่สามารถลบรหัสวัตถุดิบนี้ได้(" + pcode + ") เนื่องจาก<br>"
                            + "รหัสวัตถุดิบนี้ เป็นส่วนประกอบของรายการอาหารรหัสนี้ " + rs.getString("pcode") + " อยู่ กรุณาตรวจสอบ ...</html>");
                } else {
                    delete = true;
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } catch (Exception e) {
                msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                e.printStackTrace();
                return;
            }
        }

        if (delete) {
            int confirm = msn.showMessageConfirm("Yes", "No", "คุณต้องการลบรหัสวัตถุดิบนี้ (" + pcode + ") ใช่หรือไม่ ...?");
            if (confirm != 0) {
                return;
            }

            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                String delPlcode = "delete from product where pcode=? and fix=?";
                try {
                    PreparedStatement preDel = dbUtility.con.prepareStatement(delPlcode);
                    preDel.setString(1, cvth.Unicode2ASCII(pcode));
                    preDel.setString(2, cvth.Unicode2ASCII(fix));
                    preDel.executeUpdate();
                    preDel.close();
                    preDel = null;
                    msn.showMessageInformation("รหัสวัตถุดิบ ถูกลบเรียบร้อยแล้ว ...");
                    clearText();
                } catch (Exception e) {
                    msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                    e.printStackTrace();
                    return;
                }

            } else {
                String delPlcode = "delete from product where pcode=? and fix=?";
                try {
                    PreparedStatement preDel = dbUtility.con.prepareStatement(delPlcode);
                    preDel.setString(1, (pcode));
                    preDel.setString(2, (fix));
                    preDel.executeUpdate();
                    preDel.close();
                    preDel = null;
                    msn.showMessageInformation("รหัสวัตถุดิบ ถูกลบเรียบร้อยแล้ว ...");
                    clearText();
                } catch (Exception e) {
                    msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                    e.printStackTrace();
                    return;
                }
            }
        }
    }

    private boolean searchDataGroup(String flage) {
        boolean have = false;
        String groupcode = txt_pgroup.getText().trim();
        String sql = "select groupname, groupcode "
                + "from groupfile "
                + "where groupcode=?";

        if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

            try {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(groupcode));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    have = true;
                    if (flage.equals("Y")) {
                        txt_pgroup.setText(cvth.ASCII2Unicode(rs.getString("groupcode")));
                        txt_groupname.setText(cvth.ASCII2Unicode(rs.getString("groupname")));
//                        txt_punit1.requestFocus();
                        combo_punit1.requestFocus();
                    }
                } else {
                    have = false;
                    msn.showMessageWarning("ไม่พบรหัสกลุ่ม " + groupcode + " นี้ ... กรุณาตรวจสอบ");
                    txt_pgroup.requestFocus();
                    txt_pgroup.selectAll();
                    txt_groupname.setText("");
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } catch (Exception e) {
                msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                e.printStackTrace();
                return false;
            }
        } else {
            try {
                PreparedStatement pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, (groupcode));
                ResultSet rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    have = true;
                    if (flage.equals("Y")) {
                        txt_pgroup.setText((rs.getString("groupcode")));
                        txt_groupname.setText((rs.getString("groupname")));
                        txt_punit1.requestFocus();
                    }
                } else {
                    have = false;
                    msn.showMessageWarning("ไม่พบรหัสกลุ่ม " + groupcode + " นี้ ... กรุณาตรวจสอบ");
                    txt_pgroup.requestFocus();
                    txt_pgroup.selectAll();
                    txt_groupname.setText("");
                }
                rs.close();
                pre.close();
                rs = null;
                pre = null;
            } catch (Exception e) {
                msn.showMessageError("<html>เกิดข้อผิดพลาดบางประการ<br>" + e + "</html>");
                e.printStackTrace();
                return false;
            }
        }
        return have;
    }

    private void loadcombounit() {
        combo_punit1.removeAllItems();
        combo_psubunit.removeAllItems();
        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
            try {
                String sql = "select *from unitfile order by unitname";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    combo_punit1.addItem(cvth.ASCII2Unicode(rs.getString("unitname")));
                    combo_psubunit.addItem(cvth.ASCII2Unicode(rs.getString("unitname")));
                }
            } catch (SQLException ex) {
            }
        } else {
            try {
                String sql = "select *from unitfile order by unitname";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    combo_punit1.addItem(rs.getString("unitname"));
                    combo_psubunit.addItem(rs.getString("unitname"));
                }
            } catch (SQLException ex) {
            }
        }

    }

    private void btnImport() {
        import_ingredent frm = new import_ingredent(null, true);
        frm.setVisible(true);
    }

    private void btnListAccount() {
        report_bom_acc_morn frm = new report_bom_acc_morn(null, true);
        frm.setVisible(true);
        
    }
}
