/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ingredent_bom_other;

import dbutility.dbUtility;
import frmlist.listGroupfile;
import ingredent_bom.formatDateNumber;
import ingredent_bom.showMessage;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import masterfile.NimbusFrame;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import report.Report;
import utilititiesfunction.Export2Excel;
import utilititiesfunction.ThaiUtilities;

/**
 *
 * @author user
 */
public class report_bom_acc_morn extends javax.swing.JDialog {

    /**
     * Creates new form report_bom_acc_morn
     */
    ThaiUtilities cvth = new ThaiUtilities();
    dbUtility db = new dbUtility();
    formatDateNumber f = new formatDateNumber();
    showMessage msn = new showMessage();
    //==========================================================================
    PreparedStatement pre = null;
    ResultSet rs = null;

    public report_bom_acc_morn(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        db.dbconnect();
        setTable1();
        clearAll();

        chk_acc.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_group1 = new javax.swing.JTextField();
        skbtn_group1 = new javax.swing.JButton();
        skbtn_group2 = new javax.swing.JButton();
        txt_group2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        chk_acc = new javax.swing.JCheckBox();
        chk_bom = new javax.swing.JCheckBox();
        btn_process = new javax.swing.JButton();
        skbtn_exit = new javax.swing.JButton();
        btn_excel = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        btn_csv = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txt_rec = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "กำหนดช่วงกลุ่ม", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Norasi", 0, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_group1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_group1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_group1.setText("txt_group1");
        txt_group1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_group1KeyPressed(evt);
            }
        });
        jPanel2.add(txt_group1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 70, 30));

        skbtn_group1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        skbtn_group1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        skbtn_group1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skbtn_group1ActionPerformed(evt);
            }
        });
        jPanel2.add(skbtn_group1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 35, 30));

        skbtn_group2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        skbtn_group2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        skbtn_group2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skbtn_group2ActionPerformed(evt);
            }
        });
        jPanel2.add(skbtn_group2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 35, 30));

        txt_group2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_group2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_group2.setText("txt_group2");
        txt_group2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_group2KeyPressed(evt);
            }
        });
        jPanel2.add(txt_group2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 70, 30));

        jLabel1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ถึง");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 40, 30, 30));

        chk_acc.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        chk_acc.setText("แสดงสำหรับบัญชี");

        chk_bom.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        chk_bom.setText("แสดงที่สร้าง BOM Acc");

        btn_process.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_process.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hourglass-icon.png"))); // NOI18N
        btn_process.setText("ประมวลผล");
        btn_process.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_process.setIconTextGap(0);
        btn_process.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_processActionPerformed(evt);
            }
        });

        skbtn_exit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        skbtn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Close-Program-icon .png"))); // NOI18N
        skbtn_exit.setText("Exit");
        skbtn_exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        skbtn_exit.setIconTextGap(0);
        skbtn_exit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        skbtn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skbtn_exitActionPerformed(evt);
            }
        });

        btn_excel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_excel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        btn_excel.setText("Excel");
        btn_excel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_excel.setIconTextGap(0);
        btn_excel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excelActionPerformed(evt);
            }
        });

        btn_print.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        btn_print.setText("พิมพ์");
        btn_print.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_print.setIconTextGap(0);
        btn_print.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });

        btn_csv.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_csv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Action-arrow-blue-double-up-icon.png"))); // NOI18N
        btn_csv.setText("CSV");
        btn_csv.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_csv.setIconTextGap(0);
        btn_csv.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_csvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chk_acc, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chk_bom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_process, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(btn_csv, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_excel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skbtn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_csv, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_excel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(skbtn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(chk_bom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chk_acc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btn_process, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txt_rec.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_rec.setText("txt_rec");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(txt_rec, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_rec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        tbltable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "รหัสสินค้า", "ชื่อสินค้า / รายการ", "กลุ่มสินค้า", "หน่วยนับหลัก", "หน่วยย่อย", "อัตราส่วน/หน่วยนับหลัก", "ต้นทุนเฉลี่ย", "BOMAcc", "สำหรับบัญชี", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbltable1);
        if (tbltable1.getColumnModel().getColumnCount() > 0) {
            tbltable1.getColumnModel().getColumn(0).setPreferredWidth(140);
            tbltable1.getColumnModel().getColumn(1).setPreferredWidth(300);
            tbltable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            tbltable1.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbltable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            tbltable1.getColumnModel().getColumn(5).setPreferredWidth(120);
            tbltable1.getColumnModel().getColumn(6).setPreferredWidth(100);
            tbltable1.getColumnModel().getColumn(7).setPreferredWidth(200);
            tbltable1.getColumnModel().getColumn(8).setPreferredWidth(80);
            tbltable1.getColumnModel().getColumn(9).setPreferredWidth(60);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_processActionPerformed
        loadData();
    }//GEN-LAST:event_btn_processActionPerformed

    private void skbtn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skbtn_exitActionPerformed
        dispose();
    }//GEN-LAST:event_skbtn_exitActionPerformed

    private void skbtn_group1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skbtn_group1ActionPerformed
        btnGroup1();
    }//GEN-LAST:event_skbtn_group1ActionPerformed

    private void txt_group1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_group1KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txt_group2.requestFocus();
        } else if (evt.getKeyCode() == evt.VK_F1) {
            btnGroup1();
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            dispose();
        } else if (evt.getKeyCode() == evt.VK_F5) {
            btn_processActionPerformed(null);
        }
    }//GEN-LAST:event_txt_group1KeyPressed

    private void txt_group2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_group2KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txt_group1.requestFocus();
        } else if (evt.getKeyCode() == evt.VK_F1) {
            btnGroup2();
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txt_group1.requestFocus();
        } else if (evt.getKeyCode() == evt.VK_F5) {
            btn_processActionPerformed(null);
        }
    }//GEN-LAST:event_txt_group2KeyPressed

    private void btn_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excelActionPerformed
        btnExcel();
    }//GEN-LAST:event_btn_excelActionPerformed

    private void skbtn_group2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skbtn_group2ActionPerformed
        btnGroup2();
    }//GEN-LAST:event_skbtn_group2ActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        btnPrint();
    }//GEN-LAST:event_btn_printActionPerformed

    private void btn_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_csvActionPerformed
        btnExportFile();
    }//GEN-LAST:event_btn_csvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(report_bom_acc_morn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(report_bom_acc_morn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(report_bom_acc_morn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(report_bom_acc_morn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                report_bom_acc_morn dialog = new report_bom_acc_morn(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_csv;
    private javax.swing.JButton btn_excel;
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_process;
    private javax.swing.JCheckBox chk_acc;
    private javax.swing.JCheckBox chk_bom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton skbtn_exit;
    private javax.swing.JButton skbtn_group1;
    private javax.swing.JButton skbtn_group2;
    private javax.swing.JTable tbltable1;
    private javax.swing.JTextField txt_group1;
    private javax.swing.JTextField txt_group2;
    private javax.swing.JTextField txt_rec;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel model1;

    private void setTable1() {

        model1 = (DefaultTableModel) tbltable1.getModel();
        tbltable1.setShowGrid(true);
        tbltable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbltable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbltable1.setRowSelectionAllowed(true);
        tbltable1.setBackground(java.awt.Color.WHITE);
        tbltable1.setGridColor(java.awt.Color.gray);
        tbltable1.setRowHeight(24);
        tbltable1.setFont(new Font("Norasi", Font.PLAIN, 14));
        JTableHeader tHeader = tbltable1.getTableHeader();
        tHeader.setFont(new Font("Norasi", Font.BOLD, 14));
        DefaultTableCellRenderer l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);
        DefaultTableCellRenderer r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);

        TableColumnModel tcm = tbltable1.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(c);
        tcm.getColumn(3).setCellRenderer(l);
        tcm.getColumn(4).setCellRenderer(l);
        tcm.getColumn(5).setCellRenderer(r);
        tcm.getColumn(6).setCellRenderer(r);
        tcm.getColumn(7).setCellRenderer(l);
        tcm.getColumn(8).setCellRenderer(c);
        tcm.getColumn(9).setCellRenderer(c);
    }

    private void clearTable1() {
        int size = tbltable1.getRowCount();
        for (int i = 0; i < size; i++) {
            model1.removeRow(0);
        }
    }

    private void clearAll() {
        clearTable1();
        txt_group1.setText("");
        txt_group1.setFocusable(true);
        txt_group1.requestFocus();
        skbtn_group1.setFocusable(false);

        txt_group2.setText("");
        txt_group2.setFocusable(true);
        skbtn_group2.setFocusable(false);

        chk_bom.setFocusable(false);
        chk_acc.setFocusable(false);

        btn_process.setFocusable(false);
        btn_print.setFocusable(false);
        btn_excel.setFocusable(false);
        skbtn_exit.setFocusable(false);

        txt_rec.setText("");
        txt_rec.setFocusable(false);
        txt_rec.setBackground(f.colorDisable());
    }

    private void loadData() {
        clearTable1();

        int count = 0;
        boolean bomacc = chk_bom.isSelected();
        String group1 = txt_group1.getText().trim();
        String group2 = txt_group2.getText().trim();
        if (group2.length() <= 0) {
            group2 = "ZZZZZ";
        }
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                String sql = "SELECT "
                        + "p.pcode,     p.pdesc,    p.pgroup,   p.punit1,   p.psubunit, "
                        + "p.pscale,    p.pacost,   p.bomacc,   p.account,  p.fix,"
                        + "g.groupname "
                        + "FROM product p "
                        + "left join groupfile g on p.pgroup=g.groupcode "
                        + "where (pgroup>=? and pgroup<=?) "
                        + "and pactive='Y' and account='Y' ";
                if (bomacc) {
                    sql = sql + "and length(p.bomacc)>0 ";
                }
                sql = sql + "order by pgroup, pcode";

                pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(group1));
                pre.setString(2, cvth.Unicode2ASCII(group2));
                rs = pre.executeQuery();
                rs.first();
                System.out.println("" + pre.toString());
                if (rs.getRow() != 0) {
                    do {
                        model1.addRow(new Object[]{
                                    cvth.ASCII2Unicode(rs.getString("pcode")),
                                    cvth.ASCII2Unicode(rs.getString("pdesc")),
                                    cvth.ASCII2Unicode(rs.getString("pgroup")),
                                    cvth.ASCII2Unicode(rs.getString("punit1")),
                                    cvth.ASCII2Unicode(rs.getString("psubunit")),
                                    f.double3Fmt(rs.getDouble("pscale")),
                                    f.double4FmtShow(rs.getDouble("pacost")),
                                    cvth.ASCII2Unicode(rs.getString("bomacc")),
                                    cvth.ASCII2Unicode(rs.getString("account")),
                                    cvth.ASCII2Unicode(rs.getString("fix"))
                                });
                        count++;
                    } while (rs.next());
                }

                txt_rec.setText(count + " รายการ");
            } else {
                String sql = "SELECT "
                        + "p.pcode,     p.pdesc,    p.pgroup,   p.punit1,   p.psubunit, "
                        + "p.pscale,    p.pacost,   p.bomacc,   p.account,  p.fix,"
                        + "g.groupname "
                        + "FROM product p "
                        + "left join groupfile g on p.pgroup=g.groupcode "
                        + "where (pgroup>=? and pgroup<=?) "
                        + "and pactive='Y' and account='Y' ";
                if (bomacc) {
                    sql = sql + "and length(p.bomacc)>0 ";
                }
                sql = sql + "order by pgroup, pcode";

                pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, group1);
                pre.setString(2, group2);
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        model1.addRow(new Object[]{
                                    rs.getString("pcode"),
                                    rs.getString("pdesc"),
                                    rs.getString("pgroup"),
                                    rs.getString("punit1"),
                                    rs.getString("psubunit"),
                                    f.double3Fmt(rs.getDouble("pscale")),
                                    f.double4FmtShow(rs.getDouble("pacost")),
                                    rs.getString("bomacc"),
                                    rs.getString("account"),
                                    rs.getString("fix")
                                });
                        count++;
                    } while (rs.next());
                }

                txt_rec.setText(count + " รายการ");
            }

        } catch (Exception e) {
            msn.showMessageError(e.getMessage());
            dispose();
        } finally {
            try {
                if (pre != null) {
                    pre.close();
                    pre = null;
                }
                if (rs != null) {
                    rs.close();
                    rs = null;
                }
            } catch (Exception e) {
            }
        }
    }

    private void btnGroup1() {
        listGroupfile f = new listGroupfile(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txt_group1.setText(f.code);
            txt_group1.requestFocus();
        }
    }

    private void btnGroup2() {
        listGroupfile f = new listGroupfile(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txt_group2.setText(f.code);
            txt_group2.requestFocus();
        }
    }

    private void btnExcel() {
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        File file;

        String alert_save = "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?";
        String condition = "";
        try {
            file = new File(new File("excel.xls").getCanonicalPath());

            chooser.setSelectedFile(file);
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));



            int confirm2 = chooser.showSaveDialog(this);
            if (confirm2 == JFileChooser.APPROVE_OPTION) {


                File curFile = chooser.getSelectedFile();

                if (curFile.exists()) {
                    int confirm = JOptionPane.showConfirmDialog(this, alert_save, "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.NO_OPTION) {
                        return;

                    }
                    try {
                        test.setOutputFile(curFile.toString());
                        test.writetableNoSumNoHead(tbltable1, tbltable1.getColumnModel(), condition);
                    } catch (IOException ex) {
                    } catch (WriteException ex) {
                    }
                } else {
                    try {
                        test.setOutputFile(curFile.toString());
                        test.writetableNoSumNoHead(tbltable1, tbltable1.getColumnModel(), condition);
                    } catch (IOException ex) {
                    } catch (WriteException ex) {
                    }
                }
            }



        } catch (IOException e) {
        }
    }

    private void btnPrint() {
        Report r = new Report();
        Map map = new HashMap();
        String filename = "bommorn";

        int count = 0;
        boolean bomacc = chk_bom.isSelected();
        String group1 = txt_group1.getText().trim();
        String group2 = txt_group2.getText().trim();
        if (group2.length() <= 0) {
            group2 = "ZZZZZ";
        }
//        if (bomacc) {
//            filename = "bommorn_chk";
//        } else {
//            filename = "bommorn";
//        }

        new bommornFactory();
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                String sql = "SELECT "
                        + "p.pcode,     p.pdesc,    p.pgroup,   p.punit1,   p.psubunit, "
                        + "p.pscale,    p.pacost,   p.bomacc,   p.account,  p.fix,"
                        + "g.groupname "
                        + "FROM product p "
                        + "left join groupfile g on p.pgroup=g.groupcode "
                        + "where (pgroup>=? and pgroup<=?) "
                        + "and pactive='Y' and account='Y' ";
                if (bomacc) {
                    sql = sql + "and length(p.bomacc)>0 ";
                }
                sql = sql + "order by pgroup, pcode";

                pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, cvth.Unicode2ASCII(group1));
                pre.setString(2, cvth.Unicode2ASCII(group2));
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        new bommornFactory(
                                cvth.ASCII2Unicode(rs.getString("pcode")), 
                                cvth.ASCII2Unicode(rs.getString("pdesc")), 
                                cvth.ASCII2Unicode(rs.getString("pgroup")), 
                                cvth.ASCII2Unicode(rs.getString("g.groupname")), 
                                cvth.ASCII2Unicode(rs.getString("punit1")), 
                                cvth.ASCII2Unicode(rs.getString("psubunit")), 
                                rs.getDouble("pscale"), 
                                rs.getDouble("pacost"), 
                                cvth.ASCII2Unicode(rs.getString("bomacc")), 
                                cvth.ASCII2Unicode(rs.getString("account")), 
                                cvth.ASCII2Unicode(rs.getString("fix")));
                        count++;
                    } while (rs.next());
                }
            } else {
                String sql = "SELECT "
                        + "p.pcode,     p.pdesc,    p.pgroup,   p.punit1,   p.psubunit, "
                        + "p.pscale,    p.pacost,   p.bomacc,   p.account,  p.fix,"
                        + "g.groupname "
                        + "FROM product p "
                        + "left join groupfile g on p.pgroup=g.groupcode "
                        + "where (pgroup>=? and pgroup<=?) "
                        + "and pactive='Y' and account='Y' ";
                if (bomacc) {
                    sql = sql + "and length(p.bomacc)>0 ";
                }
                sql = sql + "order by pgroup, pcode";

                pre = dbUtility.con.prepareStatement(sql);
                pre.setString(1, group1);
                pre.setString(2, group2);
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    do {
                        new bommornFactory(
                                rs.getString("pcode"), 
                                rs.getString("pdesc"), 
                                rs.getString("pgroup"), 
                                rs.getString("g.groupname"), 
                                rs.getString("punit1"), 
                                rs.getString("psubunit"), 
                                rs.getDouble("pscale"), 
                                rs.getDouble("pacost"), 
                                rs.getString("bomacc"), 
                                rs.getString("account"), 
                                rs.getString("fix"));
                        count++;
                    } while (rs.next());
                }

                txt_rec.setText(count + " รายการ");
            }

        } catch (Exception e) {
            msn.showMessageError(e.getMessage());
            dispose();
        } finally {
            try {
                if (pre != null) {
                    pre.close();
                    pre = null;
                }
                if (rs != null) {
                    rs.close();
                    rs = null;
                }
            } catch (Exception e) {
            }
        }

        JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(
                bommornFactory.createBeanCollection());

        map.put("group1", group1);
        map.put("group2", group2);
        map.put("totalplu", "0");
        r.viewReportbean(filename, map, "report_BOM", ds);
    }
    
    private void btnExportFile() {
        int row = tbltable1.getRowCount();
        if (row <= 0) {
            return;
        }
        StringBuilder str = new StringBuilder();

        String alert_save = "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?";
        JFileChooser chooser = new JFileChooser();
        File file;
        try {
            file = new File(new File("reportBOMAcc.csv").getCanonicalPath());

            chooser.setSelectedFile(file);
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));

            int confirm2 = chooser.showSaveDialog(this);
            if (confirm2 == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();

                if (curFile.exists()) {
                    int confirm = msn.showMessageConfirm("Yes", "No", alert_save);
                    if (confirm == JOptionPane.NO_OPTION) {
                        return;

                    }

                    String head = "รหัสสินค้า" + "\t"
                            + "ชื่อสินค้า / รายการ" + "\t"
                            + "กลุ่มสินค้า" + "\t"
                            + "หน่วยนับหลัก" + "\t"
                            + "หน่วยย่อย" + "\t"
                            + "อัตราส่วน / หน่วย" + "\t"
                            + "ต้นทุนเฉลี่ย" + "\t"
                            + "BOMAcc" + "\t"
                            + "สำหรับบัญชี" + "\t"
                            + "Type";
                    str.append(head + "\n");
                    for (int i = 0; i < row; i++) {
                        String col1 = tbltable1.getValueAt(i, 0).toString();
                        String col2 = tbltable1.getValueAt(i, 1).toString();
                        String col3 = tbltable1.getValueAt(i, 2).toString();
                        String col4 = tbltable1.getValueAt(i, 3).toString();
                        String col5 = tbltable1.getValueAt(i, 4).toString();
                        String col6 = tbltable1.getValueAt(i, 5).toString();
                        String col7 = tbltable1.getValueAt(i, 6).toString();
                        String col8 = tbltable1.getValueAt(i, 7).toString();
                        String col9 = tbltable1.getValueAt(i, 8).toString();
                        String col10 = tbltable1.getValueAt(i, 9).toString();

                        String line = col1 + "\t" + col2 + "\t" + col3 + "\t"
                                + col4 + "\t" + col5 + "\t" + col6 + "\t"
                                + col7 + "\t" + col8 + "\t" + col9 + "\t"
                                + col10;
                        str.append(line + "\n");
                    }

                } else {
                    String head = "รหัสสินค้า" + "\t"
                            + "ชื่อสินค้า / รายการ" + "\t"
                            + "กลุ่มสินค้า" + "\t"
                            + "หน่วยนับหลัก" + "\t"
                            + "หน่วยย่อย" + "\t"
                            + "อัตราส่วน / หน่วย" + "\t"
                            + "ต้นทุนเฉลี่ย" + "\t"
                            + "BOMAcc" + "\t"
                            + "สำหรับบัญชี" + "\t"
                            + "Type";
                    str.append(head + "\n");
                    for (int i = 0; i < row; i++) {
                        String col1 = tbltable1.getValueAt(i, 0).toString();
                        String col2 = tbltable1.getValueAt(i, 1).toString();
                        String col3 = tbltable1.getValueAt(i, 2).toString();
                        String col4 = tbltable1.getValueAt(i, 3).toString();
                        String col5 = tbltable1.getValueAt(i, 4).toString();
                        String col6 = tbltable1.getValueAt(i, 5).toString();
                        String col7 = tbltable1.getValueAt(i, 6).toString();
                        String col8 = tbltable1.getValueAt(i, 7).toString();
                        String col9 = tbltable1.getValueAt(i, 8).toString();
                        String col10 = tbltable1.getValueAt(i, 9).toString();

                        String line = col1 + "\t" + col2 + "\t" + col3 + "\t"
                                + col4 + "\t" + col5 + "\t" + col6 + "\t"
                                + col7 + "\t" + col8 + "\t" + col9 + "\t"
                                + col10;
                        str.append(line + "\n");
                    }
                }
                f.writeFileIni(curFile.toString(), str);
            }
        } catch (Exception e) {
        }
    }
}
