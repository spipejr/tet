/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ListCreditCardSetup.java
 *
 * Created on Sep 18, 2012, 10:18:12 AM
 */
package frmlist;

import EStamp.showMessage;
import dbutility.dbUtility;

import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import utilititiesfunction.Export2Excel;
import utilititiesfunction.ThaiUtilities;

/**
 *
 * @author natee
 */
public class ListBranch extends javax.swing.JDialog {

    private DefaultTableModel model;
    dbUtility db = new dbUtility();
    Statement stmt;
    ThaiUtilities cvth = new ThaiUtilities();
    int index = 0;
    int chk = 0;
    public String code = "";

    /**
     * Creates new form ListCreditCardSetup
     */
    public ListBranch(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();

        lbllist.setText(tbltable.getRowCount() + " รายการ");
        tbltable.setShowGrid(true);
        tbltable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbltable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbltable.setRowSelectionAllowed(true);
        tbltable.setBackground(java.awt.Color.WHITE);
        tbltable.setGridColor(java.awt.Color.gray);

        model = (DefaultTableModel) tbltable.getModel();
        tbltable.setRowHeight(24);
        tbltable.setFont(new Font("Norasi", Font.PLAIN, 14));
        tbltable.setAutoCreateRowSorter(true);
        loadcombotype();
        initTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtphone = new javax.swing.JTextField();
        txtmanager = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtgroup = new javax.swing.JTextField();
        combo1 = new javax.swing.JComboBox();
        Procress = new javax.swing.JButton();
        btnshowall = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        lbllist = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("แสดงรายการสินค้า");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBackground(new java.awt.Color(194, 254, 140));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 37, 37));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("การค้นหาข้อมูล สามารถใช้ส่วนหนึ่งของคำในการค้นหาได้เช่น \"เจ้าพระยา\"เพื่อหา\"บริษัท เจ้าพระยาคอมพิวเทค จำกัด\"");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 911, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(213, 202, 253));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel4.setBackground(new java.awt.Color(9, 0, 91));

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 37, 37));
        jLabel1.setText("ใส่ข้อมูลตามช่องที่ต้องการแล้วกด Enter");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(92, 92, 92))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ชื่อสาขา");

        jLabel3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("เบอร์โทรศัพท์");

        jLabel4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("ชื่อผู้จัดการ");

        txtname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnameKeyPressed(evt);
            }
        });

        txtphone.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtphoneKeyPressed(evt);
            }
        });

        txtmanager.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtmanager.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtmanagerKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtphone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                    .addComponent(txtmanager, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                    .addComponent(txtname, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmanager, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 252, 193));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("กลุ่มสาขา");

        txtgroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtgroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtgroupKeyPressed(evt);
            }
        });

        combo1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1ActionPerformed(evt);
            }
        });
        combo1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo1KeyPressed(evt);
            }
        });

        Procress.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        Procress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hourglass-icon.png"))); // NOI18N
        Procress.setText("F5-ตกลง");
        Procress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(txtgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo1, 0, 299, Short.MAX_VALUE))
                    .addComponent(Procress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(Procress)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnshowall.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnshowall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Trash-icon.png"))); // NOI18N
        btnshowall.setText("F11-แสดงทั้งหมด");
        btnshowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowallActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("จำนวนรายการ");

        lbllist.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbllist.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbllist.setText("0");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbllist, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
            .addComponent(lbllist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jButton1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        jButton1.setText("Excel File");
        jButton1.setIconTextGap(10);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnshowall, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(btnshowall, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tbltable.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tbltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสสาขา", "BU", "VAT", "ชื่อสาขา", "Tranfer", "Active", "กลุ่มสาขา", "ประเภทสาขา", "เขตการขาย", "ลักษณะร้าน", "ลักษณะการเช่า", "กลุ่มห้างฯ", "บันทึกชาร์จ", "เบอร์โทรศัพท์", "ผู้จัดการร้าน / ผู้ติดต่อ", "SAP Site Code", "SAP Site Name", "SAP Site Cashbank", "SAP_Site_Costcenter"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltableMouseClicked(evt);
            }
        });
        tbltable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbltableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbltable);
        if (tbltable.getColumnModel().getColumnCount() > 0) {
            tbltable.getColumnModel().getColumn(3).setPreferredWidth(180);
            tbltable.getColumnModel().getColumn(4).setPreferredWidth(80);
            tbltable.getColumnModel().getColumn(5).setPreferredWidth(80);
            tbltable.getColumnModel().getColumn(13).setPreferredWidth(140);
            tbltable.getColumnModel().getColumn(14).setPreferredWidth(160);
            tbltable.getColumnModel().getColumn(15).setPreferredWidth(110);
            tbltable.getColumnModel().getColumn(16).setPreferredWidth(200);
            tbltable.getColumnModel().getColumn(17).setPreferredWidth(140);
            tbltable.getColumnModel().getColumn(18).setPreferredWidth(100);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1025, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1024, 768));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltableMouseClicked

        index = tbltable.getSelectedRow();
        if (evt.getClickCount() == 2) {
            index = tbltable.getSelectedRow();
            if (index != -1) {

                try {

                    code = tbltable.getValueAt(index, 0).toString();
                    this.dispose();

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tbltableMouseClicked

    private void tbltableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbltableKeyPressed

        index = tbltable.getSelectedRow();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            index = tbltable.getSelectedRow();
            if (index != -1) {
                try {
                    code = tbltable.getValueAt(index, 0).toString();
                    this.dispose();
                } catch (Exception e) {
                }
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            txtname.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tbltableKeyPressed

    private void txtnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txtname.getText().trim().equals("")) {
                showname(cvth.Unicode2ASCII(txtname.getText()));
            } else {
                txtphone.requestFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameKeyPressed

    private void txtphoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtphoneKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txtphone.getText().trim().equals("")) {
                showtel(cvth.Unicode2ASCII(txtphone.getText()));
            } else {
                txtmanager.requestFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        }
    }//GEN-LAST:event_txtphoneKeyPressed

    private void txtmanagerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmanagerKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txtmanager.getText().trim().equals("")) {
                showmanager(cvth.Unicode2ASCII(txtmanager.getText()));
            } else {
                txtgroup.requestFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        }
    }//GEN-LAST:event_txtmanagerKeyPressed

    private void combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1ActionPerformed

        comboaction();

        // TODO add your handling code here:
    }//GEN-LAST:event_combo1ActionPerformed

    private void btnshowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowallActionPerformed

        initTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnshowallActionPerformed

    private void ProcressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcressActionPerformed

        showgroup(txtgroup.getText());

        // TODO add your handling code here:
    }//GEN-LAST:event_ProcressActionPerformed

    private void txtgroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtgroupKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo1.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgroupKeyPressed

    private void combo1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo1KeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            comboaction();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_combo1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ProcessExcel();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ListBranch dialog = new ListBranch(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Procress;
    private javax.swing.JButton btnshowall;
    private javax.swing.JComboBox combo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbllist;
    private javax.swing.JTable tbltable;
    private javax.swing.JTextField txtgroup;
    private javax.swing.JTextField txtmanager;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtphone;
    // End of variables declaration//GEN-END:variables

    private void initTable() {

        model = (DefaultTableModel) tbltable.getModel();
        tbltable.setRowHeight(24);
        tbltable.setFont(new Font("Norasi", Font.PLAIN, 14));
        JTableHeader tHeader = tbltable.getTableHeader();
        tHeader.setFont(new Font("Norasi", Font.BOLD, 14));
        DefaultTableCellRenderer l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);
        DefaultTableCellRenderer c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        TableColumnModel tcm = tbltable.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(l);
        tcm.getColumn(3).setCellRenderer(l);
        tcm.getColumn(4).setCellRenderer(l);
        tcm.getColumn(5).setCellRenderer(l);
        tcm.getColumn(6).setCellRenderer(l);
        tcm.getColumn(7).setCellRenderer(l);
        tcm.getColumn(8).setCellRenderer(l);
        tcm.getColumn(9).setCellRenderer(l);
        tcm.getColumn(10).setCellRenderer(l);
        tcm.getColumn(11).setCellRenderer(l);
        tcm.getColumn(12).setCellRenderer(l);

        try {
            Statement stmt = dbUtility.con.createStatement();

            String sql = "select Code,Name,BGroup,BType,BArea,BSize,BPlane,BStore,usercharge,Tel_No,Manager,bu_code,vat_code"
                    + ",sap_site_code, sap_site_name, sap_site_cashbank, sap_site_type,sap_site_costcenter,sap_tranfer,pactive  "
                    + "from branfile order by Code";

            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
//                String strSitcode = "";
//                String strSitname = "";
//                String strSittype = rs.getString("sap_site_type");
//                System.out.println("strSittype//" + strSittype);
//
//                if (strSittype.equalsIgnoreCase("Branch")) {
//                    strSitcode = rs.getString("sap_site_code");
//                    strSitname = rs.getString("sap_site_name");
//                } else if (strSittype.equalsIgnoreCase("Branchcode")) {
//                    strSitcode = rs.getString("sap_site_code");
//                    strSitname = rs.getString("sap_site_name");
//                } else if (strSittype.equalsIgnoreCase("Factory")) {
//                    strSitcode = rs.getString("sap_site_code");
//                    strSitname = rs.getString("sap_site_name");
//                } else {
//                    strSitcode = "";
//                    strSitname = "";
//                }

                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    model.addRow(new Object[]{
                        cvth.ASCII2Unicode(rs.getString("Code")),
                        cvth.ASCII2Unicode(rs.getString("bu_code")),
                        cvth.ASCII2Unicode(rs.getString("vat_code")),
                        cvth.ASCII2Unicode(rs.getString("Name")),
                        cvth.ASCII2Unicode(rs.getString("sap_tranfer")),
                        cvth.ASCII2Unicode(rs.getString("pactive")),
                        cvth.ASCII2Unicode(rs.getString("BGroup")),
                        cvth.ASCII2Unicode(rs.getString("BType")),
                        cvth.ASCII2Unicode(rs.getString("BArea")),
                        cvth.ASCII2Unicode(rs.getString("BSize")),
                        cvth.ASCII2Unicode(rs.getString("BPlane")),
                        cvth.ASCII2Unicode(rs.getString("BStore")),
                        cvth.ASCII2Unicode(rs.getString("usercharge")),
                        cvth.ASCII2Unicode(rs.getString("Tel_No")),
                        cvth.ASCII2Unicode(rs.getString("Manager")),
                        cvth.ASCII2Unicode(rs.getString("sap_site_code")),
                        cvth.ASCII2Unicode(rs.getString("sap_site_name")),
                        cvth.ASCII2Unicode(rs.getString("sap_site_cashbank")),
                         cvth.ASCII2Unicode(rs.getString("sap_site_costcenter"))
                    });
                } else {
                    model.addRow(new Object[]{
                        rs.getString("Code"),
                        rs.getString("bu_code"),
                        rs.getString("vat_code"),
                        rs.getString("Name"),
                        rs.getString("sap_tranfer"),
                        rs.getString("pactive"),
                        rs.getString("BGroup"),
                        rs.getString("BType"),
                        rs.getString("BArea"),
                        rs.getString("BSize"),
                        rs.getString("BPlane"),
                        rs.getString("BStore"),
                        rs.getString("usercharge"),
                        rs.getString("Tel_No"),
                        rs.getString("Manager"),
                        rs.getString("sap_site_code"),
                        rs.getString("sap_site_name"),
                        rs.getString("sap_site_cashbank"),
                        rs.getString("sap_site_costcenter")
                    });
                }
            }

            rs.close();
            stmt.close();
            lbllist.setText(tbltable.getRowCount() + " รายการ");
            tbltable.requestFocus();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    private void clearModel() {
        int size = tbltable.getRowCount();
        for (int i = 0; i < size; i++) {
            model.removeRow(0);
        }
    }

    public void showname(String text) {

        if (text.trim().equals("")) {
            text = "%%";
        } else if (text.indexOf("%") == -1) {
            text = text + "%";
        }
        clearModel();
        try {
            String sql = "select * "
                    + "from branfile "
                    + "where (Name  like '%" + text + "%') order by Code";
            Statement stmt = dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                    model.addRow(new Object[]{
                        cvth.ASCII2Unicode(rs.getString("Code")),
                        cvth.ASCII2Unicode(rs.getString("bu_code")),
                        cvth.ASCII2Unicode(rs.getString("vat_code")),
                        cvth.ASCII2Unicode(rs.getString("Name")),
                        cvth.ASCII2Unicode(rs.getString("sap_tranfer")),
                        cvth.ASCII2Unicode(rs.getString("pactive")),
                        cvth.ASCII2Unicode(rs.getString("BGroup")),
                        cvth.ASCII2Unicode(rs.getString("BType")),
                        cvth.ASCII2Unicode(rs.getString("BArea")),
                        cvth.ASCII2Unicode(rs.getString("BSize")),
                        cvth.ASCII2Unicode(rs.getString("BPlane")),
                        cvth.ASCII2Unicode(rs.getString("BStore")),
                        cvth.ASCII2Unicode(rs.getString("usercharge")),
                        cvth.ASCII2Unicode(rs.getString("Tel_No")),
                        cvth.ASCII2Unicode(rs.getString("Manager"))
                    });

                } else {
                    model.addRow(new Object[]{
                        rs.getString("Code"),
                        rs.getString("bu_code"),
                        rs.getString("vat_code"),
                        rs.getString("Name"),
                        rs.getString("sap_tranfer"),
                        rs.getString("pactive"),
                        rs.getString("BGroup"),
                        rs.getString("BType"),
                        rs.getString("BArea"),
                        rs.getString("BSize"),
                        rs.getString("BPlane"),
                        rs.getString("BStore"),
                        rs.getString("usercharge"),
                        rs.getString("Tel_No"),
                        rs.getString("Manager")
                    });
                }
            }
            rs.close();
            stmt.close();
            txtname.setText("");
            tbltable.requestFocus(true);
            lbllist.setText(tbltable.getRowCount() + " รายการ");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public void showtel(String text) {

        if (text.trim().equals("")) {
            text = "%%";
        } else if (text.indexOf("%") == -1) {
            text = text + "%";
        }
        clearModel();
        try {
            String sql = "select * "
                    + "from branfile "
                    + "where (Tel_No  like '%" + text + "%') order by Code";
            Statement stmt = dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                    model.addRow(new Object[]{
                        cvth.ASCII2Unicode(rs.getString("Code")),
                        cvth.ASCII2Unicode(rs.getString("bu_code")),
                        cvth.ASCII2Unicode(rs.getString("vat_code")),
                        cvth.ASCII2Unicode(rs.getString("Name")),
                         cvth.ASCII2Unicode(rs.getString("sap_tranfer")),
                          cvth.ASCII2Unicode(rs.getString("pactive")),
                        cvth.ASCII2Unicode(rs.getString("BGroup")),
                        cvth.ASCII2Unicode(rs.getString("BType")),
                        cvth.ASCII2Unicode(rs.getString("BArea")),
                        cvth.ASCII2Unicode(rs.getString("BSize")),
                        cvth.ASCII2Unicode(rs.getString("BPlane")),
                        cvth.ASCII2Unicode(rs.getString("BStore")),
                        cvth.ASCII2Unicode(rs.getString("usercharge")),
                        cvth.ASCII2Unicode(rs.getString("Tel_No")),
                        cvth.ASCII2Unicode(rs.getString("Manager"))
                    });
                } else {
                    model.addRow(new Object[]{
                        rs.getString("Code"),
                        rs.getString("bu_code"),
                        rs.getString("vat_code"),
                        rs.getString("Name"),
                        rs.getString("sap_tranfer"),
                        rs.getString("pactive"),
                        rs.getString("BGroup"),
                        rs.getString("BType"),
                        rs.getString("BArea"),
                        rs.getString("BSize"),
                        rs.getString("BPlane"),
                        rs.getString("BStore"),
                        rs.getString("usercharge"),
                        rs.getString("Tel_No"),
                        rs.getString("Manager")
                    });
                }
            }
            rs.close();
            stmt.close();
            txtphone.setText("");
            tbltable.requestFocus(true);
            lbllist.setText(tbltable.getRowCount() + " รายการ");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public void showmanager(String text) {

        if (text.trim().equals("")) {
            text = "%%";
        } else if (text.indexOf("%") == -1) {
            text = text + "%";
        }
        clearModel();
        try {
            String sql = "select * "
                    + "from branfile "
                    + "where (Manager  like '%" + text + "%') order by Code";
            Statement stmt = dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                    model.addRow(new Object[]{
                        cvth.ASCII2Unicode(rs.getString("Code")),
                        cvth.ASCII2Unicode(rs.getString("bu_code")),
                        cvth.ASCII2Unicode(rs.getString("vat_code")),
                        cvth.ASCII2Unicode(rs.getString("Name")),
                         cvth.ASCII2Unicode(rs.getString("sap_tranfer")),
                          cvth.ASCII2Unicode(rs.getString("pactive")),
                        cvth.ASCII2Unicode(rs.getString("BGroup")),
                        cvth.ASCII2Unicode(rs.getString("BType")),
                        cvth.ASCII2Unicode(rs.getString("BArea")),
                        cvth.ASCII2Unicode(rs.getString("BSize")),
                        cvth.ASCII2Unicode(rs.getString("BPlane")),
                        cvth.ASCII2Unicode(rs.getString("BStore")),
                        cvth.ASCII2Unicode(rs.getString("usercharge")),
                        cvth.ASCII2Unicode(rs.getString("Tel_No")),
                        cvth.ASCII2Unicode(rs.getString("Manager"))
                    });
                } else {
                    model.addRow(new Object[]{
                        rs.getString("Code"),
                        rs.getString("bu_code"),
                        rs.getString("vat_code"),
                        rs.getString("Name"),
                         rs.getString("sap_tranfer"),
                          rs.getString("pactive"),
                        rs.getString("BGroup"),
                        rs.getString("BType"),
                        rs.getString("BArea"),
                        rs.getString("BSize"),
                        rs.getString("BPlane"),
                        rs.getString("BStore"),
                        rs.getString("usercharge"),
                        rs.getString("Tel_No"),
                        rs.getString("Manager")
                    });
                }
            }
            rs.close();
            stmt.close();
            txtmanager.setText("");
            tbltable.requestFocus(true);
            lbllist.setText(tbltable.getRowCount() + " รายการ");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public void showgroup(String text) {

        if (text.trim().equals("")) {
            text = "%%";
        } else if (text.indexOf("%") == -1) {
            text = text + "%";
        }
        clearModel();
        try {
            String sql = "select * "
                    + "from branfile "
                    + "where (BGroup  like '%" + text + "%') order by Code";
            Statement stmt = dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                    model.addRow(new Object[]{
                        cvth.ASCII2Unicode(rs.getString("Code")),
                        cvth.ASCII2Unicode(rs.getString("bu_code")),
                        cvth.ASCII2Unicode(rs.getString("vat_code")),
                        cvth.ASCII2Unicode(rs.getString("Name")),
                        cvth.ASCII2Unicode(rs.getString("sap_tranfer")),
                        cvth.ASCII2Unicode(rs.getString("pactive")),
                        cvth.ASCII2Unicode(rs.getString("BGroup")),
                        cvth.ASCII2Unicode(rs.getString("BType")),
                        cvth.ASCII2Unicode(rs.getString("BArea")),
                        cvth.ASCII2Unicode(rs.getString("BSize")),
                        cvth.ASCII2Unicode(rs.getString("BPlane")),
                        cvth.ASCII2Unicode(rs.getString("BStore")),
                        cvth.ASCII2Unicode(rs.getString("usercharge")),
                        cvth.ASCII2Unicode(rs.getString("Tel_No")),
                        cvth.ASCII2Unicode(rs.getString("Manager"))
                    });
                } else {
                    model.addRow(new Object[]{
                        rs.getString("Code"),
                        rs.getString("bu_code"),
                        rs.getString("vat_code"),
                        rs.getString("Name"),
                        rs.getString("sap_tranfer"),
                        rs.getString("pactive"),
                        rs.getString("BGroup"),
                        rs.getString("BType"),
                        rs.getString("BArea"),
                        rs.getString("BSize"),
                        rs.getString("BPlane"),
                        rs.getString("BStore"),
                        rs.getString("usercharge"),
                        rs.getString("Tel_No"),
                        rs.getString("Manager")
                    });
                }
            }
            rs.close();
            stmt.close();
            txtgroup.setText("");
            tbltable.requestFocus(true);
            lbllist.setText(tbltable.getRowCount() + " รายการ");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    private void loadcombotype() {
        combo1.removeAll();
        try {
            String sql = "select *from branchgroup order by BGroupCode";

            stmt = dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    combo1.addItem("" + cvth.ASCII2Unicode(rs.getString("BGroupCode")) + " - " + cvth.ASCII2Unicode(rs.getString("BGroupName")));
                } else {
                    combo1.addItem("" + rs.getString("BGroupCode") + " - " + rs.getString("BGroupName"));
                }
                txtgroup.setText("");
            }
        } catch (SQLException ex) {
        }
    }

    private void comboaction() {
        try {
            String TempStr = combo1.getSelectedItem().toString();
            String ArrayStr[] = TempStr.split(" -");
            txtgroup.setText(ArrayStr[0]);
            Procress.requestFocus();
        } catch (Exception e) {
        }
    }

    private void ProcessExcel() {
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        File f;
        showMessage msn = new showMessage();

        String condition = "รายงานรายละเอียดสาขา ";
        String alert_save = "มีไฟล์ข้อมูลชื่อนี้อยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?";
        try {
            f = new File(new File("BranchList.xls").getCanonicalPath());
            chooser.setSelectedFile(f);
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm2 = chooser.showSaveDialog(this);
            if (confirm2 == JFileChooser.APPROVE_OPTION) {

                File curFile = chooser.getSelectedFile();

                if (curFile.exists()) {
                    int confirm = msn.showMessageConfirm("Yes", "No", alert_save);
                    if (confirm == 1) {
                        return;
                    } else {
                        try {
                            test.setOutputFile(curFile.toString());
                            test.writetableNoSum(tbltable, tbltable.getColumnModel(), condition);
                            msn.showMessageInformation("บันทึกข้อมูลเรียบร้อบแล้ว");
                        } catch (IOException ex) {
                        } catch (WriteException ex) {
                        }
                    }
                } else {
                    try {
                        test.setOutputFile(curFile.toString());
                        test.writetableNoSum(tbltable, tbltable.getColumnModel(), condition);
                        msn.showMessageInformation("บันทึกข้อมูลเรียบร้อบแล้ว");
                    } catch (IOException ex) {
                    } catch (WriteException ex) {
                    }
                }
            }
        } catch (IOException e) {
        }
    }
}
