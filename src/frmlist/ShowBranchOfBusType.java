/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package frmlist;

import borfunction.GetApplicationName;
import borfunction.GetUser;
import dbutility.dbUtility;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import masterfile.NimbusFrame;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import report.Report;
import utilititiesfunction.Export2Excel;
import utilititiesfunction.Format;
import utilititiesfunction.ThaiUtilities;
import utilititiesfunction.getLanguage;

/**
 *
 * @author s386
 */
public class ShowBranchOfBusType extends javax.swing.JDialog {

    /**
     * Creates new form ShowBranchOfBusType
     */
    dbUtility db = new dbUtility();
    ThaiUtilities cvth = new ThaiUtilities();
    Statement stmt;
    DefaultTableModel dtb;
    JTableHeader jtb;
    
    getLanguage lang = new getLanguage();
    String frmName = "showbranchofbustype";
    public ShowBranchOfBusType(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
        loadlist();
        initable();
        showtbl("","ZZ");
        lang.setText(frmName, this, lang.getChklang());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jPanel34 = new javax.swing.JPanel();
        db_lblCountGrandTotal = new javax.swing.JLabel();
        xb_lblCount3 = new javax.swing.JLabel();
        xb_lblCount4 = new javax.swing.JLabel();
        xb_lblCount1 = new javax.swing.JLabel();
        db_lblCountTotal = new javax.swing.JLabel();
        xb_lblCount2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        db_lblh = new javax.swing.JLabel();
        txtfCodeFrom = new javax.swing.JTextField();
        btnsearch1 = new javax.swing.JButton();
        txtfCodeTo = new javax.swing.JTextField();
        btnsearch2 = new javax.swing.JButton();
        db_lblto = new javax.swing.JLabel();
        db_btnProcress = new javax.swing.JButton();
        db_btnPrint = new javax.swing.JButton();
        db_btnExel = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ชื่อประเภทธุรกิจ", "รหัสสาขา", "ชื่อสาขา"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.setName("tbl"); // NOI18N
        jScrollPane2.setViewportView(tbl);
        tbl.getColumnModel().getColumn(0).setMinWidth(300);
        tbl.getColumnModel().getColumn(0).setPreferredWidth(300);
        tbl.getColumnModel().getColumn(0).setMaxWidth(300);
        tbl.getColumnModel().getColumn(1).setMinWidth(100);
        tbl.getColumnModel().getColumn(1).setPreferredWidth(100);
        tbl.getColumnModel().getColumn(1).setMaxWidth(100);

        jPanel34.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        db_lblCountGrandTotal.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        db_lblCountGrandTotal.setText("0");

        xb_lblCount3.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        xb_lblCount3.setText("จำนวนทั้งหมด");
        xb_lblCount3.setName("xb_lblCount3"); // NOI18N

        xb_lblCount4.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        xb_lblCount4.setText("รายการ");
        xb_lblCount4.setName("xb_lblCount4"); // NOI18N

        xb_lblCount1.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        xb_lblCount1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xb_lblCount1.setText("จำนวนของแต่ละสาขา");
        xb_lblCount1.setName("xb_lblCount1"); // NOI18N

        db_lblCountTotal.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        db_lblCountTotal.setText("0");

        xb_lblCount2.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        xb_lblCount2.setText("รายการ");
        xb_lblCount2.setName("xb_lblCount2"); // NOI18N

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addComponent(xb_lblCount1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_lblCountTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xb_lblCount2)
                .addGap(207, 207, 207)
                .addComponent(xb_lblCount3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_lblCountGrandTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xb_lblCount4))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(db_lblCountTotal)
                .addComponent(xb_lblCount1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(xb_lblCount2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(db_lblCountGrandTotal)
                .addComponent(xb_lblCount3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(xb_lblCount4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        list.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        list.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        list.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                listKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        db_lblh.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh.setText("กำหนดประเภทธุรกิจ");
        db_lblh.setName("db_lblh"); // NOI18N

        txtfCodeFrom.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfCodeFrom.setCaretColor(new java.awt.Color(26, 26, 26));
        txtfCodeFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfCodeFromActionPerformed(evt);
            }
        });
        txtfCodeFrom.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtfCodeFromInputMethodTextChanged(evt);
            }
        });
        txtfCodeFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfCodeFromKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfCodeFromKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfCodeFromKeyTyped(evt);
            }
        });

        btnsearch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearch1.setFocusable(false);
        btnsearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearch1ActionPerformed(evt);
            }
        });

        txtfCodeTo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfCodeTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfCodeToKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfCodeToKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfCodeToKeyTyped(evt);
            }
        });

        btnsearch2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearch2.setFocusable(false);
        btnsearch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearch2ActionPerformed(evt);
            }
        });

        db_lblto.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblto.setText("ไปยังกลุ่ม");
        db_lblto.setName("db_lblto"); // NOI18N

        db_btnProcress.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnProcress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hourglass-icon.png"))); // NOI18N
        db_btnProcress.setText("F5-ประมวลผล");
        db_btnProcress.setFocusable(false);
        db_btnProcress.setName("db_btnProcress"); // NOI18N
        db_btnProcress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnProcressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(db_lblh, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfCodeFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(db_lblto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfCodeTo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(db_btnProcress, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(db_lblh, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtfCodeFrom, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(db_lblto, javax.swing.GroupLayout.Alignment.CENTER)
            .addComponent(btnsearch1, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(txtfCodeTo, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnsearch2, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(db_btnProcress, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        db_btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        db_btnPrint.setText("พิมม์");
        db_btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnPrint.setIconTextGap(0);
        db_btnPrint.setName("db_btnPrint"); // NOI18N
        db_btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnPrintActionPerformed(evt);
            }
        });

        db_btnExel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel.setText("Exel File");
        db_btnExel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel.setIconTextGap(0);
        db_btnExel.setName("db_btnExel"); // NOI18N
        db_btnExel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExelActionPerformed(evt);
            }
        });

        btnExit1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit1.setIconTextGap(0);
        btnExit1.setName("db_btnExit"); // NOI18N
        btnExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1024)/2, (screenSize.height-793)/2, 1024, 793);
    }// </editor-fold>//GEN-END:initComponents

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
        showtbl(list.getSelectedValue().toString());
//        txtfCodeFrom.setText("");
//        txtfCodeTo.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_listMouseClicked

    private void listKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listKeyReleased

        showtbl(list.getSelectedValue().toString());
//        txtfCodeFrom.setText("");
//        txtfCodeTo.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_listKeyReleased

    private void txtfCodeFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfCodeFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfCodeFromActionPerformed

    private void txtfCodeFromInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtfCodeFromInputMethodTextChanged
        String get = evt.getText().toString();
        String out = get.toUpperCase();
        txtfCodeFrom.setText(out);

        // TODO add your handling code here:
    }//GEN-LAST:event_txtfCodeFromInputMethodTextChanged

    private void txtfCodeFromKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfCodeFromKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtfCodeFrom.setText("");


        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcress();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfCodeTo.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchSettext(1);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfCodeFromKeyPressed

    private void txtfCodeFromKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfCodeFromKeyReleased
        String get = txtfCodeFrom.getText();
        String out = get.toUpperCase();
        txtfCodeFrom.setText(out);


        // TODO add your handling code here:
    }//GEN-LAST:event_txtfCodeFromKeyReleased

    private void txtfCodeFromKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfCodeFromKeyTyped
        if (txtfCodeFrom.getText().length() >= 3) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfCodeFromKeyTyped

    private void btnsearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearch1ActionPerformed
        btnSearchSettext(1);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearch1ActionPerformed

    private void txtfCodeToKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfCodeToKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtfCodeTo.setText("");

        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            btnProcress();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfCodeFrom.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchSettext(2);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfCodeToKeyPressed

    private void txtfCodeToKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfCodeToKeyReleased
        String get = txtfCodeTo.getText();
        String out = get.toUpperCase();
        txtfCodeTo.setText(out);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfCodeToKeyReleased

    private void txtfCodeToKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfCodeToKeyTyped
        if (txtfCodeTo.getText().length() >= 3) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfCodeToKeyTyped

    private void btnsearch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearch2ActionPerformed
        btnSearchSettext(2);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearch2ActionPerformed

    private void db_btnProcressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnProcressActionPerformed
        btnProcress();
    }//GEN-LAST:event_db_btnProcressActionPerformed

    private void db_btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnPrintActionPerformed

        Map parm = new HashMap();
        JRBeanCollectionDataSource ds = null;
        if (!txtfCodeFrom.getText().equals("") || !txtfCodeTo.getText().equals("")) {
            if(txtfCodeFrom.getText().equals("")||!txtfCodeFrom.getText().equals("")&&!txtfCodeTo.getText().equals(""))
            {
                ds = new JRBeanCollectionDataSource(report.beandata.GetBustype(txtfCodeFrom.getText(), txtfCodeTo.getText()));
            }
            else if(txtfCodeTo.getText().equals(""))
            {
                ds = new JRBeanCollectionDataSource(report.beandata.GetBustype(txtfCodeFrom.getText(), "ZZZ"));
            }
        } else {
            ds = new JRBeanCollectionDataSource(report.beandata.GetBustype("  ", "ZZZ"));
        }
        parm.put("companyName", lang.getTextCompanyReport());
        parm.put("Reportheader", lang.getTextReport(frmName, "texthead"));
        parm.put("branch1", txtfCodeFrom.getText());
        parm.put("branch2", txtfCodeTo.getText());
        parm.put("forname", lang.getTextReport(frmName, "for"));
        parm.put("code", lang.getTextReport(frmName, "code"));
        parm.put("name", lang.getTextReport(frmName, "name"));
        parm.put("total", lang.getTextReport(frmName, "total"));
        parm.put("totalall", lang.getTextReport(frmName, "totalall"));
        parm.put("branchtxt", lang.getTextReport(frmName, "branchtxt"));
        parm.put("application",new GetApplicationName().getApplicationName());
        parm.put("user", new GetUser().getUser());
        parm.put("currentDate", Format.dateFmtReport.format(new java.util.Date()));
        String rptName = "branchbustype";
        Report rpt = new Report();
        rpt.viewReportbean(rptName, parm,frmName, ds);  
        
    }//GEN-LAST:event_db_btnPrintActionPerformed

    private void db_btnExelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExelActionPerformed

        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();

        
            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
        
        int confirm = chooser.showSaveDialog(this);
            if(confirm == JFileChooser.APPROVE_OPTION)
            {
        File curFile = chooser.getSelectedFile();
        
        
        if(curFile.exists())
                {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        db_btnExelActionPerformed(null);
                        
                        return;

                    }
                    
                }
        try {
            test.setOutputFile(curFile.toString());
            test.write(dtb, jtb);
            test.setDefaultpath(curFile);
        } catch (IOException ex) {
            Logger.getLogger(ShowBranchOfArea.class.getName()).log(Level.SEVERE, null, ex);
        } catch (WriteException ex) {
            Logger.getLogger(ShowBranchOfArea.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
    }//GEN-LAST:event_db_btnExelActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExit1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowBranchOfBusType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowBranchOfBusType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowBranchOfBusType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowBranchOfBusType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ShowBranchOfBusType dialog = new ShowBranchOfBusType(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton btnsearch1;
    private javax.swing.JButton btnsearch2;
    private javax.swing.JButton db_btnExel;
    private javax.swing.JButton db_btnPrint;
    private javax.swing.JButton db_btnProcress;
    private javax.swing.JLabel db_lblCountGrandTotal;
    private javax.swing.JLabel db_lblCountTotal;
    private javax.swing.JLabel db_lblh;
    private javax.swing.JLabel db_lblto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList list;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtfCodeFrom;
    private javax.swing.JTextField txtfCodeTo;
    private javax.swing.JLabel xb_lblCount1;
    private javax.swing.JLabel xb_lblCount2;
    private javax.swing.JLabel xb_lblCount3;
    private javax.swing.JLabel xb_lblCount4;
    // End of variables declaration//GEN-END:variables

private void loadlist() {

        DefaultListModel model = new DefaultListModel();
        list.setModel(model);

        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
            try {
                String sql = "select * from businesstype order by buscode";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                int i = 0;
                while (rs.next()) {
                    if (rs.isFirst()) {
                        String all = "All";
                        model.addElement(all);
                    }
                    model.addElement(cvth.ASCII2Unicode(rs.getString("buscode")) + " - " + cvth.ASCII2Unicode(rs.getString("busname")));
                    i++;
                }
            } catch (SQLException ex) {
            }
        } else {
            try {
                String sql = "select * from businesstype order by buscode";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                int i = 0;
                while (rs.next()) {
                    if (rs.isFirst()) {
                        String all = "All";
                        model.addElement(all);
                    }
                    model.addElement(rs.getString("buscode") + " - " + rs.getString("busname"));
                    i++;
                }
            } catch (SQLException ex) {
            }

        }
    }

    private void loadlist(String from, String to) {

        DefaultListModel model = new DefaultListModel();
        list.setModel(model);

        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
            try {
                String sql = "select * from businesstype where buscode>='" + cvth.Unicode2ASCII(from) + "' and buscode<='" + cvth.Unicode2ASCII(to) + "' order by buscode";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                int i = 0;
                while (rs.next()) {
                    if (rs.isFirst()) {
                        String all = "All";
                        model.addElement(all);
                    }
                    model.addElement(cvth.ASCII2Unicode(rs.getString("buscode")) + " - " + cvth.ASCII2Unicode(rs.getString("busname")));
                    i++;
                }
            } catch (SQLException ex) {
            }
        } else {
            try {
                String sql = "select * from businesstype where buscode>='" + from + "' and buscode<='" + to + "' order by buscode";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                int i = 0;
                while (rs.next()) {
                    if (rs.isFirst()) {
                        String all = "All";
                        model.addElement(all);
                    }
                    model.addElement(rs.getString("buscode") + " - " + rs.getString("busname"));
                    i++;
                }
            } catch (SQLException ex) {
            }

        }
    }

    public void showtbl(String Code) {
        ResultSet rs = null;
        int count = 0;
        cleartbl();
        dtb = (DefaultTableModel) tbl.getModel();
        String ArrayStr[] = Code.split("-");
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "";
                if (ArrayStr[0].equals("All")) {
                    if (txtfCodeFrom.getText().equals("") && txtfCodeTo.getText().equals("")) {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode order by branfile.buscode,branfile.code";
                    } else {
                        if(txtfCodeFrom.getText().equals("")||!txtfCodeFrom.getText().equals("")&&!txtfCodeTo.getText().equals(""))
                        {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + cvth.Unicode2ASCII(txtfCodeFrom.getText()) + "' and branfile.buscode<= '" + cvth.Unicode2ASCII(txtfCodeTo.getText()) + "' order by branfile.buscode,branfile.code";
                        
                        }
                        else
                        {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + cvth.Unicode2ASCII(txtfCodeFrom.getText()) + "' and branfile.buscode<= 'ZZ' order by branfile.buscode,branfile.code";
                            
                        }
                    }
                } else {
                    sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode = '" + cvth.Unicode2ASCII(ArrayStr[0]) + "' order by branfile.code";
                }

                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    dtb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("buscode")),
                                cvth.ASCII2Unicode(rs.getString("code")),
                                cvth.ASCII2Unicode(rs.getString("name"))
                            });
                    count++;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "";
                if (ArrayStr[0].equals("All")) {
                       if (txtfCodeFrom.getText().equals("") && txtfCodeTo.getText().equals("")) {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode order by branfile.buscode,branfile.code";
                    } else {
                        if(txtfCodeFrom.getText().equals("")||!txtfCodeFrom.getText().equals("")&&!txtfCodeTo.getText().equals(""))
                        {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + txtfCodeFrom.getText() + "' and branfile.buscode<= '" + txtfCodeTo.getText() + "' order by branfile.buscode,branfile.code";
                        
                        }
                        else
                        {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + txtfCodeFrom.getText() + "' and branfile.buscode<= 'ZZ' order by branfile.buscode,branfile.code";
                            
                        }
                    }
                } else {
                    sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode = '" + ArrayStr[0] + "' order by branfile.code";
                }

                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    dtb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("buscode")),
                                cvth.ASCII2Unicode(rs.getString("code")),
                                cvth.ASCII2Unicode(rs.getString("name"))
                            });
                    count++;
                }
            }
//        if(!ArrayStr[0].equals("All"))
//        {
//        txtfCodeFrom.setText(ArrayStr[0].trim());
//        txtfCodeTo.setText(ArrayStr[0].trim());
//        }
//        else
//        {
//            txtfCodeFrom.setText("");
//            txtfCodeTo.setText("ZZ");
//        }
            db_lblCountTotal.setText(count + "");
            db_lblCountGrandTotal.setText(CountGrandTotal() + "");
        } catch (Exception e) {
        }
    }

    public void showtbl(String CodeFrom, String CodeTo) {
        ResultSet rs = null;
        int count = 0;
        cleartbl();
        dtb = (DefaultTableModel) tbl.getModel();
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "";

                sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + cvth.Unicode2ASCII(CodeFrom) + "' and branfile.buscode<= '" + cvth.Unicode2ASCII(CodeTo) + "' order by branfile.buscode,branfile.code";
                        

                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    dtb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("buscode")),
                                cvth.ASCII2Unicode(rs.getString("code")),
                                cvth.ASCII2Unicode(rs.getString("name"))
                            });
                    count++;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "";

                sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + CodeFrom + "' and branfile.buscode<= '" +CodeTo + "' order by branfile.buscode,branfile.code";
                

                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    dtb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("buscode")),
                                cvth.ASCII2Unicode(rs.getString("code")),
                                cvth.ASCII2Unicode(rs.getString("name"))
                            });
                    count++;
                }
            }
            db_lblCountTotal.setText(count + "");
            db_lblCountGrandTotal.setText(CountGrandTotal() + "");
        } catch (Exception e) {
        }
    }

    public void cleartbl() {
        dtb = (DefaultTableModel) tbl.getModel();
        int cnt = dtb.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                dtb.removeRow(0);
            }
        }
    }

    public int CountGrandTotal() {
        ResultSet rs = null;
        int count = 0;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "";

               if (txtfCodeFrom.getText().equals("") && txtfCodeTo.getText().equals("")) {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode order by branfile.buscode,branfile.code";
                    } else {
                        if(txtfCodeFrom.getText().equals("")||!txtfCodeFrom.getText().equals("")&&!txtfCodeTo.getText().equals(""))
                        {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + cvth.Unicode2ASCII(txtfCodeFrom.getText()) + "' and branfile.buscode<= '" + cvth.Unicode2ASCII(txtfCodeTo.getText()) + "' order by branfile.buscode,branfile.code";
                        
                        }
                        else
                        {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + cvth.Unicode2ASCII(txtfCodeFrom.getText()) + "' and branfile.buscode<= 'ZZ' order by branfile.buscode,branfile.code";
                            
                        }
                    }

                rs = stmt.executeQuery(sql);
                while (rs.next()) {

                    count++;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "";

                if (txtfCodeFrom.getText().equals("") && txtfCodeTo.getText().equals("")) {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode order by branfile.buscode,branfile.code";
                    } else {
                        if(txtfCodeFrom.getText().equals("")||!txtfCodeFrom.getText().equals("")&&!txtfCodeTo.getText().equals(""))
                        {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + txtfCodeFrom.getText() + "' and branfile.buscode<= '" + txtfCodeTo.getText() + "' order by branfile.buscode,branfile.code";
                        
                        }
                        else
                        {
                        sql = "select CONCAT(bus.buscode,' - ',bus.busname) as buscode,branfile.code as code,branfile.name as name from branfile inner join businesstype as bus on branfile.buscode = bus.buscode where branfile.buscode >= '" + txtfCodeFrom.getText() + "' and branfile.buscode<= 'ZZ' order by branfile.buscode,branfile.code";
                            
                        }
                    }

                rs = stmt.executeQuery(sql);
                while (rs.next()) {

                    count++;
                }
            }
            //db_lblCount1.setText(count+"");
        } catch (Exception e) {
        }
        return count;
    }

    public void btnSearchSettext(int txtfno) {
        listBustype f = new listBustype(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.bcode.equals("")) {
            if (txtfno == 1) {
                txtfCodeFrom.setText(f.bcode);
                txtfCodeFrom.requestFocus();
            } else if (txtfno == 2) {
                txtfCodeTo.setText(f.bcode);
                txtfCodeTo.requestFocus();
            }

        }
    }

    private void initable() {
        dtb = (DefaultTableModel) tbl.getModel();
        jtb = (JTableHeader) tbl.getTableHeader();
        tbl.setShowGrid(true);
        //tblPLU.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl.setRowSelectionAllowed(true);
        tbl.setBackground(java.awt.Color.WHITE);
        tbl.setGridColor(java.awt.Color.gray);
        JTableHeader header = tbl.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        //tblBtype.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl.setRowHeight(25);

        DefaultTableCellRenderer r;
        r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c;
        c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer l;
        l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);

        TableColumnModel tcm = tbl.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(l);
        tbl.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tbl.setAutoCreateRowSorter(true);
    }

    private void btnProcress() {
        if (!txtfCodeFrom.getText().equals("") || !txtfCodeTo.getText().equals("")) {
            if(txtfCodeFrom.getText().equals("")||!txtfCodeFrom.getText().equals("")&&!txtfCodeTo.getText().equals(""))
            {
                showtbl(txtfCodeFrom.getText(), txtfCodeTo.getText());
                loadlist(txtfCodeFrom.getText(), txtfCodeTo.getText());
            }
            else if(txtfCodeTo.getText().equals(""))
            {
                showtbl(txtfCodeFrom.getText(), "ZZ");
                loadlist(txtfCodeFrom.getText(), "ZZ");
            }
            
            
        } else {
            showtbl("  ", "ZZ");
            loadlist();
        }
    }
}
