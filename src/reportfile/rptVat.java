/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportfile;

import borfunction.GetComputerName;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import dbutility.dbUtility;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import reportModel.reportEmpAvgModel;
import reportModel.reportVatModel;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.*;

/**
 *
 * @author s386
 */
public class rptVat extends javax.swing.JDialog {

    /**
     * Creates new form rptVat
     */
    public static String date1 = "",date2 ="",dept1="",dept2="",plu1="",plu2="",branch1="",branch2="",btype1="",btype2=""
            ,barea1="",barea2="",bsize1="",bsize2="",bplan1="",bplan2="",bstore1="",bstore2="",strday=""
            ,company1="",company2="",brand1="",brand2="",bustype1="",bustype2="",code="",name="";
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    String frmName = "rptVat";
    ThaiUtilities cvth = new ThaiUtilities();
    private String condition = "";
    dbUtility db = new dbUtility();
    public rptVat(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
        comname = new GetComputerName().getComputerName();
        inittbl();
        getLanguage lang = new getLanguage();
        lang.setText(frmName, this, lang.getChklang());
        setTxt();
    }

    public rptVat() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new org.jdesktop.swingx.JXTreeTable();
        jPanel6 = new javax.swing.JPanel();
        lbldate = new javax.swing.JLabel();
        db_lblh1 = new javax.swing.JLabel();
        db_btnExpand = new javax.swing.JButton();
        lblbranch = new javax.swing.JLabel();
        db_lblh2 = new javax.swing.JLabel();
        db_btnExel = new javax.swing.JButton();
        db_btnPrint = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbl.setName("tbl"); // NOI18N
        jScrollPane1.setViewportView(tbl);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbldate.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate.setText("-");
        lbldate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh1.setText("วันที่ (Date)");
        db_lblh1.setName("db_lblh1"); // NOI18N

        db_btnExpand.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExpand.setText("Expand On/Off");
        db_btnExpand.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExpand.setIconTextGap(0);
        db_btnExpand.setName("db_btnExpand"); // NOI18N
        db_btnExpand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExpand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExpandActionPerformed(evt);
            }
        });

        lblbranch.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lblbranch.setText("-");
        lblbranch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh2.setText("สาขา");
        db_lblh2.setName("db_lblh2"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_lblh1)
                        .addGap(18, 18, 18)
                        .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_lblh2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblbranch, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(db_btnExpand)
                .addContainerGap(272, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_btnExpand)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(db_lblh1)
                            .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(db_lblh2)
                            .addComponent(lblbranch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        db_btnExel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel.setText("Exel File");
        db_btnExel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel.setIconTextGap(0);
        db_btnExel.setName("db_btnExel"); // NOI18N
        db_btnExel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExelActionPerformed(evt);
            }
        });

        db_btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        db_btnPrint.setText("พิมม์");
        db_btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnPrint.setIconTextGap(0);
        db_btnPrint.setName("db_btnPrint"); // NOI18N
        db_btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnPrintActionPerformed(evt);
            }
        });

        btnExit1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit1.setIconTextGap(0);
        btnExit1.setName("db_btnExit"); // NOI18N
        btnExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1032)/2, (screenSize.height-796)/2, 1032, 796);
    }// </editor-fold>//GEN-END:initComponents

    private void db_btnExpandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExpandActionPerformed
        if (tbl.isExpanded(0)) {
            tbl.collapseAll();
        } else {
            tbl.expandAll();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnExpandActionPerformed

    private void db_btnExelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExelActionPerformed
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        setTxt();
        try {
            

            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();


                
                
                if(curFile.exists())
                {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        db_btnExelActionPerformed(null);
                        
                        return;

                    }
                    
                }
                
                   
                try {
                    test.setOutputFile(curFile.toString());
                    test.writeTreetableContditionNoSum(tbl, tbl.getColumnModel(), condition);
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
                
                
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_db_btnExelActionPerformed

    private void db_btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnPrintActionPerformed


        // TODO add your handling code here:
  }//GEN-LAST:event_db_btnPrintActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExit1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rptVat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rptVat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rptVat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rptVat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                rptVat dialog = new rptVat(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton db_btnExel;
    private javax.swing.JButton db_btnExpand;
    private javax.swing.JButton db_btnPrint;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JLabel db_lblh2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblbranch;
    private javax.swing.JLabel lbldate;
    private org.jdesktop.swingx.JXTreeTable tbl;
    // End of variables declaration//GEN-END:variables
private void inittbl()
{
    try {
            
            
            TableColumnModel tcm = new DefaultTableColumnModel();
            
            TableColumn tc1 = new TableColumn(0,250);
            tc1.setHeaderValue("สาขา");
            TableColumn tc2 = new TableColumn(1,50);
            tc2.setHeaderValue("เขต");
            TableColumn tc3 = new TableColumn(2,100);
            tc3.setHeaderValue("วันที่");
            TableColumn tc4 = new TableColumn(3,100);
            tc4.setHeaderValue("(1)รหัสอนุมัติฯ");
            TableColumn tc5 = new TableColumn(4,100);
            tc5.setHeaderValue("(1)บิลเริ่มต้น");
            TableColumn tc6 = new TableColumn(5,100);
            tc6.setHeaderValue("(1)บิลสิ้นสุด");
            TableColumn tc7 = new TableColumn(6,100);
            tc7.setHeaderValue("(1)จำนวนเงิน");
            TableColumn tc8 = new TableColumn(7,100);
            tc8.setHeaderValue("(2)รหัสอนุมัติฯ");
            TableColumn tc9 = new TableColumn(8,100);
            tc9.setHeaderValue("(2)บิลเริ่มต้น");
            TableColumn tc10 = new TableColumn(9,100);
            tc10.setHeaderValue("(2)บิลสิ้นสุด");
            TableColumn tc11 = new TableColumn(10,100);
            tc11.setHeaderValue("(2)จำนวนเงิน");
            TableColumn tc12 = new TableColumn(11,100);
            tc12.setHeaderValue("(3)รหัสอนุมัติฯ");
            TableColumn tc13 = new TableColumn(12,100);
            tc13.setHeaderValue("(3)บิลเริ่มต้น");
            TableColumn tc14 = new TableColumn(13,100);
            tc14.setHeaderValue("(3)บิลสิ้นสุด");
            TableColumn tc15 = new TableColumn(14,100);
            tc15.setHeaderValue("(3)จำนวนเงิน");
            TableColumn tc16 = new TableColumn(15,100);
            tc16.setHeaderValue("มูลค่าสินค้า/บริการ");
            TableColumn tc17 = new TableColumn(16,100);
            tc17.setHeaderValue("ภาษีมูลค่าเพิ่ม");
//            TableColumn tc31 = new TableColumn(30,100);
//            tc31.setHeaderValue("S_Price");
            
            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            tcm.addColumn(tc11);
            tcm.addColumn(tc12);
            tcm.addColumn(tc13);
            tcm.addColumn(tc14);
            tcm.addColumn(tc15);
            tcm.addColumn(tc16);
            tcm.addColumn(tc17);
            
            
//            tcm.addColumn(tc31);
            
      
        
        tcm.getColumn(0).setCellRenderer(FormatCell.l());
        tcm.getColumn(1).setCellRenderer(FormatCell.l());
        tcm.getColumn(2).setCellRenderer(FormatCell.l());
        tcm.getColumn(3).setCellRenderer(FormatCell.l());
        tcm.getColumn(4).setCellRenderer(FormatCell.l());
       tcm.getColumn(5).setCellRenderer(FormatCell.l());
       tcm.getColumn(6).setCellRenderer(FormatCell.color1());
       tcm.getColumn(7).setCellRenderer(FormatCell.l());
       tcm.getColumn(8).setCellRenderer(FormatCell.l());
       tcm.getColumn(9).setCellRenderer(FormatCell.l());
       tcm.getColumn(10).setCellRenderer(FormatCell.color1());
       tcm.getColumn(11).setCellRenderer(FormatCell.l());
       tcm.getColumn(12).setCellRenderer(FormatCell.l());
       tcm.getColumn(13).setCellRenderer(FormatCell.l());
       tcm.getColumn(14).setCellRenderer(FormatCell.color1());
        tcm.getColumn(15).setCellRenderer(FormatCell.color1());
        tcm.getColumn(16).setCellRenderer(FormatCell.color1());
       
        
        
        tbl.setEditable(false);//ห้ามแก้ไขตาราง
        tbl.setShowGrid(true);
        tbl.setFont(fontplain);
        tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl.setRowSelectionAllowed(true);
        tbl.setBackground(java.awt.Color.WHITE);
        tbl.setGridColor(java.awt.Color.gray);
        tbl.setRowHeight(24);
        
            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            String d1 = "";
            String d2 = "";
            if(!date1.equals(""))
            {
            Date d = Format.dateFmtShow.parse(date1);
            d1= Format.dateFmtSql.format(d);
            }
            if(!date2.equals(""))
            {
            Date dd = Format.dateFmtShow.parse(date2);
            d2= Format.dateFmtSql.format(dd);
            }
            setTemp();
            String sql="Select *From tempvat where comname = '"+comname+"' Order by TBran,TDate";
            
            reportVatModel treemodel = new reportVatModel(sql,code,name);
            tbl.setTreeTableModel(treemodel);
            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);
            ((JXTree)tbl.getCellRenderer(0,tbl.getHierarchicalColumn())).setFont(fontplain);
            setTxt();
            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
          //  h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);
            //tbl.getColumnModel().removeColumn(tc3);
            //tbl.getColumnModel().removeColumn(tc4);
        } catch (ParseException ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        }
}
String comname = "";
private void setTemp()
{
    try {
            String d1 = "";
            String d2 = "";
            String TBran = "";
            String TBranName = "";
            String TArea = "";
            String TAreaName = "";
            Date Tdate = null;
            String TMac1BS = "-";
            String TMac1BE = "-";
            double TMac1SV = 0;
            double TMac1SN = 0;
            double TMac1V = 0;
            double TMac1Amt = 0;
            int TMac1Bill = 0;
            String TMac2BS = "-";
            String TMac2BE = "-";
            double TMac2SV = 0;
            double TMac2SN = 0;
            double TMac2V = 0;
            double TMac2Amt = 0;
            int TMac2Bill = 0;
            String TMac3BS = "-";
            String TMac3BE = "-";
            double TMac3SV = 0;
            double TMac3SN = 0;
            double TMac3V = 0;
            double TMac3Amt = 0;
            int TMac3Bill = 0;
            double TMacSV = 0;
            double TMacSN =0;
            double TMacV = 0;
            double TMacAmt = 0;
            int TMacBill = 0;
            Date TempDate = null;
            Date chkDate = null;
            String curBran = "";
            Date curDate ;
            String TMacNo = "";
            String TempBran = "";
            String TempName = "";
            String TempArea = "";
            String TMac1="",TMac2="",TMac3="";
            Date d = null;
            Date dd = null;
            Date chkdate = null;
            deletetemp(comname);
            if(!date1.equals(""))
            {
            
                d = Format.dateFmtShow.parse(date1);
                d1= Format.dateFmtSql.format(d);
            } 
            if(!date2.equals(""))
            {
            dd = Format.dateFmtShow.parse(date2);
            d2= Format.dateFmtSql.format(dd);
            }
            String sql="";
            if(dbutility.dbUtility.Char_Set.equalsIgnoreCase("utf-8"))
            {
                sql = "Select S_Bran,PostDate,PMacNo,Min(PInvNo),Max(PInvNo),Count(*),Sum(PSVat),Sum(PSNVat),Sum(PSVat+PSNVat),Sum(PVat),"
                        + "b.barea,b.Name name,b.TMac1,b.TMac2,b.TMac3 "
                        + "From dinvoice d left join branfile b on d.S_Bran=b.Code "
                        + " "
                        +"where " 
                        +"d.PostDate>= '"+d1+"' and d.PostDate<='"+d2+"' "
                        +"and d.s_bran >= '"+branch1+"' and d.s_bran <= '"+branch2+"' "
                        +"and b.btype >= '"+btype1+"' and b.btype <= '"+btype2+"' "
                        +"and b.barea >= '"+barea1+"' and b.barea <= '"+barea2+"' "
                        +"and b.bsize >= '"+bsize1+"' and b.bsize <= '"+bsize2+"' "
                        +"and b.bplane >= '"+bplan1+"' and b.bplane <= '"+bplan2+"' "
                        +"and b.bstore >= '"+bstore1+"' and b.bstore <= '"+bstore2+"' "
                        +"and b.companycode >= '"+company1+"' and b.companycode <= '"+company2+"' "
                        +"and b.brandcode >= '"+brand1+"' and b.brandcode <= '"+brand2+"' "
                        +"and b.buscode >= '"+bustype1+"' and b.buscode <= '"+bustype2+"' "
                        +"and PFlage<>'V' "
                        +"Group By d.S_Bran,d.PostDate,d.PMacNo "
                        + "Order By d.S_Bran,d.PostDate,d.PMacNo,d.PInvNo";
                ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
                while(rs.next())
                {
                    if(rs.isFirst())
                    {
                        if(rs.getString("s_bran")!= null)
                        {
                            TempBran = rs.getString("s_bran");
                        }
                        else
                        {
                            TempBran = "";
                        }
                         if(rs.getString("name")!= null)
                        {
                            TempName = rs.getString("name");
                        }
                        else
                        {
                            TempName = "";
                        }

                        if(rs.getString("barea")!= null)
                        {
                            TempArea = rs.getString("barea");
                        }
                        else
                        {
                            TempArea = "";
                        }

                        if(rs.getString("postdate")!= null)
                        {
                            TempDate = rs.getDate("postdate");
                        }
                    }
                    
                    if(rs.getString("s_bran")!= null)
                    {
                        curBran = rs.getString("s_bran");
                    }
                    else
                    {
                        curBran = "";
                    }
                    
                    if(rs.getString("postdate")!= null)
                    {
                        curDate = rs.getDate("postdate");
                    }
                    else
                    {
                        curDate = new Date();
                    }
                    
                    if((!TempBran.equals(curBran)) || (TempDate.compareTo(curDate)!=0))
                    {
                        //insert data1
                        String sqltemp = "Insert Into tempvat (TBran,TBranName,TArea,TAreaName,TDate"
                                + ",TMac1BS,TMac1BE,TMac1SV,TMac1SN,TMac1V,TMac1Amt,TMac1Bill"
                                + ",TMac2BS,TMac2BE,TMac2SV,TMac2SN,TMac2V,TMac2Amt,TMac2Bill"
                                + ",TMac3BS,TMac3BE,TMac3SV,TMac3SN,TMac3V,TMac3Amt,TMac3Bil"
                                + "l,TMacSV,TMacSN,TMacV,TMacAmt,TMacBill,TMac1,TMac2,TMac3,comname) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, TBran);
                        prm.setString(2, TBranName);
                        prm.setString(3, TArea);
                        prm.setString(4, TAreaName);
                        prm.setString(5, Format.dateFmtSql.format(Tdate));
                        prm.setString(6,  TMac1BS);
                        prm.setString(7,  TMac1BE);
                        prm.setDouble(8,  TMac1SV);
                        prm.setDouble(9,  TMac1SN);
                        prm.setDouble(10,  TMac1V);
                        prm.setDouble(11,  TMac1Amt);
                        prm.setInt(12,  TMac1Bill);
                        prm.setString(13,  TMac2BS);
                        prm.setString(14,  TMac2BE);
                        prm.setDouble(15,  TMac2SV);
                        prm.setDouble(16,  TMac2SN);
                        prm.setDouble(17,  TMac2V);
                        prm.setDouble(18,  TMac2Amt);
                        prm.setInt(19,  TMac2Bill);
                        prm.setString(20,  TMac3BS);
                        prm.setString(21,  TMac3BE);
                        prm.setDouble(22,  TMac3SV);
                        prm.setDouble(23,  TMac3SN);
                        prm.setDouble(24,  TMac3V);
                        prm.setDouble(25,  TMac3Amt);
                        prm.setInt(26,  TMac3Bill);
                        prm.setDouble(27,  TMacSV);
                        prm.setDouble(28,  TMacSN);
                        prm.setDouble(29,  TMacV);
                        prm.setDouble(30,  TMacAmt);
                        prm.setInt(31,  TMacBill);
                        prm.setString(32,  TMac1);
                        prm.setString(33,  TMac2);
                        prm.setString(34,  TMac3);
                        prm.setString(35, comname);
                        prm.executeUpdate();
                        
                        
                        if(!TempBran.equals(curBran))
                        {
                        chkDate = d;
                        while(chkDate.compareTo(dd)<=0)
                        {
                            if(!chkTemp(TempBran, Format.dateFmtSql.format(chkDate),comname))
                            {
                                sqltemp = "Insert Into tempvat (TBran,TBranName,TArea,TAreaName,TDate"
                                + ",TMac1BS,TMac1BE,TMac1SV,TMac1SN,TMac1V,TMac1Amt,TMac1Bill"
                                + ",TMac2BS,TMac2BE,TMac2SV,TMac2SN,TMac2V,TMac2Amt,TMac2Bill"
                                + ",TMac3BS,TMac3BE,TMac3SV,TMac3SN,TMac3V,TMac3Amt,TMac3Bil"
                                + "l,TMacSV,TMacSN,TMacV,TMacAmt,TMacBill,TMac1,TMac2,TMac3,comname) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                                prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                                prm.setString(1, TempBran);
                                prm.setString(2, TempName);
                                prm.setString(3, TempArea);
                                prm.setString(4, "");
                                prm.setString(5, Format.dateFmtSql.format(chkDate));
                                prm.setString(6,  "-");
                                prm.setString(7,  "-");
                                prm.setDouble(8,  0);
                                prm.setDouble(9,  0);
                                prm.setDouble(10,  0);
                                prm.setDouble(11,  0);
                                prm.setInt(12,  0);
                                prm.setString(13,  "-");
                                prm.setString(14,  "-");
                                prm.setDouble(15,  0);
                                prm.setDouble(16,  0);
                                prm.setDouble(17,  0);
                                prm.setDouble(18,  0);
                                prm.setInt(19,  0);
                                prm.setString(20,  "-");
                                prm.setString(21,  "-");
                                prm.setDouble(22,  0);
                                prm.setDouble(23,  0);
                                prm.setDouble(24,  0);
                                prm.setDouble(25,  0);
                                prm.setInt(26,  0);
                                prm.setDouble(27,  0);
                                prm.setDouble(28,  0);
                                prm.setDouble(29,  0);
                                prm.setDouble(30,  0);
                                prm.setInt(31,  0);
                                prm.setString(32,  TMac1);
                                prm.setString(33,  TMac2);
                                prm.setString(34,  TMac3);
                                prm.setString(35, comname);
                                prm.executeUpdate();
                            
                            }
                            chkDate = DateUtil.addDate(chkDate, 1);
                        }
                        
                        }
                        
                        
                        if(rs.getString("s_bran")!= null)
                        {
                            TempBran = rs.getString("s_bran");
                        }
                        else
                        {
                            TempBran = "";
                        }

                        


                        if(rs.getString("name")!= null)
                        {
                            TempName = rs.getString("name");
                        }
                        else
                        {
                            TempName = "";
                        }

                        if(rs.getString("barea")!= null)
                        {
                            TempArea = rs.getString("barea");
                        }
                        else
                        {
                            TempArea = "";
                        }

                        if(rs.getString("postdate")!= null)
                        {
                            TempDate = rs.getDate("postdate");
                        }
                        
                        //clear variable
                        TBran = "";
                        TBranName = "";
                        TArea = "";
                        TAreaName = "";
                        Tdate = null;
                        TMac1BS = "-";
                        TMac1BE = "-";
                        TMac1SV = 0;
                        TMac1SN = 0;
                        TMac1V = 0;
                        TMac1Amt = 0;
                        TMac1Bill = 0;
                        TMac2BS = "-";
                        TMac2BE = "-";
                        TMac2SV = 0;
                        TMac2SN = 0;
                        TMac2V = 0;
                        TMac2Amt = 0;
                        TMac2Bill = 0;
                        TMac3BS = "-";
                        TMac3BE = "-";
                        TMac3SV = 0;
                        TMac3SN = 0;
                        TMac3V = 0;
                        TMac3Amt = 0;
                        TMac3Bill = 0;
                        TMacSV = 0;
                        TMacSN = 0;
                        TMacV = 0;
                        TMacNo = "";
                        TMacAmt = 0;
                        TMacBill = 0;
                        TMac1 = "";
                        TMac2 = "";
                        TMac3 = "";
                    }
                    
                    if(rs.getString("s_bran")!= null)
                    {
                        TBran = rs.getString("s_bran");
                    }
                    else
                    {
                        TBran = "";
                    }
                    
                    if(rs.getString("pmacno")!= null)
                    {
                        TMacNo = rs.getString("pmacno");
                    }
                    else
                    {
                        TMacNo = "";
                    }
                    
                    
                    
                    if(rs.getString("name")!= null)
                    {
                        TBranName = rs.getString("name");
                    }
                    else
                    {
                        TBranName = "";
                    }
                    
                    if(rs.getString("barea")!= null)
                    {
                        TArea = rs.getString("barea");
                    }
                    else
                    {
                        TArea = "";
                    }
                    
                    if(rs.getString("postdate")!= null)
                    {
                        Tdate = rs.getDate("postdate");
                    }
                    
                    if(rs.getString("tmac1")!= null)
                    {
                        TMac1 = rs.getString("tmac1");
                    }
                    else
                    {
                        TMac1 = "";
                    }
                    
                    if(rs.getString("tmac2")!= null)
                    {
                        TMac2 = rs.getString("tmac2");
                    }
                    else
                    {
                        TMac2 = "";
                    }
                    
                    if(rs.getString("tmac3")!= null)
                    {
                        TMac3 = rs.getString("tmac3");
                    }
                    else
                    {
                        TMac3 = "";
                    }
                    if(TMacNo.equals("001"))
                    {
                        if(rs.getString("Min(PInvNo)")!= null)
                        {
                            TMac1BS = rs.getString("Min(PInvNo)");
                        }
                        else
                        {
                            TMac1BS = "-";
                        }
                        
                        if(rs.getString("Max(PInvNo)")!= null)
                        {
                            TMac1BE = rs.getString("Max(PInvNo)");
                        }
                        else
                        {
                            TMac1BE = "-";
                        }
                        
                        TMac1SV = rs.getDouble("Sum(PSVat)");
                        TMacSV += rs.getDouble("Sum(PSVat)"); 
                        
                        TMac1SN = rs.getDouble("Sum(PSNVat)");
                        TMacSN += rs.getDouble("Sum(PSNVat)");
                        
                        TMac1V = rs.getDouble("Sum(PVat)");
                        TMacV += rs.getDouble("Sum(PVat)");
                        
                        TMac1Amt = rs.getDouble("Sum(PSVat+PSNVat)");
                        TMacAmt += rs.getDouble("Sum(PSVat+PSNVat)");
                        
                        TMac1Bill = rs.getInt("Count(*)");
                        TMacBill += rs.getInt("Count(*)");
                    }
                    else if(TMacNo.equals("002"))
                    {
                        if(rs.getString("Min(PInvNo)")!= null)
                        {
                            TMac2BS = rs.getString("Min(PInvNo)");
                        }
                        else
                        {
                            TMac2BS = "-";
                        }
                        
                        if(rs.getString("Max(PInvNo)")!= null)
                        {
                            TMac2BE = rs.getString("Max(PInvNo)");
                        }
                        else
                        {
                            TMac2BE = "-";
                        }
                        
                        TMac2SV = rs.getDouble("Sum(PSVat)");
                        TMacSV += rs.getDouble("Sum(PSVat)"); 
                        
                        TMac2SN = rs.getDouble("Sum(PSNVat)");
                        TMacSN += rs.getDouble("Sum(PSNVat)");
                        
                        TMac2V = rs.getDouble("Sum(PVat)");
                        TMacV += rs.getDouble("Sum(PVat)");
                        
                        TMac2Amt = rs.getDouble("Sum(PSVat+PSNVat)");
                        TMacAmt += rs.getDouble("Sum(PSVat+PSNVat)");
                        
                        TMac2Bill = rs.getInt("Count(*)");
                        TMacBill += rs.getInt("Count(*)");
                    }
                    else if(TMacNo.equals("003"))
                    {
                        if(rs.getString("Min(PInvNo)")!= null)
                        {
                            TMac3BS = rs.getString("Min(PInvNo)");
                        }
                        else
                        {
                            TMac3BS = "-";
                        }
                        
                        if(rs.getString("Max(PInvNo)")!= null)
                        {
                            TMac3BE = rs.getString("Max(PInvNo)");
                        }
                        else
                        {
                            TMac3BE = "-";
                        }
                        
                        TMac3SV = rs.getDouble("Sum(PSVat)");
                        TMacSV += rs.getDouble("Sum(PSVat)"); 
                        
                        TMac3SN = rs.getDouble("Sum(PSNVat)");
                        TMacSN += rs.getDouble("Sum(PSNVat)");
                        
                        TMac3V = rs.getDouble("Sum(PVat)");
                        TMacV += rs.getDouble("Sum(PVat)");
                        
                        TMac3Amt = rs.getDouble("Sum(PSVat+PSNVat)");
                        TMacAmt += rs.getDouble("Sum(PSVat+PSNVat)");
                        
                        TMac3Bill = rs.getInt("Count(*)");
                        TMacBill += rs.getInt("Count(*)");
                    }
                    
                    
                    
                }
                if(TMacAmt!=0)
                {
                     String sqltemp = "Insert Into tempvat (TBran,TBranName,TArea,TAreaName,TDate"
                                + ",TMac1BS,TMac1BE,TMac1SV,TMac1SN,TMac1V,TMac1Amt,TMac1Bill"
                                + ",TMac2BS,TMac2BE,TMac2SV,TMac2SN,TMac2V,TMac2Amt,TMac2Bill"
                                + ",TMac3BS,TMac3BE,TMac3SV,TMac3SN,TMac3V,TMac3Amt,TMac3Bil"
                                + "l,TMacSV,TMacSN,TMacV,TMacAmt,TMacBill,TMac1,TMac2,TMac3,comname) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, TBran);
                        prm.setString(2, TBranName);
                        prm.setString(3, TArea);
                        prm.setString(4, TAreaName);
                        prm.setString(5, Format.dateFmtSql.format(Tdate));
                        prm.setString(6,  TMac1BS);
                        prm.setString(7,  TMac1BE);
                        prm.setDouble(8,  TMac1SV);
                        prm.setDouble(9,  TMac1SN);
                        prm.setDouble(10,  TMac1V);
                        prm.setDouble(11,  TMac1Amt);
                        prm.setInt(12,  TMac1Bill);
                        prm.setString(13,  TMac2BS);
                        prm.setString(14,  TMac2BE);
                        prm.setDouble(15,  TMac2SV);
                        prm.setDouble(16,  TMac2SN);
                        prm.setDouble(17,  TMac2V);
                        prm.setDouble(18,  TMac2Amt);
                        prm.setInt(19,  TMac2Bill);
                        prm.setString(20,  TMac3BS);
                        prm.setString(21,  TMac3BE);
                        prm.setDouble(22,  TMac3SV);
                        prm.setDouble(23,  TMac3SN);
                        prm.setDouble(24,  TMac3V);
                        prm.setDouble(25,  TMac3Amt);
                        prm.setInt(26,  TMac3Bill);
                        prm.setDouble(27,  TMacSV);
                        prm.setDouble(28,  TMacSN);
                        prm.setDouble(29,  TMacV);
                        prm.setDouble(30,  TMacAmt);
                        prm.setInt(31,  TMacBill);
                        prm.setString(32,  TMac1);
                        prm.setString(33,  TMac2);
                        prm.setString(34,  TMac3);
                        prm.setString(35, comname);
                        prm.executeUpdate();
                }
                        chkDate = d;
                        while(chkDate.compareTo(dd)<=0)
                        {
                            if(!chkTemp(TempBran, Format.dateFmtSql.format(chkDate),comname))
                            {
                                String sqltemp = "Insert Into tempvat (TBran,TBranName,TArea,TAreaName,TDate"
                                + ",TMac1BS,TMac1BE,TMac1SV,TMac1SN,TMac1V,TMac1Amt,TMac1Bill"
                                + ",TMac2BS,TMac2BE,TMac2SV,TMac2SN,TMac2V,TMac2Amt,TMac2Bill"
                                + ",TMac3BS,TMac3BE,TMac3SV,TMac3SN,TMac3V,TMac3Amt,TMac3Bil"
                                + "l,TMacSV,TMacSN,TMacV,TMacAmt,TMacBill,TMac1,TMac2,TMac3,comname) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                                PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                                prm.setString(1, TempBran);
                                prm.setString(2, TempName);
                                prm.setString(3, TempArea);
                                prm.setString(4, "");
                                prm.setString(5, Format.dateFmtSql.format(chkDate));
                                prm.setString(6,  "-");
                                prm.setString(7,  "-");
                                prm.setDouble(8,  0);
                                prm.setDouble(9,  0);
                                prm.setDouble(10,  0);
                                prm.setDouble(11,  0);
                                prm.setInt(12,  0);
                                prm.setString(13,  "-");
                                prm.setString(14,  "-");
                                prm.setDouble(15,  0);
                                prm.setDouble(16,  0);
                                prm.setDouble(17,  0);
                                prm.setDouble(18,  0);
                                prm.setInt(19,  0);
                                prm.setString(20,  "-");
                                prm.setString(21,  "-");
                                prm.setDouble(22,  0);
                                prm.setDouble(23,  0);
                                prm.setDouble(24,  0);
                                prm.setDouble(25,  0);
                                prm.setInt(26,  0);
                                prm.setDouble(27,  0);
                                prm.setDouble(28,  0);
                                prm.setDouble(29,  0);
                                prm.setDouble(30,  0);
                                prm.setInt(31,  0);
                                prm.setString(32,  TMac1);
                                prm.setString(33,  TMac2);
                                prm.setString(34,  TMac3);
                                prm.setString(35, comname);
                                prm.executeUpdate();
                            
                            }
                            chkDate = DateUtil.addDate(chkDate, 1);
                        }
            
            }
            else
            {
                sql = "Select S_Bran,PostDate,PMacNo,Min(PInvNo),Max(PInvNo),Count(*),Sum(PSVat),Sum(PSNVat),Sum(PSVat+PSNVat),Sum(PVat),"
                        + "b.barea,b.Name name,b.TMac1,b.TMac2,b.TMac3 "
                        + "From dinvoice d left join branfile b on d.S_Bran=b.Code "
                        + " "
                        +"where " 
                        +"d.PostDate>= '"+d1+"' and d.PostDate<='"+d2+"' "
                        +"and d.s_bran >= '"+cvth.Unicode2ASCII(branch1)+"' and d.s_bran <= '"+cvth.Unicode2ASCII(branch2)+"' "
                        +"and b.btype >= '"+cvth.Unicode2ASCII(btype1)+"' and b.btype <= '"+cvth.Unicode2ASCII(btype2)+"' "
                        +"and b.barea >= '"+cvth.Unicode2ASCII(barea1)+"' and b.barea <= '"+cvth.Unicode2ASCII(barea2)+"' "
                        +"and b.bsize >= '"+cvth.Unicode2ASCII(bsize1)+"' and b.bsize <= '"+cvth.Unicode2ASCII(bsize2)+"' "
                        +"and b.bplane >= '"+cvth.Unicode2ASCII(bplan1)+"' and b.bplane <= '"+cvth.Unicode2ASCII(bplan2)+"' "
                        +"and b.bstore >= '"+cvth.Unicode2ASCII(bstore1)+"' and b.bstore <= '"+cvth.Unicode2ASCII(bstore2)+"' "
                        +"and b.companycode >= '"+cvth.Unicode2ASCII(company1)+"' and b.companycode <= '"+cvth.Unicode2ASCII(company2)+"' "
                        +"and b.brandcode >= '"+cvth.Unicode2ASCII(brand1)+"' and b.brandcode <= '"+cvth.Unicode2ASCII(brand2)+"' "
                        +"and b.buscode >= '"+cvth.Unicode2ASCII(bustype1)+"' and b.buscode <= '"+cvth.Unicode2ASCII(bustype2)+"' "
                        +"and PFlage<>'V' "
                        +"Group By d.S_Bran,d.PostDate,d.PMacNo "
                        + "Order By d.S_Bran,d.PostDate,d.PMacNo,d.PInvNo";
                ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
                while(rs.next())
                {
                    if(rs.isFirst())
                    {
                        if(rs.getString("s_bran")!= null)
                        {
                            TempBran = rs.getString("s_bran");
                        }
                        else
                        {
                            TempBran = "";
                        }
                         if(rs.getString("name")!= null)
                        {
                            TempName = rs.getString("name");
                        }
                        else
                        {
                            TempName = "";
                        }

                        if(rs.getString("barea")!= null)
                        {
                            TempArea = rs.getString("barea");
                        }
                        else
                        {
                            TempArea = "";
                        }

                        if(rs.getString("postdate")!= null)
                        {
                            TempDate = rs.getDate("postdate");
                        }
                    }
                    
                    if(rs.getString("s_bran")!= null)
                    {
                        curBran = rs.getString("s_bran");
                    }
                    else
                    {
                        curBran = "";
                    }
                    
                    if(rs.getString("postdate")!= null)
                    {
                        curDate = rs.getDate("postdate");
                    }
                    else
                    {
                        curDate = new Date();
                    }
                    
                    if((!TempBran.equals(curBran)) || (TempDate.compareTo(curDate)!=0))
                    {
                        //insert data1
                        String sqltemp = "Insert Into tempvat (TBran,TBranName,TArea,TAreaName,TDate"
                                + ",TMac1BS,TMac1BE,TMac1SV,TMac1SN,TMac1V,TMac1Amt,TMac1Bill"
                                + ",TMac2BS,TMac2BE,TMac2SV,TMac2SN,TMac2V,TMac2Amt,TMac2Bill"
                                + ",TMac3BS,TMac3BE,TMac3SV,TMac3SN,TMac3V,TMac3Amt,TMac3Bil"
                                + "l,TMacSV,TMacSN,TMacV,TMacAmt,TMacBill,TMac1,TMac2,TMac3,comname) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, TBran);
                        prm.setString(2, TBranName);
                        prm.setString(3, TArea);
                        prm.setString(4, TAreaName);
                        prm.setString(5, Format.dateFmtSql.format(Tdate));
                        prm.setString(6,  TMac1BS);
                        prm.setString(7,  TMac1BE);
                        prm.setDouble(8,  TMac1SV);
                        prm.setDouble(9,  TMac1SN);
                        prm.setDouble(10,  TMac1V);
                        prm.setDouble(11,  TMac1Amt);
                        prm.setInt(12,  TMac1Bill);
                        prm.setString(13,  TMac2BS);
                        prm.setString(14,  TMac2BE);
                        prm.setDouble(15,  TMac2SV);
                        prm.setDouble(16,  TMac2SN);
                        prm.setDouble(17,  TMac2V);
                        prm.setDouble(18,  TMac2Amt);
                        prm.setInt(19,  TMac2Bill);
                        prm.setString(20,  TMac3BS);
                        prm.setString(21,  TMac3BE);
                        prm.setDouble(22,  TMac3SV);
                        prm.setDouble(23,  TMac3SN);
                        prm.setDouble(24,  TMac3V);
                        prm.setDouble(25,  TMac3Amt);
                        prm.setInt(26,  TMac3Bill);
                        prm.setDouble(27,  TMacSV);
                        prm.setDouble(28,  TMacSN);
                        prm.setDouble(29,  TMacV);
                        prm.setDouble(30,  TMacAmt);
                        prm.setInt(31,  TMacBill);
                        prm.setString(32,  TMac1);
                        prm.setString(33,  TMac2);
                        prm.setString(34,  TMac3);
                        prm.setString(35, comname);
                        prm.executeUpdate();
                        
                        
                        if(!TempBran.equals(curBran))
                        {
                        chkDate = d;
                        while(chkDate.compareTo(dd)<=0)
                        {
                            if(!chkTemp(TempBran, Format.dateFmtSql.format(chkDate),comname))
                            {
                                sqltemp = "Insert Into tempvat (TBran,TBranName,TArea,TAreaName,TDate"
                                + ",TMac1BS,TMac1BE,TMac1SV,TMac1SN,TMac1V,TMac1Amt,TMac1Bill"
                                + ",TMac2BS,TMac2BE,TMac2SV,TMac2SN,TMac2V,TMac2Amt,TMac2Bill"
                                + ",TMac3BS,TMac3BE,TMac3SV,TMac3SN,TMac3V,TMac3Amt,TMac3Bil"
                                + "l,TMacSV,TMacSN,TMacV,TMacAmt,TMacBill,TMac1,TMac2,TMac3,comname) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                                prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                                prm.setString(1, TempBran);
                                prm.setString(2, TempName);
                                prm.setString(3, TempArea);
                                prm.setString(4, "");
                                prm.setString(5, Format.dateFmtSql.format(chkDate));
                                prm.setString(6,  "-");
                                prm.setString(7,  "-");
                                prm.setDouble(8,  0);
                                prm.setDouble(9,  0);
                                prm.setDouble(10,  0);
                                prm.setDouble(11,  0);
                                prm.setInt(12,  0);
                                prm.setString(13,  "-");
                                prm.setString(14,  "-");
                                prm.setDouble(15,  0);
                                prm.setDouble(16,  0);
                                prm.setDouble(17,  0);
                                prm.setDouble(18,  0);
                                prm.setInt(19,  0);
                                prm.setString(20,  "-");
                                prm.setString(21,  "-");
                                prm.setDouble(22,  0);
                                prm.setDouble(23,  0);
                                prm.setDouble(24,  0);
                                prm.setDouble(25,  0);
                                prm.setInt(26,  0);
                                prm.setDouble(27,  0);
                                prm.setDouble(28,  0);
                                prm.setDouble(29,  0);
                                prm.setDouble(30,  0);
                                prm.setInt(31,  0);
                                prm.setString(32,  TMac1);
                                prm.setString(33,  TMac2);
                                prm.setString(34,  TMac3);
                                prm.setString(35, comname);
                                prm.executeUpdate();
                            
                            }
                            chkDate = DateUtil.addDate(chkDate, 1);
                        }
                        
                        }
                        
                        
                        if(rs.getString("s_bran")!= null)
                        {
                            TempBran = rs.getString("s_bran");
                        }
                        else
                        {
                            TempBran = "";
                        }

                        


                        if(rs.getString("name")!= null)
                        {
                            TempName = rs.getString("name");
                        }
                        else
                        {
                            TempName = "";
                        }

                        if(rs.getString("barea")!= null)
                        {
                            TempArea = rs.getString("barea");
                        }
                        else
                        {
                            TempArea = "";
                        }

                        if(rs.getString("postdate")!= null)
                        {
                            TempDate = rs.getDate("postdate");
                        }
                        
                        //clear variable
                        TBran = "";
                        TBranName = "";
                        TArea = "";
                        TAreaName = "";
                        Tdate = null;
                        TMac1BS = "-";
                        TMac1BE = "-";
                        TMac1SV = 0;
                        TMac1SN = 0;
                        TMac1V = 0;
                        TMac1Amt = 0;
                        TMac1Bill = 0;
                        TMac2BS = "-";
                        TMac2BE = "-";
                        TMac2SV = 0;
                        TMac2SN = 0;
                        TMac2V = 0;
                        TMac2Amt = 0;
                        TMac2Bill = 0;
                        TMac3BS = "-";
                        TMac3BE = "-";
                        TMac3SV = 0;
                        TMac3SN = 0;
                        TMac3V = 0;
                        TMac3Amt = 0;
                        TMac3Bill = 0;
                        TMacSV = 0;
                        TMacSN = 0;
                        TMacV = 0;
                        TMacNo = "";
                        TMacAmt = 0;
                        TMacBill = 0;
                        TMac1 = "";
                        TMac2 = "";
                        TMac3 = "";
                    }
                    
                    if(rs.getString("s_bran")!= null)
                    {
                        TBran = rs.getString("s_bran");
                    }
                    else
                    {
                        TBran = "";
                    }
                    
                    if(rs.getString("pmacno")!= null)
                    {
                        TMacNo = rs.getString("pmacno");
                    }
                    else
                    {
                        TMacNo = "";
                    }
                    
                    
                    
                    if(rs.getString("name")!= null)
                    {
                        TBranName = rs.getString("name");
                    }
                    else
                    {
                        TBranName = "";
                    }
                    
                    if(rs.getString("barea")!= null)
                    {
                        TArea = rs.getString("barea");
                    }
                    else
                    {
                        TArea = "";
                    }
                    
                    if(rs.getString("postdate")!= null)
                    {
                        Tdate = rs.getDate("postdate");
                    }
                    
                    if(rs.getString("tmac1")!= null)
                    {
                        TMac1 = rs.getString("tmac1");
                    }
                    else
                    {
                        TMac1 = "";
                    }
                    
                    if(rs.getString("tmac2")!= null)
                    {
                        TMac2 = rs.getString("tmac2");
                    }
                    else
                    {
                        TMac2 = "";
                    }
                    
                    if(rs.getString("tmac3")!= null)
                    {
                        TMac3 = rs.getString("tmac3");
                    }
                    else
                    {
                        TMac3 = "";
                    }
                    if(TMacNo.equals("001"))
                    {
                        if(rs.getString("Min(PInvNo)")!= null)
                        {
                            TMac1BS = rs.getString("Min(PInvNo)");
                        }
                        else
                        {
                            TMac1BS = "-";
                        }
                        
                        if(rs.getString("Max(PInvNo)")!= null)
                        {
                            TMac1BE = rs.getString("Max(PInvNo)");
                        }
                        else
                        {
                            TMac1BE = "-";
                        }
                        
                        TMac1SV = rs.getDouble("Sum(PSVat)");
                        TMacSV += rs.getDouble("Sum(PSVat)"); 
                        
                        TMac1SN = rs.getDouble("Sum(PSNVat)");
                        TMacSN += rs.getDouble("Sum(PSNVat)");
                        
                        TMac1V = rs.getDouble("Sum(PVat)");
                        TMacV += rs.getDouble("Sum(PVat)");
                        
                        TMac1Amt = rs.getDouble("Sum(PSVat+PSNVat)");
                        TMacAmt += rs.getDouble("Sum(PSVat+PSNVat)");
                        
                        TMac1Bill = rs.getInt("Count(*)");
                        TMacBill += rs.getInt("Count(*)");
                    }
                    else if(TMacNo.equals("002"))
                    {
                        if(rs.getString("Min(PInvNo)")!= null)
                        {
                            TMac2BS = rs.getString("Min(PInvNo)");
                        }
                        else
                        {
                            TMac2BS = "-";
                        }
                        
                        if(rs.getString("Max(PInvNo)")!= null)
                        {
                            TMac2BE = rs.getString("Max(PInvNo)");
                        }
                        else
                        {
                            TMac2BE = "-";
                        }
                        
                        TMac2SV = rs.getDouble("Sum(PSVat)");
                        TMacSV += rs.getDouble("Sum(PSVat)"); 
                        
                        TMac2SN = rs.getDouble("Sum(PSNVat)");
                        TMacSN += rs.getDouble("Sum(PSNVat)");
                        
                        TMac2V = rs.getDouble("Sum(PVat)");
                        TMacV += rs.getDouble("Sum(PVat)");
                        
                        TMac2Amt = rs.getDouble("Sum(PSVat+PSNVat)");
                        TMacAmt += rs.getDouble("Sum(PSVat+PSNVat)");
                        
                        TMac2Bill = rs.getInt("Count(*)");
                        TMacBill += rs.getInt("Count(*)");
                    }
                    else if(TMacNo.equals("003"))
                    {
                        if(rs.getString("Min(PInvNo)")!= null)
                        {
                            TMac3BS = rs.getString("Min(PInvNo)");
                        }
                        else
                        {
                            TMac3BS = "-";
                        }
                        
                        if(rs.getString("Max(PInvNo)")!= null)
                        {
                            TMac3BE = rs.getString("Max(PInvNo)");
                        }
                        else
                        {
                            TMac3BE = "-";
                        }
                        
                        TMac3SV = rs.getDouble("Sum(PSVat)");
                        TMacSV += rs.getDouble("Sum(PSVat)"); 
                        
                        TMac3SN = rs.getDouble("Sum(PSNVat)");
                        TMacSN += rs.getDouble("Sum(PSNVat)");
                        
                        TMac3V = rs.getDouble("Sum(PVat)");
                        TMacV += rs.getDouble("Sum(PVat)");
                        
                        TMac3Amt = rs.getDouble("Sum(PSVat+PSNVat)");
                        TMacAmt += rs.getDouble("Sum(PSVat+PSNVat)");
                        
                        TMac3Bill = rs.getInt("Count(*)");
                        TMacBill += rs.getInt("Count(*)");
                    }
                    
                    
                    
                }
                if(TMacAmt!=0)
                {
                     String sqltemp = "Insert Into tempvat (TBran,TBranName,TArea,TAreaName,TDate"
                                + ",TMac1BS,TMac1BE,TMac1SV,TMac1SN,TMac1V,TMac1Amt,TMac1Bill"
                                + ",TMac2BS,TMac2BE,TMac2SV,TMac2SN,TMac2V,TMac2Amt,TMac2Bill"
                                + ",TMac3BS,TMac3BE,TMac3SV,TMac3SN,TMac3V,TMac3Amt,TMac3Bil"
                                + "l,TMacSV,TMacSN,TMacV,TMacAmt,TMacBill,TMac1,TMac2,TMac3,comname) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, TBran);
                        prm.setString(2, TBranName);
                        prm.setString(3, TArea);
                        prm.setString(4, TAreaName);
                        prm.setString(5, Format.dateFmtSql.format(Tdate));
                        prm.setString(6,  TMac1BS);
                        prm.setString(7,  TMac1BE);
                        prm.setDouble(8,  TMac1SV);
                        prm.setDouble(9,  TMac1SN);
                        prm.setDouble(10,  TMac1V);
                        prm.setDouble(11,  TMac1Amt);
                        prm.setInt(12,  TMac1Bill);
                        prm.setString(13,  TMac2BS);
                        prm.setString(14,  TMac2BE);
                        prm.setDouble(15,  TMac2SV);
                        prm.setDouble(16,  TMac2SN);
                        prm.setDouble(17,  TMac2V);
                        prm.setDouble(18,  TMac2Amt);
                        prm.setInt(19,  TMac2Bill);
                        prm.setString(20,  TMac3BS);
                        prm.setString(21,  TMac3BE);
                        prm.setDouble(22,  TMac3SV);
                        prm.setDouble(23,  TMac3SN);
                        prm.setDouble(24,  TMac3V);
                        prm.setDouble(25,  TMac3Amt);
                        prm.setInt(26,  TMac3Bill);
                        prm.setDouble(27,  TMacSV);
                        prm.setDouble(28,  TMacSN);
                        prm.setDouble(29,  TMacV);
                        prm.setDouble(30,  TMacAmt);
                        prm.setInt(31,  TMacBill);
                        prm.setString(32,  TMac1);
                        prm.setString(33,  TMac2);
                        prm.setString(34,  TMac3);
                        prm.setString(35, comname);
                        prm.executeUpdate();
                        
                        chkDate = d;
                        while(chkDate.compareTo(dd)<=0)
                        {
                            if(!chkTemp(TempBran, Format.dateFmtSql.format(chkDate),comname))
                            {
                                sqltemp = "Insert Into tempvat (TBran,TBranName,TArea,TAreaName,TDate"
                                + ",TMac1BS,TMac1BE,TMac1SV,TMac1SN,TMac1V,TMac1Amt,TMac1Bill"
                                + ",TMac2BS,TMac2BE,TMac2SV,TMac2SN,TMac2V,TMac2Amt,TMac2Bill"
                                + ",TMac3BS,TMac3BE,TMac3SV,TMac3SN,TMac3V,TMac3Amt,TMac3Bil"
                                + "l,TMacSV,TMacSN,TMacV,TMacAmt,TMacBill,TMac1,TMac2,TMac3,comname) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                                prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                                prm.setString(1, TempBran);
                                prm.setString(2, TempName);
                                prm.setString(3, TempArea);
                                prm.setString(4, "");
                                prm.setString(5, Format.dateFmtSql.format(chkDate));
                                prm.setString(6,  "-");
                                prm.setString(7,  "-");
                                prm.setDouble(8,  0);
                                prm.setDouble(9,  0);
                                prm.setDouble(10,  0);
                                prm.setDouble(11,  0);
                                prm.setInt(12,  0);
                                prm.setString(13,  "-");
                                prm.setString(14,  "-");
                                prm.setDouble(15,  0);
                                prm.setDouble(16,  0);
                                prm.setDouble(17,  0);
                                prm.setDouble(18,  0);
                                prm.setInt(19,  0);
                                prm.setString(20,  "-");
                                prm.setString(21,  "-");
                                prm.setDouble(22,  0);
                                prm.setDouble(23,  0);
                                prm.setDouble(24,  0);
                                prm.setDouble(25,  0);
                                prm.setInt(26,  0);
                                prm.setDouble(27,  0);
                                prm.setDouble(28,  0);
                                prm.setDouble(29,  0);
                                prm.setDouble(30,  0);
                                prm.setInt(31,  0);
                                prm.setString(32,  TMac1);
                                prm.setString(33,  TMac2);
                                prm.setString(34,  TMac3);
                                prm.setString(35, comname);
                                prm.executeUpdate();
                            
                            }
                            chkDate = DateUtil.addDate(chkDate, 1);
                        }
                }
                        
            }
    }catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
                Logger.getLogger(rptVat.class.getName()).log(Level.SEVERE, null, ex);
            }
            
}

 private void deletetemp(String comname) {
       
            try {
                 String sqltemp = "delete from tempvat where comname = ?";
                  PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                  prm.setString(1, comname);
                  prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
           
    }
private void setTxt()
{
    String date = "";
    String branch = "";
    String dept = "";
    String plu = "";
    if(!date1.equals(""))
    {
    date = date1+" - ";
    }
    else
    {
    date = " - ";
    }
    
    if(!date2.equals("31/12/9999"))
    {
        date += date2;
    }
    
    if(!branch1.equals(""))
    {
        branch = branch1+" - ";
    }
    else
    {
        branch = " - ";
    }
    
    if(!branch2.equals("ZZZ"))
    {
        branch += branch2;
    }
    
    if(!dept1.equals(""))
    {
        dept = dept1+" - ";
    }
    else
    {
        dept = " - ";
    }
    
    if(!dept2.equals("ZZZZ"))
    {
        dept += dept2;
    }
    
    if(!plu1.equals(""))
    {
        plu = plu1+" - ";
    }
    else
    {
        plu = " - ";
    }
    
    if(!plu2.equals("ZZZZZZZZZZZZZ"))
    {
        plu += plu2;
    }
    
    lbldate.setText(date);
    lblbranch.setText(branch);
    condition = this.getTitle()+" Date : "+date+" Branch : "+branch;
}

    private boolean chkTemp(String bran , String date, String comname)
    {
        boolean chk = false;
        try {
            
            
            String sql = "Select *From tempvat  Where (TBran='"+bran+"') and (TDate='"+date+"' and comname ='"+comname+"') ";
                ResultSet rs = null;
                Statement stmt = (Statement) dbUtility.con.createStatement();
                rs = stmt.executeQuery(sql);
                    while(rs.next())
                    {
                        chk = true;
                    }
            
        } catch (Exception ex) {
            Logger.getLogger(rptVat.class.getName()).log(Level.SEVERE, null, ex);
        }
        return chk;
                
    }
    

}
