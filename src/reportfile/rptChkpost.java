/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportfile;

import borfunction.GetComputerName;
import borfunction.btnFind;
import borfunction.settext;
import dbutility.dbUtility;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import reportModel.reportChkpostModel;
import reportModel.reportChksumModel;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.*;
/**
 *
 * @author s386
 */
public class rptChkpost extends javax.swing.JDialog {

    /**
     * Creates new form rptRjfile
     */
    public static String date1 = "",date2 ="",dept1="",dept2="",plu1="",plu2="",branch1="",branch2="",btype1="",btype2=""
            ,barea1="",barea2="",bsize1="",bsize2="",bplan1="",bplan2="",bstore1="",bstore2="",strday=""
            ,company1="",company2="",brand1="",brand2="",bustype1="",bustype2="";
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    String frmName = "rptChkpost";
    ThaiUtilities cvth = new ThaiUtilities();
    btnFind btn = new btnFind();
    dbUtility db = new dbUtility();
    Statement stmt ;
    int per = 0;
    public rptChkpost(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inittbl1();
        inittbl2();
        db.dbconnect();
        //getLanguage lang = new getLanguage();
        //lang.setText(frmName, this, lang.getChklang());
        t_date1.setText(Format.dateFmtShow.format(new java.util.Date()));
        t_date2.setText(Format.dateFmtShow.format(new java.util.Date()));
        
        
    }

    public rptChkpost() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        d_date2 = new javax.swing.JLabel();
        btn_Calendar = new javax.swing.JButton();
        d_date3 = new javax.swing.JLabel();
        t_date1 = new javax.swing.JFormattedTextField();
        t_date2 = new javax.swing.JFormattedTextField();
        btn_Calendar1 = new javax.swing.JButton();
        d_date1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        d_branch = new javax.swing.JLabel();
        d_branch2 = new javax.swing.JLabel();
        t_branch1 = new javax.swing.JFormattedTextField();
        btn7 = new javax.swing.JButton();
        t_branch2 = new javax.swing.JFormattedTextField();
        btn17 = new javax.swing.JButton();
        d_branch3 = new javax.swing.JLabel();
        btnExit1 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        db_btnExel = new javax.swing.JButton();
        db_btnProcress = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new org.jdesktop.swingx.JXTreeTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl2 = new org.jdesktop.swingx.JXTreeTable();
        db_btnExpand = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        d_date2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_date2.setText("วันที่");
        d_date2.setName("d_date2"); // NOI18N

        btn_Calendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_Calendar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Calendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CalendarActionPerformed(evt);
            }
        });

        d_date3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_date3.setText("ถึงวันที่");
        d_date3.setName("d_date3"); // NOI18N

        t_date1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        t_date1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_date1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_date1ActionPerformed(evt);
            }
        });
        t_date1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_date1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_date1FocusLost(evt);
            }
        });
        t_date1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_date1KeyPressed(evt);
            }
        });

        t_date2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        t_date2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_date2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_date2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_date2FocusLost(evt);
            }
        });
        t_date2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_date2KeyPressed(evt);
            }
        });

        btn_Calendar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_Calendar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_Calendar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Calendar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Calendar1ActionPerformed(evt);
            }
        });

        d_date1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_date1.setText("กำหนดช่วงวันที่(Date)");
        d_date1.setName("d_date1"); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(d_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d_date3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Calendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(d_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Calendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(d_date3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(d_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        d_branch.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_branch.setText("กำหนดช่วงสาขา (Branch)");
        d_branch.setName("d_branch"); // NOI18N

        d_branch2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_branch2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        d_branch2.setText("รหัสสาขา");
        d_branch2.setName("d_branch2"); // NOI18N

        t_branch1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_branch1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_branch1FocusLost(evt);
            }
        });
        t_branch1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_branch1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_branch1KeyTyped(evt);
            }
        });

        btn7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn7.setFocusable(false);
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        t_branch2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_branch2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_branch2FocusLost(evt);
            }
        });
        t_branch2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_branch2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_branch2KeyTyped(evt);
            }
        });

        btn17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn17.setFocusable(false);
        btn17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn17ActionPerformed(evt);
            }
        });

        d_branch3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_branch3.setText("ถึงสาขา");
        d_branch3.setName("d_branch3"); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(d_branch2)
                        .addGap(18, 18, 18)
                        .addComponent(t_branch1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(d_branch3)
                        .addGap(2, 2, 2)
                        .addComponent(t_branch2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn17, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(d_branch, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d_branch, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(d_branch2)
                        .addComponent(t_branch1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(t_branch2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(d_branch3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExit1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit1.setIconTextGap(0);
        btnExit1.setName("db_btnExit"); // NOI18N
        btnExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        jProgressBar1.setName("progress");
        jProgressBar1.setStringPainted(true);
        jProgressBar1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jProgressBar1StateChanged(evt);
            }
        });
        jProgressBar1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jProgressBar1PropertyChange(evt);
            }
        });

        db_btnExel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel.setText("Exel File");
        db_btnExel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel.setIconTextGap(0);
        db_btnExel.setName("db_btnExel"); // NOI18N
        db_btnExel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExelActionPerformed(evt);
            }
        });

        db_btnProcress.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnProcress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Hourglass-icon.png"))); // NOI18N
        db_btnProcress.setText("ประมวลผล");
        db_btnProcress.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnProcress.setIconTextGap(0);
        db_btnProcress.setName("db_btnProcress"); // NOI18N
        db_btnProcress.setPreferredSize(new java.awt.Dimension(67, 68));
        db_btnProcress.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnProcress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnProcressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_btnProcress, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_btnProcress, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        tbl.setName("tbl"); // NOI18N
        jScrollPane1.setViewportView(tbl);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 969, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("แสดงยอดรวม (Summary)", jPanel1);

        tbl2.setName("tbl2"); // NOI18N
        jScrollPane2.setViewportView(tbl2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 969, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("แสดงแยกตามสาขา/วันที่ (Detail)", jPanel2);

        db_btnExpand.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExpand.setText("Expand On/Off");
        db_btnExpand.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExpand.setIconTextGap(0);
        db_btnExpand.setName("db_btnExpand"); // NOI18N
        db_btnExpand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExpand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExpandActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(db_btnExpand)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_btnExpand)
                .addGap(622, 622, 622))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1032)/2, (screenSize.height-796)/2, 1032, 796);
    }// </editor-fold>//GEN-END:initComponents

    private void db_btnExpandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExpandActionPerformed
        if (tbl.isExpanded(0)) {
            tbl.collapseAll();
        } else {
            tbl.expandAll();
        }
        
        if (tbl2.isExpanded(0)) {
            tbl2.collapseAll();
        } else {
            tbl2.expandAll();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnExpandActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExit1ActionPerformed

    private void db_btnExelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExelActionPerformed

        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        setTxt();
        try {
            

            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();


                
                
                if(curFile.exists())
                {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        db_btnExelActionPerformed(null);
                        
                        return;

                    }
                    
                }
                
                   
                try {
                    test.setOutputFile(curFile.toString());
                     if(jTabbedPane1.getSelectedIndex()==0)
                    {
                    test.writeTreetableContditionNoSum(tbl, tbl.getColumnModel(),"Date "+t_date1.getText()+" - "+t_date2.getText()+" Branch "+t_branch1.getText()+" - "+t_branch2.getText());
                    }
                    else{
                    test.writeTreetableContditionNoSum(tbl2, tbl2.getColumnModel(),"Date "+t_date1.getText()+" - "+t_date2.getText()+" Branch "+t_branch1.getText()+" - "+t_branch2.getText());
                    }
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
                
                
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_db_btnExelActionPerformed
int length = 0;

    private void db_btnProcressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnProcressActionPerformed
               
        procress();
                
        
  }//GEN-LAST:event_db_btnProcressActionPerformed

    private void btn_CalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CalendarActionPerformed
        btn.btncalendar(t_date1,btn_Calendar);
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_CalendarActionPerformed

    private void t_date1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_date1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btn.btncalendar(t_date1,btn_Calendar);
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_date2.requestFocus();
        }
        else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            procress();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date1KeyPressed

    private void t_date2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_date2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btn.btncalendar(t_date2,btn_Calendar1);
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_branch1.requestFocus();
        }
        else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            procress();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date2KeyPressed

    private void btn_Calendar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Calendar1ActionPerformed
        btn.btncalendar(t_date2,btn_Calendar1);
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Calendar1ActionPerformed

    private void t_branch1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_branch1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_branch2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btn.btnFindBranch(t_branch1);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            procress();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_branch1KeyPressed

    private void t_branch1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_branch1KeyTyped
        settext.setTextLength(evt, t_branch1, 3);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_branch1KeyTyped

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        btn.btnFindBranch(t_branch1);
        // TODO add your handling code here:
    }//GEN-LAST:event_btn7ActionPerformed

    private void t_branch2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_branch2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_date1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btn.btnFindBranch(t_branch2);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            procress();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_branch2KeyPressed

    private void t_branch2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_branch2KeyTyped
        settext.setTextLength(evt, t_branch2, 3);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_branch2KeyTyped

    private void btn17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn17ActionPerformed
        btn.btnFindBranch(t_branch2);
        // TODO add your handling code here:
    }//GEN-LAST:event_btn17ActionPerformed

    private void t_date1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_date1FocusGained
        t_date1.setText(t_date1.getText());
        t_date1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date1FocusGained

    private void t_date2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_date2FocusGained
        t_date2.setText(t_date2.getText());
        t_date2.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date2FocusGained

    private void t_branch1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_branch1FocusGained
        t_branch1.setText(t_branch1.getText());
        t_branch1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_branch1FocusGained

    private void t_branch2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_branch2FocusGained
        t_branch2.setText(t_branch2.getText());
        t_branch2.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_branch2FocusGained

    private void t_date1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_date1FocusLost
        t_date1.select(0,0);
        if(t_date1.getText().equals(""))
        {
             t_date1.setText(Format.dateFmtShow.format(new java.util.Date()));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date1FocusLost

    private void t_date2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_date2FocusLost
        t_date2.select(0,0);
        if(t_date2.getText().equals(""))
        {
             t_date2.setText(Format.dateFmtShow.format(new java.util.Date()));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date2FocusLost

    private void t_branch1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_branch1FocusLost
        t_branch1.select(0,0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_branch1FocusLost

    private void t_branch2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_branch2FocusLost
        t_branch2.select(0,0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_branch2FocusLost

    private void jProgressBar1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jProgressBar1StateChanged
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jProgressBar1StateChanged

    private void jProgressBar1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jProgressBar1PropertyChange
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jProgressBar1PropertyChange

    private void t_date1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_date1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rptRjfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rptRjfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rptRjfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rptRjfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                rptChkpost dialog = new rptChkpost(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn17;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton btn_Calendar;
    private javax.swing.JButton btn_Calendar1;
    private javax.swing.JLabel d_branch;
    private javax.swing.JLabel d_branch2;
    private javax.swing.JLabel d_branch3;
    private javax.swing.JLabel d_date1;
    private javax.swing.JLabel d_date2;
    private javax.swing.JLabel d_date3;
    private javax.swing.JButton db_btnExel;
    private javax.swing.JButton db_btnExpand;
    private javax.swing.JButton db_btnProcress;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JFormattedTextField t_branch1;
    private javax.swing.JFormattedTextField t_branch2;
    private javax.swing.JFormattedTextField t_date1;
    private javax.swing.JFormattedTextField t_date2;
    private org.jdesktop.swingx.JXTreeTable tbl;
    private org.jdesktop.swingx.JXTreeTable tbl2;
    // End of variables declaration//GEN-END:variables
TableColumnModel tcm,tcm2;
    private void inittbl1()
{
    try {
            
            tcm = new DefaultTableColumnModel();
            
            TableColumn tc1 = new TableColumn(0,250);
            tc1.setHeaderValue("เขต");
            TableColumn tc2 = new TableColumn(1,40);
            tc2.setHeaderValue("สาขา");
            TableColumn tc3 = new TableColumn(2,120);
            tc3.setHeaderValue("ชื่อสาขา");
            TableColumn tc4 = new TableColumn(3,80);
            tc4.setHeaderValue("จำนวนวัน");
            TableColumn tc5 = new TableColumn(4,40);
            tc5.setHeaderValue("PLU");
            TableColumn tc6 = new TableColumn(5,40);
            tc6.setHeaderValue("Terminal");
            TableColumn tc7 = new TableColumn(6,40);
            tc7.setHeaderValue("Cashier");
            TableColumn tc8 = new TableColumn(7,40);
            tc8.setHeaderValue("Cupon");
            TableColumn tc9 = new TableColumn(8,40);
            tc9.setHeaderValue("Inv");
            TableColumn tc10 = new TableColumn(9,40);
            tc10.setHeaderValue("Hour");
            TableColumn tc11 = new TableColumn(10,40);
            tc11.setHeaderValue("RJ");
            TableColumn tc12 = new TableColumn(11,40);
            tc12.setHeaderValue("STC");
            TableColumn tc13 = new TableColumn(12,40);
            tc13.setHeaderValue("Credit");
            TableColumn tc14 = new TableColumn(13,40);
            tc14.setHeaderValue("Kitchen Tran");
            TableColumn tc15 = new TableColumn(14,40);
            tc15.setHeaderValue("Charge");
            TableColumn tc16 = new TableColumn(15,40);
            tc16.setHeaderValue("BI-Tran");
            
            
            
            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            tcm.addColumn(tc11);
            tcm.addColumn(tc12);
            tcm.addColumn(tc13);
            tcm.addColumn(tc14);
            tcm.addColumn(tc15);
            tcm.addColumn(tc16);
            
            
            
            
//            tcm.addColumn(tc31);
        
        tcm.getColumn(0).setCellRenderer(FormatCell.l());
        tcm.getColumn(1).setCellRenderer(FormatCell.l());
        tcm.getColumn(2).setCellRenderer(FormatCell.l());
        tcm.getColumn(3).setCellRenderer(FormatCell.l());
        tcm.getColumn(4).setCellRenderer(FormatCell.c());
        tcm.getColumn(5).setCellRenderer(FormatCell.c());
        tcm.getColumn(6).setCellRenderer(FormatCell.c());
        tcm.getColumn(7).setCellRenderer(FormatCell.c());
        tcm.getColumn(8).setCellRenderer(FormatCell.c());
        tcm.getColumn(9).setCellRenderer(FormatCell.c());
        tcm.getColumn(10).setCellRenderer(FormatCell.c());
        tcm.getColumn(11).setCellRenderer(FormatCell.c());
        tcm.getColumn(12).setCellRenderer(FormatCell.c());
        tcm.getColumn(13).setCellRenderer(FormatCell.c());
        tcm.getColumn(14).setCellRenderer(FormatCell.c());
        tcm.getColumn(15).setCellRenderer(FormatCell.c());
        
        
        
        
        
        
        tbl.setEditable(false);//ห้ามแก้ไขตาราง
        tbl.setShowGrid(true);
        tbl.setFont(fontplain);
        tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl.setRowSelectionAllowed(true);
        tbl.setBackground(java.awt.Color.WHITE);
        tbl.setGridColor(java.awt.Color.gray);
        tbl.setRowHeight(24);
        
            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);
            
            
            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
           // h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);
        }  catch (Exception ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    
     private void inittbl2() {
        try {
            
            tcm2 = new DefaultTableColumnModel();
            
            TableColumn tc1 = new TableColumn(0,200);
            tc1.setHeaderValue("เขต");
            TableColumn tc2 = new TableColumn(1,40);
            tc2.setHeaderValue("สาขา");
            TableColumn tc3 = new TableColumn(2,120);
            tc3.setHeaderValue("ชื่อสาขา");
            TableColumn tc4 = new TableColumn(3,80);
            tc4.setHeaderValue("วันที่");
            TableColumn tc5 = new TableColumn(4,40);
            tc5.setHeaderValue("PLU");
            TableColumn tc6 = new TableColumn(5,40);
            tc6.setHeaderValue("Terminal");
            TableColumn tc7 = new TableColumn(6,40);
            tc7.setHeaderValue("Cashier");
            TableColumn tc8 = new TableColumn(7,40);
            tc8.setHeaderValue("Cupon");
            TableColumn tc9 = new TableColumn(8,40);
            tc9.setHeaderValue("Inv");
            TableColumn tc10 = new TableColumn(9,40);
            tc10.setHeaderValue("Hour");
            TableColumn tc11 = new TableColumn(10,40);
            tc11.setHeaderValue("RJ");
            TableColumn tc12 = new TableColumn(11,40);
            tc12.setHeaderValue("STC");
            TableColumn tc13 = new TableColumn(12,40);
            tc13.setHeaderValue("Credit");
            TableColumn tc14 = new TableColumn(13,40);
            tc14.setHeaderValue("Kitchen Tran");
            TableColumn tc15 = new TableColumn(14,40);
            tc15.setHeaderValue("Charge");
            TableColumn tc16 = new TableColumn(15,40);
            tc16.setHeaderValue("BI-Tran");
            TableColumn tc17 = new TableColumn(16,90);
            tc17.setHeaderValue("Post By");
            
            
            
            tcm2.addColumn(tc1);
            tcm2.addColumn(tc2);
            tcm2.addColumn(tc3);
            tcm2.addColumn(tc4);
            tcm2.addColumn(tc5);
            tcm2.addColumn(tc6);
            tcm2.addColumn(tc7);
            tcm2.addColumn(tc8);
            tcm2.addColumn(tc9);
            tcm2.addColumn(tc10);
            tcm2.addColumn(tc11);
            tcm2.addColumn(tc12);
            tcm2.addColumn(tc13);
            tcm2.addColumn(tc14);
            tcm2.addColumn(tc15);
            tcm2.addColumn(tc16);
            tcm2.addColumn(tc17);
            
            
            
//            tcm.addColumn(tc31);
        
        tcm2.getColumn(0).setCellRenderer(FormatCell.l());
        tcm2.getColumn(1).setCellRenderer(FormatCell.l());
        tcm2.getColumn(2).setCellRenderer(FormatCell.l());
        tcm2.getColumn(3).setCellRenderer(FormatCell.l());
        tcm2.getColumn(4).setCellRenderer(FormatCell.c());
        tcm2.getColumn(5).setCellRenderer(FormatCell.c());
        tcm2.getColumn(6).setCellRenderer(FormatCell.c());
        tcm2.getColumn(7).setCellRenderer(FormatCell.c());
        tcm2.getColumn(8).setCellRenderer(FormatCell.c());
        tcm2.getColumn(9).setCellRenderer(FormatCell.c());
        tcm2.getColumn(10).setCellRenderer(FormatCell.c());
        tcm2.getColumn(11).setCellRenderer(FormatCell.c());
        tcm2.getColumn(12).setCellRenderer(FormatCell.c());
        tcm2.getColumn(13).setCellRenderer(FormatCell.c());
        tcm2.getColumn(14).setCellRenderer(FormatCell.c());
        tcm2.getColumn(15).setCellRenderer(FormatCell.c());
        tcm2.getColumn(16).setCellRenderer(FormatCell.l());
        
        
        
        
        
        
        tbl2.setEditable(false);//ห้ามแก้ไขตาราง
        tbl2.setShowGrid(true);
        tbl2.setFont(fontplain);
        tbl2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl2.setRowSelectionAllowed(true);
        tbl2.setBackground(java.awt.Color.WHITE);
        tbl2.setGridColor(java.awt.Color.gray);
        tbl2.setRowHeight(24);
        
            tbl2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            tbl2.setColumnModel(tcm2);
            tbl2.setRootVisible(true);
            
            
            JTableHeader h = tbl2.getTableHeader();
            h.setFont(fontbold);
           // h.setReorderingAllowed(false);
            tbl2.setLeafIcon(null);
        }  catch (Exception ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
private void setTxt()
{
    String date = "";
    String branch = "";
    String dept = "";
    String plu = "";
    if(!date1.equals(""))
    {
    date = date1+" - ";
    }
    else
    {
    date = " - ";
    }
    
    if(!date2.equals("31/12/9999"))
    {
        date += date2;
    }
    
    if(!branch1.equals(""))
    {
        branch = branch1+" - ";
    }
    else
    {
        branch = " - ";
    }
    
    if(!branch2.equals("ZZZ"))
    {
        branch += branch2;
    }
    
    if(!dept1.equals(""))
    {
        dept = dept1+" - ";
    }
    else
    {
        dept = " - ";
    }
    
    if(!dept2.equals("ZZZZ"))
    {
        dept += dept2;
    }
    
    if(!plu1.equals(""))
    {
        plu = plu1+" - ";
    }
    else
    {
        plu = " - ";
    }
    
    if(!plu2.equals("ZZZZZZZZZZZZZ"))
    {
        plu += plu2;
    }
    
}
    private void setCondition()
    {
         if(!t_date1.getText().trim().equals(""))
        {
            date1 = t_date1.getText();
        }
        else
        {
            date1 = "";
        }
         
         if(!t_date2.getText().trim().equals(""))
        {
            date2= t_date2.getText();
        }
        else
        {
            date2= Format.dateFmtShow.format(new java.util.Date());
        }
         
         if(!t_branch1.getText().trim().equals(""))
        {
            branch1= t_branch1.getText();
        }
        else
        {
            branch1 = "";
        }
         
         if(!t_branch2.getText().trim().equals(""))
        {
            branch2= t_branch2.getText();
        }
        else
        {
            branch2= "ZZZ";
        }
    }
    private void getBranchcount()
    {
        try {
            ResultSet rs = null;
            setCondition();
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select count(code) as count from branfile where code>='"+branch1+"' and code<='"+branch2+"' order by code";
            rs = stmt.executeQuery(sql);
            if(rs.next())
            {
                rowcount = rs.getInt("count");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(rptChkpost.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    int rowcount = 0;
    private void setTemp()
    {
        clearTemp();
        setCondition();
        try {
        if(!db.Char_Set.equalsIgnoreCase("utf-8"))
        {
            ResultSet rs = null;
            int totaldate = DateUtil.getDate(date1, date2)+1;
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select * from branfile where code>='"+cvth.Unicode2ASCII(branch1)+"' and code<='"+cvth.Unicode2ASCII(branch2)+"' order by code";
            rs = stmt.executeQuery(sql);
            
            while(rs.next())
            {
                
                String brancode = rs.getString("code");
                String branname = rs.getString("name");
                String comname = new GetComputerName().getComputerName();
                        int iplu = 0,
                            iterminal=0,
                            icashier=0,
                            icupon=0,
                            iinv=0,
                            ihour=0,
                            irj=0,
                            istc=0,
                            icredit=0,
                            ikitchen=0,
                            icharge=0,
                            ibi=0,
                            idzip=0,
                            ibg=0,
                            iba=0,
                            imem = 0;
                String userpost = "";
                
                Date d1 = null;
                Date d2 = null;
                if(!date1.equals(""))
                {
                    d1 = Format.dateFmtShow.parse(date1);
                }
                if(!date2.equals(""))
                {
                    d2 = Format.dateFmtShow.parse(date2);
                
                }
                
                
                Statement stmt2 = (Statement) dbUtility.con.createStatement();
                while(d1.compareTo(d2)<=0)
                {
                    String date = Format.dateFmtSql.format(d1);
                    String 
                           bcode = brancode,
                           bname = branname,
                           plu="-",
                           terminal="-",
                           cashier="-",
                           cupon="-",
                           inv = "-",
                           hour="-",
                           rj = "-",
                           stc = "-",
                           credit = "-",
                           kitchen = "-",
                           charge = "-",
                           bi = "-",
                           post = "",
                           dzip = "-",
                           bg = "-",
                           ba = "-",
                           mem = "-";
                    ResultSet rs2 = null;
                    String sql2 = "select * from chkpost where brcode = '"+brancode+"' and tdate = '"+date+"'";
                    rs2 = stmt2.executeQuery(sql2);
                    if(rs2.next())
                    {
                        if(rs2.getString("plu").equals("Y"))
                        {
                            plu = "Y";
                            iplu += 1;
                        }
                        
                        if(rs2.getString("DZip").equals("Y"))
                        {
                            //dzip = "Y";
                            bg = "Y";
                            ibg +=1;
                            //idzip += 1;
                        }
                        
                        if(rs2.getString("terminal").equals("Y"))
                        {
                            terminal = "Y";
                            iterminal += 1;
                        }
                        
                        if(rs2.getString("cashier").equals("Y"))
                        {
                            cashier = "Y";
                            icashier += 1;
                        }
                        
                        if(rs2.getString("cupon").equals("Y"))
                        {
                            cupon = "Y";
                            icupon += 1;
                        }
                        
                        if(rs2.getString("inv").equals("Y"))
                        {
                            inv = "Y";
                            iinv += 1;
                        }
                        
                        if(rs2.getString("hour").equals("Y"))
                        {
                            hour = "Y";
                            ihour += 1;
                        }
                        
                        if(rs2.getString("rj").equals("Y"))
                        {
                            rj = "Y";
                            irj += 1;
                        }
                        
                        if(rs2.getString("stc").equals("Y"))
                        {
                            stc = "Y";
                            istc += 1;
                        }
                        
//                        if(rs2.getString("bg").equals("Y"))
//                        {
//                            bg = "Y";
//                            ibg += 1;
//                        }
//                        
                        if(rs2.getString("ba").equals("Y"))
                        {
                            ba = "Y";
                            iba += 1;
                        }
                        
                        if(rs2.getString("cr").equals("Y"))
                        {
                            credit = "Y";
                            icredit += 1;
                        }
                        
                        if(rs2.getString("mem").equals("Y"))
                        {
                            mem = "Y";
                            imem += 1;
                        }
                        
                        
                        post = rs2.getString("UserPost");
                        userpost = rs2.getString("UserPost");
//                      
                        
                        if(rs2.getString("charge").equals("Y"))
                        {
                            charge = "Y";
                            icharge += 1;
                        }
                        
                        if(rs2.getString("bi").equals("Y"))
                        {
                            bi = "Y";
                            ibi += 1;
                        }
                        
                    }
                    
                    String sqlinsert = "insert into tempchkpost(Comname,TDate,BrCode,BrName,DZip,Plu,"
                            + "Terminal,Cashier,Cupon,Inv,Hour,Rj,Stc,Bg,Ba,Cr,Mem,UserPost,KicTran,Charge,BI)"
                            + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqlinsert);
                    prm.setString(1, comname);
                    prm.setString(2, date);
                    prm.setString(3, bcode);
                    prm.setString(4, bname);
                    prm.setString(5, dzip);
                    prm.setString(6, plu);
                    prm.setString(7, terminal);
                    prm.setString(8, cashier);
                    prm.setString(9, cupon);
                    prm.setString(10, inv);
                    prm.setString(11, hour);
                    prm.setString(12, rj);
                    prm.setString(13, stc);
                    prm.setString(14, bg);
                    prm.setString(15, ba);
                    prm.setString(16, credit);
                    prm.setString(17, mem);
                    prm.setString(18, post);
                    prm.setString(19, kitchen);
                    prm.setString(20, charge);
                    prm.setString(21, bi);
                    prm.executeUpdate();
                           
                    
                    
                    d1 = DateUtil.addDate(d1, 1);
                }
                
                String sqlinsert = "insert into tempchksum(Comname,BrCode,BrName,TotalDate,Plu,"
                            + "Terminal,Cashier,Cupon,Inv,Hour,Rj,Stc,Bg,Ba,Cr,Mem,UserPost,KicTran,Charge,BI)"
                            + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqlinsert);
                    prm.setString(1, comname);
                    prm.setString(2, brancode);
                    prm.setString(3, branname);
                    prm.setInt(4, totaldate);
                    prm.setInt(5, iplu);
                    prm.setInt(6, iterminal);
                    prm.setInt(7, icashier);
                    prm.setInt(8, icupon);
                    prm.setInt(9, iinv);
                    prm.setInt(10, ihour);
                    prm.setInt(11, irj);
                    prm.setInt(12, istc);
                    prm.setInt(13, ibg);
                    prm.setInt(14, iba);
                    prm.setInt(15, icredit);
                    prm.setInt(16, imem);
                    prm.setString(17, userpost);
                    prm.setInt(18, ikitchen);
                    prm.setInt(19, icharge);
                    prm.setInt(20, ibi);
                    prm.executeUpdate();
            
            jProgressBar1.setValue(per+=1);
            jProgressBar1.update(jProgressBar1.getGraphics());
            
            }
            
            
        }
        else
        {
            ResultSet rs = null;
            int totaldate = DateUtil.getDate(date1, date2)+1;
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select * from branfile where code>='"+branch1+"' and code<='"+branch2+"' order by code";
            rs = stmt.executeQuery(sql);
            
            while(rs.next())
            {
                
                String brancode = rs.getString("code");
                String branname = rs.getString("name");
                String comname = new GetComputerName().getComputerName();
                        int iplu = 0,
                            iterminal=0,
                            icashier=0,
                            icupon=0,
                            iinv=0,
                            ihour=0,
                            irj=0,
                            istc=0,
                            icredit=0,
                            ikitchen=0,
                            icharge=0,
                            ibi=0,
                            idzip=0,
                            ibg=0,
                            iba=0,
                            imem = 0;
                String userpost = "";
                
                Date d1 = null;
                Date d2 = null;
                if(!date1.equals(""))
                {
                    d1 = Format.dateFmtShow.parse(date1);
                }
                if(!date2.equals(""))
                {
                    d2 = Format.dateFmtShow.parse(date2);
                
                }
                
                
                Statement stmt2 = (Statement) dbUtility.con.createStatement();
                while(d1.compareTo(d2)<=0)
                {
                    String date = Format.dateFmtSql.format(d1);
                    String 
                           bcode = brancode,
                           bname = branname,
                           plu="-",
                           terminal="-",
                           cashier="-",
                           cupon="-",
                           inv = "-",
                           hour="-",
                           rj = "-",
                           stc = "-",
                           credit = "-",
                           kitchen = "-",
                           charge = "-",
                           bi = "-",
                           post = "",
                           dzip = "-",
                           bg = "-",
                           ba = "-",
                           mem = "-";
                    ResultSet rs2 = null;
                    String sql2 = "select * from chkpost where brcode = '"+brancode+"' and tdate = '"+date+"'";
                    rs2 = stmt2.executeQuery(sql2);
                    if(rs2.next())
                    {
                        if(rs2.getString("plu").equals("Y"))
                        {
                            plu = "Y";
                            iplu += 1;
                        }
                        
                        if(rs2.getString("DZip").equals("Y"))
                        {
                            //dzip = "Y";
                            bg = "Y";
                            ibg +=1;
                            //idzip += 1;
                        }
                        
                        if(rs2.getString("terminal").equals("Y"))
                        {
                            terminal = "Y";
                            iterminal += 1;
                        }
                        
                        if(rs2.getString("cashier").equals("Y"))
                        {
                            cashier = "Y";
                            icashier += 1;
                        }
                        
                        if(rs2.getString("cupon").equals("Y"))
                        {
                            cupon = "Y";
                            icupon += 1;
                        }
                        
                        if(rs2.getString("inv").equals("Y"))
                        {
                            inv = "Y";
                            iinv += 1;
                        }
                        
                        if(rs2.getString("hour").equals("Y"))
                        {
                            hour = "Y";
                            ihour += 1;
                        }
                        
                        if(rs2.getString("rj").equals("Y"))
                        {
                            rj = "Y";
                            irj += 1;
                        }
                        
                        if(rs2.getString("stc").equals("Y"))
                        {
                            stc = "Y";
                            istc += 1;
                        }
                        
//                        
//                        
                        if(rs2.getString("ba").equals("Y"))
                        {
                            ba = "Y";
                            iba += 1;
                        }
                        
                        if(rs2.getString("cr").equals("Y"))
                        {
                            credit = "Y";
                            icredit += 1;
                        }
                        
                        if(rs2.getString("mem").equals("Y"))
                        {
                            mem = "Y";
                            imem += 1;
                        }
                        
                        
                        post = rs2.getString("UserPost");
                        userpost = rs2.getString("UserPost");
//                      
                        
                        if(rs2.getString("charge").equals("Y"))
                        {
                            charge = "Y";
                            icharge += 1;
                        }
                        
                        if(rs2.getString("bi").equals("Y"))
                        {
                            bi = "Y";
                            ibi += 1;
                        }
                        
                    }
                    
                    String sqlinsert = "insert into tempchkpost(Comname,TDate,BrCode,BrName,DZip,Plu,"
                            + "Terminal,Cashier,Cupon,Inv,Hour,Rj,Stc,Bg,Ba,Cr,Mem,UserPost,KicTran,Charge,BI)"
                            + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqlinsert);
                    prm.setString(1, comname);
                    prm.setString(2, date);
                    prm.setString(3, bcode);
                    prm.setString(4, bname);
                    prm.setString(5, dzip);
                    prm.setString(6, plu);
                    prm.setString(7, terminal);
                    prm.setString(8, cashier);
                    prm.setString(9, cupon);
                    prm.setString(10, inv);
                    prm.setString(11, hour);
                    prm.setString(12, rj);
                    prm.setString(13, stc);
                    prm.setString(14, bg);
                    prm.setString(15, ba);
                    prm.setString(16, credit);
                    prm.setString(17, mem);
                    prm.setString(18, post);
                    prm.setString(19, kitchen);
                    prm.setString(20, charge);
                    prm.setString(21, bi);
                    prm.executeUpdate();
                           
                    
                    
                    d1 = DateUtil.addDate(d1, 1);
                }
                
                String sqlinsert = "insert into tempchksum(Comname,BrCode,BrName,TotalDate,Plu,"
                            + "Terminal,Cashier,Cupon,Inv,Hour,Rj,Stc,Bg,Ba,Cr,Mem,UserPost,KicTran,Charge,BI)"
                            + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqlinsert);
                    prm.setString(1, comname);
                    prm.setString(2, brancode);
                    prm.setString(3, branname);
                    prm.setInt(4, totaldate);
                    prm.setInt(5, iplu);
                    prm.setInt(6, iterminal);
                    prm.setInt(7, icashier);
                    prm.setInt(8, icupon);
                    prm.setInt(9, iinv);
                    prm.setInt(10, ihour);
                    prm.setInt(11, irj);
                    prm.setInt(12, istc);
                    prm.setInt(13, ibg);
                    prm.setInt(14, iba);
                    prm.setInt(15, icredit);
                    prm.setInt(16, imem);
                    prm.setString(17, userpost);
                    prm.setInt(18, ikitchen);
                    prm.setInt(19, icharge);
                    prm.setInt(20, ibi);
                    prm.executeUpdate();
            
            jProgressBar1.setValue(per+=1);
            jProgressBar1.update(jProgressBar1.getGraphics());
            
            }
            
        }
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        
    }
    private void clearTemp()
    {
        deletetempchkpost();
        deletetempchksum();
    }
    private void deletetempchkpost()
    {
    try {
                    stmt = (Statement) db.con.createStatement();
                    String sql = "Delete from tempchkpost where comname=?";
                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                    prm.setString(1, new GetComputerName().getComputerName());
                    prm.executeUpdate();
                    stmt.close();
                    jProgressBar1.setValue(per+=5);
                    jProgressBar1.update(jProgressBar1.getGraphics());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
    }
    
    private void deletetempchksum()
    {
    try {
                    stmt = (Statement) db.con.createStatement();
                    String sql = "Delete from tempchksum where comname=?";
                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                    prm.setString(1, new GetComputerName().getComputerName());
                    prm.executeUpdate();
                    stmt.close();
                    jProgressBar1.setValue(per+=5);
                    jProgressBar1.update(jProgressBar1.getGraphics());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
    }

    private void setModel() {
        setdataTbl1();
        setdataTbl2();
    }

    private void setdataTbl1() {
        try {
            tcm = new DefaultTableColumnModel();
            
            TableColumn tc1 = new TableColumn(0,250);
            tc1.setHeaderValue("เขต");
            TableColumn tc2 = new TableColumn(1,40);
            tc2.setHeaderValue("สาขา");
            TableColumn tc3 = new TableColumn(2,120);
            tc3.setHeaderValue("ชื่อสาขา");
            TableColumn tc4 = new TableColumn(3,80);
            tc4.setHeaderValue("จำนวนวัน");
            TableColumn tc5 = new TableColumn(4,40);
            tc5.setHeaderValue("PLU");
            TableColumn tc6 = new TableColumn(5,40);
            tc6.setHeaderValue("Terminal");
            TableColumn tc7 = new TableColumn(6,40);
            tc7.setHeaderValue("Cashier");
            TableColumn tc8 = new TableColumn(7,40);
            tc8.setHeaderValue("Cupon");
            TableColumn tc9 = new TableColumn(8,40);
            tc9.setHeaderValue("Inv");
            TableColumn tc10 = new TableColumn(9,40);
            tc10.setHeaderValue("Hour");
            TableColumn tc11 = new TableColumn(10,40);
            tc11.setHeaderValue("RJ");
            TableColumn tc12 = new TableColumn(11,40);
            tc12.setHeaderValue("STC");
            TableColumn tc13 = new TableColumn(12,40);
            tc13.setHeaderValue("Credit");
            TableColumn tc14 = new TableColumn(13,40);
            tc14.setHeaderValue("Kitchen Tran");
            TableColumn tc15 = new TableColumn(14,40);
            tc15.setHeaderValue("Charge");
            TableColumn tc16 = new TableColumn(15,40);
            tc16.setHeaderValue("BI-Tran");
            
            
            
            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            tcm.addColumn(tc11);
            tcm.addColumn(tc12);
            tcm.addColumn(tc13);
            tcm.addColumn(tc14);
            tcm.addColumn(tc15);
            tcm.addColumn(tc16);
            
            
            
            
//            tcm.addColumn(tc31);
        
        tcm.getColumn(0).setCellRenderer(FormatCell.l());
        tcm.getColumn(1).setCellRenderer(FormatCell.l());
        tcm.getColumn(2).setCellRenderer(FormatCell.l());
        tcm.getColumn(3).setCellRenderer(FormatCell.l());
        tcm.getColumn(4).setCellRenderer(FormatCell.c());
        tcm.getColumn(5).setCellRenderer(FormatCell.c());
        tcm.getColumn(6).setCellRenderer(FormatCell.c());
        tcm.getColumn(7).setCellRenderer(FormatCell.c());
        tcm.getColumn(8).setCellRenderer(FormatCell.c());
        tcm.getColumn(9).setCellRenderer(FormatCell.c());
        tcm.getColumn(10).setCellRenderer(FormatCell.c());
        tcm.getColumn(11).setCellRenderer(FormatCell.c());
        tcm.getColumn(12).setCellRenderer(FormatCell.c());
        tcm.getColumn(13).setCellRenderer(FormatCell.c());
        tcm.getColumn(14).setCellRenderer(FormatCell.c());
        tcm.getColumn(15).setCellRenderer(FormatCell.c());
        
        
        
        
        
        
        tbl.setEditable(false);//ห้ามแก้ไขตาราง
        tbl.setShowGrid(true);
        tbl.setFont(fontplain);
        tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl.setRowSelectionAllowed(true);
        tbl.setBackground(java.awt.Color.WHITE);
        tbl.setGridColor(java.awt.Color.gray);
        tbl.setRowHeight(24);
        
            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            String comname = new GetComputerName().getComputerName();
            String sql="";
                if(dbutility.dbUtility.Char_Set.equalsIgnoreCase("utf-8"))
                {
                sql = "SELECT a.code as code,a.name as name,t.* FROM tempchksum t "
                        + "left join branfile b on t.brcode = b.code "
                        + "left join area a on b.barea = a.code  where comname = '"+comname+"' "
                        + "order by a.code,t.brcode";
                }
                else
                {
                        sql = "SELECT a.code as code,a.name as name,t.* FROM tempchksum t "
                        + "left join branfile b on t.brcode = b.code "
                        + "left join area a on b.barea = a.code  where comname = '"+comname+"' "
                        + "order by a.code,t.brcode";
                }
                reportChksumModel treemodel = new reportChksumModel(sql);
                tbl.setTreeTableModel(treemodel);
                ((JXTree)tbl.getCellRenderer(0,tbl.getHierarchicalColumn())).setFont(fontplain);
                tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);
            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
            h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);
            jProgressBar1.setValue(per+=10);
            jProgressBar1.update(jProgressBar1.getGraphics());
//            getLanguage lang = new getLanguage();
//        lang.setText(frmName, this, lang.getChklang());
        } catch (SQLException ex) {
            Logger.getLogger(rptChkpost.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void setdataTbl2() {
        try {
            tcm2 = new DefaultTableColumnModel();
            
            TableColumn tc1 = new TableColumn(0,200);
            tc1.setHeaderValue("เขต");
            TableColumn tc2 = new TableColumn(1,40);
            tc2.setHeaderValue("สาขา");
            TableColumn tc3 = new TableColumn(2,120);
            tc3.setHeaderValue("ชื่อสาขา");
            TableColumn tc4 = new TableColumn(3,80);
            tc4.setHeaderValue("วันที่");
            TableColumn tc5 = new TableColumn(4,40);
            tc5.setHeaderValue("PLU");
            TableColumn tc6 = new TableColumn(5,40);
            tc6.setHeaderValue("Terminal");
            TableColumn tc7 = new TableColumn(6,40);
            tc7.setHeaderValue("Cashier");
            TableColumn tc8 = new TableColumn(7,40);
            tc8.setHeaderValue("Cupon");
            TableColumn tc9 = new TableColumn(8,40);
            tc9.setHeaderValue("Inv");
            TableColumn tc10 = new TableColumn(9,40);
            tc10.setHeaderValue("Hour");
            TableColumn tc11 = new TableColumn(10,40);
            tc11.setHeaderValue("RJ");
            TableColumn tc12 = new TableColumn(11,40);
            tc12.setHeaderValue("STC");
            
            TableColumn tc13 = new TableColumn(12,40);
            tc13.setHeaderValue("Credit");
            TableColumn tc14 = new TableColumn(13,40);
            tc14.setHeaderValue("Kitchen Tran");
            TableColumn tc15 = new TableColumn(14,40);
            tc15.setHeaderValue("Charge");
            TableColumn tc16 = new TableColumn(15,40);
            tc16.setHeaderValue("BI-Tran");
            TableColumn tc17 = new TableColumn(16,90);
            tc17.setHeaderValue("Post By");
            
            
            
            tcm2.addColumn(tc1);
            tcm2.addColumn(tc2);
            tcm2.addColumn(tc3);
            tcm2.addColumn(tc4);
            tcm2.addColumn(tc5);
            tcm2.addColumn(tc6);
            tcm2.addColumn(tc7);
            tcm2.addColumn(tc8);
            tcm2.addColumn(tc9);
            tcm2.addColumn(tc10);
            tcm2.addColumn(tc11);
            tcm2.addColumn(tc12);
            tcm2.addColumn(tc13);
            tcm2.addColumn(tc14);
            tcm2.addColumn(tc15);
            tcm2.addColumn(tc16);
            tcm2.addColumn(tc17);
            
            
            
//            tcm.addColumn(tc31);
        
        tcm2.getColumn(0).setCellRenderer(FormatCell.l());
        tcm2.getColumn(1).setCellRenderer(FormatCell.l());
        tcm2.getColumn(2).setCellRenderer(FormatCell.l());
        tcm2.getColumn(3).setCellRenderer(FormatCell.l());
        tcm2.getColumn(4).setCellRenderer(FormatCell.c());
        tcm2.getColumn(5).setCellRenderer(FormatCell.c());
        tcm2.getColumn(6).setCellRenderer(FormatCell.c());
        tcm2.getColumn(7).setCellRenderer(FormatCell.c());
        tcm2.getColumn(8).setCellRenderer(FormatCell.c());
        tcm2.getColumn(9).setCellRenderer(FormatCell.c());
        tcm2.getColumn(10).setCellRenderer(FormatCell.c());
        tcm2.getColumn(11).setCellRenderer(FormatCell.c());
        tcm2.getColumn(12).setCellRenderer(FormatCell.c());
        tcm2.getColumn(13).setCellRenderer(FormatCell.c());
        tcm2.getColumn(14).setCellRenderer(FormatCell.c());
        tcm2.getColumn(15).setCellRenderer(FormatCell.c());
        tcm2.getColumn(16).setCellRenderer(FormatCell.l());
       
        
        
        
        
        
        tbl2.setEditable(false);//ห้ามแก้ไขตาราง
        tbl2.setShowGrid(true);
        tbl2.setFont(fontplain);
        tbl2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl2.setRowSelectionAllowed(true);
        tbl2.setBackground(java.awt.Color.WHITE);
        tbl2.setGridColor(java.awt.Color.gray);
        tbl2.setRowHeight(24);
        
            tbl2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            
            
            String comname = new GetComputerName().getComputerName();
            String sql="";
                if(dbutility.dbUtility.Char_Set.equalsIgnoreCase("utf-8"))
                {
                sql = "SELECT a.code as code,a.name as name,t.* FROM tempchkpost t "
                        + "left join branfile b on t.brcode = b.code "
                        + "left join area a on b.barea = a.code where comname = '"+comname+"' "
                        + "order by a.code,t.brcode,tdate";
                }
                else
                {
                        sql = "SELECT a.code as code,a.name as name,t.* FROM tempchkpost t "
                        + "left join branfile b on t.brcode = b.code "
                        + "left join area a on b.barea = a.code where comname = '"+comname+"' "
                        + "order by a.code,t.brcode,tdate";
                }
                reportChkpostModel treemodel = new reportChkpostModel(sql);
                tbl2.setTreeTableModel(treemodel);
                ((JXTree)tbl2.getCellRenderer(0,tbl2.getHierarchicalColumn())).setFont(fontplain);
                
            
            tbl2.setColumnModel(tcm2);
            tbl2.setRootVisible(true);
            JTableHeader h = tbl2.getTableHeader();
            h.setFont(fontbold);
            h.setReorderingAllowed(false);
            tbl2.setLeafIcon(null);
//            getLanguage lang = new getLanguage();
//            lang.setText(frmName, this, lang.getChklang());
            jProgressBar1.setValue(per+=15);
            jProgressBar1.update(jProgressBar1.getGraphics());
        } catch (SQLException ex) {
            Logger.getLogger(rptChkpost.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

   private void procress()
   {
       try {
                    

                    getBranchcount();
                    jProgressBar1.setMaximum(35+rowcount);
                    jProgressBar1.setMinimum(0);
                    jProgressBar1.setValue(0);
                    per =0;
                    setTemp();
                    setModel();

        } catch (Exception e) {
            
        }
   }
}
