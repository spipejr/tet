/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportfile;

import com.mysql.jdbc.Statement;
import dbutility.dbUtility;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.*;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import org.jdesktop.swingx.calendar.DateUtils;
import reportModel.reportSaleOfDeptModel;
import reportModel.reportSaleOfPluModel;
import reportModel.reportSumSaleOfDeptModel;
import static reportfile.rptSumSaleOfDept.barea1;
import static reportfile.rptSumSaleOfDept.barea2;
import static reportfile.rptSumSaleOfDept.bplan1;
import static reportfile.rptSumSaleOfDept.bplan2;
import static reportfile.rptSumSaleOfDept.branch1;
import static reportfile.rptSumSaleOfDept.branch2;
import static reportfile.rptSumSaleOfDept.brand1;
import static reportfile.rptSumSaleOfDept.brand2;
import static reportfile.rptSumSaleOfDept.bsize1;
import static reportfile.rptSumSaleOfDept.bsize2;
import static reportfile.rptSumSaleOfDept.bstore1;
import static reportfile.rptSumSaleOfDept.bstore2;
import static reportfile.rptSumSaleOfDept.btype1;
import static reportfile.rptSumSaleOfDept.btype2;
import static reportfile.rptSumSaleOfDept.bustype1;
import static reportfile.rptSumSaleOfDept.bustype2;
import static reportfile.rptSumSaleOfDept.code;
import static reportfile.rptSumSaleOfDept.company1;
import static reportfile.rptSumSaleOfDept.company2;
import static reportfile.rptSumSaleOfDept.date1;
import static reportfile.rptSumSaleOfDept.date2;
import static reportfile.rptSumSaleOfDept.dept1;
import static reportfile.rptSumSaleOfDept.dept2;
import static reportfile.rptSumSaleOfDept.name;
import static reportfile.rptSumSaleOfDept.strday;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.*;

/**
 *
 * @author s386
 */
public class rptMonthlyTemplate extends javax.swing.JDialog {

    /**
     * Creates new form rptSaleOfDept
     */
    public static String date1 = "", date2 = "", dept1 = "", dept2 = "", plu1 = "", plu2 = "", branch1 = "", branch2 = "", btype1 = "", btype2 = "", barea1 = "", barea2 = "", bsize1 = "", bsize2 = "", bplan1 = "", bplan2 = "", bstore1 = "", bstore2 = "", strday = "", company1 = "", company2 = "", brand1 = "", brand2 = "", bustype1 = "", bustype2 = "";
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    String frmName = "rptSaleOfDept";
    ThaiUtilities cvth = new ThaiUtilities();
    private String condition = "";
    DefaultTableModel model2 ;

    public rptMonthlyTemplate(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inittbl();
        //getLanguage lang = new getLanguage();
        //lang.setText(frmName, this, lang.getChklang());
        setTxt();
    }

    public rptMonthlyTemplate() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        db_btnExel = new javax.swing.JButton();
        db_btnPrint = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lbldate = new javax.swing.JLabel();
        db_lblh1 = new javax.swing.JLabel();
        lbldept = new javax.swing.JLabel();
        db_lblh3 = new javax.swing.JLabel();
        db_btnExpand = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        db_btnExel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel.setText("Exel File");
        db_btnExel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel.setIconTextGap(0);
        db_btnExel.setName("db_btnExel"); // NOI18N
        db_btnExel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExelActionPerformed(evt);
            }
        });

        db_btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        db_btnPrint.setText("พิมม์");
        db_btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnPrint.setIconTextGap(0);
        db_btnPrint.setName("db_btnPrint"); // NOI18N
        db_btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnPrintActionPerformed(evt);
            }
        });

        btnExit1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit1.setIconTextGap(0);
        btnExit1.setName("db_btnExit"); // NOI18N
        btnExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbldate.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate.setText("-");
        lbldate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh1.setText("วันที่ (Date)");
        db_lblh1.setName("db_lblh1"); // NOI18N

        lbldept.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldept.setText("-");
        lbldept.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh3.setText("แผนก");
        db_lblh3.setName("db_lblh3"); // NOI18N

        db_btnExpand.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExpand.setText("Expand On/Off");
        db_btnExpand.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExpand.setIconTextGap(0);
        db_btnExpand.setName("db_btnExpand"); // NOI18N
        db_btnExpand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExpand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExpandActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(db_lblh1)
                .addGap(18, 18, 18)
                .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_lblh3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(lbldept, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db_btnExpand)
                .addGap(5, 5, 5))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnExpand)
                    .addComponent(lbldept, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(db_lblh1)
                        .addComponent(db_lblh3)
                        .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1032, 796));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void db_btnExelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExelActionPerformed
     

    }//GEN-LAST:event_db_btnExelActionPerformed

    private void db_btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnPrintActionPerformed

        // TODO add your handling code here:
  }//GEN-LAST:event_db_btnPrintActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExit1ActionPerformed

    private void db_btnExpandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExpandActionPerformed
        
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnExpandActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rptMonthlyTemplate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rptMonthlyTemplate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rptMonthlyTemplate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rptMonthlyTemplate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                rptMonthlyTemplate dialog = new rptMonthlyTemplate(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton db_btnExel;
    private javax.swing.JButton db_btnExpand;
    private javax.swing.JButton db_btnPrint;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JLabel db_lblh3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lbldept;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables

    private String getHead(String XMonth) {
        String retval = "";
        if (!XMonth.equals("2000-01-01")) {
            try {
                Date d = Format.dateFmtSql.parse(XMonth);
                retval = Format.MonText.format(d);
            } catch (ParseException ex) {
                retval = "";
            }
        }
        return retval;
    }

    private void resetTableModel(DefaultTableModel model) {
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            model.removeRow(0);
        }
    }

    private void inittbl() {
        try {
            //get Array Of Month
            String d1 = "";
            String d2 = "";
            String StartDate = "";
            String FDate = "";
            Date SDate = new Date();
            if (!date1.equals("")) {
                Date d = Format.dateFmtShow.parse(date1);
                d1 = Format.dateFmtSql.format(d);
                StartDate = "15" + "/" + Format.mount.format(d) + "/" + Format.year.format(d);
                SDate = Format.dateFmtShow.parse(StartDate);
            }
            if (!date2.equals("")) {
                Date dd = Format.dateFmtShow.parse(date2);
                d2 = Format.dateFmtSql.format(dd);
            }
            String[] xMonth = new String[37];
            for (int i = 0; i < 37; i++) {
                xMonth[i] = "2000-01-01";
            }
            Date TempDate = SDate;
            for (int i = 0; i < 37; i++) {
                if (i == 0) {
                    xMonth[i] = Format.year.format(TempDate) + "-" + Format.mount.format(TempDate) + "-" + "01";
                } else {
                    TempDate = DateUtil.addDate(TempDate, 30);
                    xMonth[i] = Format.year.format(TempDate) + "-" + Format.mount.format(TempDate) + "-" + "01";
                    String SurDate = "15" + "/" + Format.mount.format(TempDate) + "/" + Format.year.format(TempDate);
                    TempDate = Format.dateFmtShow.parse(SurDate);
                }
            }

            TableColumnModel tcm = new DefaultTableColumnModel();
            TableColumn th1 = new TableColumn(0, 100);
            th1.setHeaderValue("ลักษณะร้าน ");
            TableColumn th2 = new TableColumn(1, 100);
            th2.setHeaderValue("ลักษณะการเช่า");
            TableColumn th3 = new TableColumn(2, 100);
            th3.setHeaderValue("กลุ่มห้าง");
            
            TableColumn td1 = new TableColumn(3, 100);
            td1.setHeaderValue("รหัสสินค้า PLU");
            TableColumn td2 = new TableColumn(4, 200);
            td2.setHeaderValue("ชื่อสินค้า(Description)");

            TableColumn tc1 = new TableColumn(5, 100);
            tc1.setHeaderValue(getHead(xMonth[0]));
            TableColumn tc2 = new TableColumn(6, 100);
            tc2.setHeaderValue(getHead(xMonth[1]));
            TableColumn tc3 = new TableColumn(7, 100);
            tc3.setHeaderValue(getHead(xMonth[2]));
            TableColumn tc4 = new TableColumn(8, 100);
            tc4.setHeaderValue(getHead(xMonth[3]));
            TableColumn tc5 = new TableColumn(9, 100);
            tc5.setHeaderValue(getHead(xMonth[4]));
            TableColumn tc6 = new TableColumn(10, 100);
            tc6.setHeaderValue(getHead(xMonth[5]));
            TableColumn tc7 = new TableColumn(11, 100);
            tc7.setHeaderValue(getHead(xMonth[6]));
            TableColumn tc8 = new TableColumn(12, 100);
            tc8.setHeaderValue(getHead(xMonth[7]));
            TableColumn tc9 = new TableColumn(13, 100);
            tc9.setHeaderValue(getHead(xMonth[8]));
            TableColumn tc10 = new TableColumn(14, 100);
            tc10.setHeaderValue(getHead(xMonth[9]));
            TableColumn tc11 = new TableColumn(15, 100);
            tc11.setHeaderValue(getHead(xMonth[10]));
            TableColumn tc12 = new TableColumn(16, 100);
            tc12.setHeaderValue(getHead(xMonth[11]));
            TableColumn tc13 = new TableColumn(17, 100);
            tc13.setHeaderValue(getHead(xMonth[12]));
            TableColumn tc14 = new TableColumn(18, 100);
            tc14.setHeaderValue(getHead(xMonth[13]));
            TableColumn tc15 = new TableColumn(19, 100);
            tc15.setHeaderValue(getHead(xMonth[14]));
            TableColumn tc16 = new TableColumn(20, 100);
            tc16.setHeaderValue(getHead(xMonth[15]));
            TableColumn tc17 = new TableColumn(21, 100);
            tc17.setHeaderValue(getHead(xMonth[16]));
            TableColumn tc18 = new TableColumn(22, 100);
            tc18.setHeaderValue(getHead(xMonth[17]));
            TableColumn tc19 = new TableColumn(23, 100);
            tc19.setHeaderValue(getHead(xMonth[18]));
            TableColumn tc20 = new TableColumn(24, 100);
            tc20.setHeaderValue(getHead(xMonth[19]));
            TableColumn tc21 = new TableColumn(25, 100);
            tc21.setHeaderValue(getHead(xMonth[20]));
            TableColumn tc22 = new TableColumn(26, 100);
            tc22.setHeaderValue(getHead(xMonth[21]));
            TableColumn tc23 = new TableColumn(27, 100);
            tc23.setHeaderValue(getHead(xMonth[22]));
            TableColumn tc24 = new TableColumn(28, 100);
            tc24.setHeaderValue(getHead(xMonth[23]));

            TableColumn tc25 = new TableColumn(29, 100);
            tc25.setHeaderValue(getHead(xMonth[24]));
            TableColumn tc26 = new TableColumn(30, 100);
            tc26.setHeaderValue(getHead(xMonth[25]));
            TableColumn tc27 = new TableColumn(31, 100);
            tc27.setHeaderValue(getHead(xMonth[26]));
            TableColumn tc28 = new TableColumn(32, 100);
            tc28.setHeaderValue(getHead(xMonth[27]));
            TableColumn tc29 = new TableColumn(33, 100);
            tc29.setHeaderValue(getHead(xMonth[28]));
            TableColumn tc30 = new TableColumn(34, 100);
            tc30.setHeaderValue(getHead(xMonth[29]));
            TableColumn tc31 = new TableColumn(35, 100);
            tc31.setHeaderValue(getHead(xMonth[30]));
            TableColumn tc32 = new TableColumn(36, 100);
            tc32.setHeaderValue(getHead(xMonth[31]));
            TableColumn tc33 = new TableColumn(37, 100);
            tc33.setHeaderValue(getHead(xMonth[32]));
            TableColumn tc34 = new TableColumn(38, 100);
            tc34.setHeaderValue(getHead(xMonth[33]));
            TableColumn tc35 = new TableColumn(39, 100);
            tc35.setHeaderValue(getHead(xMonth[34]));
            TableColumn tc36 = new TableColumn(40, 100);
            tc36.setHeaderValue(getHead(xMonth[35]));

            tcm.addColumn(th1);
            tcm.addColumn(th2);
            tcm.addColumn(th3);
             tcm.addColumn(td1);
            tcm.addColumn(td2);
            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            tcm.addColumn(tc11);
            tcm.addColumn(tc12);
            tcm.addColumn(tc13);
            tcm.addColumn(tc14);
            tcm.addColumn(tc15);
            tcm.addColumn(tc16);
            tcm.addColumn(tc17);
            tcm.addColumn(tc18);
            tcm.addColumn(tc19);
            tcm.addColumn(tc20);
            tcm.addColumn(tc21);
            tcm.addColumn(tc22);
            tcm.addColumn(tc23);
            tcm.addColumn(tc24);
            tcm.addColumn(tc25);
            tcm.addColumn(tc26);
            tcm.addColumn(tc27);
            tcm.addColumn(tc28);
            tcm.addColumn(tc29);
            tcm.addColumn(tc30);
            tcm.addColumn(tc31);
            tcm.addColumn(tc32);
            tcm.addColumn(tc33);
            tcm.addColumn(tc34);
            tcm.addColumn(tc35);
            tcm.addColumn(tc36);
            
            model2 = (DefaultTableModel) tbl.getModel() ;
            tbl.setShowGrid(true);
            tbl.setFont(fontplain);
            tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tbl.setRowSelectionAllowed(true);
            tbl.setBackground(java.awt.Color.WHITE);
            tbl.setGridColor(java.awt.Color.gray);
            tbl.setRowHeight(24);
            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            tbl.setColumnModel(tcm);
            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
            resetTableModel(model2);

            String sql = "";
            sql = "SELECT b.bsize,b.bplane,b.bstore,d.s_pcode,p.pdesc, "
                    + "sum(if(s_date>='" + xMonth[0] + "' and s_date<'" + xMonth[1] + "' ,s_qty,0)) as Mon1,"
                    + "sum(if(s_date>='" + xMonth[1] + "' and s_date<'" + xMonth[2] + "' ,s_qty,0)) as Mon2,"
                    + "sum(if(s_date>='" + xMonth[2] + "' and s_date<'" + xMonth[3] + "' ,s_qty,0)) as Mon3,"
                    + "sum(if(s_date>='" + xMonth[3] + "' and s_date<'" + xMonth[4] + "' ,s_qty,0)) as Mon4,"
                    + "sum(if(s_date>='" + xMonth[4] + "' and s_date<'" + xMonth[5] + "' ,s_qty,0)) as Mon5,"
                    + "sum(if(s_date>='" + xMonth[5] + "' and s_date<'" + xMonth[6] + "' ,s_qty,0)) as Mon6,"
                    + "sum(if(s_date>='" + xMonth[6] + "' and s_date<'" + xMonth[7] + "' ,s_qty,0)) as Mon7,"
                    + "sum(if(s_date>='" + xMonth[7] + "' and s_date<'" + xMonth[8] + "' ,s_qty,0)) as Mon8,"
                    + "sum(if(s_date>='" + xMonth[8] + "' and s_date<'" + xMonth[9] + "' ,s_qty,0)) as Mon9,"
                    + "sum(if(s_date>='" + xMonth[9] + "' and s_date<'" + xMonth[10] + "' ,s_qty,0)) as Mon10,"
                    + "sum(if(s_date>='" + xMonth[10] + "' and s_date<'" + xMonth[11] + "' ,s_qty,0)) as Mon11,"
                    + "sum(if(s_date>='" + xMonth[11] + "' and s_date<'" + xMonth[12] + "' ,s_qty,0)) as Mon12,"
                    + "sum(if(s_date>='" + xMonth[12] + "' and s_date<'" + xMonth[13] + "' ,s_qty,0)) as Mon13,"
                    + "sum(if(s_date>='" + xMonth[13] + "' and s_date<'" + xMonth[14] + "' ,s_qty,0)) as Mon14,"
                    + "sum(if(s_date>='" + xMonth[14] + "' and s_date<'" + xMonth[15] + "' ,s_qty,0)) as Mon15,"
                    + "sum(if(s_date>='" + xMonth[15] + "' and s_date<'" + xMonth[16] + "' ,s_qty,0)) as Mon16,"
                    + "sum(if(s_date>='" + xMonth[16] + "' and s_date<'" + xMonth[17] + "' ,s_qty,0)) as Mon17,"
                    + "sum(if(s_date>='" + xMonth[17] + "' and s_date<'" + xMonth[18] + "' ,s_qty,0)) as Mon18,"
                    + "sum(if(s_date>='" + xMonth[18] + "' and s_date<'" + xMonth[19] + "' ,s_qty,0)) as Mon19,"
                    + "sum(if(s_date>='" + xMonth[19] + "' and s_date<'" + xMonth[20] + "' ,s_qty,0)) as Mon20,"
                    + "sum(if(s_date>='" + xMonth[20] + "' and s_date<'" + xMonth[21] + "' ,s_qty,0)) as Mon21,"
                    + "sum(if(s_date>='" + xMonth[21] + "' and s_date<'" + xMonth[22] + "' ,s_qty,0)) as Mon22,"
                    + "sum(if(s_date>='" + xMonth[22] + "' and s_date<'" + xMonth[23] + "' ,s_qty,0)) as Mon23,"
                    + "sum(if(s_date>='" + xMonth[23] + "' and s_date<'" + xMonth[24] + "' ,s_qty,0)) as Mon24,"
                    + "sum(if(s_date>='" + xMonth[24] + "' and s_date<'" + xMonth[25] + "' ,s_qty,0)) as Mon25,"
                    + "sum(if(s_date>='" + xMonth[25] + "' and s_date<'" + xMonth[26] + "' ,s_qty,0)) as Mon26,"
                    + "sum(if(s_date>='" + xMonth[26] + "' and s_date<'" + xMonth[27] + "' ,s_qty,0)) as Mon27,"
                    + "sum(if(s_date>='" + xMonth[27] + "' and s_date<'" + xMonth[28] + "' ,s_qty,0)) as Mon28,"
                    + "sum(if(s_date>='" + xMonth[28] + "' and s_date<'" + xMonth[29] + "' ,s_qty,0)) as Mon29,"
                    + "sum(if(s_date>='" + xMonth[29] + "' and s_date<'" + xMonth[30] + "' ,s_qty,0)) as Mon30,"
                    + "sum(if(s_date>='" + xMonth[30] + "' and s_date<'" + xMonth[31] + "' ,s_qty,0)) as Mon31,"
                    + "sum(if(s_date>='" + xMonth[31] + "' and s_date<'" + xMonth[32] + "' ,s_qty,0)) as Mon32,"
                    + "sum(if(s_date>='" + xMonth[32] + "' and s_date<'" + xMonth[33] + "' ,s_qty,0)) as Mon33,"
                    + "sum(if(s_date>='" + xMonth[33] + "' and s_date<'" + xMonth[34] + "' ,s_qty,0)) as Mon34,"
                    + "sum(if(s_date>='" + xMonth[34] + "' and s_date<'" + xMonth[35] + "' ,s_qty,0)) as Mon35,"
                    + "sum(if(s_date>='" + xMonth[35] + "' and s_date<'" + xMonth[36] + "' ,s_qty,0)) as Mon36 "
                    + "FROM dplu d "
                    + "left join product p on d.s_pcode = p.pcode "
                    + "left join branfile b on d.s_bran = b.code "
                    + "where d.s_date>= '" + d1 + "' and d.s_date<='" + d2 + "' "
                    + "and (p.pgroup >='" + dept1 + "' and p.pgroup <= '" + dept2 + "' or p.pgroup is null) "
                    + "group by b.bsize,b.bplane,b.bstore,d.s_pcode ";
            ResultSet rs = null;
            Statement stmt;
            try {
                stmt = (Statement) dbUtility.con.createStatement();
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    String[] row = new String[tbl.getColumnCount()];
                    row[0] = rs.getString("bsize");
                    row[1] = rs.getString("bplane");
                    row[2] = rs.getString("bstore");
                    row[3] = rs.getString("s_pcode");
                    row[4] = rs.getString("pdesc");
                    row[5] = Format.integerFmt.format(rs.getDouble("Mon1"));
                    row[6] = Format.integerFmt.format(rs.getDouble("Mon2"));
                    row[7] = Format.integerFmt.format(rs.getDouble("Mon3"));
                    row[8] = Format.integerFmt.format(rs.getDouble("Mon4"));
                    row[9] = Format.integerFmt.format(rs.getDouble("Mon5"));
                    row[10] = Format.integerFmt.format(rs.getDouble("Mon6"));
                    row[11] = Format.integerFmt.format(rs.getDouble("Mon7"));
                    row[12] = Format.integerFmt.format(rs.getDouble("Mon8"));
                    row[13] = Format.integerFmt.format(rs.getDouble("Mon9"));
                    row[14] = Format.integerFmt.format(rs.getDouble("Mon10"));
                    row[15] = Format.integerFmt.format(rs.getDouble("Mon11"));
                    row[16] = Format.integerFmt.format(rs.getDouble("Mon12"));
                    row[17] = Format.integerFmt.format(rs.getDouble("Mon13"));
                    row[18] = Format.integerFmt.format(rs.getDouble("Mon14"));
                    row[19] = Format.integerFmt.format(rs.getDouble("Mon15"));
                    row[20] = Format.integerFmt.format(rs.getDouble("Mon16"));
                    row[21] = Format.integerFmt.format(rs.getDouble("Mon17"));
                    row[22] = Format.integerFmt.format(rs.getDouble("Mon18"));
                    row[23] = Format.integerFmt.format(rs.getDouble("Mon19"));
                    row[24] = Format.integerFmt.format(rs.getDouble("Mon20"));
                    row[25] = Format.integerFmt.format(rs.getDouble("Mon21"));
                    row[26] = Format.integerFmt.format(rs.getDouble("Mon22"));
                    row[27] = Format.integerFmt.format(rs.getDouble("Mon23"));
                    row[28] = Format.integerFmt.format(rs.getDouble("Mon24"));
                    row[29] = Format.integerFmt.format(rs.getDouble("Mon25"));
                    row[30] = Format.integerFmt.format(rs.getDouble("Mon26"));
                    row[31] = Format.integerFmt.format(rs.getDouble("Mon27"));
                    row[32] = Format.integerFmt.format(rs.getDouble("Mon28"));
                    row[33] = Format.integerFmt.format(rs.getDouble("Mon29"));
                    row[34] = Format.integerFmt.format(rs.getDouble("Mon30"));
                    row[35] = Format.integerFmt.format(rs.getDouble("Mon31"));
                    row[36] = Format.integerFmt.format(rs.getDouble("Mon32"));
                    row[37] = Format.integerFmt.format(rs.getDouble("Mon33"));
                    row[38] = Format.integerFmt.format(rs.getDouble("Mon34"));
                    row[39] = Format.integerFmt.format(rs.getDouble("Mon35"));
                    row[40] = Format.integerFmt.format(rs.getDouble("Mon36"));
                    model2.addRow(row);
                }
                String Sur = "" ;
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }

        } catch (ParseException ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setTxt() {
        String date = "";
        String branch = "";
        String dept = "";
        String plu = "";
        if (!date1.equals("")) {
            date = date1 + " - ";
        } else {
            date = " - ";
        }
        if (!date2.equals("31/12/9999")) {
            date += date2;
        }

        if (!branch1.equals("")) {
            branch = branch1 + " - ";
        } else {
            branch = " - ";
        }

        if (!branch2.equals("ZZZ")) {
            branch += branch2;
        }

        if (!dept1.equals("")) {
            dept = dept1 + " - ";
        } else {
            dept = " - ";
        }

        if (!dept2.equals("ZZZZ")) {
            dept += dept2;
        }

        if (!plu1.equals("")) {
            plu = plu1 + " - ";
        } else {
            plu = " - ";
        }

        if (!plu2.equals("ZZZZZZZZZZZZZ")) {
            plu += plu2;
        }
        lbldate.setText(date);
        lbldept.setText(dept);
        condition = this.getTitle() + " Date : " + date + " Dept : " + dept + " Branch : " + branch;
    }
}
