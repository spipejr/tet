/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportfile;

import borfunction.GetComputerName;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import dbutility.dbUtility;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import reportModel.reportComPluModel;
import reportModel.reportSumHourlyModel;
import utilititiesfunction.*;

/**
 *
 * @author s386
 */
public class rptSumHourly extends javax.swing.JDialog {

    /**
     * Creates new form rptSumHourly
     */
    public static String date1 = "",date2 ="",date3="",date4="",dept1="",dept2="",plu1="",plu2="",branch1="",branch2="",btype1="",btype2=""
            ,barea1="",barea2="",bsize1="",bsize2="",bplan1="",bplan2="",bstore1="",bstore2="",strday="",strday2=""
            ,company1="",company2="",brand1="",brand2="",bustype1="",bustype2="",code="",name="";
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    String frmName = "rptSumHourly";
    ThaiUtilities cvth = new ThaiUtilities();
    private String condition = "";
    dbUtility db = new dbUtility();
    public rptSumHourly(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
        comname = new GetComputerName().getComputerName();
        inittbl();
        getLanguage lang = new getLanguage();
        lang.setText(frmName, this, lang.getChklang());
        setTxt();
    }

    public rptSumHourly() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        db_btnExel = new javax.swing.JButton();
        db_btnPrint = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lblplu = new javax.swing.JLabel();
        lbldate = new javax.swing.JLabel();
        db_lblh1 = new javax.swing.JLabel();
        db_lblh4 = new javax.swing.JLabel();
        db_btnExpand = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new org.jdesktop.swingx.JXTreeTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        db_btnExel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel.setText("Exel File");
        db_btnExel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel.setIconTextGap(0);
        db_btnExel.setName("db_btnExel"); // NOI18N
        db_btnExel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExelActionPerformed(evt);
            }
        });

        db_btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        db_btnPrint.setText("พิมม์");
        db_btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnPrint.setIconTextGap(0);
        db_btnPrint.setName("db_btnPrint"); // NOI18N
        db_btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnPrintActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblplu.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lblplu.setText("-");
        lblplu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbldate.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate.setText("-");
        lbldate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh1.setText("วันที่ (Date)");
        db_lblh1.setName("db_lblh1"); // NOI18N

        db_lblh4.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh4.setText("Branch");
        db_lblh4.setName("db_lblh4"); // NOI18N

        db_btnExpand.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExpand.setText("Expand On/Off");
        db_btnExpand.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExpand.setIconTextGap(0);
        db_btnExpand.setName("db_btnExpand"); // NOI18N
        db_btnExpand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExpand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExpandActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_lblh4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(lblplu, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_lblh1)
                        .addGap(18, 18, 18)
                        .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(db_btnExpand)
                .addContainerGap(274, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnExpand)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(db_lblh1)
                            .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblplu, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_lblh4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExit1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit1.setIconTextGap(0);
        btnExit1.setName("db_btnExit"); // NOI18N
        btnExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        tbl.setName("tbl");
        jScrollPane1.setViewportView(tbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void db_btnExelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExelActionPerformed

         Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        setTxt();
        try {
            

            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();


                
                
                if(curFile.exists())
                {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        db_btnExelActionPerformed(null);
                        
                        return;

                    }
                    
                }
                
                   
                try {
                    test.setOutputFile(curFile.toString());
                    test.writeTreetableContditionNoSum(tbl, tbl.getColumnModel(), condition);
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
                
                
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_db_btnExelActionPerformed

    private void db_btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnPrintActionPerformed


        // TODO add your handling code here:
  }//GEN-LAST:event_db_btnPrintActionPerformed

    private void db_btnExpandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExpandActionPerformed
        if (tbl.isExpanded(0)) {
            tbl.collapseAll();
        } else {
            tbl.expandAll();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnExpandActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExit1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rptSumHourly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rptSumHourly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rptSumHourly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rptSumHourly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                rptSumHourly dialog = new rptSumHourly(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton db_btnExel;
    private javax.swing.JButton db_btnExpand;
    private javax.swing.JButton db_btnPrint;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JLabel db_lblh4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lblplu;
    private org.jdesktop.swingx.JXTreeTable tbl;
    // End of variables declaration//GEN-END:variables
    private void inittbl()
{
    try {
            
            
            TableColumnModel tcm = new DefaultTableColumnModel();
            
            TableColumn tc1 = new TableColumn(0,300);
            tc1.setHeaderValue("S_Branch");
            TableColumn tc2 = new TableColumn(1,100);
            tc2.setHeaderValue("วันที่");
            TableColumn tc3 = new TableColumn(2,100);
            tc3.setHeaderValue("<html>00.00-06.00<br>บิล");
            TableColumn tc4 = new TableColumn(3,100);
            tc4.setHeaderValue("<html>00.00-06.00<br>ลูกค้า");
            TableColumn tc5 = new TableColumn(4,100);
            tc5.setHeaderValue("<html>00.00-06.00<br>จำนวนเงิน");
            TableColumn tc6 = new TableColumn(5,100);
            tc6.setHeaderValue("<html>06.01-07.00<br>บิล");
            TableColumn tc7 = new TableColumn(6,100);
            tc7.setHeaderValue("<html>06.01-07.00<br>ลูกค้า");
            TableColumn tc8 = new TableColumn(7,100);
            tc8.setHeaderValue("<html>06.01-07.00<br>จำนวนเงิน");
            TableColumn tc9 = new TableColumn(8,100);
            tc9.setHeaderValue("<html>07.01-08.00<br>บิล");
            TableColumn tc10 = new TableColumn(9,100);
            tc10.setHeaderValue("<html>07.01-08.00<br>ลูกค้า");
            TableColumn tc11 = new TableColumn(10,100);
            tc11.setHeaderValue("<html>07.01-08.00<br>จำนวนเงิน");
            TableColumn tc12 = new TableColumn(11,100);
            tc12.setHeaderValue("<html>08.01-09.00<br>บิล");
            TableColumn tc13 = new TableColumn(12,100);
            tc13.setHeaderValue("<html>08.01-09.00<br>ลูกค้า");
            TableColumn tc14 = new TableColumn(13,100);
            tc14.setHeaderValue("<html>08.01-09.00<br>จำนวนเงิน");
            TableColumn tc15 = new TableColumn(14,100);
            tc15.setHeaderValue("<html>09.01-10.00<br>บิล");
            TableColumn tc16 = new TableColumn(15,100);
            tc16.setHeaderValue("<html>09.01-10.00<br>ลูกค้า");
            TableColumn tc17 = new TableColumn(16,100);
            tc17.setHeaderValue("<html>09.01-10.00<br>จำนวนเงิน");
            TableColumn tc18 = new TableColumn(17,100);
            tc18.setHeaderValue("<html>10.01-11.00<br>บิล");
            TableColumn tc19 = new TableColumn(18,100);
            tc19.setHeaderValue("<html>10.01-11.00<br>ลูกค้า");
            TableColumn tc20 = new TableColumn(19,100);
            tc20.setHeaderValue("<html>10.01-11.00<br>จำนวนเงิน");
            TableColumn tc21 = new TableColumn(20,100);
            tc21.setHeaderValue("<html>11.01-12.00<br>บิล");
            TableColumn tc22 = new TableColumn(21,100);
            tc22.setHeaderValue("<html>11.01-12.00<br>ลูกค้า");
            TableColumn tc23 = new TableColumn(22,100);
            tc23.setHeaderValue("<html>11.01-12.00<br>จำนวนเงิน");
            TableColumn tc24 = new TableColumn(23,100);
            tc24.setHeaderValue("<html>12.01-13.00<br>บิล");
            TableColumn tc25 = new TableColumn(24,100);
            tc25.setHeaderValue("<html>12.01-13.00<br>ลูกค้า");
            TableColumn tc26 = new TableColumn(25,100);
            tc26.setHeaderValue("<html>12.01-13.00<br>จำนวนเงิน");
            TableColumn tc27 = new TableColumn(26,100);
            tc27.setHeaderValue("<html>13.01-14.00<br>บิล");
            TableColumn tc28 = new TableColumn(27,100);
            tc28.setHeaderValue("<html>13.01-14.00<br>ลูกค้า");
            TableColumn tc29 = new TableColumn(28,100);
            tc29.setHeaderValue("<html>13.01-14.00<br>จำนวนเงิน");
            TableColumn tc30 = new TableColumn(29,100);
            tc30.setHeaderValue("<html>14.01-15.00<br>บิล");
            TableColumn tc31 = new TableColumn(30,100);
            tc31.setHeaderValue("<html>14.01-15.00<br>ลูกค้า");
            TableColumn tc32 = new TableColumn(31,100);
            tc32.setHeaderValue("<html>14.01-15.00<br>จำนวนเงิน");
            TableColumn tc33 = new TableColumn(32,100);
            tc33.setHeaderValue("<html>15.01-16.00<br>บิล");
            TableColumn tc34 = new TableColumn(33,100);
            tc34.setHeaderValue("<html>15.01-16.00<br>ลูกค้า");
            TableColumn tc35 = new TableColumn(34,100);
            tc35.setHeaderValue("<html>15.01-16.00<br>จำนวนเงิน");
            TableColumn tc36 = new TableColumn(35,100);
            tc36.setHeaderValue("<html>16.01-17.00<br>บิล");
            TableColumn tc37 = new TableColumn(36,100);
            tc37.setHeaderValue("<html>16.01-17.00<br>ลูกค้า");
            TableColumn tc38 = new TableColumn(37,100);
            tc38.setHeaderValue("<html>16.01-17.00<br>จำนวนเงิน");
            TableColumn tc39 = new TableColumn(38,100);
            tc39.setHeaderValue("<html>17.01-18.00<br>บิล");
            TableColumn tc40 = new TableColumn(39,100);
            tc40.setHeaderValue("<html>17.01-18.00<br>ลูกค้า");
            TableColumn tc41 = new TableColumn(40,100);
            tc41.setHeaderValue("<html>17.01-18.00<br>จำนวนเงิน");
            TableColumn tc42 = new TableColumn(41,100);
            tc42.setHeaderValue("<html>18.01-19.00<br>บิล");
            TableColumn tc43 = new TableColumn(42,100);
            tc43.setHeaderValue("<html>18.01-19.00<br>ลูกค้า");
            TableColumn tc44 = new TableColumn(43,100);
            tc44.setHeaderValue("<html>18.01-19.00<br>จำนวนเงิน");
            TableColumn tc45 = new TableColumn(44,100);
            tc45.setHeaderValue("<html>19.01-20.00<br>บิล");
            TableColumn tc46 = new TableColumn(45,100);
            tc46.setHeaderValue("<html>19.01-20.00<br>ลูกค้า");
            TableColumn tc47 = new TableColumn(46,100);
            tc47.setHeaderValue("<html>19.01-20.00<br>จำนวนเงิน");
            TableColumn tc48 = new TableColumn(47,100);
            tc48.setHeaderValue("<html>20.01-21.00<br>บิล");
            TableColumn tc49 = new TableColumn(48,100);
            tc49.setHeaderValue("<html>20.01-21.00<br>ลูกค้า");
            TableColumn tc50 = new TableColumn(49,100);
            tc50.setHeaderValue("<html>20.01-21.00<br>จำนวนเงิน");
            TableColumn tc51 = new TableColumn(50,100);
            tc51.setHeaderValue("<html>21.01-22.00<br>บิล");
            TableColumn tc52 = new TableColumn(51,100);
            tc52.setHeaderValue("<html>21.01-22.00<br>ลูกค้า");
            TableColumn tc53 = new TableColumn(52,100);
            tc53.setHeaderValue("<html>21.01-22.00<br>จำนวนเงิน");
            TableColumn tc54 = new TableColumn(53,100);
            tc54.setHeaderValue("<html>22.01-23.00<br>บิล");
            TableColumn tc55 = new TableColumn(54,100);
            tc55.setHeaderValue("<html>22.01-23.00<br>ลูกค้า");
            TableColumn tc56 = new TableColumn(55,100);
            tc56.setHeaderValue("<html>22.01-23.00<br>จำนวนเงิน");
            TableColumn tc57 = new TableColumn(56,100);
            tc57.setHeaderValue("<html>23.01-00.00<br>บิล");
            TableColumn tc58 = new TableColumn(57,100);
            tc58.setHeaderValue("<html>23.01-00.00<br>ลูกค้า");
            TableColumn tc59 = new TableColumn(58,100);
            tc59.setHeaderValue("<html>23.01-00.00<br>จำนวนเงิน");
            
            
            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            tcm.addColumn(tc11);
            tcm.addColumn(tc12);
            tcm.addColumn(tc13);
            tcm.addColumn(tc14);
            tcm.addColumn(tc15);
            tcm.addColumn(tc16);
            tcm.addColumn(tc17);
            tcm.addColumn(tc18);
            tcm.addColumn(tc19);
            tcm.addColumn(tc20);
            tcm.addColumn(tc21);
            tcm.addColumn(tc22);
            tcm.addColumn(tc23);
            tcm.addColumn(tc24);
            tcm.addColumn(tc25);
            tcm.addColumn(tc26);
            tcm.addColumn(tc27);
            tcm.addColumn(tc28);
            tcm.addColumn(tc29);
            tcm.addColumn(tc30);
            tcm.addColumn(tc31);
            tcm.addColumn(tc32);
            tcm.addColumn(tc33);
            tcm.addColumn(tc34);
            tcm.addColumn(tc35);
            tcm.addColumn(tc36);
            tcm.addColumn(tc37);
            tcm.addColumn(tc38);
            tcm.addColumn(tc39);
            tcm.addColumn(tc40);
            tcm.addColumn(tc41);
            tcm.addColumn(tc42);
            tcm.addColumn(tc43);
            tcm.addColumn(tc44);
            tcm.addColumn(tc45);
            tcm.addColumn(tc46);
            tcm.addColumn(tc47);
            tcm.addColumn(tc48);
            tcm.addColumn(tc49);
            tcm.addColumn(tc50);
            tcm.addColumn(tc51);
            tcm.addColumn(tc52);
            tcm.addColumn(tc53);
            tcm.addColumn(tc54);
            tcm.addColumn(tc55);
            tcm.addColumn(tc56);
            tcm.addColumn(tc57);
            tcm.addColumn(tc58);
            tcm.addColumn(tc59);
            
            
            
//            tcm.addColumn(tc31);
        
        tcm.getColumn(0).setCellRenderer(FormatCell.l());
        tcm.getColumn(1).setCellRenderer(FormatCell.l());
        tcm.getColumn(2).setCellRenderer(FormatCell.color1());
        tcm.getColumn(3).setCellRenderer(FormatCell.color1());
        tcm.getColumn(4).setCellRenderer(FormatCell.color1());
        tcm.getColumn(5).setCellRenderer(FormatCell.color2());
        tcm.getColumn(6).setCellRenderer(FormatCell.color2());
        tcm.getColumn(7).setCellRenderer(FormatCell.color2());
        tcm.getColumn(8).setCellRenderer(FormatCell.color1());
        tcm.getColumn(9).setCellRenderer(FormatCell.color1());
        tcm.getColumn(10).setCellRenderer(FormatCell.color1());
        tcm.getColumn(11).setCellRenderer(FormatCell.color2());
        tcm.getColumn(12).setCellRenderer(FormatCell.color2());
        tcm.getColumn(13).setCellRenderer(FormatCell.color2());
        tcm.getColumn(14).setCellRenderer(FormatCell.color1());
        tcm.getColumn(15).setCellRenderer(FormatCell.color1());
        tcm.getColumn(16).setCellRenderer(FormatCell.color1());
        tcm.getColumn(17).setCellRenderer(FormatCell.color2());
        tcm.getColumn(18).setCellRenderer(FormatCell.color2());
        tcm.getColumn(19).setCellRenderer(FormatCell.color2());
        tcm.getColumn(20).setCellRenderer(FormatCell.color1());
        tcm.getColumn(21).setCellRenderer(FormatCell.color1());
        tcm.getColumn(22).setCellRenderer(FormatCell.color1());
        tcm.getColumn(23).setCellRenderer(FormatCell.color2());
        tcm.getColumn(24).setCellRenderer(FormatCell.color2());
        tcm.getColumn(25).setCellRenderer(FormatCell.color2());
        tcm.getColumn(26).setCellRenderer(FormatCell.color1());
        tcm.getColumn(27).setCellRenderer(FormatCell.color1());
        tcm.getColumn(28).setCellRenderer(FormatCell.color1());
        tcm.getColumn(29).setCellRenderer(FormatCell.color2());
        tcm.getColumn(30).setCellRenderer(FormatCell.color2());
        tcm.getColumn(31).setCellRenderer(FormatCell.color2());
        tcm.getColumn(32).setCellRenderer(FormatCell.color1());
        tcm.getColumn(33).setCellRenderer(FormatCell.color1());
        tcm.getColumn(34).setCellRenderer(FormatCell.color1());
        tcm.getColumn(35).setCellRenderer(FormatCell.color2());
        tcm.getColumn(36).setCellRenderer(FormatCell.color2());
        tcm.getColumn(37).setCellRenderer(FormatCell.color2());
        tcm.getColumn(38).setCellRenderer(FormatCell.color1());
        tcm.getColumn(39).setCellRenderer(FormatCell.color1());
        tcm.getColumn(40).setCellRenderer(FormatCell.color1());
        tcm.getColumn(41).setCellRenderer(FormatCell.color2());
        tcm.getColumn(42).setCellRenderer(FormatCell.color2());
        tcm.getColumn(43).setCellRenderer(FormatCell.color2());
        tcm.getColumn(44).setCellRenderer(FormatCell.color1());
        tcm.getColumn(45).setCellRenderer(FormatCell.color1());
        tcm.getColumn(46).setCellRenderer(FormatCell.color1());
        tcm.getColumn(47).setCellRenderer(FormatCell.color2());
        tcm.getColumn(48).setCellRenderer(FormatCell.color2());
        tcm.getColumn(49).setCellRenderer(FormatCell.color2());
        tcm.getColumn(50).setCellRenderer(FormatCell.color1());
        tcm.getColumn(51).setCellRenderer(FormatCell.color1());
        tcm.getColumn(52).setCellRenderer(FormatCell.color1());
        tcm.getColumn(53).setCellRenderer(FormatCell.color2());
        tcm.getColumn(54).setCellRenderer(FormatCell.color2());
        tcm.getColumn(55).setCellRenderer(FormatCell.color2());
        tcm.getColumn(56).setCellRenderer(FormatCell.color1());
        tcm.getColumn(57).setCellRenderer(FormatCell.color1());
        tcm.getColumn(58).setCellRenderer(FormatCell.color1());
       
        
        
        
        tbl.setEditable(false);//ห้ามแก้ไขตาราง
        tbl.setShowGrid(true);
        tbl.setFont(fontplain);
        tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl.setRowSelectionAllowed(true);
        tbl.setBackground(java.awt.Color.WHITE);
        tbl.setGridColor(java.awt.Color.gray);
        tbl.setRowHeight(24);
        
            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            String d1 = "";
            String d2 = "";
            if(!date1.equals(""))
            {
            Date d = Format.dateFmtShow.parse(date1);
            d1= Format.dateFmtSql.format(d);
            }
            if(!date2.equals(""))
            {
            Date dd = Format.dateFmtShow.parse(date2);
            d2= Format.dateFmtSql.format(dd);
            }
            setTemp();
            String sql="select (pnt1+pnt2+pnt3+pnt4+pnt5+pnt6) as pnt1,(cnt1+cnt2+cnt3+cnt4+cnt5+cnt6) as cnt1,(amt1+amt2+amt3+amt4+amt5+amt6) as amt1,t.* from temphourly t where comname = '"+comname+"' order by s_bran,DayOfWeek(T_Date)";
            
            reportSumHourlyModel treemodel = new reportSumHourlyModel(sql);
            tbl.setTreeTableModel(treemodel);
            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);
            ((JXTree)tbl.getCellRenderer(0,tbl.getHierarchicalColumn())).setFont(fontplain);
            setTxt();
            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
         //   h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);
            //tbl.getColumnModel().removeColumn(tc3);
            //tbl.getColumnModel().removeColumn(tc4);
        } catch (ParseException ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        }
}
String comname = "";
private void setTemp()
{
    try {
            String d1 = "";
            String d2 = "";
            
            
            
            deletetemp(comname);
            if(!date1.equals(""))
            {
            
                Date d = Format.dateFmtShow.parse(date1);
                d1= Format.dateFmtSql.format(d);
            } 
            if(!date2.equals(""))
            {
            Date dd = Format.dateFmtShow.parse(date2);
            d2= Format.dateFmtSql.format(dd);
            }
            
            
            
            String sql="";
            if(dbutility.dbUtility.Char_Set.equalsIgnoreCase("utf-8"))
            {
                         sql = "Select S_Bran,T_Date,T_MacNo,Count(DISTINCT T_Date) as countdate,Sum(Pnt1)"
                        + ",Sum(Pnt2),Sum(Pnt3),Sum(Pnt4),Sum(Pnt5),Sum(Pnt6),Sum(Pnt7)"
                        + ",Sum(Pnt8),Sum(Pnt9),Sum(Pnt10),Sum(Pnt11),Sum(Pnt12),Sum(Pnt13)"
                        + ",Sum(Pnt14),Sum(Pnt15),Sum(Pnt16),Sum(Pnt17),Sum(Pnt18),Sum(Pnt19)"
                        + ",Sum(Pnt20),Sum(Pnt21),Sum(Pnt22),Sum(Pnt23),Sum(Pnt24),Sum(Cnt1)"
                        + ",Sum(Cnt2),Sum(Cnt3),Sum(Cnt4),Sum(Cnt5),Sum(Cnt6),Sum(Cnt7)"
                        + ",Sum(Cnt8),Sum(Cnt9),Sum(Cnt10),Sum(Cnt11),Sum(Cnt12),Sum(Cnt13)"
                        + ",Sum(Cnt14),Sum(Cnt15),Sum(Cnt16),Sum(Cnt17),Sum(Cnt18),Sum(Cnt19)"
                        + ",Sum(Cnt20),Sum(Cnt21),Sum(Cnt22),Sum(Cnt23),Sum(Cnt24),Sum(Amt1)"
                        + ",Sum(Amt2),Sum(Amt3),Sum(Amt4),Sum(Amt5),Sum(Amt6),Sum(Amt7),Sum(Amt8)"
                        + ",Sum(Amt9),Sum(Amt10),Sum(Amt11),Sum(Amt12),Sum(Amt13),Sum(Amt14)"
                        + ",Sum(Amt15),Sum(Amt16),Sum(Amt17),Sum(Amt18),Sum(Amt19),Sum(Amt20)"
                        + ",Sum(Amt21),Sum(Amt22),Sum(Amt23),Sum(Amt24)"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + " "
                        + "FROM dhourly d "
                        + "inner join branfile b on d.s_bran = b.code "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +"d.t_date>= '"+d1+"' and d.t_date<='"+d2+"' "
                        +"and d.s_bran >= '"+branch1+"' and d.s_bran <= '"+branch2+"' "
                        +"and b.btype >= '"+btype1+"' and b.btype <= '"+btype2+"' "
                        +"and b.barea >= '"+barea1+"' and b.barea <= '"+barea2+"' "
                        +"and b.bsize >= '"+bsize1+"' and b.bsize <= '"+bsize2+"' "
                        +"and b.bplane >= '"+bplan1+"' and b.bplane <= '"+bplan2+"' "
                        +"and b.bstore >= '"+bstore1+"' and b.bstore <= '"+bstore2+"' "
                        +"and b.companycode >= '"+company1+"' and b.companycode <= '"+company2+"' "
                        +"and b.brandcode >= '"+brand1+"' and b.brandcode <= '"+brand2+"' "
                        +"and b.buscode >= '"+bustype1+"' and b.buscode <= '"+bustype2+"' "
                        
                        + "Group By S_Bran,Dayofweek(T_Date) Order By S_Bran,DayofWeek(T_Date)";
                        
            ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
                while(rs.next())
                {
                    
                   
                    
                        //insert data
                            String sqltemp = "Insert InTo temphourly (S_Bran,T_Date,BranName,TempDay,"
                                    + "PNT1,CNT1,AMT1,PNT2,CNT2,AMT2,PNT3,CNT3,AMT3,PNT4,CNT4,AMT4"
                                    + ",PNT5,CNT5,AMT5,PNT6,CNT6,AMT6,PNT7,CNT7,AMT7,PNT8,CNT8,AMT8"
                                    + ",PNT9,CNT9,AMT9,PNT10,CNT10,AMT10,PNT11,CNT11,AMT11,PNT12,CNT12,AMT12"
                                    + ",PNT13,CNT13,AMT13,PNT14,CNT14,AMT14,PNT15,CNT15,AMT15,PNT16,CNT16,AMT16"
                                    + ",PNT17,CNT17,AMT17,PNT18,CNT18,AMT18,PNT19,CNT19,AMT19"
                                    + ",PNT20,CNT20,AMT20,PNT21,CNT21,AMT21,PNT22,CNT22,AMT22,PNT23"
                                    + ",CNT23,AMT23,PNT24,CNT24,AMT24,comname) "
                                    + "Values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?"
                                    + ",?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, rs.getString("s_bran"));
                            prm.setString(2, rs.getString("t_date"));
                            prm.setString(3, rs.getString("BranchName"));
                            prm.setString(4,Format.DayName.format(rs.getDate("t_date")));
                            prm.setDouble(5,rs.getDouble("sum(pnt1)")/rs.getInt("countdate"));
                            prm.setDouble(6,rs.getDouble("sum(cnt1)")/rs.getInt("countdate"));
                            prm.setDouble(7,rs.getDouble("sum(amt1)")/rs.getInt("countdate"));
                            prm.setDouble(8,rs.getDouble("sum(pnt2)")/rs.getInt("countdate"));
                            prm.setDouble(9,rs.getDouble("sum(cnt2)")/rs.getInt("countdate"));
                            prm.setDouble(10,rs.getDouble("sum(amt2)")/rs.getInt("countdate"));
                            prm.setDouble(11,rs.getDouble("sum(pnt3)")/rs.getInt("countdate"));
                            prm.setDouble(12,rs.getDouble("sum(cnt3)")/rs.getInt("countdate"));
                            prm.setDouble(13,rs.getDouble("sum(amt3)")/rs.getInt("countdate"));
                            prm.setDouble(14,rs.getDouble("sum(pnt4)")/rs.getInt("countdate"));
                            prm.setDouble(15,rs.getDouble("sum(cnt4)")/rs.getInt("countdate"));
                            prm.setDouble(16,rs.getDouble("sum(amt4)")/rs.getInt("countdate"));
                            prm.setDouble(17,rs.getDouble("sum(pnt5)")/rs.getInt("countdate"));
                            prm.setDouble(18,rs.getDouble("sum(cnt5)")/rs.getInt("countdate"));
                            prm.setDouble(19,rs.getDouble("sum(amt5)")/rs.getInt("countdate"));
                            prm.setDouble(20,rs.getDouble("sum(pnt6)")/rs.getInt("countdate"));
                            prm.setDouble(21,rs.getDouble("sum(cnt6)")/rs.getInt("countdate"));
                            prm.setDouble(22,rs.getDouble("sum(amt6)")/rs.getInt("countdate"));
                            prm.setDouble(23,rs.getDouble("sum(pnt7)")/rs.getInt("countdate"));
                            prm.setDouble(24,rs.getDouble("sum(cnt7)")/rs.getInt("countdate"));
                            prm.setDouble(25,rs.getDouble("sum(amt7)")/rs.getInt("countdate"));
                            prm.setDouble(26,rs.getDouble("sum(pnt8)")/rs.getInt("countdate"));
                            prm.setDouble(27,rs.getDouble("sum(cnt8)")/rs.getInt("countdate"));
                            prm.setDouble(28,rs.getDouble("sum(amt8)")/rs.getInt("countdate"));
                            prm.setDouble(29,rs.getDouble("sum(pnt9)")/rs.getInt("countdate"));
                            prm.setDouble(30,rs.getDouble("sum(cnt9)")/rs.getInt("countdate"));
                            prm.setDouble(31,rs.getDouble("sum(amt9)")/rs.getInt("countdate"));
                            prm.setDouble(32,rs.getDouble("sum(pnt10)")/rs.getInt("countdate"));
                            prm.setDouble(33,rs.getDouble("sum(cnt10)")/rs.getInt("countdate"));
                            prm.setDouble(34,rs.getDouble("sum(amt10)")/rs.getInt("countdate"));
                            prm.setDouble(35,rs.getDouble("sum(pnt11)")/rs.getInt("countdate"));
                            prm.setDouble(36,rs.getDouble("sum(cnt11)")/rs.getInt("countdate"));
                            prm.setDouble(37,rs.getDouble("sum(amt11)")/rs.getInt("countdate"));
                            prm.setDouble(38,rs.getDouble("sum(pnt12)")/rs.getInt("countdate"));
                            prm.setDouble(39,rs.getDouble("sum(cnt12)")/rs.getInt("countdate"));
                            prm.setDouble(40,rs.getDouble("sum(amt12)")/rs.getInt("countdate"));
                            prm.setDouble(41,rs.getDouble("sum(pnt13)")/rs.getInt("countdate"));
                            prm.setDouble(42,rs.getDouble("sum(cnt13)")/rs.getInt("countdate"));
                            prm.setDouble(43,rs.getDouble("sum(amt13)")/rs.getInt("countdate"));
                            prm.setDouble(44,rs.getDouble("sum(pnt14)")/rs.getInt("countdate"));
                            prm.setDouble(45,rs.getDouble("sum(cnt14)")/rs.getInt("countdate"));
                            prm.setDouble(46,rs.getDouble("sum(amt14)")/rs.getInt("countdate"));
                            prm.setDouble(47,rs.getDouble("sum(pnt15)")/rs.getInt("countdate"));
                            prm.setDouble(48,rs.getDouble("sum(cnt15)")/rs.getInt("countdate"));
                            prm.setDouble(49,rs.getDouble("sum(amt15)")/rs.getInt("countdate"));
                            prm.setDouble(50,rs.getDouble("sum(pnt16)")/rs.getInt("countdate"));
                            prm.setDouble(51,rs.getDouble("sum(cnt16)")/rs.getInt("countdate"));
                            prm.setDouble(52,rs.getDouble("sum(amt16)")/rs.getInt("countdate"));
                            prm.setDouble(53,rs.getDouble("sum(pnt17)")/rs.getInt("countdate"));
                            prm.setDouble(54,rs.getDouble("sum(cnt17)")/rs.getInt("countdate"));
                            prm.setDouble(55,rs.getDouble("sum(amt17)")/rs.getInt("countdate"));
                            prm.setDouble(56,rs.getDouble("sum(pnt18)")/rs.getInt("countdate"));
                            prm.setDouble(57,rs.getDouble("sum(cnt18)")/rs.getInt("countdate"));
                            prm.setDouble(58,rs.getDouble("sum(amt18)")/rs.getInt("countdate"));
                            prm.setDouble(59,rs.getDouble("sum(pnt19)")/rs.getInt("countdate"));
                            prm.setDouble(60,rs.getDouble("sum(cnt19)")/rs.getInt("countdate"));
                            prm.setDouble(61,rs.getDouble("sum(amt19)")/rs.getInt("countdate"));
                            prm.setDouble(62,rs.getDouble("sum(pnt20)")/rs.getInt("countdate"));
                            prm.setDouble(63,rs.getDouble("sum(cnt20)")/rs.getInt("countdate"));
                            prm.setDouble(64,rs.getDouble("sum(amt20)")/rs.getInt("countdate"));
                            prm.setDouble(65,rs.getDouble("sum(pnt21)")/rs.getInt("countdate"));
                            prm.setDouble(66,rs.getDouble("sum(cnt21)")/rs.getInt("countdate"));
                            prm.setDouble(67,rs.getDouble("sum(amt21)")/rs.getInt("countdate"));
                            prm.setDouble(68,rs.getDouble("sum(pnt22)")/rs.getInt("countdate"));
                            prm.setDouble(69,rs.getDouble("sum(cnt22)")/rs.getInt("countdate"));
                            prm.setDouble(70,rs.getDouble("sum(amt22)")/rs.getInt("countdate"));
                            prm.setDouble(71,rs.getDouble("sum(pnt23)")/rs.getInt("countdate"));
                            prm.setDouble(72,rs.getDouble("sum(cnt23)")/rs.getInt("countdate"));
                            prm.setDouble(73,rs.getDouble("sum(amt23)")/rs.getInt("countdate"));
                            prm.setDouble(74,rs.getDouble("sum(pnt24)")/rs.getInt("countdate"));
                            prm.setDouble(75,rs.getDouble("sum(cnt24)")/rs.getInt("countdate"));
                            prm.setDouble(76,rs.getDouble("sum(amt24)")/rs.getInt("countdate"));
                            prm.setString(77, comname);

                            prm.executeUpdate();
                    
                    
                }
            
            }
            else
            {
                sql = "Select S_Bran,T_Date,T_MacNo,Count(DISTINCT T_Date) as countdate,Sum(Pnt1)"
                        + ",Sum(Pnt2),Sum(Pnt3),Sum(Pnt4),Sum(Pnt5),Sum(Pnt6),Sum(Pnt7)"
                        + ",Sum(Pnt8),Sum(Pnt9),Sum(Pnt10),Sum(Pnt11),Sum(Pnt12),Sum(Pnt13)"
                        + ",Sum(Pnt14),Sum(Pnt15),Sum(Pnt16),Sum(Pnt17),Sum(Pnt18),Sum(Pnt19)"
                        + ",Sum(Pnt20),Sum(Pnt21),Sum(Pnt22),Sum(Pnt23),Sum(Pnt24),Sum(Cnt1)"
                        + ",Sum(Cnt2),Sum(Cnt3),Sum(Cnt4),Sum(Cnt5),Sum(Cnt6),Sum(Cnt7)"
                        + ",Sum(Cnt8),Sum(Cnt9),Sum(Cnt10),Sum(Cnt11),Sum(Cnt12),Sum(Cnt13)"
                        + ",Sum(Cnt14),Sum(Cnt15),Sum(Cnt16),Sum(Cnt17),Sum(Cnt18),Sum(Cnt19)"
                        + ",Sum(Cnt20),Sum(Cnt21),Sum(Cnt22),Sum(Cnt23),Sum(Cnt24),Sum(Amt1)"
                        + ",Sum(Amt2),Sum(Amt3),Sum(Amt4),Sum(Amt5),Sum(Amt6),Sum(Amt7),Sum(Amt8)"
                        + ",Sum(Amt9),Sum(Amt10),Sum(Amt11),Sum(Amt12),Sum(Amt13),Sum(Amt14)"
                        + ",Sum(Amt15),Sum(Amt16),Sum(Amt17),Sum(Amt18),Sum(Amt19),Sum(Amt20)"
                        + ",Sum(Amt21),Sum(Amt22),Sum(Amt23),Sum(Amt24)"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + " "
                        + "FROM dhourly d "
                        + "inner join branfile b on d.s_bran = b.code "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +"d.t_date>= '"+d1+"' and d.t_date<='"+d2+"' "
                        +"and d.s_bran >= '"+cvth.Unicode2ASCII(branch1)+"' and d.s_bran <= '"+cvth.Unicode2ASCII(branch2)+"' "
                        +"and b.btype >= '"+cvth.Unicode2ASCII(btype1)+"' and b.btype <= '"+cvth.Unicode2ASCII(btype2)+"' "
                        +"and b.barea >= '"+cvth.Unicode2ASCII(barea1)+"' and b.barea <= '"+cvth.Unicode2ASCII(barea2)+"' "
                        +"and b.bsize >= '"+cvth.Unicode2ASCII(bsize1)+"' and b.bsize <= '"+cvth.Unicode2ASCII(bsize2)+"' "
                        +"and b.bplane >= '"+cvth.Unicode2ASCII(bplan1)+"' and b.bplane <= '"+cvth.Unicode2ASCII(bplan2)+"' "
                        +"and b.bstore >= '"+cvth.Unicode2ASCII(bstore1)+"' and b.bstore <= '"+cvth.Unicode2ASCII(bstore2)+"' "
                        +"and b.companycode >= '"+cvth.Unicode2ASCII(company1)+"' and b.companycode <= '"+cvth.Unicode2ASCII(company2)+"' "
                        +"and b.brandcode >= '"+cvth.Unicode2ASCII(brand1)+"' and b.brandcode <= '"+cvth.Unicode2ASCII(brand2)+"' "
                        +"and b.buscode >= '"+cvth.Unicode2ASCII(bustype1)+"' and b.buscode <= '"+cvth.Unicode2ASCII(bustype2)+"' "
                        
                        + "Group By S_Bran,Dayofweek(T_Date) Order By S_Bran,DayofWeek(T_Date)";
                        
            ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
                while(rs.next())
                {
                    
                   
                    
                        //insert data
                            String sqltemp = "Insert InTo temphourly (S_Bran,T_Date,BranName,TempDay,"
                                    + "PNT1,CNT1,AMT1,PNT2,CNT2,AMT2,PNT3,CNT3,AMT3,PNT4,CNT4,AMT4"
                                    + ",PNT5,CNT5,AMT5,PNT6,CNT6,AMT6,PNT7,CNT7,AMT7,PNT8,CNT8,AMT8"
                                    + ",PNT9,CNT9,AMT9,PNT10,CNT10,AMT10,PNT11,CNT11,AMT11,PNT12,CNT12,AMT12"
                                    + ",PNT13,CNT13,AMT13,PNT14,CNT14,AMT14,PNT15,CNT15,AMT15,PNT16,CNT16,AMT16"
                                    + ",PNT17,CNT17,AMT17,PNT18,CNT18,AMT18,PNT19,CNT19,AMT19"
                                    + ",PNT20,CNT20,AMT20,PNT21,CNT21,AMT21,PNT22,CNT22,AMT22,PNT23"
                                    + ",CNT23,AMT23,PNT24,CNT24,AMT24,comname) "
                                    + "Values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?"
                                    + ",?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, rs.getString("s_bran"));
                            prm.setString(2, rs.getString("t_date"));
                            prm.setString(3, rs.getString("BranchName"));
                            prm.setString(4,Format.DayName.format(rs.getDate("t_date")));
                            prm.setDouble(5,rs.getDouble("sum(pnt1)")/rs.getInt("countdate"));
                            prm.setDouble(6,rs.getDouble("sum(cnt1)")/rs.getInt("countdate"));
                            prm.setDouble(7,rs.getDouble("sum(amt1)")/rs.getInt("countdate"));
                            prm.setDouble(8,rs.getDouble("sum(pnt2)")/rs.getInt("countdate"));
                            prm.setDouble(9,rs.getDouble("sum(cnt2)")/rs.getInt("countdate"));
                            prm.setDouble(10,rs.getDouble("sum(amt2)")/rs.getInt("countdate"));
                            prm.setDouble(11,rs.getDouble("sum(pnt3)")/rs.getInt("countdate"));
                            prm.setDouble(12,rs.getDouble("sum(cnt3)")/rs.getInt("countdate"));
                            prm.setDouble(13,rs.getDouble("sum(amt3)")/rs.getInt("countdate"));
                            prm.setDouble(14,rs.getDouble("sum(pnt4)")/rs.getInt("countdate"));
                            prm.setDouble(15,rs.getDouble("sum(cnt4)")/rs.getInt("countdate"));
                            prm.setDouble(16,rs.getDouble("sum(amt4)")/rs.getInt("countdate"));
                            prm.setDouble(17,rs.getDouble("sum(pnt5)")/rs.getInt("countdate"));
                            prm.setDouble(18,rs.getDouble("sum(cnt5)")/rs.getInt("countdate"));
                            prm.setDouble(19,rs.getDouble("sum(amt5)")/rs.getInt("countdate"));
                            prm.setDouble(20,rs.getDouble("sum(pnt6)")/rs.getInt("countdate"));
                            prm.setDouble(21,rs.getDouble("sum(cnt6)")/rs.getInt("countdate"));
                            prm.setDouble(22,rs.getDouble("sum(amt6)")/rs.getInt("countdate"));
                            prm.setDouble(23,rs.getDouble("sum(pnt7)")/rs.getInt("countdate"));
                            prm.setDouble(24,rs.getDouble("sum(cnt7)")/rs.getInt("countdate"));
                            prm.setDouble(25,rs.getDouble("sum(amt7)")/rs.getInt("countdate"));
                            prm.setDouble(26,rs.getDouble("sum(pnt8)")/rs.getInt("countdate"));
                            prm.setDouble(27,rs.getDouble("sum(cnt8)")/rs.getInt("countdate"));
                            prm.setDouble(28,rs.getDouble("sum(amt8)")/rs.getInt("countdate"));
                            prm.setDouble(29,rs.getDouble("sum(pnt9)")/rs.getInt("countdate"));
                            prm.setDouble(30,rs.getDouble("sum(cnt9)")/rs.getInt("countdate"));
                            prm.setDouble(31,rs.getDouble("sum(amt9)")/rs.getInt("countdate"));
                            prm.setDouble(32,rs.getDouble("sum(pnt10)")/rs.getInt("countdate"));
                            prm.setDouble(33,rs.getDouble("sum(cnt10)")/rs.getInt("countdate"));
                            prm.setDouble(34,rs.getDouble("sum(amt10)")/rs.getInt("countdate"));
                            prm.setDouble(35,rs.getDouble("sum(pnt11)")/rs.getInt("countdate"));
                            prm.setDouble(36,rs.getDouble("sum(cnt11)")/rs.getInt("countdate"));
                            prm.setDouble(37,rs.getDouble("sum(amt11)")/rs.getInt("countdate"));
                            prm.setDouble(38,rs.getDouble("sum(pnt12)")/rs.getInt("countdate"));
                            prm.setDouble(39,rs.getDouble("sum(cnt12)")/rs.getInt("countdate"));
                            prm.setDouble(40,rs.getDouble("sum(amt12)")/rs.getInt("countdate"));
                            prm.setDouble(41,rs.getDouble("sum(pnt13)")/rs.getInt("countdate"));
                            prm.setDouble(42,rs.getDouble("sum(cnt13)")/rs.getInt("countdate"));
                            prm.setDouble(43,rs.getDouble("sum(amt13)")/rs.getInt("countdate"));
                            prm.setDouble(44,rs.getDouble("sum(pnt14)")/rs.getInt("countdate"));
                            prm.setDouble(45,rs.getDouble("sum(cnt14)")/rs.getInt("countdate"));
                            prm.setDouble(46,rs.getDouble("sum(amt14)")/rs.getInt("countdate"));
                            prm.setDouble(47,rs.getDouble("sum(pnt15)")/rs.getInt("countdate"));
                            prm.setDouble(48,rs.getDouble("sum(cnt15)")/rs.getInt("countdate"));
                            prm.setDouble(49,rs.getDouble("sum(amt15)")/rs.getInt("countdate"));
                            prm.setDouble(50,rs.getDouble("sum(pnt16)")/rs.getInt("countdate"));
                            prm.setDouble(51,rs.getDouble("sum(cnt16)")/rs.getInt("countdate"));
                            prm.setDouble(52,rs.getDouble("sum(amt16)")/rs.getInt("countdate"));
                            prm.setDouble(53,rs.getDouble("sum(pnt17)")/rs.getInt("countdate"));
                            prm.setDouble(54,rs.getDouble("sum(cnt17)")/rs.getInt("countdate"));
                            prm.setDouble(55,rs.getDouble("sum(amt17)")/rs.getInt("countdate"));
                            prm.setDouble(56,rs.getDouble("sum(pnt18)")/rs.getInt("countdate"));
                            prm.setDouble(57,rs.getDouble("sum(cnt18)")/rs.getInt("countdate"));
                            prm.setDouble(58,rs.getDouble("sum(amt18)")/rs.getInt("countdate"));
                            prm.setDouble(59,rs.getDouble("sum(pnt19)")/rs.getInt("countdate"));
                            prm.setDouble(60,rs.getDouble("sum(cnt19)")/rs.getInt("countdate"));
                            prm.setDouble(61,rs.getDouble("sum(amt19)")/rs.getInt("countdate"));
                            prm.setDouble(62,rs.getDouble("sum(pnt20)")/rs.getInt("countdate"));
                            prm.setDouble(63,rs.getDouble("sum(cnt20)")/rs.getInt("countdate"));
                            prm.setDouble(64,rs.getDouble("sum(amt20)")/rs.getInt("countdate"));
                            prm.setDouble(65,rs.getDouble("sum(pnt21)")/rs.getInt("countdate"));
                            prm.setDouble(66,rs.getDouble("sum(cnt21)")/rs.getInt("countdate"));
                            prm.setDouble(67,rs.getDouble("sum(amt21)")/rs.getInt("countdate"));
                            prm.setDouble(68,rs.getDouble("sum(pnt22)")/rs.getInt("countdate"));
                            prm.setDouble(69,rs.getDouble("sum(cnt22)")/rs.getInt("countdate"));
                            prm.setDouble(70,rs.getDouble("sum(amt22)")/rs.getInt("countdate"));
                            prm.setDouble(71,rs.getDouble("sum(pnt23)")/rs.getInt("countdate"));
                            prm.setDouble(72,rs.getDouble("sum(cnt23)")/rs.getInt("countdate"));
                            prm.setDouble(73,rs.getDouble("sum(amt23)")/rs.getInt("countdate"));
                            prm.setDouble(74,rs.getDouble("sum(pnt24)")/rs.getInt("countdate"));
                            prm.setDouble(75,rs.getDouble("sum(cnt24)")/rs.getInt("countdate"));
                            prm.setDouble(76,rs.getDouble("sum(amt24)")/rs.getInt("countdate"));
                            prm.setString(77, comname);

                            prm.executeUpdate();
                    
                    
                }
                
                        
            }
    }catch (Exception ex) {
                Logger.getLogger(rptPlaceAvg.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex);
            }
            
}

 private void deletetemp(String comname) {
       
            try {
                 String sqltemp = "delete from temphourly where comname = ?";
                  PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                  prm.setString(1, comname);
                  prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
           
    }
private void setTxt()
{
    String date = "";
    String branch = "";
    String dept = "";
    String plu = "";
    if(!date1.equals(""))
    {
    date = date1+" - ";
    }
    else
    {
    date = " - ";
    }
    
    if(!date2.equals("31/12/9999"))
    {
        date += date2;
    }
    
    
    if(!branch1.equals(""))
    {
        branch = branch1+" - ";
    }
    else
    {
        branch = " - ";
    }
    
    if(!branch2.equals("ZZZ"))
    {
        branch += branch2;
    }
    
    if(!dept1.equals(""))
    {
        dept = dept1+" - ";
    }
    else
    {
        dept = " - ";
    }
    
    if(!dept2.equals("ZZZZ"))
    {
        dept += dept2;
    }
    
    if(!plu1.equals(""))
    {
        plu = plu1+" - ";
    }
    else
    {
        plu = " - ";
    }
    
    if(!plu2.equals("ZZZZZZZZZZZZZ"))
    {
        plu += plu2;
    }
    
    lbldate.setText(date);
    lblplu.setText(branch);
    condition = this.getTitle()+" Date : "+date+" Branch : "+branch;
}
   

}
    

