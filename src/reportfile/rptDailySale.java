/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportfile;

import borfunction.GetComputerName;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import dbutility.dbUtility;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import reportModel.reportDailySaleModel;
import reportModel.reportSumSaleLostModel;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.*;

/**
 *
 * @author s386
 */
public class rptDailySale extends javax.swing.JDialog {

    /**
     * Creates new form rptDailySale
     */
    public static String date1 = "", date2 = "", date3 = "", date4 = "", dept1 = "", dept2 = "", plu1 = "", plu2 = "", branch1 = "", branch2 = "", btype1 = "", btype2 = "", barea1 = "", barea2 = "", bsize1 = "", bsize2 = "", bplan1 = "", bplan2 = "", bstore1 = "", bstore2 = "", strday = "", strday2 = "", company1 = "", company2 = "", brand1 = "", brand2 = "", bustype1 = "", bustype2 = "", code = "", name = "";
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    String frmName = "rptDailySale";
    ThaiUtilities cvth = new ThaiUtilities();
    private String condition = "";
    dbUtility db = new dbUtility();
    public rptDailySale(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
        comname = new GetComputerName().getComputerName();
        inittbl();
        getLanguage lang = new getLanguage();
        lang.setText(frmName, this, lang.getChklang());
        setcolumn();
        setTxt();
    }

    public rptDailySale() {
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new org.jdesktop.swingx.JXTreeTable();
        db_btnPrint = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lbldate = new javax.swing.JLabel();
        db_lblh1 = new javax.swing.JLabel();
        db_btnExpand = new javax.swing.JButton();
        btnExit1 = new javax.swing.JButton();
        db_btnExel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbl.setName("tbl");
        jScrollPane1.setViewportView(tbl);

        db_btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        db_btnPrint.setText("พิมม์");
        db_btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnPrint.setIconTextGap(0);
        db_btnPrint.setName("db_btnPrint"); // NOI18N
        db_btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnPrintActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbldate.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate.setText("-");
        lbldate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh1.setText("วันที่ (Date)");
        db_lblh1.setName("db_lblh1"); // NOI18N

        db_btnExpand.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExpand.setText("Expand On/Off");
        db_btnExpand.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExpand.setIconTextGap(0);
        db_btnExpand.setName("db_btnExpand"); // NOI18N
        db_btnExpand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExpand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExpandActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(db_lblh1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_btnExpand)
                .addGap(276, 276, 276))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnExpand)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(db_lblh1)
                        .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        btnExit1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit1.setIconTextGap(0);
        btnExit1.setName("db_btnExit"); // NOI18N
        btnExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        db_btnExel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel.setText("Exel File");
        db_btnExel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel.setIconTextGap(0);
        db_btnExel.setName("db_btnExel"); // NOI18N
        db_btnExel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1032)/2, (screenSize.height-796)/2, 1032, 796);
    }// </editor-fold>//GEN-END:initComponents

    private void db_btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnPrintActionPerformed

    private void db_btnExpandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExpandActionPerformed
        if (tbl.isExpanded(0)) {
            tbl.collapseAll();
        } else {
            tbl.expandAll();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnExpandActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExit1ActionPerformed

    private void db_btnExelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExelActionPerformed
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        setTxt();
        try {
            

            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();


                
                
                if(curFile.exists())
                {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        db_btnExelActionPerformed(null);
                        
                        return;

                    }
                    
                }
                
                   
                try {
                    test.setOutputFile(curFile.toString());
                    test.writeTreetableContditionNoSum(tbl, tbl.getColumnModel(), condition);
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
                
                
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_db_btnExelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rptDailySale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rptDailySale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rptDailySale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rptDailySale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                rptDailySale dialog = new rptDailySale(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton db_btnExel;
    private javax.swing.JButton db_btnExpand;
    private javax.swing.JButton db_btnPrint;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbldate;
    private org.jdesktop.swingx.JXTreeTable tbl;
    // End of variables declaration//GEN-END:variables

       private void inittbl() {
        try {


            TableColumnModel tcm = new DefaultTableColumnModel();

            TableColumn tc1 = new TableColumn(0, 150);
            tc1.setHeaderValue("Date");
            TableColumn tc2 = new TableColumn(1, 140);
            tc2.setHeaderValue("Day");
            TableColumn tc11 = new TableColumn(2, 80);
            tc11.setHeaderValue("bran");
            TableColumn tc5 = new TableColumn(3, 80);
            tc5.setHeaderValue("bran");
            TableColumn tc6 = new TableColumn(4, 80);
            tc6.setHeaderValue("bran");
            TableColumn tc7 = new TableColumn(5, 80);
            tc7.setHeaderValue("bran");
            TableColumn tc8 = new TableColumn(6, 80);
            tc8.setHeaderValue("bran");
            TableColumn tc9 = new TableColumn(7, 80);
            tc9.setHeaderValue("bran");
            TableColumn tc10 = new TableColumn(8, 80);
            tc10.setHeaderValue("bran");
            TableColumn tc13 = new TableColumn(9, 80);
            tc13.setHeaderValue("bran");
            TableColumn tc14 = new TableColumn(10, 80);
            tc14.setHeaderValue("bran");
            TableColumn tc15 = new TableColumn(11, 80);
            tc15.setHeaderValue("bran");
            TableColumn tc16 = new TableColumn(12, 80);
            tc16.setHeaderValue("bran");
            TableColumn tc17 = new TableColumn(13, 80);
            tc17.setHeaderValue("bran");
            TableColumn tc18 = new TableColumn(14, 80);
            tc18.setHeaderValue("bran");
            TableColumn tc19 = new TableColumn(15, 80);
            tc19.setHeaderValue("bran");
            TableColumn tc20 = new TableColumn(16, 80);
            tc20.setHeaderValue("bran");
            TableColumn tc21 = new TableColumn(17, 80);
            tc21.setHeaderValue("bran");
            TableColumn tc22 = new TableColumn(18, 80);
            tc22.setHeaderValue("bran");
            TableColumn tc23 = new TableColumn(19, 80);
            tc23.setHeaderValue("bran");
            TableColumn tc24 = new TableColumn(20, 80);
            tc24.setHeaderValue("bran");
            TableColumn tc25 = new TableColumn(21, 80);
            tc25.setHeaderValue("bran");
            TableColumn tc26 = new TableColumn(22, 80);
            tc26.setHeaderValue("bran");
            TableColumn tc27 = new TableColumn(23, 80);
            tc27.setHeaderValue("bran");
            TableColumn tc28 = new TableColumn(24, 80);
            tc28.setHeaderValue("bran");
            TableColumn tc29 = new TableColumn(25, 80);
            tc29.setHeaderValue("bran");
            TableColumn tc30 = new TableColumn(26, 80);
            tc30.setHeaderValue("bran");
            TableColumn tc31 = new TableColumn(27, 80);
            tc31.setHeaderValue("bran");
            TableColumn tc32 = new TableColumn(28, 80);
            tc32.setHeaderValue("bran");
            TableColumn tc33 = new TableColumn(29, 80);
            tc33.setHeaderValue("bran");
            TableColumn tc34 = new TableColumn(30, 80);
            tc34.setHeaderValue("bran");
            TableColumn tc35 = new TableColumn(31, 80);
            tc35.setHeaderValue("bran");
            TableColumn tc36 = new TableColumn(32, 80);
            tc36.setHeaderValue("bran");
            TableColumn tc37 = new TableColumn(33, 80);
            tc37.setHeaderValue("bran");
            TableColumn tc38 = new TableColumn(34, 80);
            tc38.setHeaderValue("bran");
            TableColumn tc39 = new TableColumn(35, 80);
            tc39.setHeaderValue("bran");
            TableColumn tc40 = new TableColumn(36, 80);
            tc40.setHeaderValue("bran");
            TableColumn tc41 = new TableColumn(37, 80);
            tc41.setHeaderValue("bran");
            TableColumn tc42 = new TableColumn(38, 80);
            tc42.setHeaderValue("bran");
            TableColumn tc43 = new TableColumn(39, 80);
            tc43.setHeaderValue("bran");
            TableColumn tc44 = new TableColumn(40, 80);
            tc44.setHeaderValue("bran");
            TableColumn tc45 = new TableColumn(41, 80);
            tc45.setHeaderValue("bran");
            TableColumn tc46 = new TableColumn(42, 80);
            tc46.setHeaderValue("bran");
            TableColumn tc47 = new TableColumn(43, 80);
            tc47.setHeaderValue("bran");
            TableColumn tc48 = new TableColumn(44, 80);
            tc48.setHeaderValue("bran");
            TableColumn tc49 = new TableColumn(45, 80);
            tc49.setHeaderValue("bran");
            TableColumn tc50 = new TableColumn(46, 80);
            tc50.setHeaderValue("bran");
            TableColumn tc51 = new TableColumn(47, 80);
            tc51.setHeaderValue("bran");
            TableColumn tc52 = new TableColumn(48, 80);
            tc52.setHeaderValue("bran");
            TableColumn tc53 = new TableColumn(49, 80);
            tc53.setHeaderValue("bran");
            TableColumn tc54 = new TableColumn(50, 80);
            tc54.setHeaderValue("bran");
            TableColumn tc55 = new TableColumn(51, 80);
            tc55.setHeaderValue("bran");
            TableColumn tc56 = new TableColumn(52, 80);
            tc56.setHeaderValue("bran");
            TableColumn tc57 = new TableColumn(53, 80);
            tc57.setHeaderValue("bran");
            TableColumn tc58 = new TableColumn(54, 80);
            tc58.setHeaderValue("bran");
            TableColumn tc59 = new TableColumn(55, 80);
            tc59.setHeaderValue("bran");
            TableColumn tc60 = new TableColumn(56, 80);
            tc60.setHeaderValue("bran");
            TableColumn tc61 = new TableColumn(57, 80);
            tc61.setHeaderValue("bran");
            TableColumn tc62 = new TableColumn(58, 80);
            tc62.setHeaderValue("bran");
            TableColumn tc63 = new TableColumn(59, 80);
            tc63.setHeaderValue("bran");
            TableColumn tc64 = new TableColumn(60, 80);
            tc64.setHeaderValue("bran");
            TableColumn tc65 = new TableColumn(61, 80);
            tc65.setHeaderValue("bran");
            TableColumn tc66 = new TableColumn(62, 80);
            tc66.setHeaderValue("bran");
            TableColumn tc67 = new TableColumn(63, 80);
            tc67.setHeaderValue("bran");
            TableColumn tc68 = new TableColumn(64, 80);
            tc68.setHeaderValue("bran");
            TableColumn tc69 = new TableColumn(65, 80);
            tc69.setHeaderValue("bran");
            TableColumn tc70 = new TableColumn(66, 80);
            tc70.setHeaderValue("bran");
            TableColumn tc71 = new TableColumn(67, 80);
            tc71.setHeaderValue("bran");
            TableColumn tc72 = new TableColumn(68, 80);
            tc72.setHeaderValue("bran");
            TableColumn tc73 = new TableColumn(69, 80);
            tc73.setHeaderValue("bran");
            TableColumn tc74 = new TableColumn(70, 80);
            tc74.setHeaderValue("bran");
            TableColumn tc75 = new TableColumn(71, 80);
            tc75.setHeaderValue("bran");
            TableColumn tc76 = new TableColumn(72, 80);
            tc76.setHeaderValue("bran");
            TableColumn tc77 = new TableColumn(73, 80);
            tc77.setHeaderValue("bran");
            TableColumn tc78 = new TableColumn(74, 80);
            tc78.setHeaderValue("bran");
            TableColumn tc79 = new TableColumn(75, 80);
            tc79.setHeaderValue("bran");
            TableColumn tc80 = new TableColumn(76, 80);
            tc80.setHeaderValue("bran");
            TableColumn tc81 = new TableColumn(77, 80);
            tc81.setHeaderValue("bran");
            TableColumn tc82 = new TableColumn(78, 80);
            tc82.setHeaderValue("bran");
            TableColumn tc83 = new TableColumn(79, 80);
            tc83.setHeaderValue("bran");
            TableColumn tc84 = new TableColumn(80, 80);
            tc84.setHeaderValue("bran");
            TableColumn tc85 = new TableColumn(81, 80);
            tc85.setHeaderValue("bran");
            TableColumn tc86 = new TableColumn(82, 80);
            tc86.setHeaderValue("bran");
            TableColumn tc87 = new TableColumn(83, 80);
            tc87.setHeaderValue("bran");
            TableColumn tc88 = new TableColumn(84, 80);
            tc88.setHeaderValue("bran");
            TableColumn tc89 = new TableColumn(85, 80);
            tc89.setHeaderValue("bran");
            TableColumn tc90 = new TableColumn(86, 80);
            tc90.setHeaderValue("bran");
            TableColumn tc91 = new TableColumn(87, 80);
            tc91.setHeaderValue("bran");
            TableColumn tc92 = new TableColumn(88, 80);
            tc92.setHeaderValue("bran");
            TableColumn tc93 = new TableColumn(89, 80);
            tc93.setHeaderValue("bran");
            TableColumn tc94 = new TableColumn(90, 80);
            tc94.setHeaderValue("bran");
            TableColumn tc95 = new TableColumn(91, 80);
            tc95.setHeaderValue("bran");
            TableColumn tc96 = new TableColumn(92, 80);
            tc96.setHeaderValue("bran");
            TableColumn tc97 = new TableColumn(93, 80);
            tc97.setHeaderValue("bran");
            TableColumn tc98 = new TableColumn(94, 80);
            tc98.setHeaderValue("bran");
            TableColumn tc99 = new TableColumn(95, 80);
            tc99.setHeaderValue("bran");
            TableColumn tc100 = new TableColumn(96, 80);
            tc100.setHeaderValue("bran");
            TableColumn tc101 = new TableColumn(97, 80);
            tc101.setHeaderValue("bran");
            TableColumn tc102 = new TableColumn(98, 80);
            tc102.setHeaderValue("bran");
            TableColumn tc103 = new TableColumn(99, 80);
            tc103.setHeaderValue("bran");
            TableColumn tc104 = new TableColumn(100, 80);
            tc104.setHeaderValue("bran");
            TableColumn tc105 = new TableColumn(101, 80);
            tc105.setHeaderValue("bran");
            TableColumn tc106 = new TableColumn(102, 80);
            tc106.setHeaderValue("bran");








            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc11);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            tcm.addColumn(tc13);
            tcm.addColumn(tc14);
            tcm.addColumn(tc15);
            tcm.addColumn(tc16);
            tcm.addColumn(tc17);
            tcm.addColumn(tc18);
            tcm.addColumn(tc19);
            tcm.addColumn(tc20);
            tcm.addColumn(tc21);
            tcm.addColumn(tc22);
            tcm.addColumn(tc23);
            tcm.addColumn(tc24);
            tcm.addColumn(tc25);
            tcm.addColumn(tc26);
            tcm.addColumn(tc27);
            tcm.addColumn(tc28);
            tcm.addColumn(tc29);
            tcm.addColumn(tc30);
            tcm.addColumn(tc31);
            tcm.addColumn(tc32);
            tcm.addColumn(tc33);
            tcm.addColumn(tc34);
            tcm.addColumn(tc35);
            tcm.addColumn(tc36);
            tcm.addColumn(tc37);
            tcm.addColumn(tc38);
            tcm.addColumn(tc39);
            tcm.addColumn(tc40);
            tcm.addColumn(tc41);
            tcm.addColumn(tc42);
            tcm.addColumn(tc43);
            tcm.addColumn(tc44);
            tcm.addColumn(tc45);
            tcm.addColumn(tc46);
            tcm.addColumn(tc47);
            tcm.addColumn(tc48);
            tcm.addColumn(tc49);
            tcm.addColumn(tc50);
            tcm.addColumn(tc51);
            tcm.addColumn(tc52);
            tcm.addColumn(tc53);
            tcm.addColumn(tc54);
            tcm.addColumn(tc55);
            tcm.addColumn(tc56);
            tcm.addColumn(tc57);
            tcm.addColumn(tc58);
            tcm.addColumn(tc59);
            tcm.addColumn(tc60);
            tcm.addColumn(tc61);
            tcm.addColumn(tc62);
            tcm.addColumn(tc63);
            tcm.addColumn(tc64);
            tcm.addColumn(tc65);
            tcm.addColumn(tc66);
            tcm.addColumn(tc67);
            tcm.addColumn(tc68);
            tcm.addColumn(tc69);
            tcm.addColumn(tc70);
            tcm.addColumn(tc71);
            tcm.addColumn(tc72);
            tcm.addColumn(tc73);
            tcm.addColumn(tc74);
            tcm.addColumn(tc75);
            tcm.addColumn(tc76);
            tcm.addColumn(tc77);
            tcm.addColumn(tc78);
            tcm.addColumn(tc79);
            tcm.addColumn(tc80);
            tcm.addColumn(tc81);
            tcm.addColumn(tc82);
            tcm.addColumn(tc83);
            tcm.addColumn(tc84);
            tcm.addColumn(tc85);
            tcm.addColumn(tc86);
            tcm.addColumn(tc87);
            tcm.addColumn(tc88);
            tcm.addColumn(tc89);
            tcm.addColumn(tc90);
            tcm.addColumn(tc91);
            tcm.addColumn(tc92);
            tcm.addColumn(tc93);
            tcm.addColumn(tc94);
            tcm.addColumn(tc95);
            tcm.addColumn(tc96);
            tcm.addColumn(tc97);
            tcm.addColumn(tc98);
            tcm.addColumn(tc99);
            tcm.addColumn(tc100);
            tcm.addColumn(tc101);
            tcm.addColumn(tc102);
            tcm.addColumn(tc103);
            tcm.addColumn(tc104);
            tcm.addColumn(tc105);
            tcm.addColumn(tc106);





            tcm.getColumn(0).setCellRenderer(FormatCell.l());
            tcm.getColumn(1).setCellRenderer(FormatCell.l());
            tcm.getColumn(2).setCellRenderer(FormatCell.color1());
            tcm.getColumn(3).setCellRenderer(FormatCell.color1());
            tcm.getColumn(4).setCellRenderer(FormatCell.color1());
            tcm.getColumn(5).setCellRenderer(FormatCell.color1());
            tcm.getColumn(6).setCellRenderer(FormatCell.color1());
            tcm.getColumn(7).setCellRenderer(FormatCell.color1());
            tcm.getColumn(8).setCellRenderer(FormatCell.color1());
            tcm.getColumn(9).setCellRenderer(FormatCell.color1());
            tcm.getColumn(10).setCellRenderer(FormatCell.color1());
            tcm.getColumn(11).setCellRenderer(FormatCell.color1());
            tcm.getColumn(12).setCellRenderer(FormatCell.color1());
            tcm.getColumn(13).setCellRenderer(FormatCell.color1());
            tcm.getColumn(14).setCellRenderer(FormatCell.color1());
            tcm.getColumn(15).setCellRenderer(FormatCell.color1());
            tcm.getColumn(16).setCellRenderer(FormatCell.color1());
            tcm.getColumn(17).setCellRenderer(FormatCell.color1());
            tcm.getColumn(18).setCellRenderer(FormatCell.color1());
            tcm.getColumn(19).setCellRenderer(FormatCell.color1());
            tcm.getColumn(20).setCellRenderer(FormatCell.color1());
            tcm.getColumn(21).setCellRenderer(FormatCell.color1());
            tcm.getColumn(22).setCellRenderer(FormatCell.color1());
            tcm.getColumn(23).setCellRenderer(FormatCell.color1());
            tcm.getColumn(24).setCellRenderer(FormatCell.color1());
            tcm.getColumn(25).setCellRenderer(FormatCell.color1());
            tcm.getColumn(26).setCellRenderer(FormatCell.color1());
            tcm.getColumn(27).setCellRenderer(FormatCell.color1());
            tcm.getColumn(28).setCellRenderer(FormatCell.color1());
            tcm.getColumn(29).setCellRenderer(FormatCell.color1());
            tcm.getColumn(30).setCellRenderer(FormatCell.color1());
            tcm.getColumn(31).setCellRenderer(FormatCell.color1());
            tcm.getColumn(32).setCellRenderer(FormatCell.color1());
            tcm.getColumn(33).setCellRenderer(FormatCell.color1());
            tcm.getColumn(34).setCellRenderer(FormatCell.color1());
            tcm.getColumn(35).setCellRenderer(FormatCell.color1());
            tcm.getColumn(36).setCellRenderer(FormatCell.color1());
            tcm.getColumn(37).setCellRenderer(FormatCell.color1());
            tcm.getColumn(38).setCellRenderer(FormatCell.color1());
            tcm.getColumn(39).setCellRenderer(FormatCell.color1());
            tcm.getColumn(40).setCellRenderer(FormatCell.color1());
            tcm.getColumn(41).setCellRenderer(FormatCell.color1());
            tcm.getColumn(42).setCellRenderer(FormatCell.color1());
            tcm.getColumn(43).setCellRenderer(FormatCell.color1());
            tcm.getColumn(44).setCellRenderer(FormatCell.color1());
            tcm.getColumn(45).setCellRenderer(FormatCell.color1());
            tcm.getColumn(46).setCellRenderer(FormatCell.color1());
            tcm.getColumn(47).setCellRenderer(FormatCell.color1());
            tcm.getColumn(48).setCellRenderer(FormatCell.color1());
            tcm.getColumn(49).setCellRenderer(FormatCell.color1());
            tcm.getColumn(50).setCellRenderer(FormatCell.color1());
            tcm.getColumn(51).setCellRenderer(FormatCell.color1());
            tcm.getColumn(52).setCellRenderer(FormatCell.color1());
            tcm.getColumn(53).setCellRenderer(FormatCell.color1());
            tcm.getColumn(54).setCellRenderer(FormatCell.color1());
            tcm.getColumn(55).setCellRenderer(FormatCell.color1());
            tcm.getColumn(56).setCellRenderer(FormatCell.color1());
            tcm.getColumn(57).setCellRenderer(FormatCell.color1());
            tcm.getColumn(58).setCellRenderer(FormatCell.color1());
            tcm.getColumn(59).setCellRenderer(FormatCell.color1());
            tcm.getColumn(60).setCellRenderer(FormatCell.color1());
            tcm.getColumn(61).setCellRenderer(FormatCell.color1());
            tcm.getColumn(62).setCellRenderer(FormatCell.color1());
            tcm.getColumn(63).setCellRenderer(FormatCell.color1());
            tcm.getColumn(64).setCellRenderer(FormatCell.color1());
            tcm.getColumn(65).setCellRenderer(FormatCell.color1());
            tcm.getColumn(66).setCellRenderer(FormatCell.color1());
            tcm.getColumn(67).setCellRenderer(FormatCell.color1());
            tcm.getColumn(68).setCellRenderer(FormatCell.color1());
            tcm.getColumn(69).setCellRenderer(FormatCell.color1());
            tcm.getColumn(70).setCellRenderer(FormatCell.color1());
            tcm.getColumn(71).setCellRenderer(FormatCell.color1());
            tcm.getColumn(72).setCellRenderer(FormatCell.color1());
            tcm.getColumn(73).setCellRenderer(FormatCell.color1());
            tcm.getColumn(74).setCellRenderer(FormatCell.color1());
            tcm.getColumn(75).setCellRenderer(FormatCell.color1());
            tcm.getColumn(76).setCellRenderer(FormatCell.color1());
            tcm.getColumn(77).setCellRenderer(FormatCell.color1());
            tcm.getColumn(78).setCellRenderer(FormatCell.color1());
            tcm.getColumn(79).setCellRenderer(FormatCell.color1());
            tcm.getColumn(80).setCellRenderer(FormatCell.color1());
            tcm.getColumn(81).setCellRenderer(FormatCell.color1());
            tcm.getColumn(82).setCellRenderer(FormatCell.color1());
            tcm.getColumn(83).setCellRenderer(FormatCell.color1());
            tcm.getColumn(84).setCellRenderer(FormatCell.color1());
            tcm.getColumn(85).setCellRenderer(FormatCell.color1());
            tcm.getColumn(86).setCellRenderer(FormatCell.color1());
            tcm.getColumn(87).setCellRenderer(FormatCell.color1());
            tcm.getColumn(88).setCellRenderer(FormatCell.color1());
            tcm.getColumn(89).setCellRenderer(FormatCell.color1());
            tcm.getColumn(90).setCellRenderer(FormatCell.color1());
            tcm.getColumn(91).setCellRenderer(FormatCell.color1());
            tcm.getColumn(92).setCellRenderer(FormatCell.color1());
            tcm.getColumn(93).setCellRenderer(FormatCell.color1());
            tcm.getColumn(94).setCellRenderer(FormatCell.color1());
            tcm.getColumn(95).setCellRenderer(FormatCell.color1());
            tcm.getColumn(96).setCellRenderer(FormatCell.color1());
            tcm.getColumn(97).setCellRenderer(FormatCell.color1());
            tcm.getColumn(98).setCellRenderer(FormatCell.color1());
            tcm.getColumn(99).setCellRenderer(FormatCell.color1());
            tcm.getColumn(100).setCellRenderer(FormatCell.color1());
            tcm.getColumn(101).setCellRenderer(FormatCell.color1());
            tcm.getColumn(102).setCellRenderer(FormatCell.color1());



            tbl.setEditable(false);//ห้ามแก้ไขตาราง
            tbl.setShowGrid(true);
            tbl.setFont(fontplain);
            tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tbl.setRowSelectionAllowed(true);
            tbl.setBackground(java.awt.Color.WHITE);
            tbl.setGridColor(java.awt.Color.gray);
            tbl.setRowHeight(24);

            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);


            setTemp();

            String sql = "select * from tempdailysale where comname = '" + comname + "' order by tgroup,tdate";

            reportDailySaleModel treemodel = new reportDailySaleModel(sql, code, name);
            tbl.setTreeTableModel(treemodel);
            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);
            ((JXTree) tbl.getCellRenderer(0, tbl.getHierarchicalColumn())).setFont(fontplain);
            setTxt();
            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
           // h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);


            //tbl.getColumnModel().removeColumn(tc3);
            //tbl.getColumnModel().removeColumn(tc4);
        } catch (SQLException ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setcolumn() {
        try {
            if (!dbutility.dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                if (!this.code.equals("All")) {
                    int chkcol = getBranchcount(sql);
                    if (chkcol <= 20) {
                        ResultSet rs = null;
                        Statement stmt = (Statement) dbUtility.con.createStatement();
                        rs = stmt.executeQuery(sql);
                        int rec = 0;
                        int endrec = 1;
                        while (rs.next()) {
                            rec += 1;
                            endrec += 5;
                            tbl.getColumnModel().getColumn(rec*5-4+1).setHeaderValue(cvth.ASCII2Unicode("(Sale)"+rs.getString(this.code)) + "-" + cvth.ASCII2Unicode(rs.getString(this.name))+ "-" + cvth.ASCII2Unicode(rs.getString("BranchCode")));
                            tbl.getColumnModel().getColumn(rec*5-3+1).setHeaderValue(cvth.ASCII2Unicode("(Discount)"+rs.getString(this.code)) + "-" + cvth.ASCII2Unicode(rs.getString(this.name))+ "-" + cvth.ASCII2Unicode(rs.getString("BranchCode")));
                            tbl.getColumnModel().getColumn(rec*5-2+1).setHeaderValue(cvth.ASCII2Unicode("(Pinto)"+rs.getString(this.code)) + "-" + cvth.ASCII2Unicode(rs.getString(this.name))+ "-" + cvth.ASCII2Unicode(rs.getString("BranchCode")));
                            tbl.getColumnModel().getColumn(rec*5-1+1).setHeaderValue(cvth.ASCII2Unicode("(Delivery)"+rs.getString(this.code)) + "-" + cvth.ASCII2Unicode(rs.getString(this.name))+ "-" + cvth.ASCII2Unicode(rs.getString("BranchCode")));
                            tbl.getColumnModel().getColumn(rec*5+1).setHeaderValue(cvth.ASCII2Unicode("(Customer)"+rs.getString(this.code)) + "-" + cvth.ASCII2Unicode(rs.getString(this.name))+ "-" + cvth.ASCII2Unicode(rs.getString("BranchCode")));
                            
                            
                            if(rec % 2 ==0)
                            {
                                tbl.getColumnModel().getColumn(rec*5-4+1).setCellRenderer(FormatCell.color2());
                                tbl.getColumnModel().getColumn(rec*5-3+1).setCellRenderer(FormatCell.color2());
                                tbl.getColumnModel().getColumn(rec*5-2+1).setCellRenderer(FormatCell.color2());
                                tbl.getColumnModel().getColumn(rec*5-1+1).setCellRenderer(FormatCell.color2());
                                tbl.getColumnModel().getColumn(rec*5-0+1).setCellRenderer(FormatCell.color2());
                            }
                        }
                        
                        
                        for (int i = endrec + 1; i <= 102; i++) {
                            TableColumn tc = tbl.getColumnModel().getColumn(endrec + 1);
                            tbl.removeColumn(tc);
                        }
                    } else {
                        for (int i = 2; i <= 102; i++) {
                            TableColumn tc = tbl.getColumnModel().getColumn(2);
                            tbl.removeColumn(tc);
                        }
                    }
                } else {
                    int chkcol = getBranchcount(sql);
                    if (chkcol <= 20) {
                    for (int i = 7; i <= 102; i++) {
                        TableColumn tc = tbl.getColumnModel().getColumn(7);
                        tbl.removeColumn(tc);
                    }
                    tbl.getColumnModel().getColumn(2).setHeaderValue("(Sale)");
                    tbl.getColumnModel().getColumn(3).setHeaderValue("(Discount)");
                    tbl.getColumnModel().getColumn(4).setHeaderValue("(Pinto)");
                    tbl.getColumnModel().getColumn(5).setHeaderValue("(Delivery)");
                    tbl.getColumnModel().getColumn(6).setHeaderValue("(Customer)");
                    }else {
                        for (int i = 2; i <= 102; i++) {
                            TableColumn tc = tbl.getColumnModel().getColumn(2);
                            tbl.removeColumn(tc);
                        }
                    
                    }
                }
            } else {
                if (!this.code.equals("All")) {
                    int chkcol = getBranchcount(sql);
                    if (chkcol <= 20) {
                        ResultSet rs = null;
                        Statement stmt = (Statement) dbUtility.con.createStatement();
                        rs = stmt.executeQuery(sql);
                        int rec = 0;
                        int endrec = 1;
                        while (rs.next()) {
                            rec += 1;
                            endrec += 5;
                            tbl.getColumnModel().getColumn(rec*5-4+1).setHeaderValue("(Sale)"+rs.getString(this.code) + "-" + rs.getString(this.name)+ "-" + rs.getString("BranchCode"));
                            tbl.getColumnModel().getColumn(rec*5-3+1).setHeaderValue("(Discount)"+rs.getString(this.code) + "-" + rs.getString(this.name)+ "-" + rs.getString("BranchCode"));
                            tbl.getColumnModel().getColumn(rec*5-2+1).setHeaderValue("(Pinto)"+rs.getString(this.code) + "-" + rs.getString(this.name)+ "-" + rs.getString("BranchCode"));
                            tbl.getColumnModel().getColumn(rec*5-1+1).setHeaderValue("(Delivery)"+rs.getString(this.code) + "-" + rs.getString(this.name)+ "-" + rs.getString("BranchCode"));
                            tbl.getColumnModel().getColumn(rec*5+1).setHeaderValue("(Customer)"+rs.getString(this.code) + "-" + rs.getString(this.name)+ "-" + rs.getString("BranchCode"));
                            
                            
                            if(rec % 2 ==0)
                            {
                                tbl.getColumnModel().getColumn(rec*5-4+1).setCellRenderer(FormatCell.color2());
                                tbl.getColumnModel().getColumn(rec*5-3+1).setCellRenderer(FormatCell.color2());
                                tbl.getColumnModel().getColumn(rec*5-2+1).setCellRenderer(FormatCell.color2());
                                tbl.getColumnModel().getColumn(rec*5-1+1).setCellRenderer(FormatCell.color2());
                                tbl.getColumnModel().getColumn(rec*5-0+1).setCellRenderer(FormatCell.color2());
                            }
                        }
                        
                        
                        for (int i = endrec + 1; i <= 102; i++) {
                            TableColumn tc = tbl.getColumnModel().getColumn(endrec + 1);
                            tbl.removeColumn(tc);
                        }
                    } else {
                        for (int i = 2; i <= 102; i++) {
                            TableColumn tc = tbl.getColumnModel().getColumn(2);
                            tbl.removeColumn(tc);
                        }
                    }
                } else {
                    int chkcol = getBranchcount(sql);
                    if (chkcol <= 20) {
                    for (int i = 7; i <= 102; i++) {
                        TableColumn tc = tbl.getColumnModel().getColumn(7);
                        tbl.removeColumn(tc);
                    }
                    tbl.getColumnModel().getColumn(2).setHeaderValue("(Sale)");
                    tbl.getColumnModel().getColumn(3).setHeaderValue("(Discount)");
                    tbl.getColumnModel().getColumn(4).setHeaderValue("(Pinto)");
                    tbl.getColumnModel().getColumn(5).setHeaderValue("(Delivery)");
                    tbl.getColumnModel().getColumn(6).setHeaderValue("(Customer)");
                    }else {
                        for (int i = 2; i <= 102; i++) {
                            TableColumn tc = tbl.getColumnModel().getColumn(2);
                            tbl.removeColumn(tc);
                        }
                    
                    }
                }
                
            }

        } catch (Exception e) {
            Logger.getLogger(rptDailyPluSum.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    String comname = "";
    String sql = "";

    private void setTemp() {
        try {
            String d1 = "";
            String d2 = "";
            Date done=null,dtwo=null ;

            if (!date1.equals("")) {
                done = Format.dateFmtShow.parse(date1);
                d1 = Format.dateFmtSql.format(done);
            }
            if (!date2.equals("")) {
                dtwo = Format.dateFmtShow.parse(date2);
                d2 = Format.dateFmtSql.format(dtwo);
            }




            comname = new GetComputerName().getComputerName();
            double b1 = 0, b2 = 0, b3 = 0, b4 = 0, b5 = 0, b6 = 0, b7 = 0, b8 = 0, b9 = 0;

            deletetemp(comname);


            if (dbutility.dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                String TempBran = "";
                double TAmount = 0;
                String Branfield = "";
                String Branfield2 = "";
                String Branfield3 = "";
                String Branfield4 = "";
                String Branfield5 = "";
                String TempCode = "";
                int TempQue = 0;
                double TempAmt = 0;
                double TempPrice = 0;
                String TempUnit = "";
                String Tdept = "";
                String Tdeptname = "";
                String TPName = "";
                String TBranName = "";
                int TMonth = 0;
                String TYear = "";
                String Tempfield = "";
                String TempKey1 = "";
                int TempKey2 = 0;
                String TempName = "";
                String TDept = "";
                String TRjNo = "";
                String TDesc = "";
                String TAccount = "";
                String TSub = "";
                double TempValue = 0;
                String TotField = "";
                int TotRec = 0;
                int BranRec = 0;
                int TRjLine = 0;
                double TPinto = 0;
                double TDelivery = 0;
                double TDiscount = 0;
                double TCust = 0;
                double TSum1 = 0 ,TSum2 = 0,TSum3 = 0,TSum4 = 0,TSum5 = 0,TSum6 = 0;
                Date TempDate =null ;
               

                    sql = "SELECT b.*"
                            + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                            + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                            + ",bf.brandname as Brandname,bust.busname as Bustypename"
                            + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                            + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                            + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                            + " "
                            + "FROM branfile b "
                            + "left join btype bt on b.btype = bt.btcode "
                            + "left join area ar on b.barea = ar.code "
                            + "left join size si on b.bsize = si.code "
                            + "left join plane pl on b.bplane = pl.code "
                            + "left join store st on b.bstore = st.code "
                            + "left join businesstype bust on b.buscode = bust.buscode "
                            + "left join brandfile bf on b.brandcode = bf.brandcode "
                            + "left join company com on b.companycode = com.code "
                            + "where "
                            + "b.code >= '" + branch1 + "' and b.code <= '" + branch2 + "' "
                            + "and b.btype >= '" + btype1 + "' and b.btype <= '" + btype2 + "' "
                            + "and b.barea >= '" + barea1 + "' and b.barea <= '" + barea2 + "' "
                            + "and b.bsize >= '" + bsize1 + "' and b.bsize <= '" + bsize2 + "' "
                            + "and b.bplane >= '" + bplan1 + "' and b.bplane <= '" + bplan2 + "' "
                            + "and b.bstore >= '" + bstore1 + "' and b.bstore <= '" + bstore2 + "' "
                            + "and b.companycode >= '" + company1 + "' and b.companycode <= '" + company2 + "' "
                            + "and b.brandcode >= '" + brand1 + "' and b.brandcode <= '" + brand2 + "' "
                            + "and b.buscode >= '" + bustype1 + "' and b.buscode <= '" + bustype2 + "' ";
                            if(!this.code.equals("All"))
                            {
                                sql += " order by " + this.code + ",BranchCode ";
                            }else
                            {
                                sql += " order by BranchCode ";
                            }

                    TotRec = getBranchcount(sql);
                    if (TotRec <= 20) {
                        
                        //insert masterrj
                        TempDate = done;
                        while(TempDate.compareTo(dtwo)<=0)
                        {
                            
                                    String sqltemp = "insert into tempdailysale(tdate,tday,comname) values(?,?,?)";
                                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                                    prm.setString(1, Format.dateFmtSql.format(TempDate));
                                    prm.setString(2, Format.DayName.format(TempDate));
                                    prm.setString(3, comname);
                                    prm.executeUpdate();
                            
                            
                            TempDate = DateUtil.addDate(TempDate, 1);
                        }
                        String sqltemp = "insert into tempdailysale(tgroup,tday,comname) values(?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, "T1");
                        prm.setString(2, "ยอดรวมแต่ละประเภท");
                        prm.setString(3, comname);
                        prm.executeUpdate();
                        
                        sqltemp = "insert into tempdailysale(tgroup,tday,comname) values(?,?,?)";
                        prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, "T2");
                        prm.setString(2, "แต่ละประเภทเฉลี่ย/วัน");
                        prm.setString(3, comname);
                        prm.executeUpdate();
                        
                        sqltemp = "insert into tempdailysale(tgroup,tday,comname) values(?,?,?)";
                        prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, "T3");
                        prm.setString(2, "รวมหน้าร้าน/HOD/PT");
                        prm.setString(3, comname);
                        prm.executeUpdate();
                        
                        sqltemp = "insert into tempdailysale(tgroup,tday,comname) values(?,?,?)";
                        prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, "T4");
                        prm.setString(2, "ยอดขายรวมเฉลี่ย/วัน");
                        prm.setString(3, comname);
                        prm.executeUpdate();
                        
                        
                        
                        
                        
                        
                        ResultSet rs = null;
                        Statement stmt = (Statement) dbUtility.con.createStatement();
                        rs = stmt.executeQuery(sql);

                        BranRec = 0;
                        while (rs.next()) {
                            

                          
                                
                                    TempBran = rs.getString("BranchCode");
                                

                                
                              if (!this.code.equals("All")) {
                                  BranRec = 0;
                            }
                            BranRec += 5;
                            Branfield = "bran" + (BranRec-4);
                            Branfield2 = "bran" + (BranRec-3);
                            Branfield3 = "bran" + (BranRec-2);
                            Branfield4 = "bran" + (BranRec-1);
                            Branfield5 = "bran" + BranRec;
                            TotField = "bran" + (TotRec + 1);
                            TempDate = done;
                            TSum1 = 0;
                            TSum2 = 0;
                            TSum3 = 0;
                            TSum4 = 0;
                            TSum5 = 0;
                            String sql2 = "";
                            while(TempDate.compareTo(dtwo)<=0)
                            {
                                TAmount = 0;
                                TPinto = 0;
                                TDelivery = 0;
                                TDiscount = 0;
                                TCust = 0;
                                sql2 = "select s_bran,sum(deptsum),sum(pinto),sum(delivery),sum(service) "
                                        + "from dterminal where s_bran ='"+TempBran+"' "
                                        + "and t_date = '"+Format.dateFmtSql.format(TempDate)+"' group by s_bran";
                                ResultSet rs2 = null;
                                Statement stmt2 = (Statement) dbUtility.con.createStatement();
                                rs2 = stmt2.executeQuery(sql2);
                                while (rs2.next()) {
                                if(rs2.isFirst())
                                {
                                    TSum3 +=1;
                                }
                                    TAmount = rs2.getDouble("sum(deptsum)")+rs2.getDouble("sum(service)");
                                    TPinto = rs2.getDouble("sum(pinto)");
                                    TDelivery = rs2.getDouble("sum(delivery)");
                                
                                }
                                rs2.close();
                                
                                
                                sql2 = "select * "
                                        + "from drjfile where brcode ='"+TempBran+"' "
                                        + "and tdate = '"+Format.dateFmtSql.format(TempDate)+"' "
                                        + "and ( rjno='53' or rjno = 'T7' or rjno = '49')";
                                ResultSet rs3 = null;
                                Statement stmt3 = (Statement) dbUtility.con.createStatement();
                                rs3 = stmt3.executeQuery(sql2);
                                while (rs3.next()) {
                                    if(rs3.getString("rjno").equals("53"))
                                    {
                                        TAmount -= rs3.getDouble("total");
                                    }
                                    
                                    if(rs3.getString("rjno").equals("T7"))
                                    {
                                        TCust = rs3.getDouble("total");
                                    }
                                    
                                    if(rs3.getString("rjno").equals("49"))
                                    {
                                        TDiscount = rs3.getDouble("total");
                                    }
                                }
                                
                                if(TAmount>0)
                                {
                                    TSum1 += TAmount;
                                    TSum2 += TPinto;
                                    TSum4 += TDelivery;
                                    TSum5 += TDiscount;
                                    TSum6 += TCust;
                                    
                                    String sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ?," + Branfield2 + " = " + Branfield2 + "+ ?," + Branfield3 + " = " + Branfield3 + "+ ?," + Branfield4 + " = " + Branfield4 + "+ ?," + Branfield5 + " = " + Branfield5 + "+ ?  where tdate = ? and comname = ?";
                                    PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                    prm2.setDouble(1, TAmount-TPinto-TDelivery);
                                    prm2.setDouble(2, TDiscount);
                                    prm2.setDouble(3, TPinto);
                                    prm2.setDouble(4, TDelivery);
                                    prm2.setDouble(5, TCust);
                                    prm2.setString(6, Format.dateFmtSql.format(TempDate));
                                    prm2.setString(7, comname);
                                    prm2.executeUpdate();
                                    
                                }
                                
                                TempDate = DateUtil.addDate(TempDate, 1);

                            }
                            
                           String sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ?," + Branfield2 + " = " + Branfield2 + "+ ?," + Branfield3 + " = " + Branfield3 + "+ ?," + Branfield4 + " = " + Branfield4 + "+ ?," + Branfield5 + " = " + Branfield5 + "+ ?  where tgroup = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1,TSum1-TSum2-TSum4);
                            prm2.setDouble(2, TSum5);
                            prm2.setDouble(3, TSum2);
                            prm2.setDouble(4, TSum4);
                            prm2.setDouble(5, TSum6);
                            prm2.setString(6, "T1");
                            prm2.setString(7, comname);
                            prm2.executeUpdate();
                            
                            if(TSum3>0)
                            {
                                sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ?," + Branfield2 + " = " + Branfield2 + "+ ?," + Branfield3 + " = " + Branfield3 + "+ ?," + Branfield4 + " = " + Branfield4 + "+ ?," + Branfield5 + " = " + Branfield5 + "+ ?  where tgroup = ? and comname = ?";
                                prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                prm2.setDouble(1, (TSum1-TSum2-TSum4)/TSum3);
                                prm2.setDouble(2, TSum5/TSum3);
                                prm2.setDouble(3, TSum2/TSum3);
                                prm2.setDouble(4, TSum4/TSum3);
                                prm2.setDouble(5, TSum6/TSum3);
                                prm2.setString(6, "T2");
                                prm2.setString(7, comname);
                                prm2.executeUpdate();
                            }
                            else
                            {
                                sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ?," + Branfield + " = " + Branfield + "+ ?," + Branfield + " = " + Branfield + "+ ?  where tgroup = ? and comname = ?";
                                prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                prm2.setDouble(1, (TSum1-TSum2-TSum4));
                                prm2.setDouble(2, TSum2);
                                prm2.setDouble(3, TSum4);
                                prm2.setString(4, "T2");
                                prm2.setString(5, comname);
                                prm2.executeUpdate();
                            }
                            
                            sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ? where tgroup = ? and comname = ?";
                            prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, (TSum1));
                            prm2.setString(2, "T3");
                            prm2.setString(3, comname);
                            prm2.executeUpdate();
                            
                            if(TSum3>0)
                            {
                                sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ? where tgroup = ? and comname = ?";
                                prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                prm2.setDouble(1, TSum1/TSum3);
                                prm2.setString(2, "T4");
                                prm2.setString(3, comname);
                                prm2.executeUpdate();
                            }
                            else
                            {
                                sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ? where tgroup = ? and comname = ?";
                                prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                prm2.setDouble(1, TSum1);
                                prm2.setString(2, "T4");
                                prm2.setString(3, comname);
                                prm2.executeUpdate();
                            }
                            
                            
                        }
                        rs.close();

                    } else {
                        JOptionPane.showMessageDialog(this, "จำนวนสาขามากกว่า 32 สาขา ไม่สามาแสดงได้... กรุณาแสดงทีละกลุ่ม");
                    }

            
            } else {
                String TempBran = "";
                double TAmount = 0;
                String Branfield = "";
                String Branfield2 = "";
                String Branfield3 = "";
                String Branfield4 = "";
                String Branfield5 = "";
                String TempCode = "";
                int TempQue = 0;
                double TempAmt = 0;
                double TempPrice = 0;
                String TempUnit = "";
                String Tdept = "";
                String Tdeptname = "";
                String TPName = "";
                String TBranName = "";
                int TMonth = 0;
                String TYear = "";
                String Tempfield = "";
                String TempKey1 = "";
                int TempKey2 = 0;
                String TempName = "";
                String TDept = "";
                String TRjNo = "";
                String TDesc = "";
                String TAccount = "";
                String TSub = "";
                double TempValue = 0;
                String TotField = "";
                int TotRec = 0;
                int BranRec = 0;
                int TRjLine = 0;
                double TPinto = 0;
                double TDelivery = 0;
                double TDiscount = 0;
                double TCust = 0;
                double TSum1 = 0 ,TSum2 = 0,TSum3 = 0,TSum4 = 0,TSum5 = 0,TSum6 = 0;
                Date TempDate =null ;
               

                    sql = "SELECT b.*"
                            + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                            + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                            + ",bf.brandname as Brandname,bust.busname as Bustypename"
                            + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                            + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                            + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                            + " "
                            + "FROM branfile b "
                            + "left join btype bt on b.btype = bt.btcode "
                            + "left join area ar on b.barea = ar.code "
                            + "left join size si on b.bsize = si.code "
                            + "left join plane pl on b.bplane = pl.code "
                            + "left join store st on b.bstore = st.code "
                            + "left join businesstype bust on b.buscode = bust.buscode "
                            + "left join brandfile bf on b.brandcode = bf.brandcode "
                            + "left join company com on b.companycode = com.code "
                            + "where "
                            + "b.code >= '" + cvth.Unicode2ASCII(branch1) + "' and b.code <= '" + branch2 + "' "
                            + "and b.btype >= '" + cvth.Unicode2ASCII(btype1) + "' and b.btype <= '" + btype2 + "' "
                            + "and b.barea >= '" + cvth.Unicode2ASCII(barea1) + "' and b.barea <= '" + barea2 + "' "
                            + "and b.bsize >= '" + cvth.Unicode2ASCII(bsize1) + "' and b.bsize <= '" + bsize2 + "' "
                            + "and b.bplane >= '" + cvth.Unicode2ASCII(bplan1) + "' and b.bplane <= '" + bplan2 + "' "
                            + "and b.bstore >= '" + cvth.Unicode2ASCII(bstore1) + "' and b.bstore <= '" + bstore2 + "' "
                            + "and b.companycode >= '" + cvth.Unicode2ASCII(company1) + "' and b.companycode <= '" + company2 + "' "
                            + "and b.brandcode >= '" + cvth.Unicode2ASCII(brand1) + "' and b.brandcode <= '" + brand2 + "' "
                            + "and b.buscode >= '" + cvth.Unicode2ASCII(bustype1) + "' and b.buscode <= '" + bustype2 + "' ";
                            if(!this.code.equals("All"))
                            {
                                sql += " order by " + this.code + ",BranchCode ";
                            }else
                            {
                                sql += " order by BranchCode ";
                            }

                    TotRec = getBranchcount(sql);
                    if (TotRec <= 20) {
                        
                        //insert masterrj
                        TempDate = done;
                        while(TempDate.compareTo(dtwo)<=0)
                        {
                            
                                    String sqltemp = "insert into tempdailysale(tdate,tday,comname) values(?,?,?)";
                                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                                    prm.setString(1, Format.dateFmtSql.format(TempDate));
                                    prm.setString(2, Format.DayName.format(TempDate));
                                    prm.setString(3, comname);
                                    prm.executeUpdate();
                            
                            
                            TempDate = DateUtil.addDate(TempDate, 1);
                        }
                        String sqltemp = "insert into tempdailysale(tgroup,tday,comname) values(?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, cvth.Unicode2ASCII("T1"));
                        prm.setString(2, cvth.Unicode2ASCII("ยอดรวมแต่ละประเภท"));
                        prm.setString(3, comname);
                        prm.executeUpdate();
                        
                        sqltemp = "insert into tempdailysale(tgroup,tday,comname) values(?,?,?)";
                        prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, cvth.Unicode2ASCII("T2"));
                        prm.setString(2, cvth.Unicode2ASCII("แต่ละประเภทเฉลี่ย/วัน"));
                        prm.setString(3, comname);
                        prm.executeUpdate();
                        
                        sqltemp = "insert into tempdailysale(tgroup,tday,comname) values(?,?,?)";
                        prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, cvth.Unicode2ASCII("T3"));
                        prm.setString(2, cvth.Unicode2ASCII("รวมหน้าร้าน/HOD/PT"));
                        prm.setString(3, comname);
                        prm.executeUpdate();
                        
                        sqltemp = "insert into tempdailysale(tgroup,tday,comname) values(?,?,?)";
                        prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setString(1, cvth.Unicode2ASCII("T4"));
                        prm.setString(2, cvth.Unicode2ASCII("ยอดขายรวมเฉลี่ย/วัน"));
                        prm.setString(3, comname);
                        prm.executeUpdate();
                        
                        
                        
                        
                        
                        
                        ResultSet rs = null;
                        Statement stmt = (Statement) dbUtility.con.createStatement();
                        rs = stmt.executeQuery(sql);

                        BranRec = 0;
                        while (rs.next()) {
                            

                          
                                
                                    TempBran = rs.getString("BranchCode");
                                

                                
                              if (!this.code.equals("All")) {
                                  BranRec = 0;
                            }
                            BranRec += 5;
                            Branfield = "bran" + (BranRec-4);
                            Branfield2 = "bran" + (BranRec-3);
                            Branfield3 = "bran" + (BranRec-2);
                            Branfield4 = "bran" + (BranRec-1);
                            Branfield5 = "bran" + BranRec;
                            TotField = "bran" + (TotRec + 1);
                            TempDate = done;
                            TSum1 = 0;
                            TSum2 = 0;
                            TSum3 = 0;
                            TSum4 = 0;
                            TSum5 = 0;
                            String sql2 = "";
                            while(TempDate.compareTo(dtwo)<=0)
                            {
                                TAmount = 0;
                                TPinto = 0;
                                TDelivery = 0;
                                TDiscount = 0;
                                TCust = 0;
                                sql2 = "select s_bran,sum(deptsum),sum(pinto),sum(delivery),sum(service) "
                                        + "from dterminal where s_bran ='"+TempBran+"' "
                                        + "and t_date = '"+Format.dateFmtSql.format(TempDate)+"' group by s_bran";
                                ResultSet rs2 = null;
                                Statement stmt2 = (Statement) dbUtility.con.createStatement();
                                rs2 = stmt2.executeQuery(sql2);
                                while (rs2.next()) {
                                if(rs2.isFirst())
                                {
                                    TSum3 +=1;
                                }
                                    TAmount = rs2.getDouble("sum(deptsum)")+rs2.getDouble("sum(service)");
                                    TPinto = rs2.getDouble("sum(pinto)");
                                    TDelivery = rs2.getDouble("sum(delivery)");
                                
                                }
                                rs2.close();
                                
                                
                                sql2 = "select * "
                                        + "from drjfile where brcode ='"+TempBran+"' "
                                        + "and tdate = '"+Format.dateFmtSql.format(TempDate)+"' "
                                        + "and ( rjno='53' or rjno = 'T7' or rjno = '49')";
                                ResultSet rs3 = null;
                                Statement stmt3 = (Statement) dbUtility.con.createStatement();
                                rs3 = stmt3.executeQuery(sql2);
                                while (rs3.next()) {
                                    if(rs3.getString("rjno").equals("53"))
                                    {
                                        TAmount -= rs3.getDouble("total");
                                    }
                                    
                                    if(rs3.getString("rjno").equals("T7"))
                                    {
                                        TCust = rs3.getDouble("total");
                                    }
                                    
                                    if(rs3.getString("rjno").equals("49"))
                                    {
                                        TDiscount = rs3.getDouble("total");
                                    }
                                }
                                
                                if(TAmount>0)
                                {
                                    TSum1 += TAmount;
                                    TSum2 += TPinto;
                                    TSum4 += TDelivery;
                                    TSum5 += TDiscount;
                                    TSum6 += TCust;
                                    
                                    String sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ?," + Branfield2 + " = " + Branfield2 + "+ ?," + Branfield3 + " = " + Branfield3 + "+ ?," + Branfield4 + " = " + Branfield4 + "+ ?," + Branfield5 + " = " + Branfield5 + "+ ?  where tdate = ? and comname = ?";
                                    PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                    prm2.setDouble(1, TAmount-TPinto-TDelivery);
                                    prm2.setDouble(2, TDiscount);
                                    prm2.setDouble(3, TPinto);
                                    prm2.setDouble(4, TDelivery);
                                    prm2.setDouble(5, TCust);
                                    prm2.setString(6, Format.dateFmtSql.format(TempDate));
                                    prm2.setString(7, comname);
                                    prm2.executeUpdate();
                                    
                                }
                                
                                TempDate = DateUtil.addDate(TempDate, 1);

                            }
                            
                           String sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ?," + Branfield2 + " = " + Branfield2 + "+ ?," + Branfield3 + " = " + Branfield3 + "+ ?," + Branfield4 + " = " + Branfield4 + "+ ?," + Branfield5 + " = " + Branfield5 + "+ ?  where tgroup = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1,TSum1-TSum2-TSum4);
                            prm2.setDouble(2, TSum5);
                            prm2.setDouble(3, TSum2);
                            prm2.setDouble(4, TSum4);
                            prm2.setDouble(5, TSum6);
                            prm2.setString(6, "T1");
                            prm2.setString(7, comname);
                            prm2.executeUpdate();
                            
                            if(TSum3>0)
                            {
                                sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ?," + Branfield2 + " = " + Branfield2 + "+ ?," + Branfield3 + " = " + Branfield3 + "+ ?," + Branfield4 + " = " + Branfield4 + "+ ?," + Branfield5 + " = " + Branfield5 + "+ ?  where tgroup = ? and comname = ?";
                                prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                prm2.setDouble(1, (TSum1-TSum2-TSum4)/TSum3);
                                prm2.setDouble(2, TSum5/TSum3);
                                prm2.setDouble(3, TSum2/TSum3);
                                prm2.setDouble(4, TSum4/TSum3);
                                prm2.setDouble(5, TSum6/TSum3);
                                prm2.setString(6, "T2");
                                prm2.setString(7, comname);
                                prm2.executeUpdate();
                            }
                            else
                            {
                                sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ?," + Branfield + " = " + Branfield + "+ ?," + Branfield + " = " + Branfield + "+ ?  where tgroup = ? and comname = ?";
                                prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                prm2.setDouble(1, (TSum1-TSum2-TSum4));
                                prm2.setDouble(2, TSum2);
                                prm2.setDouble(3, TSum4);
                                prm2.setString(4, "T2");
                                prm2.setString(5, comname);
                                prm2.executeUpdate();
                            }
                            
                            sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ? where tgroup = ? and comname = ?";
                            prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, (TSum1));
                            prm2.setString(2, "T3");
                            prm2.setString(3, comname);
                            prm2.executeUpdate();
                            
                            if(TSum3>0)
                            {
                                sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ? where tgroup = ? and comname = ?";
                                prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                prm2.setDouble(1, TSum1/TSum3);
                                prm2.setString(2, "T4");
                                prm2.setString(3, comname);
                                prm2.executeUpdate();
                            }
                            else
                            {
                                sqlupdate = "update tempdailysale set " + Branfield + " = " + Branfield + "+ ? where tgroup = ? and comname = ?";
                                prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                                prm2.setDouble(1, TSum1);
                                prm2.setString(2, "T4");
                                prm2.setString(3, comname);
                                prm2.executeUpdate();
                            }
                            
                            
                        }
                        rs.close();

                    } else {
                        JOptionPane.showMessageDialog(this, "จำนวนสาขามากกว่า 32 สาขา ไม่สามาแสดงได้... กรุณาแสดงทีละกลุ่ม");
                    }

                

            }
        } catch (Exception ex) {
            Logger.getLogger(rptDailyPluSum.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void deletetemp(String comname) {

        try {
            String sqltemp = "delete from tempdailysale where comname = ?";
            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
            prm.setString(1, comname);
            prm.executeUpdate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }

    private void setTxt() {
        String date = "";
        String datelast = "";
        String branch = "";
        String dept = "";
        String plu = "";
        if (!date1.equals("")) {
            date = date1 + "-";
        } else {
            date = " - ";
        }

        if (!date2.equals("31/12/9999")) {
            date += date2;
        }

        if (!date3.equals("")) {
            datelast = date3 + "-";
        } else {
            datelast = " - ";
        }

        if (!date4.equals("31/12/9999")) {
            datelast += date4;
        }

        if (!branch1.equals("")) {
            datelast = branch1 + " - ";
        } else {
            branch = " - ";
        }

        if (!branch2.equals("ZZZ")) {
            branch += branch2;
        }

        if (!dept1.equals("")) {
            dept = dept1 + " - ";
        } else {
            dept = " - ";
        }

        if (!dept2.equals("ZZZZ")) {
            dept += dept2;
        }

        if (!plu1.equals("")) {
            plu = plu1 + " - ";
        } else {
            plu = " - ";
        }

        if (!plu2.equals("ZZZZZZZZZZZZZ")) {
            plu += plu2;
        }

        lbldate.setText(date);
       
        condition = this.getTitle() + " Date(1) : " + date + " Dept : " + dept;
    }

    private boolean chkTemp(String tcode) {
        boolean chk = false;
        try {


            String sql = "Select * From tempdailysale  Where (tcode='" + tcode + "' and comname ='" + comname + "') ";
            ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                chk = true;
            }

        } catch (Exception ex) {
            Logger.getLogger(rptVat.class.getName()).log(Level.SEVERE, null, ex);
        }
        return chk;

    }
    
    private boolean chkTotal(String que) {
        boolean chk = false;
        try {


            String sql = "Select * From tempdailysale  Where (tque='" + que + "' and comname ='" + comname + "') ";
            ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                chk = true;
            }

        } catch (Exception ex) {
            Logger.getLogger(rptVat.class.getName()).log(Level.SEVERE, null, ex);
        }
        return chk;

    }

    private int getBranchcount(String sql) {
        int row = 0;
        try {



            ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                row++;
            }

        } catch (Exception ex) {
            Logger.getLogger(rptVat.class.getName()).log(Level.SEVERE, null, ex);
        }
        return row;
    }
}
