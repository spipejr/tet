/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportfile;

import borfunction.GetComputerName;
import borfunction.btnFind;
import com.mysql.jdbc.PreparedStatement;
import dbutility.dbUtility;
import frmlist.ListBranch;
import frmlist.listTempPlu;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.text.JTextComponent;
import masterfile.NimbusFrame;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.*;

/**
 *
 * @author s386
 */
public class setBudFastival extends javax.swing.JDialog {

    /**
     * Creates new form setBudFastival
     */
     Statement stmt ;
    dbUtility db = new dbUtility();
    ThaiUtilities cvth = new ThaiUtilities();
    getLanguage lang = new getLanguage();
    String frmName = "setmenulist";
    DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
    btnFind btn = new btnFind();
    private String comname = new GetComputerName().getComputerName();
    public setBudFastival(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
        t_date1.setText(Format.dateFmtShow.format(new java.util.Date()));
        t_date2.setText(Format.dateFmtShow.format(new java.util.Date()));
        caldate();
        initable();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        t_pname = new javax.swing.JTextField();
        btnsearch1 = new javax.swing.JButton();
        t_pcode = new javax.swing.JTextField();
        d_lblh1 = new javax.swing.JLabel();
        btnsearch2 = new javax.swing.JButton();
        t_mcode = new javax.swing.JTextField();
        d_lblh2 = new javax.swing.JLabel();
        db_btnOK = new javax.swing.JButton();
        db_btnsave = new javax.swing.JButton();
        db_btncancle = new javax.swing.JButton();
        db_btndelete = new javax.swing.JButton();
        d_date2 = new javax.swing.JLabel();
        t_date1 = new javax.swing.JFormattedTextField();
        btn_Calendar = new javax.swing.JButton();
        d_date3 = new javax.swing.JLabel();
        t_date2 = new javax.swing.JFormattedTextField();
        btn_Calendar1 = new javax.swing.JButton();
        t_day = new javax.swing.JTextField();
        d_lblh3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("รายการบันทึกเป้าการขาย By PLU (ตามเทศกาล)");

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        t_pname.setBackground(new java.awt.Color(249, 252, 186));
        t_pname.setEditable(false);
        t_pname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pname.setFocusable(false);

        btnsearch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearch1.setFocusable(false);
        btnsearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearch1ActionPerformed(evt);
            }
        });

        t_pcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_pcodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_pcodeFocusLost(evt);
            }
        });
        t_pcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_pcodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_pcodeKeyTyped(evt);
            }
        });

        d_lblh1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh1.setText("สาขา");
        d_lblh1.setName("d_lblh1"); // NOI18N

        btnsearch2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearch2ActionPerformed(evt);
            }
        });

        t_mcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_mcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_mcodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_mcodeFocusLost(evt);
            }
        });
        t_mcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_mcodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_mcodeKeyTyped(evt);
            }
        });

        d_lblh2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh2.setText("ชื่อกลุ่ม PLU");
        d_lblh2.setName("d_lblh1"); // NOI18N

        db_btnOK.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnOK.setText("OK");
        db_btnOK.setName("db_btnOK"); // NOI18N
        db_btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(d_lblh2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_mcode, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(d_lblh1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_pcode, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_pname, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblh1)
                    .addComponent(t_pcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_pname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_mcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblh2)
                    .addComponent(db_btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        db_btnsave.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnsave.setText("บันทึก (Save)");
        db_btnsave.setName("db_btnOK"); // NOI18N
        db_btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnsaveActionPerformed(evt);
            }
        });

        db_btncancle.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btncancle.setText("ยกเลิก (Cancle)");
        db_btncancle.setName("db_btnOK"); // NOI18N
        db_btncancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btncancleActionPerformed(evt);
            }
        });

        db_btndelete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btndelete.setText("ลบข้อมูล (Delete)");
        db_btndelete.setName("db_btnOK"); // NOI18N
        db_btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btndeleteActionPerformed(evt);
            }
        });

        d_date2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_date2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_date2.setText("ช่วงวันที่ เทศกาล");
        d_date2.setName("d_date2");

        t_date1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        t_date1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_date1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_date1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_date1FocusLost(evt);
            }
        });
        t_date1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_date1KeyPressed(evt);
            }
        });

        btn_Calendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_Calendar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Calendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CalendarActionPerformed(evt);
            }
        });

        d_date3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_date3.setText("ถึงวันที่");
        d_date3.setName("d_date3");

        t_date2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        t_date2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_date2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_date2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_date2FocusLost(evt);
            }
        });
        t_date2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_date2KeyPressed(evt);
            }
        });

        btn_Calendar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_Calendar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_Calendar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Calendar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Calendar1ActionPerformed(evt);
            }
        });

        t_day.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_day.setFocusable(false);
        t_day.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_dayFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_dayFocusLost(evt);
            }
        });
        t_day.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_dayKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_dayKeyTyped(evt);
            }
        });

        d_lblh3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh3.setText("รวมระยะเวลา");
        d_lblh3.setName("d_lblh1"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(d_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d_date3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Calendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d_lblh3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_day, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(db_btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btncancle, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(db_btncancle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(db_btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(t_day, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d_lblh3)
                            .addComponent(t_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Calendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d_date3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "สาขา", "เทศกาล", "No", "รหัสสินค้า", "ชื่อสินค้า", "ราคาขาย", "หน่วยนับ", "เป้าการขาย"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl1.setColumnSelectionAllowed(true);
        tbl1.setName("tbl1"); // NOI18N
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbl1MouseReleased(evt);
            }
        });
        tbl1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbl1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbl1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);
        tbl1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl1.getColumnModel().getColumn(0).setPreferredWidth(80);
        tbl1.getColumnModel().getColumn(1).setPreferredWidth(150);
        tbl1.getColumnModel().getColumn(2).setPreferredWidth(50);
        tbl1.getColumnModel().getColumn(4).setPreferredWidth(150);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(73, 73, 73))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-924)/2, (screenSize.height-796)/2, 924, 796);
    }// </editor-fold>//GEN-END:initComponents

    private void t_pcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pcodeFocusGained
        t_pcode.setText(t_pcode.getText());
        t_pcode.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcodeFocusGained

    private void t_pcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pcodeFocusLost
        if (!t_pcode.getText().equals("")) {
            setpname(t_pcode.getText());
        }
        t_pcode.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcodeFocusLost

    private void t_pcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
                db_btnOK.requestFocus();
            
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnFindBran();
        }
    }//GEN-LAST:event_t_pcodeKeyPressed

    private void t_pcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcodeKeyTyped
        if (t_pcode.getText().length() >= 13) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcodeKeyTyped

    private void btnsearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearch1ActionPerformed

        btnFindBran();
        //        btnfindPLU();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearch1ActionPerformed

    private void db_btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnOKActionPerformed
       // save();
        settemp();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnOKActionPerformed

    private void db_btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnsaveActionPerformed
        if(!t_mcode.isFocusable())
        {
        save();
        }
        //deleteintbl3All();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnsaveActionPerformed

    private void t_mcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_mcodeFocusLost
        t_mcode.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_mcodeFocusLost

    private void t_mcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_mcodeKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           
                
                t_pcode.requestFocus();
            
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnTempPlu();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_mcodeKeyPressed

    private void t_mcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_mcodeKeyTyped
        if (t_pcode.getText().length() >= 13) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_mcodeKeyTyped

    private void btnsearch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearch2ActionPerformed
        btnTempPlu();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearch2ActionPerformed

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        //indextbl = tbltable.getSelectedRow();
        int row = tbl1.getSelectedRow();
        int col = tbl1.getSelectedColumn();
        if(col == 7)
        {
            if (tbl1.editCellAt(row, col))
            {
                Component editor = tbl1.getEditorComponent();
                editor.requestFocusInWindow();
                ((JTextComponent)editor).selectAll();
            }
        
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl1MouseClicked

    private void tbl1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseReleased
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl1MouseReleased

    private void tbl1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl1KeyReleased
         
        // TODO add your handling code here:
   }//GEN-LAST:event_tbl1KeyReleased

    private void db_btncancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btncancleActionPerformed
        if(!t_mcode.isFocusable())
        {
        int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการยกเลิกการป้อนข้อมูลหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            clear();
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btncancleActionPerformed

    private void db_btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btndeleteActionPerformed
        if(!t_mcode.isFocusable())
        {
        int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
        deletefastival();
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btndeleteActionPerformed

    private void t_date1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_date1FocusGained
        t_date1.setText(t_date1.getText());
        t_date1.selectAll();
        caldate();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date1FocusGained

    private void t_date1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_date1FocusLost
        t_date1.select(0, 0);
        caldate();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date1FocusLost

    private void t_date1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_date1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btn.btncalendar(t_date1,btn_Calendar);
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_date2.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date1KeyPressed

    private void btn_CalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CalendarActionPerformed
        btn.btncalendar(t_date1,btn_Calendar);
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_CalendarActionPerformed

    private void t_date2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_date2FocusGained
        t_date2.setText(t_date2.getText());
        t_date2.selectAll();
        caldate();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date2FocusGained

    private void t_date2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_date2FocusLost
        t_date2.select(0, 0);
        caldate();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date2FocusLost

    private void t_date2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_date2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btn.btncalendar(t_date2,btn_Calendar1);
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_date1.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date2KeyPressed

    private void btn_Calendar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Calendar1ActionPerformed
        btn.btncalendar(t_date2,btn_Calendar1);
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Calendar1ActionPerformed

    private void t_dayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_dayFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_t_dayFocusGained

    private void t_dayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_dayFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_t_dayFocusLost

    private void t_dayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_dayKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_dayKeyPressed

    private void t_dayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_dayKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_t_dayKeyTyped

    private void tbl1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl1KeyPressed
        int row = tbl1.getSelectedRow();
        int col = tbl1.getSelectedColumn();
        if(col == 7)
        {
            if (tbl1.editCellAt(row, col))
            {
                Component editor = tbl1.getEditorComponent();
                editor.requestFocusInWindow();
                ((JTextComponent)editor).selectAll();
            }
        
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl1KeyPressed

    private void t_mcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_mcodeFocusGained
        t_mcode.setText(t_mcode.getText());
        t_mcode.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_mcodeFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(setBudFastival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(setBudFastival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(setBudFastival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(setBudFastival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                setBudFastival dialog = new setBudFastival(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Calendar;
    private javax.swing.JButton btn_Calendar1;
    private javax.swing.JButton btnsearch1;
    private javax.swing.JButton btnsearch2;
    private javax.swing.JLabel d_date2;
    private javax.swing.JLabel d_date3;
    private javax.swing.JLabel d_lblh1;
    private javax.swing.JLabel d_lblh2;
    private javax.swing.JLabel d_lblh3;
    private javax.swing.JButton db_btnOK;
    private javax.swing.JButton db_btncancle;
    private javax.swing.JButton db_btndelete;
    private javax.swing.JButton db_btnsave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField t_date1;
    private javax.swing.JFormattedTextField t_date2;
    private javax.swing.JTextField t_day;
    private javax.swing.JTextField t_mcode;
    private javax.swing.JTextField t_pcode;
    private javax.swing.JTextField t_pname;
    private javax.swing.JTable tbl1;
    // End of variables declaration//GEN-END:variables

    private void setpname(String code)
    {
        stmt = null;
    ResultSet rs = null;
    
   
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "";
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
                
                sql = "select * from branfile "
                + "where code ='"+cvth.Unicode2ASCII(code)+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   t_pname.setText(cvth.ASCII2Unicode(rs.getString("name")));
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                    t_pcode.setText("");
                    t_pname.setText("");
                    t_pcode.requestFocus();
                }
            
            }
            else
            {
                sql = "select * from branfile "
                + "where code ='"+code+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   t_pname.setText(rs.getString("name"));
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                    t_pcode.setText("");
                    t_pname.setText("");
                    t_pcode.requestFocus();
                }
                
            }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
    }
    
    private void setFocus(boolean chk)
    {
    
    //t_pcode.setFocusable(chk);
    tbl1.setEnabled(chk);
    
    
    //db_btnsave.setEnabled(chk);
    if(chk==false)
    {
    t_mcode.setFocusable(true);
    t_mcode.setBackground(Color.WHITE);
    t_pcode.setFocusable(true);
    t_pcode.setBackground(Color.WHITE);
    db_btnOK.setEnabled(true);
    btnsearch1.setEnabled(true);
    btnsearch2.setEnabled(true);
    }
    else
    {
    t_mcode.setBackground(new java.awt.Color(249,252,186));
    t_mcode.setFocusable(false);
    t_pcode.setBackground(new java.awt.Color(249,252,186));
    t_pcode.setFocusable(false);
    db_btnOK.setEnabled(false);
    btnsearch1.setEnabled(false);
    btnsearch2.setEnabled(false);
    }
    }
    private void caldate()
    {
        int day = 0 ;
        try {
            Date d1 = Format.dateFmtShow.parse(t_date1.getText());
            Date d2 = Format.dateFmtShow.parse(t_date2.getText());
            
            day = DateUtil.getDate(t_date1.getText(), t_date2.getText());
            day++;
            t_day.setText(day+"");
        } catch (ParseException ex) {
            Logger.getLogger(setBudFastival.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    private void btnTempPlu() {
        listTempPlu f = new listTempPlu(new NimbusFrame(), true);
        f.setVisible(true);
        if(!f.bcode.equals(""))
        {
            t_mcode.setText(f.bcode);
            
        }
       t_mcode.requestFocus();
               
    }
    
    private void btnFindBran() {
        ListBranch f = new ListBranch(new NimbusFrame(), true);
        f.setVisible(true);
        if(!f.code.equals(""))
        {
            t_pcode.setText(f.code);
            setpname(t_pcode.getText());
        }
       
        t_pcode.requestFocus();
    }
    
    private void settemp() {
        try {
            if(t_mcode.getText().equals(""))
            {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณาป้อนข้อมูลให้ถูกต้อง");
                t_mcode.requestFocus();
                return;
            }
            
            if(!chkgroup(t_mcode.getText()))
            {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณาป้อนข้อมูลให้ถูกต้อง");
                t_mcode.requestFocus();
                return;
            }
            else
            {
                if(t_pcode.getText().equals("")||!chkbran(t_pcode.getText()))
                {
                    JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณาป้อนข้อมูลให้ถูกต้อง");
                    t_pcode.requestFocus();
                    return;
                }
                else
                {
                    LoadData();
                    setFocus(true);
                    tbl1.requestFocus();
                }
            }
            
            
            
            
        } catch (Exception e) {
        }
    }
    
    private boolean chkgroup(String code) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;


        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from tempplu "
                        + "where plugroup = '" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from tempplu "
                        + "where plugroup = '" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }
    
    private boolean chkbran(String code) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;


        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from branfile "
                        + "where code = '" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from branfile "
                        + "where code = '" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private void LoadData() {
        stmt = null;
        ResultSet rs = null;
        deletetemp(comname);
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from budfastival b inner join product p on b.pcode = p.pcode "
                        + "where plugroup = '"+cvth.Unicode2ASCII(t_mcode.getText())+"' "
                        + "and pbran = '"+cvth.Unicode2ASCII(t_pcode.getText())+"' "
                        + "order by pbran,plugroup,pque";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                    
                    t_date1.setText(Format.dateFmtShow.format(rs.getDate("pdate1")));
                    t_date2.setText(Format.dateFmtShow.format(rs.getDate("pdate2")));
                    caldate();
                    rs.beforeFirst();
                    while (rs.next()) {
                        String sqltemp = "Insert Into tempfastival (pbran,plugroup,pque,pcode,pqty,pamount,pprice,punit,pname,comname) "
                                    + "Values (?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, rs.getString("pbran"));
                            prm.setString(2, rs.getString("plugroup"));
                            prm.setInt(3, rs.getInt("pque"));
                            prm.setString(4, rs.getString("pcode"));
                            prm.setDouble(5, rs.getDouble("pqty"));
                            prm.setDouble(6, rs.getDouble("pamount"));
                            prm.setDouble(7, rs.getDouble("pprice11"));
                            prm.setString(8, rs.getString("punit1"));
                            prm.setString(9, rs.getString("pdesc"));
                            prm.setString(10, comname);
                            prm.executeUpdate();

                    }
                }
                else
                {
                    
                    t_date1.setText(Format.dateFmtShow.format(new Date()));
                    t_date2.setText(Format.dateFmtShow.format(new Date()));
                    caldate();
                    String sql2 = "select * from tempplu b inner join product p on b.pcode = p.pcode "
                        + "where plugroup = '"+cvth.Unicode2ASCII(t_mcode.getText())+"' "
                        + "order by plugroup,pque";
                    
                    Statement stmt2 = (Statement) dbUtility.con.createStatement();
                    ResultSet rs2 = stmt2.executeQuery(sql2);
                    
                    while (rs2.next()) {
                       String sqltemp = "Insert Into tempfastival (pbran,plugroup,pque,pcode,pqty,pamount,pprice,punit,pname,comname) "
                                    + "Values (?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, cvth.Unicode2ASCII(t_pcode.getText()));
                            prm.setString(2, rs2.getString("plugroup"));
                            prm.setInt(3, rs2.getInt("pque"));
                            prm.setString(4, rs2.getString("pcode"));
                            prm.setDouble(5, 0);
                            prm.setDouble(6, 0);
                            prm.setDouble(7, rs2.getDouble("pprice11"));
                            prm.setString(8, rs2.getString("punit1"));
                            prm.setString(9, rs2.getString("pdesc"));
                            prm.setString(10, comname);
                            prm.executeUpdate();
                    
                    }
                }
                
                showdataintbl();
            } else {
                
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from budfastival b inner join product p on b.pcode = p.pcode "
                        + "where plugroup = '"+t_mcode.getText()+"' "
                        + "and pbran = '"+t_pcode.getText()+"' "
                        + "order by pbran,plugroup,pque";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                    
                    t_date1.setText(Format.dateFmtShow.format(rs.getDate("pdate1")));
                    t_date2.setText(Format.dateFmtShow.format(rs.getDate("pdate2")));
                    caldate();
                    rs.beforeFirst();
                    while (rs.next()) {
                        String sqltemp = "Insert Into tempfastival (pbran,plugroup,pque,pcode,pqty,pamount,pprice,punit,pname,comname) "
                                    + "Values (?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, rs.getString("pbran"));
                            prm.setString(2, rs.getString("plugroup"));
                            prm.setInt(3, rs.getInt("pque"));
                            prm.setString(4, rs.getString("pcode"));
                            prm.setDouble(5, rs.getDouble("pqty"));
                            prm.setDouble(6, rs.getDouble("pamount"));
                            prm.setDouble(7, rs.getDouble("pprice11"));
                            prm.setString(8, rs.getString("punit1"));
                            prm.setString(9, rs.getString("pdesc"));
                            prm.setString(10, comname);
                            prm.executeUpdate();

                    }
                }
                else
                {
                    
                    t_date1.setText(Format.dateFmtShow.format(new Date()));
                    t_date2.setText(Format.dateFmtShow.format(new Date()));
                    caldate();
                    String sql2 = "select * from tempplu b inner join product p on b.pcode = p.pcode "
                        + "where plugroup = '"+t_mcode.getText()+"' "
                        + "order by plugroup,pque";
                    
                    Statement stmt2 = (Statement) dbUtility.con.createStatement();
                    ResultSet rs2 = stmt2.executeQuery(sql2);
                    
                    while (rs2.next()) {
                       String sqltemp = "Insert Into tempfastival (pbran,plugroup,pque,pcode,pqty,pamount,pprice,punit,pname,comname) "
                                    + "Values (?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, t_pcode.getText());
                            prm.setString(2, rs2.getString("plugroup"));
                            prm.setInt(3, rs2.getInt("pque"));
                            prm.setString(4, rs2.getString("pcode"));
                            prm.setDouble(5, 0);
                            prm.setDouble(6, 0);
                            prm.setDouble(7, rs2.getDouble("pprice11"));
                            prm.setString(8, rs2.getString("punit1"));
                            prm.setString(9, rs2.getString("pdesc"));
                            prm.setString(10, comname);
                            prm.executeUpdate();
                    
                    }
                }
                
                showdataintbl();

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    private void deletetemp(String comname) {
       if(!db.Char_Set.equalsIgnoreCase("utf-8"))
         {
            try {
                 String sqltemp = "delete from tempfastival where comname = ?";
                  PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                  prm.setString(1, comname);
                  prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
         }
       else
       {
            try {
                 String sqltemp = "delete from tempfastival where comname = ?";
                  PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                  prm.setString(1, comname);
                  prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
       }
           
    }

    private void showdataintbl() {
        stmt = null;
    ResultSet rs = null;
    
   
    removedataintble(tbl1);
    DefaultTableModel tb = (DefaultTableModel) tbl1.getModel() ;
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "";
        if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
        sql = "select * from tempfastival where comname = '"+comname+"' order by pbran,pque";
            }
        else
        {
         sql = "select * from tempfastival where comname = '"+comname+"' order by pbran,pque";
        }
        rs = stmt.executeQuery(sql);
        while(rs.next())
        {
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
                
            tb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("pbran")),
                                   cvth.ASCII2Unicode(rs.getString("plugroup")),
                                   rs.getInt("pque"),
                                   cvth.ASCII2Unicode(rs.getString("pcode")),
                                   cvth.ASCII2Unicode(rs.getString("pname")),
                                   rs.getDouble("pprice"),
                                   cvth.ASCII2Unicode(rs.getString("punit")),
                                   rs.getDouble("pamount")
                                   
                                  });
            }
            else
            {
             tb.addRow(new Object[]{rs.getString("pbran"),
                                   rs.getString("plugroup"),
                                   rs.getInt("pque"),
                                   rs.getString("pcode"),
                                   rs.getString("pname"),
                                   rs.getDouble("pprice"),
                                   rs.getString("punit"
                     
                     ),
                                   rs.getDouble("pamount")
                                   
                                  });
            }
            
        }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
    }
     private void removedataintble(JTable tbl)
    {
    DefaultTableModel tb = (DefaultTableModel) tbl.getModel();
     int cnt = tb.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                tb.removeRow(0);
            }
        }
    }
     private void save()
     {
         int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการบันทึกข้อมูลหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
         if(!db.Char_Set.equalsIgnoreCase("utf-8"))
         {
             deletefastival();
         try {
         for(int i = 0 ; i<tbl1.getRowCount(); i++)
         {
            
                String sqltemp = "Insert Into budfastival (pbran,plugroup,pque,pcode,pqty,pamount,pdate1,pdate2) "
                                      + "Values (?,?,?,?,?,?,?,?)";
                              PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                              prm.setString(1, cvth.Unicode2ASCII(tbl1.getValueAt(i, 0).toString()));
                              prm.setString(2, cvth.Unicode2ASCII(tbl1.getValueAt(i, 1).toString()));
                              prm.setInt(3, Integer.parseInt(PUtility.ConvertReal(tbl1.getValueAt(i, 2).toString())));
                              prm.setString(4, cvth.Unicode2ASCII(tbl1.getValueAt(i, 3).toString()));
                              prm.setDouble(5, 0);
                              prm.setDouble(6, Double.parseDouble(PUtility.ConvertReal(tbl1.getValueAt(i, 7).toString())));
                              prm.setString(7, Format.dateFmtSql.format(Format.dateFmtShow.parse(t_date1.getText())));
                              prm.setString(8, Format.dateFmtSql.format(Format.dateFmtShow.parse(t_date2.getText())));
                              prm.executeUpdate();
           
         }
         
          } catch (Exception ex) {
                Logger.getLogger(setBudFastival.class.getName()).log(Level.SEVERE, null, ex);
            }
         
         }
         else
         {
             deletefastival();
         try {
         for(int i = 0 ; i<tbl1.getRowCount(); i++)
         {
            
                String sqltemp = "Insert Into budfastival (pbran,plugroup,pque,pcode,pqty,pamount,pdate1,pdate2) "
                                      + "Values (?,?,?,?,?,?,?,?)";
                              PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                              prm.setString(1, tbl1.getValueAt(i, 0).toString());
                              prm.setString(2, tbl1.getValueAt(i, 1).toString());
                              prm.setInt(3, Integer.parseInt(PUtility.ConvertReal(tbl1.getValueAt(i, 2).toString())));
                              prm.setString(4, tbl1.getValueAt(i, 3).toString());
                              prm.setDouble(5, 0);
                              prm.setDouble(6, Double.parseDouble(PUtility.ConvertReal(tbl1.getValueAt(i, 7).toString())));
                              prm.setString(7, Format.dateFmtSql.format(Format.dateFmtShow.parse(t_date1.getText())));
                              prm.setString(8, Format.dateFmtSql.format(Format.dateFmtShow.parse(t_date2.getText())));
                              prm.executeUpdate();
           
         }
         
          } catch (Exception ex) {
                Logger.getLogger(setBudFastival.class.getName()).log(Level.SEVERE, null, ex);
            }
         }
         clear();
                    }
     }
     private void deletefastival() {
        if(!db.Char_Set.equalsIgnoreCase("utf-8"))
         {
            try {
                 String sqltemp = "delete from budfastival where plugroup = ? and pbran = ?";
                  PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                  prm.setString(1, cvth.Unicode2ASCII(t_mcode.getText()));
                  prm.setString(2, cvth.Unicode2ASCII(t_pcode.getText()));
                  prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
         }
        else
        {
            try {
                 String sqltemp = "delete from budfastival where plugroup = ? and pbran = ?";
                  PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                  prm.setString(1, t_mcode.getText());
                  prm.setString(2, t_pcode.getText());
                  prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }
     private void clear()
     {
        setFocus(false);
         t_date1.setText(Format.dateFmtShow.format(new java.util.Date()));
        t_date2.setText(Format.dateFmtShow.format(new java.util.Date()));
        caldate();
        t_pcode.setText("");
        t_pname.setText("");
        t_pcode.requestFocus();
        removedataintble(tbl1);
     }
     
     private void initable() {
        DefaultTableModel tb = (DefaultTableModel) tbl1.getModel();
        tbl1.setShowGrid(true);
        //tblPLU.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl1.setRowSelectionAllowed(true);
        tbl1.setBackground(java.awt.Color.WHITE);
        tbl1.setGridColor(java.awt.Color.gray);
        JTableHeader header = tbl1.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        //tblBtype.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl1.setRowHeight(20);
        TableTestFormatRenderer t;
        t = new TableTestFormatRenderer(DoubleFmt);
        t.setHorizontalAlignment(SwingConstants.RIGHT);


        DefaultTableCellRenderer r;
        r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c;
        c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer l;
        l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);

        TableColumnModel tcm = tbl1.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(l);
        tcm.getColumn(3).setCellRenderer(l);
        tcm.getColumn(4).setCellRenderer(l);
        tcm.getColumn(6).setCellRenderer(l);
        //tcm.getColumn(7).setCellRenderer(FormatCell.color1());

    }
}
