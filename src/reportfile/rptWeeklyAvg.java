/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportfile;

import borfunction.GetComputerName;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import dbutility.dbUtility;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.*;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import reportModel.reportVatModel;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.*;

/**
 *
 * @author s386
 */
public class rptWeeklyAvg extends javax.swing.JDialog {

    /**
     * Creates new form rptWeeklyAvg
     */
    public static String date1 = "",date2 ="",date3 = "",date4 ="",date5 = "",date6 ="",dept1="",dept2="",plu1="",plu2="",branch1="",branch2="",btype1="",btype2=""
            ,barea1="",barea2="",bsize1="",bsize2="",bplan1="",bplan2="",bstore1="",bstore2="",strday=""
            ,company1="",company2="",brand1="",brand2="",bustype1="",bustype2="",code="",name="",day="";
    public static boolean Tchk ;
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    String frmName = "rptWeeklyAvg";
    ThaiUtilities cvth = new ThaiUtilities();
    private String condition = "";
    dbUtility db = new dbUtility();
    public rptWeeklyAvg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
    }

    public rptWeeklyAvg() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        db_btnExel = new javax.swing.JButton();
        db_btnPrint = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lbldate = new javax.swing.JLabel();
        db_lblh1 = new javax.swing.JLabel();
        lbldate3 = new javax.swing.JLabel();
        db_lblh2 = new javax.swing.JLabel();
        lbldate2 = new javax.swing.JLabel();
        db_lblh3 = new javax.swing.JLabel();
        lblday = new javax.swing.JLabel();
        db_lblh4 = new javax.swing.JLabel();
        btnExit1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        db_btnExel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel.setText("Exel File");
        db_btnExel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel.setIconTextGap(0);
        db_btnExel.setName("db_btnExel"); // NOI18N
        db_btnExel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExelActionPerformed(evt);
            }
        });

        db_btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        db_btnPrint.setText("พิมม์");
        db_btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnPrint.setIconTextGap(0);
        db_btnPrint.setName("db_btnPrint"); // NOI18N
        db_btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnPrintActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbldate.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate.setText("-");
        lbldate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh1.setText("ช่วงวันที่ชุดที่ (1)");
        db_lblh1.setName("db_lblh1"); // NOI18N

        lbldate3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate3.setText("-");
        lbldate3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh2.setText("ช่วงวันที่ยอดขายสะสม");
        db_lblh2.setName("db_lblh2"); // NOI18N

        lbldate2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate2.setText("-");
        lbldate2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh3.setText("ช่วงวันที่ชุดที่ (2)");
        db_lblh3.setName("db_lblh3"); // NOI18N

        lblday.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lblday.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh4.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh4.setText("วันโปรโมชั่น");
        db_lblh4.setName("db_lblh4"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_lblh1)
                        .addGap(18, 18, 18)
                        .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_lblh2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(lbldate3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_lblh4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(db_lblh3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbldate2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblday, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(db_lblh3)
                        .addComponent(lbldate2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(db_lblh1)
                        .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(db_lblh4)
                        .addComponent(lblday, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(db_lblh2)
                        .addComponent(lbldate3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExit1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit1.setIconTextGap(0);
        btnExit1.setName("db_btnExit"); // NOI18N
        btnExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        tbl.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "กลุ่ม", "ชื่อกลุ่ม", "สาขา", "ชื่อสาขา", "(1) ขายในร้านไม่รวมวัน Promotion", "(2) ขายในร้านไม่รวมวัน Promotion", "ผลต่าง (บาท)", "ผลต่าง (%)", "(1) Promotion", "(2) Promotion", "ผลต่าง (บาท)", "ผลต่าง (%)", "(1) HOD+ปิ่นโต", "(2) HOD+ปิ่นโต", "ผลต่าง (บาท)", "ผลต่าง (%)", "(1) ยอดรวมต่อวัน", "(2) ยอดรวมต่อวัน", "ผลต่าง (บาท)", "ผลต่าง (%)", "วัน Promotion มากกว่าวันปกติ", "(3) Pinto สะสม", "(3) ยอดขายสุทธิสะสม", "เป้าการขาย 30 วัน", "ขายเทียบเป้า(%)", "Average", "ยอดขายสุทธิสะสม", "ผลต่าง(%)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.setName("tbl"); // NOI18N
        jScrollPane1.setViewportView(tbl);
        tbl.getColumnModel().getColumn(0).setPreferredWidth(50);
        tbl.getColumnModel().getColumn(1).setPreferredWidth(120);
        tbl.getColumnModel().getColumn(2).setPreferredWidth(50);
        tbl.getColumnModel().getColumn(3).setPreferredWidth(120);

        jProgressBar1.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1030, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void db_btnExelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExelActionPerformed
        setTxt();
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();

        try {
            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();
                
                 if(curFile.exists())
                {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        db_btnExelActionPerformed(null);
                        
                        return;

                    }
                    
                }
                test.setOutputFile(curFile.toString());
                try {
                    test.writetableNoSum(tbl, tbl.getColumnModel(), condition);
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
            }

        } catch (IOException e) {
        }
        
        
    }//GEN-LAST:event_db_btnExelActionPerformed

    private void db_btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnPrintActionPerformed


        // TODO add your handling code here:
  }//GEN-LAST:event_db_btnPrintActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExit1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        db.dbconnect();
        comname = new GetComputerName().getComputerName();
        setTxt();
        
        inittbl();
        getLanguage lang = new getLanguage();
        lang.setText(frmName, this, lang.getChklang());
        
        this.update(this.getGraphics());
         setTemp();
        showDataIntable();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened
    public void setCaptionTbl()
    {
        tbl.getColumnModel().getColumn(4).setHeaderValue(tbl.getColumnModel().getColumn(4).getHeaderValue()+" "+Format.daymount.format(tdate1)+" - "+Format.daymount.format(tdate2));
        tbl.getColumnModel().getColumn(5).setHeaderValue(tbl.getColumnModel().getColumn(5).getHeaderValue()+" "+Format.daymount.format(txdate1)+" - "+Format.daymount.format(txdate2));
        
        tbl.getColumnModel().getColumn(8).setHeaderValue(tbl.getColumnModel().getColumn(8).getHeaderValue()+" "+Format.daymount.format(tdate1)+" - "+Format.daymount.format(tdate2));
        tbl.getColumnModel().getColumn(9).setHeaderValue(tbl.getColumnModel().getColumn(9).getHeaderValue()+" "+Format.daymount.format(txdate1)+" - "+Format.daymount.format(txdate2));
        
        tbl.getColumnModel().getColumn(12).setHeaderValue(tbl.getColumnModel().getColumn(12).getHeaderValue()+" "+Format.daymount.format(tdate1)+" - "+Format.daymount.format(tdate2));
        tbl.getColumnModel().getColumn(13).setHeaderValue(tbl.getColumnModel().getColumn(13).getHeaderValue()+" "+Format.daymount.format(txdate1)+" - "+Format.daymount.format(txdate2));
        
        tbl.getColumnModel().getColumn(16).setHeaderValue(tbl.getColumnModel().getColumn(16).getHeaderValue()+" "+Format.daymount.format(tsdate1)+" - "+Format.daymount.format(tsdate2));
        tbl.getColumnModel().getColumn(17).setHeaderValue(tbl.getColumnModel().getColumn(17).getHeaderValue()+" "+Format.daymount.format(tsdate1)+" - "+Format.daymount.format(tsdate2));
        tbl.getColumnModel().getColumn(21).setHeaderValue(tbl.getColumnModel().getColumn(21).getHeaderValue()+" "+Format.daymount.format(tsdate1)+" - "+Format.daymount.format(tsdate2));
        tbl.getColumnModel().getColumn(22).setHeaderValue(tbl.getColumnModel().getColumn(22).getHeaderValue()+" "+Format.daymount.format(tsdate1)+" - "+Format.daymount.format(tsdate2));
    }
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rptWeeklyAvg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rptWeeklyAvg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rptWeeklyAvg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rptWeeklyAvg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                rptWeeklyAvg dialog = new rptWeeklyAvg(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                
                
            }
                
        });
        
                
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton db_btnExel;
    private javax.swing.JButton db_btnPrint;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JLabel db_lblh2;
    private javax.swing.JLabel db_lblh3;
    private javax.swing.JLabel db_lblh4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lbldate2;
    private javax.swing.JLabel lbldate3;
    private javax.swing.JLabel lblday;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables
    private void inittbl()
{
    try {
            
 
            
      
        TableColumnModel tcm = tbl.getColumnModel();
        tcm.getColumn(0).setCellRenderer(FormatCell.l());
        tcm.getColumn(1).setCellRenderer(FormatCell.l());
        tcm.getColumn(2).setCellRenderer(FormatCell.l());
        tcm.getColumn(3).setCellRenderer(FormatCell.l());
        tcm.getColumn(4).setCellRenderer(FormatCell.r());
        tcm.getColumn(5).setCellRenderer(FormatCell.color1());
        tcm.getColumn(6).setCellRenderer(FormatCell.r());
        tcm.getColumn(7).setCellRenderer(FormatCell.r());
        tcm.getColumn(8).setCellRenderer(FormatCell.r());
        tcm.getColumn(9).setCellRenderer(FormatCell.color1());
        tcm.getColumn(10).setCellRenderer(FormatCell.r());
        tcm.getColumn(11).setCellRenderer(FormatCell.r());
        tcm.getColumn(12).setCellRenderer(FormatCell.r());
        tcm.getColumn(13).setCellRenderer(FormatCell.color1());
        tcm.getColumn(14).setCellRenderer(FormatCell.r());
        tcm.getColumn(15).setCellRenderer(FormatCell.r());
        tcm.getColumn(16).setCellRenderer(FormatCell.r());
        tcm.getColumn(17).setCellRenderer(FormatCell.color1());
        tcm.getColumn(18).setCellRenderer(FormatCell.r());
        tcm.getColumn(19).setCellRenderer(FormatCell.r());
        tcm.getColumn(20).setCellRenderer(FormatCell.r());
        tcm.getColumn(21).setCellRenderer(FormatCell.r());
        tcm.getColumn(22).setCellRenderer(FormatCell.r());
        tcm.getColumn(23).setCellRenderer(FormatCell.r());
        tcm.getColumn(24).setCellRenderer(FormatCell.r());
        tcm.getColumn(25).setCellRenderer(FormatCell.color1());
        tcm.getColumn(26).setCellRenderer(FormatCell.r());
        tcm.getColumn(27).setCellRenderer(FormatCell.r());
       
        
        
        
        tbl.setShowGrid(true);
        tbl.setFont(fontplain);
        tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl.setRowSelectionAllowed(true);
        tbl.setBackground(java.awt.Color.WHITE);
        tbl.setGridColor(java.awt.Color.gray);
        tbl.setRowHeight(24);
        
            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            
            tbl.setColumnModel(tcm);
            setTxt();
            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
            h.setReorderingAllowed(false);
            
            
            //tbl.getColumnModel().removeColumn(tc3);
            //tbl.getColumnModel().removeColumn(tc4);
        } catch (Exception ex) {
            
        } 
}
String comname = "";
int per = 0;
Date tdate1 = null;
Date tdate2 = null;
Date txdate1 = null;
Date txdate2 = null;
Date tsdate1 = null;
Date tsdate2 = null;
private void setTemp()
{
    try {
            String d1 = "";
            String d2 = "";
            String xd1 = "";
            String xd2 = "";
            String sd1 = "";
            String sd2 = "";
            String TempBran = "";
            String TempName = "";
            String TGroup = "";
            String TGroupName = "";
            Date TempDate = null;
            double TNormal1 = 0 ;
            double TNormalDay1 = 0;
            double TPro1 = 0;
            double TPromotionDay1 = 0;
            double THod1 = 0;
            double TNormal2 = 0 ;
            double TNormalDay2 = 0;
            double TPro2 = 0;
            double TPromotionDay2 = 0;
            double THod2 = 0;
            double TSumPinto =0;
            double TSumTot = 0;
            double TSumNet =0;
            double TSumCust =0;
            double TSumDay = 0;
            Integer TotRec = 0;
            Integer CurRec = 0;
            double TAvg1 = 0;
            double TAvg2 = 0;
            double TBud = 0;
            String TempStr = "";
            Integer RecCnt = 0;
            String TempField = "";
            double XTest1 = 0;
            double XTest2 = 0;
            double XTest3 = 0;
            double XTest4 = 0;
            Integer DayCnt = 0;
            Integer DayCnt2 = 0;
            String BSumDate1="",BSumDate2 ="";
            Date TSumDate1,TSumDate2 ;
            double TBSumNet=0;
            
            
           
            Date chkDate = null;
            deletetemp(comname);
            if(!date1.equals(""))
            {
                tdate1 = Format.dateFmtShow.parse(date1);
                d1= Format.dateFmtSql.format(tdate1);
            }
            
            if(!date2.equals(""))
            {
            tdate2 = Format.dateFmtShow.parse(date2);
            d2= Format.dateFmtSql.format(tdate2);
            }
            
            if(!date3.equals(""))
            {
                txdate1 = Format.dateFmtShow.parse(date3);
                xd1= Format.dateFmtSql.format(txdate1);
            }
            
            if(!date4.equals(""))
            {
                txdate2 = Format.dateFmtShow.parse(date4);
                xd2 = Format.dateFmtSql.format(txdate2);
            }
            
            if(!date5.equals(""))
            {
                tsdate1 = Format.dateFmtShow.parse(date5);
                sd1 = Format.dateFmtSql.format(tsdate1);
            }
            
            if(!date6.equals(""))
            {
                tsdate2 = Format.dateFmtShow.parse(date6);
                sd2 = Format.dateFmtSql.format(tsdate2);
            }
            
            
            
            comname = new GetComputerName().getComputerName();
            
            String sql="";
            if(!dbutility.dbUtility.Char_Set.equalsIgnoreCase("utf-8"))
            {
                sql = "SELECT b.*"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + " "
                        + "FROM branfile b "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +"b.code >= '"+branch1+"' and b.code <= '"+branch2+"' "
                        +"and b.btype >= '"+btype1+"' and b.btype <= '"+btype2+"' "
                        +"and b.barea >= '"+barea1+"' and b.barea <= '"+barea2+"' "
                        +"and b.bsize >= '"+bsize1+"' and b.bsize <= '"+bsize2+"' "
                        +"and b.bplane >= '"+bplan1+"' and b.bplane <= '"+bplan2+"' "
                        +"and b.bstore >= '"+bstore1+"' and b.bstore <= '"+bstore2+"' "
                        +"and b.companycode >= '"+company1+"' and b.companycode <= '"+company2+"' "
                        +"and b.brandcode >= '"+brand1+"' and b.brandcode <= '"+brand2+"' "
                        +"and b.buscode >= '"+bustype1+"' and b.buscode <= '"+bustype2+"' ";
                        int rowcount = getBranchcount(sql);
                        jProgressBar1.setMaximum(rowcount);
                        jProgressBar1.setMinimum(0);
                        jProgressBar1.setValue(0);
                        per = 0;
            ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
                while(rs.next())
                {
                    TempBran = rs.getString("b.code");
                    TempName = rs.getString("b.name");
                    if(!this.code.equals("All"))
                    {
                    if(rs.getString(this.code)!=null)
                    {
                        TGroup = rs.getString(this.code);
                    }
                    else
                    {
                        TGroup = "";
                    }
                    
                    if(rs.getString(this.name)!=null)
                    {
                        TGroupName = rs.getString(this.name);
                    }
                    else
                    {
                        TGroupName = "";
                    }
                    }
                    else
                    {
                        TGroup = "";
                        TGroupName = "";
                    }
                    //set Data set 1
                    TNormal1 = 0;
                    TNormalDay1 = 0;
                    TPro1 = 0;
                    TPromotionDay1= 0;
                    THod1 = 0;
                    
                    String sqlter = "Select S_Bran,Sum(DeptSum),Sum(DSales),Sum(Delivery)"
                            + ",Sum(Pinto),Sum(DeptSum+Service-DSales),drjfile.Total  "
                            + "From dterminal left join drjfile On (S_Bran=BrCode) "
                            + "and (TDate=T_Date) and (RJNO='53') "
                            + "Where (T_Date>='"+d1+"') and (T_Date<='"+d2+"')  "
                            + "and (S_Bran='"+TempBran+"') and (Locate(Dayofweek(T_Date) , '"+strday+"') = 0) "
                            + "Group By S_Bran,T_Date";
                    ResultSet rster1 = null;
                    Statement stmt2 = (Statement) dbUtility.con.createStatement();
                    rster1 = stmt2.executeQuery(sqlter);
                    while(rster1.next())
                    {
                        DayCnt += 1;
                        TNormal1 += (rster1.getDouble("Sum(Dsales)")
                                    -rster1.getDouble("Sum(Pinto)")
                                    -rster1.getDouble("Sum(Delivery)"))
                                    -rster1.getDouble("Total");
                        
                    }
                    rster1.close();
                    if(DayCnt>0)
                    {
                        TNormal1= TNormal1/DayCnt;
                    }
                    
                    String sqlterpro1 = "Select S_Bran,Sum(DeptSum),Sum(DSales),Sum(Delivery),Sum(Pinto),Sum(DeptSum+Service-DSales),drjfile.Total  "
                            + "From dterminal left join drjfile On (S_Bran=BrCode) and (TDate=T_Date) and (RJNO='53') "
                            + "Where (T_Date>='"+d1+"') and (T_Date<='"+d2+"')  "
                            + "and (S_Bran='"+TempBran+"') and (Locate(Dayofweek(T_Date) , '"+strday+"') = 0) "
                            + "Group By S_Bran,T_Date";
                    ResultSet rsterpro1 = null;
                    Statement stmt3 = (Statement) dbUtility.con.createStatement();
                    rsterpro1 = stmt3.executeQuery(sqlterpro1);
                    DayCnt = 0;
                    while(rsterpro1.next())
                    {
                        DayCnt += 1;
                        TPro1 += rsterpro1.getDouble("Sum(Dsales)")
                                    -rsterpro1.getDouble("Sum(Pinto)")
                                    -rsterpro1.getDouble("Sum(Delivery)")
                                    -rsterpro1.getDouble("Total");
                        
                    }
                    rsterpro1.close();
                    if(DayCnt>0)
                    {
                        TPro1= TPro1/DayCnt;
                    }
                    //end Of Data Set 1
                    
                    
                    //set Data set 2
                    TNormal2 = 0;
                    TNormalDay2 = 0;
                    TPro2 = 0;
                    TPromotionDay2= 0;
                    THod2 = 0;
                    
                    String sqlter2 = "Select S_Bran,Sum(DeptSum),Sum(DSales),Sum(Delivery)"
                            + ",Sum(Pinto),Sum(DeptSum+Service-DSales),drjfile.Total  "
                            + "From dterminal left join drjfile On (S_Bran=BrCode) "
                            + "and (TDate=T_Date) and (RJNO='53') "
                            + "Where (T_Date>='"+xd1+"') and (T_Date<='"+xd2+"')  "
                            + "and (S_Bran='"+TempBran+"') and (Locate(Dayofweek(T_Date) , '"+strday+"') = 0) "
                            + "Group By S_Bran,T_Date";
                    ResultSet rster2 = null;
                    Statement stmt4 = (Statement) dbUtility.con.createStatement();
                    rster2 = stmt4.executeQuery(sqlter2);
                    DayCnt = 0;
                    while(rster2.next())
                    {
                        DayCnt += 1;
                        TNormal2 += (rster2.getDouble("Sum(Dsales)")
                                    -rster2.getDouble("Sum(Pinto)")
                                    -rster2.getDouble("Sum(Delivery)"))
                                    -rster2.getDouble("Total");
                        
                    }
                    rster2.close();
                    if(DayCnt>0)
                    {
                        TNormal2= TNormal2/DayCnt;
                    }
                    
                    String sqlterpro2 = "Select S_Bran,Sum(DeptSum),Sum(DSales),Sum(Delivery),Sum(Pinto),Sum(DeptSum+Service-DSales),drjfile.Total  "
                            + "From dterminal left join drjfile On (S_Bran=BrCode) and (TDate=T_Date) and (RJNO='53') "
                            + "Where (T_Date>='"+xd1+"') and (T_Date<='"+xd2+"')  "
                            + "and (S_Bran='"+TempBran+"') and (Locate(Dayofweek(T_Date) , '"+strday+"') = 0) "
                            + "Group By S_Bran,T_Date";
                    ResultSet rsterpro2 = null;
                    Statement stmt5 = (Statement) dbUtility.con.createStatement();
                    rsterpro2 = stmt5.executeQuery(sqlterpro2);
                    DayCnt = 0;
                    while(rsterpro2.next())
                    {
                        DayCnt += 1;
                        TPro2 += rsterpro2.getDouble("Sum(Dsales)")
                                    -rsterpro2.getDouble("Sum(Pinto)")
                                    -rsterpro2.getDouble("Sum(Delivery)")
                                    -rsterpro2.getDouble("Total");
                        
                    }
                    rsterpro2.close();
                    if(DayCnt>0)
                    {
                        TPro2= TPro2/DayCnt;
                    }
                    //end Of Data Set 2
                    
                    // set Data Set 3
                    TAvg1 = 0;
                    TAvg2 = 0;
                    THod1 = 0;
                    THod2 = 0;
                    
                    String sqlAvgter = "Select S_Bran,T_Date,Sum(DeptSum),Sum(DSales)"
                            + ",Sum(Delivery),Sum(Pinto),Sum(DeptSum+Service-DSales)"
                            + ",drjfile.Total From dterminal "
                            + "left join drjfile On (S_Bran=BrCode) and (T_Date=TDate) and (RjNo='53') "
                            + "Where (T_Date>='"+d1+"') and (T_Date <='"+d2+"') and (S_Bran='"+TempBran+"') Group By S_Bran,T_Date";
                    ResultSet rsAvgter1 = null;
                    Statement stmt6 = (Statement) dbUtility.con.createStatement();
                    rsAvgter1 = stmt6.executeQuery(sqlAvgter);
                    DayCnt = 0 ;
                    DayCnt2 = 0;
                    while(rsAvgter1.next())
                    {
                        DayCnt = DayCnt+1;
                        TAvg1 = TAvg1+ rsAvgter1.getDouble("sum(DSales)")
                                -rsAvgter1.getDouble("Sum(Pinto)")
                                -rsAvgter1.getDouble("Sum(Delivery)")
                                -rsAvgter1.getDouble("Total");
                        
                        if(rsAvgter1.getDouble("Sum(Delivery)")!=0)
                        {
                            THod1 = THod1+rsAvgter1.getDouble("Sum(Delivery)");
                            DayCnt2 = DayCnt2+1;
                            
                        }
                    }
                    
                    if(DayCnt>0)
                    {
                        TAvg1 = TAvg1/DayCnt;
                    }
                    if(DayCnt2>0)
                    {
                        THod1 = THod1/DayCnt2;
                    }
                    
                    
                    String sqlAvgter2 = "Select S_Bran,T_Date,Sum(DeptSum),Sum(DSales)"
                            + ",Sum(Delivery),Sum(Pinto),Sum(DeptSum+Service-DSales)"
                            + ",drjfile.Total From dterminal "
                            + "left join drjfile On (S_Bran=BrCode) and (T_Date=TDate) and (RjNo='53') "
                            + "Where (T_Date>='"+xd1+"') and (T_Date <='"+xd2+"') and (S_Bran='"+TempBran+"') Group By S_Bran,T_Date";
                    ResultSet rsAvgter2 = null;
                    Statement stmt7 = (Statement) dbUtility.con.createStatement();
                    rsAvgter2 = stmt7.executeQuery(sqlAvgter2);
                    DayCnt = 0 ;
                    DayCnt2 = 0;
                    while(rsAvgter2.next())
                    {
                        DayCnt = DayCnt+1;
                        TAvg2 = TAvg2+ rsAvgter2.getDouble("sum(DSales)")
                                -rsAvgter2.getDouble("Sum(Pinto)")
                                -rsAvgter2.getDouble("Sum(Delivery)")
                                -rsAvgter2.getDouble("Total");
                        
                        if(rsAvgter2.getDouble("Sum(Delivery)")!=0)
                        {
                            THod2 = THod2+rsAvgter2.getDouble("Sum(Delivery)");
                            DayCnt2 = DayCnt2+1;
                            
                        }
                    }
                    rsAvgter2.close();
                    if(DayCnt>0)
                    {
                        TAvg2 = TAvg2/DayCnt;
                    }
                    if(DayCnt2>0)
                    {
                        THod2 = THod2/DayCnt2;
                    }
                    // end of data set 3
                    
                    TSumDay = 0;
                    TSumPinto = 0;
                    TSumTot = 0;
                    TSumNet = 0;
                    TSumCust = 0;
                    TBud = 0 ;
                    
                    String sqlSumter = "Select S_Bran,T_Date,Sum(DeptSum)"
                            + ",Sum(DSales),Sum(Delivery),Sum(Pinto),Sum(PCust)"
                            + ",Sum(Service) From dterminal "
                            + "Where (T_Date>='"+sd1+"') and (T_Date <='"+sd2+"') "
                            + "and (S_Bran='"+TempBran+"') Group By S_Bran,T_MacNo";
                    ResultSet rsSumter = null;
                    Statement stmt8 = (Statement) dbUtility.con.createStatement();
                    rsSumter = stmt8.executeQuery(sqlSumter);
                    while(rsSumter.next())
                    {
                        TSumTot = TSumTot + rsSumter.getDouble("sum(DeptSum)")+rsSumter.getDouble("Sum(Service)");
                        TSumNet = TSumNet + rsSumter.getDouble("Sum(DSales)");
                        TSumCust = TSumCust + rsSumter.getDouble("Sum(PCust)");
                        TSumPinto = TSumPinto + rsSumter.getDouble("Sum(Pinto)");
                    }
                    rsSumter.close();
                    String sqlSumRj = "Select BrCode,TDate,RjNo,Sum(Total) From drjfile "
                            + "Where (TDate>='"+sd1+"') and (TDate <='"+sd2+"') and (BrCode='"+TempBran+"') "
                            + "Group By BrCode,RjNo";
                    ResultSet rsSumRj = null;
                    Statement stmt9 = (Statement) dbUtility.con.createStatement();
                    rsSumRj = stmt9.executeQuery(sqlSumRj);
                    while(rsSumRj.next())
                    {
                        if(rsSumRj.getString("rjno").equals("53"))
                        {
                        TSumTot = TSumTot - rsSumRj.getDouble("sum(Total)");
                        TSumNet = TSumNet - rsSumRj.getDouble("Sum(Total)");
                        }
                    }
                    rsSumRj.close();
                    //end of dataset 3
                    
                    int year1 = Integer.parseInt(Format.year.format(tsdate1));
                    int year2 = Integer.parseInt(Format.year.format(tsdate2));
                    
                    BSumDate1 = Format.dateFmtShow.format(tsdate1).substring(0,6)+(year1-1);
                    BSumDate2 = Format.dateFmtShow.format(tsdate2).substring(0,6)+(year2-1);
                    
                    Date s1 = Format.dateFmtShow.parse(BSumDate1);
                    Date s2 = Format.dateFmtShow.parse(BSumDate2);
                    
                    BSumDate1 = Format.dateFmtSql.format(s1);
                    BSumDate2 = Format.dateFmtSql.format(s2);
                    TBSumNet = 0;
                    
                    String sqlSumTer = "Select S_Bran,T_Date,Sum(DeptSum),Sum(DSales)"
                            + ",Sum(Delivery),Sum(Pinto),Sum(PCust),Sum(Service) "
                            + "From dterminal "
                            + "Where (T_Date>='"+BSumDate1+"') and (T_Date <='"+BSumDate2+"') "
                            + "and (S_Bran='"+TempBran+"') "
                            + "Group By S_Bran,T_MacNo";
                    ResultSet rsSumTer = null;
                    Statement stmt10 = (Statement) dbUtility.con.createStatement();
                    rsSumTer = stmt10.executeQuery(sqlSumTer);
                    while(rsSumTer.next())
                    {
                        
                        TBSumNet = TBSumNet+rsSumTer.getDouble("Sum(DSales)");
                        
                    }
                    
                    String sqlSumRj2 = "Select BrCode,TDate,RjNo,Sum(Total) From drjfile "
                            + "Where (TDate>='"+BSumDate1+"') and (TDate <='"+BSumDate2+"') and (BrCode='"+TempBran+"') "
                            + "Group By BrCode,RjNo";
                    ResultSet rsSumRj2 = null;
                    Statement stmt11 = (Statement) dbUtility.con.createStatement();
                    rsSumRj2 = stmt11.executeQuery(sqlSumRj2);
                    while(rsSumRj2.next())
                    {
                        if(rsSumRj2.getString("rjno").equals("53"))
                        {
                            TBSumNet = TBSumNet - rsSumRj2.getDouble("Sum(Total)");
                        }
                    }
                    rsSumRj2.close();
                    
                    String yearbud = Format.year.format(tsdate1);
                    TempField = "MON"+Format.mount.format(tsdate1);
                    String sqlSelectBud = "Select * From budrjfile Where (TYear='"+yearbud+"') and (BrCode='"+TempBran+"')";
                    ResultSet rsSelectBud = null;
                    Statement stmt12 = (Statement) dbUtility.con.createStatement();
                    rsSelectBud = stmt12.executeQuery(sqlSelectBud);
                    while(rsSelectBud.next())
                    {
                        if(rsSelectBud.getString("rjno").equals("50"))
                        {
                            TBud = TBud + rsSelectBud.getDouble(TempField);
                        }
                        else if(rsSelectBud.getString("rjno").equals("53"))
                        {
                            TBud = TBud - rsSelectBud.getDouble(TempField);
                        }
                    }
                    rsSelectBud.close();
                    
                    //save data to temp file
                    if(!TempBran.equals(""))
                    {
                        RecCnt = RecCnt+1;
                        
                        //insert
                        String sqltemp = "Insert Into tempweekly (TNo,TGroup,TGroupName,TBCode"
                                + ",TBName,TNormal1,TNormal2,TNormalDifBath,TNormalDifP"
                                + ",TPro1,TPro2,TProDifBath,TProDifP,THod1,THod2"
                                + ",THodDifBath,THodDifP,TSumPinto,TAvg1,TAvg2"
                                + ",TAvgDifBath,TAvgDifP,TSumGross,TSumNet,TBud"
                                + ",TPerBud,TAvgChk,TNPerP,TBSumNet,TBDifP,comname)"
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setInt(1, RecCnt);
                        prm.setString(2, TGroup);
                        prm.setString(3, TGroupName);
                        prm.setString(4, TempBran);
                        prm.setString(5, TempName);
                        prm.setDouble(6, TNormal1);
                        prm.setDouble(7, TNormal2);
                        prm.setDouble(8, TNormal2-TNormal1);
                        if(TNormal1>0)
                        {
                            prm.setDouble(9, ((TNormal2-TNormal1)/TNormal1)*100);
                        }
                        else
                        {
                            prm.setDouble(9, 0);
                        }
                        prm.setDouble(10, TPro1);
                        prm.setDouble(11, TPro2);
                        prm.setDouble(12, TPro2-TPro1);
                        if(TPro1>0)
                        {
                             prm.setDouble(13,((TPro2-TPro1)/TPro1)*100);
                        }
                        else
                        {
                            prm.setDouble(13,0);
                        }
                        prm.setDouble(14, THod1);
                        prm.setDouble(15, THod2);
                        prm.setDouble(16, THod2-THod1);
                        if(THod1>0)
                        {
                            prm.setDouble(17, ((THod2-THod1)/THod1)*100);
                        }
                        else
                        {
                            prm.setDouble(17, 0);
                        }
                        prm.setDouble(18, TSumPinto);
                        prm.setDouble(19, TAvg1);
                        prm.setDouble(20, TAvg2);
                        prm.setDouble(21, TAvg2-TAvg1);
                        if(TAvg1>0)
                        {
                            prm.setDouble(22, ((TAvg2-TAvg1)/TAvg1)*100);
                        }
                        else
                        {
                            prm.setDouble(22, 0);
                        }
                        prm.setDouble(23, TSumTot);
                        prm.setDouble(24, TSumNet);
                        prm.setDouble(25, TBud);
                        if(TBud>0)
                        {
                            prm.setDouble(26, TSumNet/TBud*100);
                        }
                        else
                        {
                            prm.setDouble(26, 0);
                        }
                        if(TSumCust>0)
                        {
                            prm.setDouble(27, TSumNet/TSumCust);
                        }
                        else
                        {
                            prm.setDouble(27, 0);
                        }
                        if(TNormal2>0)
                        {
                            prm.setDouble(28, TPro2/TNormal2);
                        }
                        else
                        {
                            prm.setDouble(28, 0);
                        }
                        prm.setDouble(29, TBSumNet);
                        if(TSumNet>0)
                        {
                            prm.setDouble(30,((TSumNet-TBSumNet)/TSumNet)*100);
                        }
                        else
                        {
                            prm.setDouble(30,0);
                        }
                        prm.setString(31, comname);
                        prm.executeUpdate();
                    }
                    
                       jProgressBar1.setValue(per += 1);
                       jProgressBar1.update(jProgressBar1.getGraphics());
                }
                
            }
            else
            {
                sql = "SELECT b.*"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + " "
                        + "FROM branfile b "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +"b.code >= '"+branch1+"' and b.code <= '"+branch2+"' "
                        +"and b.btype >= '"+btype1+"' and b.btype <= '"+btype2+"' "
                        +"and b.barea >= '"+barea1+"' and b.barea <= '"+barea2+"' "
                        +"and b.bsize >= '"+bsize1+"' and b.bsize <= '"+bsize2+"' "
                        +"and b.bplane >= '"+bplan1+"' and b.bplane <= '"+bplan2+"' "
                        +"and b.bstore >= '"+bstore1+"' and b.bstore <= '"+bstore2+"' "
                        +"and b.companycode >= '"+company1+"' and b.companycode <= '"+company2+"' "
                        +"and b.brandcode >= '"+brand1+"' and b.brandcode <= '"+brand2+"' "
                        +"and b.buscode >= '"+bustype1+"' and b.buscode <= '"+bustype2+"' ";
                        int rowcount = getBranchcount(sql);
                        jProgressBar1.setMaximum(rowcount);
                        jProgressBar1.setMinimum(0);
                        jProgressBar1.setValue(0);
                        per = 0;
            ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
                while(rs.next())
                {
                    TempBran = rs.getString("b.code");
                    TempName = rs.getString("b.name");
                    if(!this.code.equals("All"))
                    {
                    if(rs.getString(this.code)!=null)
                    {
                        TGroup = rs.getString(this.code);
                    }
                    else
                    {
                        TGroup = "";
                    }
                    
                    if(rs.getString(this.name)!=null)
                    {
                        TGroupName = rs.getString(this.name);
                    }
                    else
                    {
                        TGroupName = "";
                    }
                    }
                    else
                    {
                        TGroup = "";
                        TGroupName = "";
                    }
                    //set Data set 1
                    TNormal1 = 0;
                    TNormalDay1 = 0;
                    TPro1 = 0;
                    TPromotionDay1= 0;
                    THod1 = 0;
                    
                    String sqlter = "Select S_Bran,Sum(DeptSum),Sum(DSales),Sum(Delivery)"
                            + ",Sum(Pinto),Sum(DeptSum+Service-DSales),drjfile.Total  "
                            + "From dterminal left join drjfile On (S_Bran=BrCode) "
                            + "and (TDate=T_Date) and (RJNO='53') "
                            + "Where (T_Date>='"+d1+"') and (T_Date<='"+d2+"')  "
                            + "and (S_Bran='"+TempBran+"') and (Locate(Dayofweek(T_Date) , '"+strday+"') = 0) "
                            + "Group By S_Bran,T_Date";
                    ResultSet rster1 = null;
                    Statement stmt2 = (Statement) dbUtility.con.createStatement();
                    rster1 = stmt2.executeQuery(sqlter);
                    while(rster1.next())
                    {
                        DayCnt += 1;
                        TNormal1 += (rster1.getDouble("Sum(Dsales)")
                                    -rster1.getDouble("Sum(Pinto)")
                                    -rster1.getDouble("Sum(Delivery)"))
                                    -rster1.getDouble("Total");
                        
                    }
                    rster1.close();
                    if(DayCnt>0)
                    {
                        TNormal1= TNormal1/DayCnt;
                    }
                    
                    String sqlterpro1 = "Select S_Bran,Sum(DeptSum),Sum(DSales),Sum(Delivery),Sum(Pinto),Sum(DeptSum+Service-DSales),drjfile.Total  "
                            + "From dterminal left join drjfile On (S_Bran=BrCode) and (TDate=T_Date) and (RJNO='53') "
                            + "Where (T_Date>='"+d1+"') and (T_Date<='"+d2+"')  "
                            + "and (S_Bran='"+TempBran+"') and (Locate(Dayofweek(T_Date) , '"+strday+"') = 0) "
                            + "Group By S_Bran,T_Date";
                    ResultSet rsterpro1 = null;
                    Statement stmt3 = (Statement) dbUtility.con.createStatement();
                    rsterpro1 = stmt3.executeQuery(sqlterpro1);
                    DayCnt = 0;
                    while(rsterpro1.next())
                    {
                        DayCnt += 1;
                        TPro1 += rsterpro1.getDouble("Sum(Dsales)")
                                    -rsterpro1.getDouble("Sum(Pinto)")
                                    -rsterpro1.getDouble("Sum(Delivery)")
                                    -rsterpro1.getDouble("Total");
                        
                    }
                    rsterpro1.close();
                    if(DayCnt>0)
                    {
                        TPro1= TPro1/DayCnt;
                    }
                    //end Of Data Set 1
                    
                    
                    //set Data set 2
                    TNormal2 = 0;
                    TNormalDay2 = 0;
                    TPro2 = 0;
                    TPromotionDay2= 0;
                    THod2 = 0;
                    
                    String sqlter2 = "Select S_Bran,Sum(DeptSum),Sum(DSales),Sum(Delivery)"
                            + ",Sum(Pinto),Sum(DeptSum+Service-DSales),drjfile.Total  "
                            + "From dterminal left join drjfile On (S_Bran=BrCode) "
                            + "and (TDate=T_Date) and (RJNO='53') "
                            + "Where (T_Date>='"+xd1+"') and (T_Date<='"+xd2+"')  "
                            + "and (S_Bran='"+TempBran+"') and (Locate(Dayofweek(T_Date) , '"+strday+"') = 0) "
                            + "Group By S_Bran,T_Date";
                    ResultSet rster2 = null;
                    Statement stmt4 = (Statement) dbUtility.con.createStatement();
                    rster2 = stmt4.executeQuery(sqlter2);
                    DayCnt = 0;
                    while(rster2.next())
                    {
                        DayCnt += 1;
                        TNormal2 += (rster2.getDouble("Sum(Dsales)")
                                    -rster2.getDouble("Sum(Pinto)")
                                    -rster2.getDouble("Sum(Delivery)"))
                                    -rster2.getDouble("Total");
                        
                    }
                    rster2.close();
                    if(DayCnt>0)
                    {
                        TNormal2= TNormal2/DayCnt;
                    }
                    
                    String sqlterpro2 = "Select S_Bran,Sum(DeptSum),Sum(DSales),Sum(Delivery),Sum(Pinto),Sum(DeptSum+Service-DSales),drjfile.Total  "
                            + "From dterminal left join drjfile On (S_Bran=BrCode) and (TDate=T_Date) and (RJNO='53') "
                            + "Where (T_Date>='"+xd1+"') and (T_Date<='"+xd2+"')  "
                            + "and (S_Bran='"+TempBran+"') and (Locate(Dayofweek(T_Date) , '"+strday+"') = 0) "
                            + "Group By S_Bran,T_Date";
                    ResultSet rsterpro2 = null;
                    Statement stmt5 = (Statement) dbUtility.con.createStatement();
                    rsterpro2 = stmt5.executeQuery(sqlterpro2);
                    DayCnt = 0;
                    while(rsterpro2.next())
                    {
                        DayCnt += 1;
                        TPro2 += rsterpro2.getDouble("Sum(Dsales)")
                                    -rsterpro2.getDouble("Sum(Pinto)")
                                    -rsterpro2.getDouble("Sum(Delivery)")
                                    -rsterpro2.getDouble("Total");
                        
                    }
                    rsterpro2.close();
                    if(DayCnt>0)
                    {
                        TPro2= TPro2/DayCnt;
                    }
                    //end Of Data Set 2
                    
                    // set Data Set 3
                    TAvg1 = 0;
                    TAvg2 = 0;
                    THod1 = 0;
                    THod2 = 0;
                    
                    String sqlAvgter = "Select S_Bran,T_Date,Sum(DeptSum),Sum(DSales)"
                            + ",Sum(Delivery),Sum(Pinto),Sum(DeptSum+Service-DSales)"
                            + ",drjfile.Total From dterminal "
                            + "left join drjfile On (S_Bran=BrCode) and (T_Date=TDate) and (RjNo='53') "
                            + "Where (T_Date>='"+d1+"') and (T_Date <='"+d2+"') and (S_Bran='"+TempBran+"') Group By S_Bran,T_Date";
                    ResultSet rsAvgter1 = null;
                    Statement stmt6 = (Statement) dbUtility.con.createStatement();
                    rsAvgter1 = stmt6.executeQuery(sqlAvgter);
                    DayCnt = 0 ;
                    DayCnt2 = 0;
                    while(rsAvgter1.next())
                    {
                        DayCnt = DayCnt+1;
                        TAvg1 = TAvg1+ rsAvgter1.getDouble("sum(DSales)")
                                -rsAvgter1.getDouble("Sum(Pinto)")
                                -rsAvgter1.getDouble("Sum(Delivery)")
                                -rsAvgter1.getDouble("Total");
                        
                        if(rsAvgter1.getDouble("Sum(Delivery)")!=0)
                        {
                            THod1 = THod1+rsAvgter1.getDouble("Sum(Delivery)");
                            DayCnt2 = DayCnt2+1;
                            
                        }
                    }
                    
                    if(DayCnt>0)
                    {
                        TAvg1 = TAvg1/DayCnt;
                    }
                    if(DayCnt2>0)
                    {
                        THod1 = THod1/DayCnt2;
                    }
                    
                    
                    String sqlAvgter2 = "Select S_Bran,T_Date,Sum(DeptSum),Sum(DSales)"
                            + ",Sum(Delivery),Sum(Pinto),Sum(DeptSum+Service-DSales)"
                            + ",drjfile.Total From dterminal "
                            + "left join drjfile On (S_Bran=BrCode) and (T_Date=TDate) and (RjNo='53') "
                            + "Where (T_Date>='"+xd1+"') and (T_Date <='"+xd2+"') and (S_Bran='"+TempBran+"') Group By S_Bran,T_Date";
                    ResultSet rsAvgter2 = null;
                    Statement stmt7 = (Statement) dbUtility.con.createStatement();
                    rsAvgter2 = stmt7.executeQuery(sqlAvgter2);
                    DayCnt = 0 ;
                    DayCnt2 = 0;
                    while(rsAvgter2.next())
                    {
                        DayCnt = DayCnt+1;
                        TAvg2 = TAvg2+ rsAvgter2.getDouble("sum(DSales)")
                                -rsAvgter2.getDouble("Sum(Pinto)")
                                -rsAvgter2.getDouble("Sum(Delivery)")
                                -rsAvgter2.getDouble("Total");
                        
                        if(rsAvgter2.getDouble("Sum(Delivery)")!=0)
                        {
                            THod2 = THod2+rsAvgter2.getDouble("Sum(Delivery)");
                            DayCnt2 = DayCnt2+1;
                            
                        }
                    }
                    rsAvgter2.close();
                    if(DayCnt>0)
                    {
                        TAvg2 = TAvg2/DayCnt;
                    }
                    if(DayCnt2>0)
                    {
                        THod2 = THod2/DayCnt2;
                    }
                    // end of data set 3
                    
                    TSumDay = 0;
                    TSumPinto = 0;
                    TSumTot = 0;
                    TSumNet = 0;
                    TSumCust = 0;
                    TBud = 0 ;
                    
                    String sqlSumter = "Select S_Bran,T_Date,Sum(DeptSum)"
                            + ",Sum(DSales),Sum(Delivery),Sum(Pinto),Sum(PCust)"
                            + ",Sum(Service) From dterminal "
                            + "Where (T_Date>='"+sd1+"') and (T_Date <='"+sd2+"') "
                            + "and (S_Bran='"+TempBran+"') Group By S_Bran,T_MacNo";
                    ResultSet rsSumter = null;
                    Statement stmt8 = (Statement) dbUtility.con.createStatement();
                    rsSumter = stmt8.executeQuery(sqlSumter);
                    while(rsSumter.next())
                    {
                        TSumTot = TSumTot + rsSumter.getDouble("sum(DeptSum)")+rsSumter.getDouble("Sum(Service)");
                        TSumNet = TSumNet + rsSumter.getDouble("Sum(DSales)");
                        TSumCust = TSumCust + rsSumter.getDouble("Sum(PCust)");
                        TSumPinto = TSumPinto + rsSumter.getDouble("Sum(Pinto)");
                    }
                    rsSumter.close();
                    String sqlSumRj = "Select BrCode,TDate,RjNo,Sum(Total) From drjfile "
                            + "Where (TDate>='"+sd1+"') and (TDate <='"+sd2+"') and (BrCode='"+TempBran+"') "
                            + "Group By BrCode,RjNo";
                    ResultSet rsSumRj = null;
                    Statement stmt9 = (Statement) dbUtility.con.createStatement();
                    rsSumRj = stmt9.executeQuery(sqlSumRj);
                    while(rsSumRj.next())
                    {
                        if(rsSumRj.getString("rjno").equals("53"))
                        {
                        TSumTot = TSumTot - rsSumRj.getDouble("sum(Total)");
                        TSumNet = TSumNet - rsSumRj.getDouble("Sum(Total)");
                        }
                    }
                    rsSumRj.close();
                    //end of dataset 3
                    
                    int year1 = Integer.parseInt(Format.year.format(tsdate1));
                    int year2 = Integer.parseInt(Format.year.format(tsdate2));
                    
                    BSumDate1 = Format.dateFmtShow.format(tsdate1).substring(0,6)+(year1-1);
                    BSumDate2 = Format.dateFmtShow.format(tsdate2).substring(0,6)+(year2-1);
                    
                    Date s1 = Format.dateFmtShow.parse(BSumDate1);
                    Date s2 = Format.dateFmtShow.parse(BSumDate2);
                    
                    BSumDate1 = Format.dateFmtSql.format(s1);
                    BSumDate2 = Format.dateFmtSql.format(s2);
                    TBSumNet = 0;
                    
                    String sqlSumTer = "Select S_Bran,T_Date,Sum(DeptSum),Sum(DSales)"
                            + ",Sum(Delivery),Sum(Pinto),Sum(PCust),Sum(Service) "
                            + "From dterminal "
                            + "Where (T_Date>='"+BSumDate1+"') and (T_Date <='"+BSumDate2+"') "
                            + "and (S_Bran='"+TempBran+"') "
                            + "Group By S_Bran,T_MacNo";
                    ResultSet rsSumTer = null;
                    Statement stmt10 = (Statement) dbUtility.con.createStatement();
                    rsSumTer = stmt10.executeQuery(sqlSumTer);
                    while(rsSumTer.next())
                    {
                        
                        TBSumNet = TBSumNet+rsSumTer.getDouble("Sum(DSales)");
                        
                    }
                    
                    String sqlSumRj2 = "Select BrCode,TDate,RjNo,Sum(Total) From drjfile "
                            + "Where (TDate>='"+BSumDate1+"') and (TDate <='"+BSumDate2+"') and (BrCode='"+TempBran+"') "
                            + "Group By BrCode,RjNo";
                    ResultSet rsSumRj2 = null;
                    Statement stmt11 = (Statement) dbUtility.con.createStatement();
                    rsSumRj2 = stmt11.executeQuery(sqlSumRj2);
                    while(rsSumRj2.next())
                    {
                        if(rsSumRj2.getString("rjno").equals("53"))
                        {
                            TBSumNet = TBSumNet - rsSumRj2.getDouble("Sum(Total)");
                        }
                    }
                    rsSumRj2.close();
                    
                    String yearbud = Format.year.format(tsdate1);
                    TempField = "MON"+Format.mount.format(tsdate1);
                    String sqlSelectBud = "Select * From budrjfile Where (TYear='"+yearbud+"') and (BrCode='"+TempBran+"')";
                    ResultSet rsSelectBud = null;
                    Statement stmt12 = (Statement) dbUtility.con.createStatement();
                    rsSelectBud = stmt12.executeQuery(sqlSelectBud);
                    while(rsSelectBud.next())
                    {
                        if(rsSelectBud.getString("rjno").equals("50"))
                        {
                            TBud = TBud + rsSelectBud.getDouble(TempField);
                        }
                        else if(rsSelectBud.getString("rjno").equals("53"))
                        {
                            TBud = TBud - rsSelectBud.getDouble(TempField);
                        }
                    }
                    rsSelectBud.close();
                    
                    //save data to temp file
                    if(!TempBran.equals(""))
                    {
                        RecCnt = RecCnt+1;
                        
                        //insert
                        String sqltemp = "Insert Into tempweekly (TNo,TGroup,TGroupName,TBCode"
                                + ",TBName,TNormal1,TNormal2,TNormalDifBath,TNormalDifP"
                                + ",TPro1,TPro2,TProDifBath,TProDifP,THod1,THod2"
                                + ",THodDifBath,THodDifP,TSumPinto,TAvg1,TAvg2"
                                + ",TAvgDifBath,TAvgDifP,TSumGross,TSumNet,TBud"
                                + ",TPerBud,TAvgChk,TNPerP,TBSumNet,TBDifP,comname)"
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setInt(1, RecCnt);
                        prm.setString(2, TGroup);
                        prm.setString(3, TGroupName);
                        prm.setString(4, TempBran);
                        prm.setString(5, TempName);
                        prm.setDouble(6, TNormal1);
                        prm.setDouble(7, TNormal2);
                        prm.setDouble(8, TNormal2-TNormal1);
                        if(TNormal1>0)
                        {
                            prm.setDouble(9, ((TNormal2-TNormal1)/TNormal1)*100);
                        }
                        else
                        {
                            prm.setDouble(9, 0);
                        }
                        prm.setDouble(10, TPro1);
                        prm.setDouble(11, TPro2);
                        prm.setDouble(12, TPro2-TPro1);
                        if(TPro1>0)
                        {
                             prm.setDouble(13,((TPro2-TPro1)/TPro1)*100);
                        }
                        else
                        {
                            prm.setDouble(13,0);
                        }
                        prm.setDouble(14, THod1);
                        prm.setDouble(15, THod2);
                        prm.setDouble(16, THod2-THod1);
                        if(THod1>0)
                        {
                            prm.setDouble(17, ((THod2-THod1)/THod1)*100);
                        }
                        else
                        {
                            prm.setDouble(17, 0);
                        }
                        prm.setDouble(18, TSumPinto);
                        prm.setDouble(19, TAvg1);
                        prm.setDouble(20, TAvg2);
                        prm.setDouble(21, TAvg2-TAvg1);
                        if(TAvg1>0)
                        {
                            prm.setDouble(22, ((TAvg2-TAvg1)/TAvg1)*100);
                        }
                        else
                        {
                            prm.setDouble(22, 0);
                        }
                        prm.setDouble(23, TSumTot);
                        prm.setDouble(24, TSumNet);
                        prm.setDouble(25, TBud);
                        if(TBud>0)
                        {
                            prm.setDouble(26, TSumNet/TBud*100);
                        }
                        else
                        {
                            prm.setDouble(26, 0);
                        }
                        if(TSumCust>0)
                        {
                            prm.setDouble(27, TSumNet/TSumCust);
                        }
                        else
                        {
                            prm.setDouble(27, 0);
                        }
                        if(TNormal2>0)
                        {
                            prm.setDouble(28, TPro2/TNormal2);
                        }
                        else
                        {
                            prm.setDouble(28, 0);
                        }
                        prm.setDouble(29, TBSumNet);
                        if(TSumNet>0)
                        {
                            prm.setDouble(30,((TSumNet-TBSumNet)/TSumNet)*100);
                        }
                        else
                        {
                            prm.setDouble(30,0);
                        }
                        prm.setString(31, comname);
                        prm.executeUpdate();
                    }
                    
                       jProgressBar1.setValue(per += 1);
                       jProgressBar1.update(jProgressBar1.getGraphics());
                }
                

                
            }
    }catch (Exception ex) {
                Logger.getLogger(rptWeeklyAvg.class.getName()).log(Level.SEVERE, null, ex);
            }
            
}
private void setTxt()
{
    String date = "";
    String date2 = "";
    String date3 = "";
    String branch = "";
    String dept = "";
    String plu = "";
    if(!date1.equals(""))
    {
    date = date1+" - ";
    }
    else
    {
    date = " - ";
    }
    
    if(!this.date2.equals("31/12/9999"))
    {
        date += this.date2;
    }
    
    if(!this.date3.equals(""))
    {
    date2 = this.date3+" - ";
    }
    else
    {
    date2 = " - ";
    }
    
    if(!this.date4.equals("31/12/9999"))
    {
        date2 += date4;
    }
    
    if(!this.date5.equals(""))
    {
    date3 = this.date5+" - ";
    }
    else
    {
    date3 = " - ";
    }
    
    if(!this.date6.equals("31/12/9999"))
    {
        date3 += date6;
    }
    
    if(!branch1.equals(""))
    {
        branch = branch1+" - ";
    }
    else
    {
        branch = " - ";
    }
    
    if(!branch2.equals("ZZZ"))
    {
        branch += branch2;
    }
    
    if(!dept1.equals(""))
    {
        dept = dept1+" - ";
    }
    else
    {
        dept = " - ";
    }
    
    if(!dept2.equals("ZZZZ"))
    {
        dept += dept2;
    }
    
    if(!plu1.equals(""))
    {
        plu = plu1+" - ";
    }
    else
    {
        plu = " - ";
    }
    
    if(!plu2.equals("ZZZZZZZZZZZZZ"))
    {
        plu += plu2;
    }
    
    lbldate.setText(date);
    lbldate2.setText(date2);
    lbldate3.setText(date3);
    lblday.setText(day);
    
    condition = this.getTitle()+" Date (1) : "+date+" Date (2) : "+date2+" Date (Sum) : "+date3+" Promotion Day : "+day;
}

   
     private void deletetemp(String comname) {
       
            try {
                 String sqltemp = "delete from tempweekly where comname = ?";
                  PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                  prm.setString(1, comname);
                  prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            
            try {
                 String sqltemp = "delete from sumweekly where comname = ?";
                  PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                  prm.setString(1, comname);
                  prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
           
    }
     private void clearTbl()
    {
        
    DefaultTableModel tb = (DefaultTableModel) tbl.getModel();
     int cnt = tb.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                tb.removeRow(0);
            }
        }
    }
    private void showDataIntable() {
         try {
        if(!db.Char_Set.equalsIgnoreCase("utf-8"))
        { 
            DefaultTableModel dtb = (DefaultTableModel) tbl.getModel();
            clearTbl();
            if(Tchk)
            {
                 String sql = "Select *From tempweekly where comname = '"+comname+"' order by TGroup,TBCode";
                ResultSet rs = null;
                Statement stmt = (Statement) dbUtility.con.createStatement();
                rs = stmt.executeQuery(sql);
                    while(rs.next())
                    {
                       dtb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("tgroup")),
                                            cvth.ASCII2Unicode(rs.getString("TGroupname")),
                                            cvth.ASCII2Unicode(rs.getString("tbcode")),
                                            cvth.ASCII2Unicode(rs.getString("tbname")),
                                            Format.doubleFmt.format(rs.getDouble("tnormal1")),
                                            Format.doubleFmt.format(rs.getDouble("tnormal2")),
                                            Format.doubleFmt.format(rs.getDouble("tnormaldifbath")),
                                            Format.doubleFmt.format(rs.getDouble("tnormaldifp"))+"%",
                                            Format.doubleFmt.format(rs.getDouble("tpro1")),
                                            Format.doubleFmt.format(rs.getDouble("tpro2")),
                                            Format.doubleFmt.format(rs.getDouble("tprodifbath")),
                                            Format.doubleFmt.format(rs.getDouble("tprodifp"))+"%",
                                            Format.doubleFmt.format(rs.getDouble("thod1")),
                                            Format.doubleFmt.format(rs.getDouble("thod2")),
                                            Format.doubleFmt.format(rs.getDouble("thoddifbath")),
                                            Format.doubleFmt.format(rs.getDouble("thoddifp"))+"%",
                                            Format.doubleFmt.format(rs.getDouble("tavg1")),
                                            Format.doubleFmt.format(rs.getDouble("tavg2")),
                                            Format.doubleFmt.format(rs.getDouble("tavgdifbath")),
                                            Format.doubleFmt.format(rs.getDouble("tavgdifp"))+"%",
                                            Format.doubleFmt.format(rs.getDouble("tnperp")),
                                            Format.doubleFmt.format(rs.getDouble("tsumpinto")),
                                            Format.doubleFmt.format(rs.getDouble("tsumnet")),
                                            Format.doubleFmt.format(rs.getDouble("tbud")),
                                            Format.doubleFmt.format(rs.getDouble("tperbud")),
                                            Format.doubleFmt.format(rs.getDouble("tavgchk")),
                                            Format.doubleFmt.format(rs.getDouble("tbsumnet")),
                                            Format.doubleFmt.format(rs.getDouble("tbdifp"))+"%",
                                            
                                            });
                       
                    }
                    setCaptionTbl();
                    if(code.equals("BranchCode"))
                    {
                        tbl.getColumnModel().removeColumn(tbl.getColumnModel().getColumn(2));
                        tbl.getColumnModel().removeColumn(tbl.getColumnModel().getColumn(2));
                    }
            
            }
            else
            {
                String sql = "Select TGroup,TGroupName,Sum(TNormal1),Sum(TNormal2),Sum(TNormalDifBath),Sum(TPro1),Sum(TPro2),Sum(TProDifBath),Sum(THod1),Sum(THod2),Sum(THodDifBath),Sum(TAvg1),Sum(TAvg2),Sum(TAvgDifBath),Sum(TSumPinto),Sum(TSumGross),Sum(TSumNet),Sum(TBud),Sum(TBSumNet),Avg(TBDifP),Avg(TPerBud),Avg(TAvgChk)  From tempweekly Group By TGroup";
                ResultSet rs = null;
                Statement stmt = (Statement) dbUtility.con.createStatement();
                rs = stmt.executeQuery(sql);
                    while(rs.next())
                    {
                        String sqltemp = "Insert Into sumweekly (TNo,TGroup,TGroupName,TBCode"
                                + ",TBName,TNormal1,TNormal2,TNormalDifBath,TNormalDifP"
                                + ",TPro1,TPro2,TProDifBath,TProDifP,THod1,THod2"
                                + ",THodDifBath,THodDifP,TSumPinto,TAvg1,TAvg2"
                                + ",TAvgDifBath,TAvgDifP,TSumGross,TSumNet,TBud"
                                + ",TPerBud,TAvgChk,TNPerP,TBSumNet,TBDifP,comname)"
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setInt(1, 0);
                        prm.setString(2, rs.getString("tgroup"));
                        prm.setString(3, rs.getString("tgroupname"));
                        prm.setString(4, "");
                        prm.setString(5, "");
                        prm.setDouble(6, rs.getDouble("sum(tnormal1)"));
                        prm.setDouble(7, rs.getDouble("sum(tnormal2)"));
                        prm.setDouble(8, rs.getDouble("sum(tnormaldifbath)"));
                        if(rs.getDouble("sum(tnormal1)")!=0)
                        {
                            prm.setDouble(9, ((rs.getDouble("sum(tnormaldifbath)"))/rs.getDouble("sum(tnormal1)"))*100);
                        }
                        else
                        {
                            prm.setDouble(9, 0);
                        }
                        prm.setDouble(10, rs.getDouble("sum(Tpro1)"));
                        prm.setDouble(11, rs.getDouble("sum(Tpro2)"));
                        prm.setDouble(12, rs.getDouble("sum(Tprodifbath)"));
                        if(rs.getDouble("sum(Tpro1)")>0)
                        {
                             prm.setDouble(13,(( rs.getDouble("sum(Tprodifbath)"))/rs.getDouble("sum(Tpro1)"))*100);
                        }
                        else
                        {
                            prm.setDouble(13,0);
                        }
                        prm.setDouble(14, rs.getDouble("sum(THod1)"));
                        prm.setDouble(15, rs.getDouble("sum(THod2)"));
                        prm.setDouble(16, rs.getDouble("sum(THodDifBath)"));
                        if(rs.getDouble("sum(THod1)")>0)
                        {
                            prm.setDouble(17, ((rs.getDouble("sum(THodDifBath)"))/rs.getDouble("sum(THod1)"))*100);
                        }
                        else
                        {
                            prm.setDouble(17, 0);
                        }
                        prm.setDouble(18, rs.getDouble("sum(Tsumpinto)"));
                        prm.setDouble(19, rs.getDouble("sum(Tavg1)"));
                        prm.setDouble(20, rs.getDouble("sum(Tavg2)"));
                        prm.setDouble(21, rs.getDouble("sum(TavgDifBath)"));
                        if(rs.getDouble("sum(Tavg1)")>0)
                        {
                            prm.setDouble(22, ((rs.getDouble("sum(TavgDifBath)"))/rs.getDouble("sum(Tavg1)"))*100);
                        }
                        else
                        {
                            prm.setDouble(22, 0);
                        }
                        prm.setDouble(23, rs.getDouble("sum(TSumGross)"));
                        prm.setDouble(24, rs.getDouble("sum(Tsumnet)"));
                        prm.setDouble(25, rs.getDouble("sum(Tbud)"));
                        prm.setDouble(26, rs.getDouble("avg(tperbud)"));
                        prm.setDouble(27, rs.getDouble("avg(Tavgchk)"));
                        
                        if(rs.getDouble("sum(tnormal2)")>0)
                        {
                            prm.setDouble(28, rs.getDouble("sum(Tpro2)")/rs.getDouble("sum(tnormal2)"));
                        }
                        else
                        {
                            prm.setDouble(28, 0);
                        }
                        prm.setDouble(29, rs.getDouble("sum(tbsumnet)"));
                        prm.setDouble(30,rs.getDouble("avg(tbdifp)"));
                        
                        prm.setString(31, comname);
                        prm.executeUpdate();
                       
                    }
                    
                String sql2 = "Select *From sumweekly where comname = '"+comname+"' order by TGroup";
                ResultSet rs2 = null;
                Statement stmt2 = (Statement) dbUtility.con.createStatement();
                rs2 = stmt2.executeQuery(sql2);
                    while(rs2.next())
                    {
                       dtb.addRow(new Object[]{cvth.ASCII2Unicode(rs2.getString("tgroup")),
                                            cvth.ASCII2Unicode(rs2.getString("TGroupname")),
                                            cvth.ASCII2Unicode(rs2.getString("tbcode")),
                                            cvth.ASCII2Unicode(rs2.getString("tbname")),
                                            Format.doubleFmt.format(rs2.getDouble("tnormal1")),
                                            Format.doubleFmt.format(rs2.getDouble("tnormal2")),
                                            Format.doubleFmt.format(rs2.getDouble("tnormaldifbath")),
                                            Format.doubleFmt.format(rs2.getDouble("tnormaldifp"))+"%",
                                            Format.doubleFmt.format(rs2.getDouble("tpro1")),
                                            Format.doubleFmt.format(rs2.getDouble("tpro2")),
                                            Format.doubleFmt.format(rs2.getDouble("tprodifbath")),
                                            Format.doubleFmt.format(rs2.getDouble("tprodifp"))+"%",
                                            Format.doubleFmt.format(rs2.getDouble("thod1")),
                                            Format.doubleFmt.format(rs2.getDouble("thod2")),
                                            Format.doubleFmt.format(rs2.getDouble("thoddifbath")),
                                            Format.doubleFmt.format(rs2.getDouble("thoddifp"))+"%",
                                            Format.doubleFmt.format(rs2.getDouble("tavg1")),
                                            Format.doubleFmt.format(rs2.getDouble("tavg2")),
                                            Format.doubleFmt.format(rs2.getDouble("tavgdifbath")),
                                            Format.doubleFmt.format(rs2.getDouble("tavgdifp"))+"%",
                                            Format.doubleFmt.format(rs2.getDouble("tnperp")),
                                            Format.doubleFmt.format(rs2.getDouble("tsumpinto")),
                                            Format.doubleFmt.format(rs2.getDouble("tsumnet")),
                                            Format.doubleFmt.format(rs2.getDouble("tbud")),
                                            Format.doubleFmt.format(rs2.getDouble("tperbud")),
                                            Format.doubleFmt.format(rs2.getDouble("tavgchk")),
                                            Format.doubleFmt.format(rs2.getDouble("tbsumnet")),
                                            Format.doubleFmt.format(rs2.getDouble("tbdifp"))+"%",
                                            
                                            });
                       
                    }
                    setCaptionTbl();
                    tbl.getColumnModel().removeColumn(tbl.getColumnModel().getColumn(2));
                    tbl.getColumnModel().removeColumn(tbl.getColumnModel().getColumn(2));
            }
        }
        else
        {
            DefaultTableModel dtb = (DefaultTableModel) tbl.getModel();
            clearTbl();
            if(Tchk)
            {
                 String sql = "Select *From tempweekly where comname = '"+comname+"' order by TGroup,TBCode";
                ResultSet rs = null;
                Statement stmt = (Statement) dbUtility.con.createStatement();
                rs = stmt.executeQuery(sql);
                    while(rs.next())
                    {
                       dtb.addRow(new Object[]{rs.getString("tgroup"),
                                            rs.getString("TGroupname"),
                                            rs.getString("tbcode"),
                                            rs.getString("tbname"),
                                            Format.doubleFmt.format(rs.getDouble("tnormal1")),
                                            Format.doubleFmt.format(rs.getDouble("tnormal2")),
                                            Format.doubleFmt.format(rs.getDouble("tnormaldifbath")),
                                            Format.doubleFmt.format(rs.getDouble("tnormaldifp"))+"%",
                                            Format.doubleFmt.format(rs.getDouble("tpro1")),
                                            Format.doubleFmt.format(rs.getDouble("tpro2")),
                                            Format.doubleFmt.format(rs.getDouble("tprodifbath")),
                                            Format.doubleFmt.format(rs.getDouble("tprodifp"))+"%",
                                            Format.doubleFmt.format(rs.getDouble("thod1")),
                                            Format.doubleFmt.format(rs.getDouble("thod2")),
                                            Format.doubleFmt.format(rs.getDouble("thoddifbath")),
                                            Format.doubleFmt.format(rs.getDouble("thoddifp"))+"%",
                                            Format.doubleFmt.format(rs.getDouble("tavg1")),
                                            Format.doubleFmt.format(rs.getDouble("tavg2")),
                                            Format.doubleFmt.format(rs.getDouble("tavgdifbath")),
                                            Format.doubleFmt.format(rs.getDouble("tavgdifp"))+"%",
                                            Format.doubleFmt.format(rs.getDouble("tnperp")),
                                            Format.doubleFmt.format(rs.getDouble("tsumpinto")),
                                            Format.doubleFmt.format(rs.getDouble("tsumnet")),
                                            Format.doubleFmt.format(rs.getDouble("tbud")),
                                            Format.doubleFmt.format(rs.getDouble("tperbud")),
                                            Format.doubleFmt.format(rs.getDouble("tavgchk")),
                                            Format.doubleFmt.format(rs.getDouble("tbsumnet")),
                                            Format.doubleFmt.format(rs.getDouble("tbdifp"))+"%",
                                            
                                            });
                       
                    }
                    setCaptionTbl();
                    if(code.equals("BranchCode"))
                    {
                        tbl.getColumnModel().removeColumn(tbl.getColumnModel().getColumn(2));
                        tbl.getColumnModel().removeColumn(tbl.getColumnModel().getColumn(2));
                    }
            
            }
            else
            {
                String sql = "Select TGroup,TGroupName,Sum(TNormal1),Sum(TNormal2),Sum(TNormalDifBath),Sum(TPro1),Sum(TPro2),Sum(TProDifBath),Sum(THod1),Sum(THod2),Sum(THodDifBath),Sum(TAvg1),Sum(TAvg2),Sum(TAvgDifBath),Sum(TSumPinto),Sum(TSumGross),Sum(TSumNet),Sum(TBud),Sum(TBSumNet),Avg(TBDifP),Avg(TPerBud),Avg(TAvgChk)  From tempweekly Group By TGroup";
                ResultSet rs = null;
                Statement stmt = (Statement) dbUtility.con.createStatement();
                rs = stmt.executeQuery(sql);
                    while(rs.next())
                    {
                        String sqltemp = "Insert Into sumweekly (TNo,TGroup,TGroupName,TBCode"
                                + ",TBName,TNormal1,TNormal2,TNormalDifBath,TNormalDifP"
                                + ",TPro1,TPro2,TProDifBath,TProDifP,THod1,THod2"
                                + ",THodDifBath,THodDifP,TSumPinto,TAvg1,TAvg2"
                                + ",TAvgDifBath,TAvgDifP,TSumGross,TSumNet,TBud"
                                + ",TPerBud,TAvgChk,TNPerP,TBSumNet,TBDifP,comname)"
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                        prm.setInt(1, 0);
                        prm.setString(2, rs.getString("tgroup"));
                        prm.setString(3, rs.getString("tgroupname"));
                        prm.setString(4, "");
                        prm.setString(5, "");
                        prm.setDouble(6, rs.getDouble("sum(tnormal1)"));
                        prm.setDouble(7, rs.getDouble("sum(tnormal2)"));
                        prm.setDouble(8, rs.getDouble("sum(tnormaldifbath)"));
                        if(rs.getDouble("sum(tnormal1)")!=0)
                        {
                            prm.setDouble(9, ((rs.getDouble("sum(tnormaldifbath)"))/rs.getDouble("sum(tnormal1)"))*100);
                        }
                        else
                        {
                            prm.setDouble(9, 0);
                        }
                        prm.setDouble(10, rs.getDouble("sum(Tpro1)"));
                        prm.setDouble(11, rs.getDouble("sum(Tpro2)"));
                        prm.setDouble(12, rs.getDouble("sum(Tprodifbath)"));
                        if(rs.getDouble("sum(Tpro1)")>0)
                        {
                             prm.setDouble(13,(( rs.getDouble("sum(Tprodifbath)"))/rs.getDouble("sum(Tpro1)"))*100);
                        }
                        else
                        {
                            prm.setDouble(13,0);
                        }
                        prm.setDouble(14, rs.getDouble("sum(THod1)"));
                        prm.setDouble(15, rs.getDouble("sum(THod2)"));
                        prm.setDouble(16, rs.getDouble("sum(THodDifBath)"));
                        if(rs.getDouble("sum(THod1)")>0)
                        {
                            prm.setDouble(17, ((rs.getDouble("sum(THodDifBath)"))/rs.getDouble("sum(THod1)"))*100);
                        }
                        else
                        {
                            prm.setDouble(17, 0);
                        }
                        prm.setDouble(18, rs.getDouble("sum(Tsumpinto)"));
                        prm.setDouble(19, rs.getDouble("sum(Tavg1)"));
                        prm.setDouble(20, rs.getDouble("sum(Tavg2)"));
                        prm.setDouble(21, rs.getDouble("sum(TavgDifBath)"));
                        if(rs.getDouble("sum(Tavg1)")>0)
                        {
                            prm.setDouble(22, ((rs.getDouble("sum(TavgDifBath)"))/rs.getDouble("sum(Tavg1)"))*100);
                        }
                        else
                        {
                            prm.setDouble(22, 0);
                        }
                        prm.setDouble(23, rs.getDouble("sum(TSumGross)"));
                        prm.setDouble(24, rs.getDouble("sum(Tsumnet)"));
                        prm.setDouble(25, rs.getDouble("sum(Tbud)"));
                        prm.setDouble(26, rs.getDouble("avg(tperbud)"));
                        prm.setDouble(27, rs.getDouble("avg(Tavgchk)"));
                        
                        if(rs.getDouble("sum(tnormal2)")>0)
                        {
                            prm.setDouble(28, rs.getDouble("sum(Tpro2)")/rs.getDouble("sum(tnormal2)"));
                        }
                        else
                        {
                            prm.setDouble(28, 0);
                        }
                        prm.setDouble(29, rs.getDouble("sum(tbsumnet)"));
                        prm.setDouble(30,rs.getDouble("avg(tbdifp)"));
                        
                        prm.setString(31, comname);
                        prm.executeUpdate();
                       
                    }
                    
                String sql2 = "Select *From sumweekly where comname = '"+comname+"' order by TGroup";
                ResultSet rs2 = null;
                Statement stmt2 = (Statement) dbUtility.con.createStatement();
                rs2 = stmt2.executeQuery(sql2);
                    while(rs2.next())
                    {
                       dtb.addRow(new Object[]{rs2.getString("tgroup"),
                                            rs2.getString("TGroupname"),
                                            rs2.getString("tbcode"),
                                            rs2.getString("tbname"),
                                            Format.doubleFmt.format(rs2.getDouble("tnormal1")),
                                            Format.doubleFmt.format(rs2.getDouble("tnormal2")),
                                            Format.doubleFmt.format(rs2.getDouble("tnormaldifbath")),
                                            Format.doubleFmt.format(rs2.getDouble("tnormaldifp"))+"%",
                                            Format.doubleFmt.format(rs2.getDouble("tpro1")),
                                            Format.doubleFmt.format(rs2.getDouble("tpro2")),
                                            Format.doubleFmt.format(rs2.getDouble("tprodifbath")),
                                            Format.doubleFmt.format(rs2.getDouble("tprodifp"))+"%",
                                            Format.doubleFmt.format(rs2.getDouble("thod1")),
                                            Format.doubleFmt.format(rs2.getDouble("thod2")),
                                            Format.doubleFmt.format(rs2.getDouble("thoddifbath")),
                                            Format.doubleFmt.format(rs2.getDouble("thoddifp"))+"%",
                                            Format.doubleFmt.format(rs2.getDouble("tavg1")),
                                            Format.doubleFmt.format(rs2.getDouble("tavg2")),
                                            Format.doubleFmt.format(rs2.getDouble("tavgdifbath")),
                                            Format.doubleFmt.format(rs2.getDouble("tavgdifp"))+"%",
                                            Format.doubleFmt.format(rs2.getDouble("tnperp")),
                                            Format.doubleFmt.format(rs2.getDouble("tsumpinto")),
                                            Format.doubleFmt.format(rs2.getDouble("tsumnet")),
                                            Format.doubleFmt.format(rs2.getDouble("tbud")),
                                            Format.doubleFmt.format(rs2.getDouble("tperbud")),
                                            Format.doubleFmt.format(rs2.getDouble("tavgchk")),
                                            Format.doubleFmt.format(rs2.getDouble("tbsumnet")),
                                            Format.doubleFmt.format(rs2.getDouble("tbdifp"))+"%",
                                            
                                            });
                       
                    }
                    setCaptionTbl();
                    tbl.getColumnModel().removeColumn(tbl.getColumnModel().getColumn(2));
                    tbl.getColumnModel().removeColumn(tbl.getColumnModel().getColumn(2));
            }
        }
            
        } catch (Exception ex) {
            Logger.getLogger(rptWeeklyAvg.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private int getBranchcount(String sql) {
        int row = 0; 
        try {
            
            
            
                ResultSet rs = null;
                Statement stmt = (Statement) dbUtility.con.createStatement();
                rs = stmt.executeQuery(sql);
                    while(rs.next())
                    {
                        row++;
                    }
            
        } catch (Exception ex) {
            Logger.getLogger(rptVat.class.getName()).log(Level.SEVERE, null, ex);
        }
        return row;
    }

}
