/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportfile;

import borfunction.GetComputerName;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import dbutility.dbUtility;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import reportModel.reportMonthModel;
import reportModel.reportRangDateModel;
import utilititiesfunction.*;

/**
 *
 * @author natee
 */
public class rptMonth extends javax.swing.JDialog {

    /**
     * Creates new form rptMonth
     */
    public static String date1 = "",date2 ="",date3 = "",date4="",dept1="",dept2="",plu1="",plu2="",branch1="",branch2="",btype1="",btype2=""
            ,barea1="",barea2="",bsize1="",bsize2="",bplan1="",bplan2="",bstore1="",bstore2="",strday="",strday2=""
            ,company1="",company2="",brand1="",brand2="",bustype1="",bustype2="",code="",name="";
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    String frmName = "rptMonth";
    ThaiUtilities cvth = new ThaiUtilities();
    private String condition = "";
    dbUtility db = new dbUtility();
    public rptMonth(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
       comname = new GetComputerName().getComputerName();
        inittbl();
        getLanguage lang = new getLanguage();
        lang.setText(frmName, this, lang.getChklang());
        setcolumn();
        setTxt();
    }

    public rptMonth() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExit1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lbldate = new javax.swing.JLabel();
        db_lblh3 = new javax.swing.JLabel();
        db_btnExpand = new javax.swing.JButton();
        db_btnExel = new javax.swing.JButton();
        db_btnPrint = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new org.jdesktop.swingx.JXTreeTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnExit1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit1.setIconTextGap(0);
        btnExit1.setName("db_btnExit"); // NOI18N
        btnExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbldate.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate.setText("-");
        lbldate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh3.setText("สำหรับเดือน");
        db_lblh3.setName("db_lblh3"); // NOI18N

        db_btnExpand.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExpand.setText("Expand On/Off");
        db_btnExpand.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExpand.setIconTextGap(0);
        db_btnExpand.setName("db_btnExpand"); // NOI18N
        db_btnExpand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExpand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExpandActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(db_lblh3, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(db_btnExpand)
                .addGap(44, 44, 44))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnExpand)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(db_lblh3)
                        .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        db_btnExel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel.setText("Exel File");
        db_btnExel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel.setIconTextGap(0);
        db_btnExel.setName("db_btnExel"); // NOI18N
        db_btnExel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExelActionPerformed(evt);
            }
        });

        db_btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        db_btnPrint.setText("พิมม์");
        db_btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnPrint.setIconTextGap(0);
        db_btnPrint.setName("db_btnPrint"); // NOI18N
        db_btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnPrintActionPerformed(evt);
            }
        });

        tbl.setName("tbl");
        jScrollPane1.setViewportView(tbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1032)/2, (screenSize.height-796)/2, 1032, 796);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExit1ActionPerformed

    private void db_btnExpandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExpandActionPerformed
        if (tbl.isExpanded(0)) {
            tbl.collapseAll();
        } else {
            tbl.expandAll();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnExpandActionPerformed

    private void db_btnExelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExelActionPerformed
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        setTxt();
        try {
            

            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();


                
                
                if(curFile.exists())
                {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        db_btnExelActionPerformed(null);
                        
                        return;

                    }
                    
                }
                
                   
                try {
                    test.setOutputFile(curFile.toString());
                    test.writeTreetableContditionNoSum(tbl, tbl.getColumnModel(), condition);
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
                
                
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_db_btnExelActionPerformed

    private void db_btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnPrintActionPerformed


        // TODO add your handling code here:
  }//GEN-LAST:event_db_btnPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rptMonth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rptMonth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rptMonth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rptMonth.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                rptMonth dialog = new rptMonth(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton db_btnExel;
    private javax.swing.JButton db_btnExpand;
    private javax.swing.JButton db_btnPrint;
    private javax.swing.JLabel db_lblh3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbldate;
    private org.jdesktop.swingx.JXTreeTable tbl;
    // End of variables declaration//GEN-END:variables
    private void inittbl()
{
    try {
            
            
            TableColumnModel tcm = new DefaultTableColumnModel();
            
            TableColumn tc1 = new TableColumn(0,200);
            tc1.setHeaderValue("");
            TableColumn tc2 = new TableColumn(1,50);
            tc2.setHeaderValue("No");
            TableColumn tc3 = new TableColumn(2,50);
            tc3.setHeaderValue("Dept");
            TableColumn tc4 = new TableColumn(3,150);
            tc4.setHeaderValue("Desc");
            TableColumn tc5 = new TableColumn(4,100);
            tc5.setHeaderValue("date1");
            TableColumn tc6 = new TableColumn(5,100);
            tc6.setHeaderValue("date2");
            TableColumn tc7 = new TableColumn(6,80);
            tc7.setHeaderValue("dif");
            TableColumn tc8 = new TableColumn(7,80);
            tc8.setHeaderValue("difper");
            TableColumn tc9 = new TableColumn(8,80);
            tc9.setHeaderValue("difper");
            TableColumn tc10 = new TableColumn(9,80);
            tc10.setHeaderValue("difper");
            
            
            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            
 
        
        tcm.getColumn(0).setCellRenderer(FormatCell.l());
        tcm.getColumn(1).setCellRenderer(FormatCell.l());
        tcm.getColumn(2).setCellRenderer(FormatCell.l());
        tcm.getColumn(3).setCellRenderer(FormatCell.l());
        tcm.getColumn(4).setCellRenderer(FormatCell.color1());
        tcm.getColumn(5).setCellRenderer(FormatCell.color1());
        tcm.getColumn(6).setCellRenderer(FormatCell.color1());
        tcm.getColumn(7).setCellRenderer(FormatCell.color2());
        tcm.getColumn(8).setCellRenderer(FormatCell.color2());
        tcm.getColumn(9).setCellRenderer(FormatCell.color2());
        
        tbl.setEditable(false);//ห้ามแก้ไขตาราง
        tbl.setShowGrid(true);
        tbl.setFont(fontplain);
        tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl.setRowSelectionAllowed(true);
        tbl.setBackground(java.awt.Color.WHITE);
        tbl.setGridColor(java.awt.Color.gray);
        tbl.setRowHeight(24);
        
            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            
            setTemp();
            String sql="select * from temprjt2 where comname = '"+comname+"' order by tgroup,rjline";
            
            reportMonthModel treemodel = new reportMonthModel(sql,code,name);
            tbl.setTreeTableModel(treemodel);
            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);
            ((JXTree)tbl.getCellRenderer(0,tbl.getHierarchicalColumn())).setFont(fontplain);
            setTxt();
            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
          //  h.setReorderingAllowed(false);
            tbl.setLeafIcon(null);
            
            
            //tbl.getColumnModel().removeColumn(tc3);
            //tbl.getColumnModel().removeColumn(tc4);
        }   catch (SQLException ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    private void setcolumn()
    {
        try {
            
       
        Date d1=null,d2=null,d3=null,d4=null;
        if(!date1.equals(""))
            {
            d1 = Format.fmmonthyear.parse(date1);
           
            }
            if(!date2.equals(""))
            {
            d2 = Format.fmmonthyear.parse(date2);
            
            }
            
            if(!date3.equals(""))
            {
            d3 = Format.fmmonthyear.parse(date3);
            
            }
            if(!date4.equals(""))
            {
            d4 = Format.fmmonthyear.parse(date4);
            
            }
        tbl.getColumnModel().getColumn(4).setHeaderValue(tbl.getColumnModel().getColumn(4).getHeaderValue()+" "+Format.dateFmtShow.format(d1));
        tbl.getColumnModel().getColumn(5).setHeaderValue(tbl.getColumnModel().getColumn(5).getHeaderValue()+" "+Format.dateFmtShow.format(d2));
        tbl.getColumnModel().getColumn(8).setHeaderValue(tbl.getColumnModel().getColumn(8).getHeaderValue()+" "+Format.dateFmtShow.format(d3));
         } catch (Exception e) {
        }
        }
String comname = "";
private void setTemp()
{
    try {
            String d1 = "";
            String d2 = "";
            String d3 = "";
            String d4 = "";
            
           
            String code = "";
            String name="";
            
            comname = new GetComputerName().getComputerName();
            double b1=0,b2 =0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0;
            
            deletetemp(comname);
            
            String sql="";
            if(dbutility.dbUtility.Char_Set.equalsIgnoreCase("utf-8"))
            {
                int TMonth = 0;
                String TYear = "";
                String Tempfield = "";
                String TempKey1= "";
                int TempKey2= 0;
                String TempName = "";
                String TDept = "";
                String TRjNo = "";
                String TDesc = "";
                String TAccount = "";
                String TSub = "";
                double TempValue = 0;
                String TotField = "";
                Date m1 = Format.fmmonthyear.parse(date1);
                Date m2 = Format.fmmonthyear.parse(date2);
                Date m3 = Format.fmmonthyear.parse(date3);
                TMonth = m1.getMonth()+1;
                TYear = Format.year.format(m1);
                
                
                //data 1 set
                sql = "SELECT brcode,tdate,rjno,rjline,dept,account,sub,descname,sum(mac1),sum(mac2),sum(mac3),sum(total)"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + " "
                        + "FROM drjfile d "
                        + "inner join branfile b on d.brcode = b.code "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +"month(d.tdate) = '"+TMonth+"' and Year(d.tdate) = '"+TYear+"' "
                        +"and d.brcode >= '"+branch1+"' and d.brcode <= '"+branch2+"' "
                        +"and b.btype >= '"+btype1+"' and b.btype <= '"+btype2+"' "
                        +"and b.barea >= '"+barea1+"' and b.barea <= '"+barea2+"' "
                        +"and b.bsize >= '"+bsize1+"' and b.bsize <= '"+bsize2+"' "
                        +"and b.bplane >= '"+bplan1+"' and b.bplane <= '"+bplan2+"' "
                        +"and b.bstore >= '"+bstore1+"' and b.bstore <= '"+bstore2+"' "
                        +"and b.companycode >= '"+company1+"' and b.companycode <= '"+company2+"' "
                        +"and b.brandcode >= '"+brand1+"' and b.brandcode <= '"+brand2+"' "
                        +"and b.buscode >= '"+bustype1+"' and b.buscode <= '"+bustype2+"' "
                       ;
                        if(!this.code.equals("All"))
                        {
                        sql += "group by "+this.code+",rjno "
                                + "order by "+this.code+",rjline";
                        }
                        else
                        {
                             sql += "group by rjno "
                                + "order by rjline";
                        }
                ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
             Tempfield = "mon01";
             TotField = "total";   
             while(rs.next())
                {
                    if(!this.code.equals("All"))
                        {
                   if(rs.getString(this.code)!=null)
                   {
                   TempKey1 = rs.getString(this.code);
                   }
                   else
                   {
                       TempKey1 = "";
                   }
                   
                   if(rs.getString(this.name)!=null)
                   {
                   TempName = rs.getString(this.name);
                   }
                   else
                   {
                        TempName = "";
                   }
                        }
                    else
                    {
                        TempKey1 = "";
                        TempName = "";
                    }
                   TempKey2 = rs.getInt("rjline");
                   TDept = rs.getString("dept");
                   TDesc = rs.getString("descname");
                   TRjNo = rs.getString("rjno");
                   TAccount = rs.getString("account");
                   TSub = rs.getString("sub");
                   TempValue = rs.getDouble("sum(total)");
                   if(TempKey2>0 && TempKey2<=50 )
                   {
                       if(!chkTemp(TempKey1,TempKey2+""))
                       {
                            String sqltemp = "insert into temprjt2(tgroup,tname,dept,descname,account,sub,rjno,rjline,comname) values(?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, TempKey1);
                            prm.setString(2, TempName);
                            prm.setString(3, TDept);
                            prm.setString(4, TDesc);
                            prm.setString(5, TAccount);
                            prm.setString(6, TSub);
                            prm.setString(7, TRjNo);
                            prm.setInt(8, TempKey2);
                            prm.setString(9, comname);
                            prm.executeUpdate();
                            
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                            
                       }
                       else
                       {
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                       }
                      
                       
                   }
                   }
             
             
             //set data 2
             TMonth = m2.getMonth()+1;
             TYear = Format.year.format(m2);
             sql = "SELECT brcode,tdate,rjno,rjline,dept,account,sub,descname,sum(mac1),sum(mac2),sum(mac3),sum(total)"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + " "
                        + "FROM drjfile d "
                        + "inner join branfile b on d.brcode = b.code "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +"month(d.tdate) = '"+TMonth+"' and Year(d.tdate) = '"+TYear+"' "
                        +"and d.brcode >= '"+branch1+"' and d.brcode <= '"+branch2+"' "
                        +"and b.btype >= '"+btype1+"' and b.btype <= '"+btype2+"' "
                        +"and b.barea >= '"+barea1+"' and b.barea <= '"+barea2+"' "
                        +"and b.bsize >= '"+bsize1+"' and b.bsize <= '"+bsize2+"' "
                        +"and b.bplane >= '"+bplan1+"' and b.bplane <= '"+bplan2+"' "
                        +"and b.bstore >= '"+bstore1+"' and b.bstore <= '"+bstore2+"' "
                        +"and b.companycode >= '"+company1+"' and b.companycode <= '"+company2+"' "
                        +"and b.brandcode >= '"+brand1+"' and b.brandcode <= '"+brand2+"' "
                        +"and b.buscode >= '"+bustype1+"' and b.buscode <= '"+bustype2+"' "
                        ;
                        if(!this.code.equals("All"))
                        {
                        sql += "group by "+this.code+",rjline "
                                + "order by "+this.code+",rjline";
                        }
                        else
                        {
                             sql += "group by rjline "
                                + "order by rjline";
                        }
            ResultSet rs2 = null;
            Statement stmt2 = (Statement) dbUtility.con.createStatement();
            rs2 = stmt2.executeQuery(sql);
             Tempfield = "mon02";
             TotField = "total";   
             while(rs2.next())
                {
                    if(!this.code.equals("All"))
                        {
                   if(rs2.getString(this.code)!=null)
                   {
                   TempKey1 = rs2.getString(this.code);
                   }
                   else
                   {
                       TempKey1 = "";
                   }
                   
                   if(rs2.getString(this.name)!=null)
                   {
                   TempName = rs2.getString(this.name);
                   }
                   else
                   {
                        TempName = "";
                   }
                        }
                    else
                    {
                        TempKey1 = "";
                        TempName = "";
                    }
                   TempKey2 = rs2.getInt("rjline");
                   TDept = rs2.getString("dept");
                   TDesc = rs2.getString("descname");
                   TRjNo = rs2.getString("rjno");
                   TAccount = rs2.getString("account");
                   TSub = rs2.getString("sub");
                   TempValue = rs2.getDouble("sum(total)");
                   if(TempKey2>0 && TempKey2<=50 )
                   {
                       if(!chkTemp(TempKey1,TempKey2+""))
                       {
                            String sqltemp = "insert into temprjt2(tgroup,tname,dept,descname,account,sub,rjno,rjline,comname) values(?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, TempKey1);
                            prm.setString(2, TempName);
                            prm.setString(3, TDept);
                            prm.setString(4, TDesc);
                            prm.setString(5, TAccount);
                            prm.setString(6, TSub);
                            prm.setString(7, TRjNo);
                            prm.setInt(8, TempKey2);
                            prm.setString(9, comname);
                            prm.executeUpdate();
                            
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                            
                       }
                       else
                       {
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                       }
                      
                       
                   }
                   }
             
             
             //set data 3
             TMonth = m3.getMonth()+1;
             TYear = Format.year.format(m3);
             sql = "SELECT brcode,tyear,rjno,rjline,dept,account,sub,descname"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + ",sum(mon01),sum(mon02),sum(mon03)"
                        + ",sum(mon04),sum(mon05),sum(mon06)"
                        + ",sum(mon07),sum(mon08),sum(mon09)"
                        + ",sum(mon10),sum(mon11),sum(mon12),sum(total) "
                        + "FROM budrjfile d "
                        + "inner join branfile b on d.brcode = b.code "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +" d.tyear = '"+TYear+"' "
                        +"and d.brcode >= '"+branch1+"' and d.brcode <= '"+branch2+"' "
                        +"and b.btype >= '"+btype1+"' and b.btype <= '"+btype2+"' "
                        +"and b.barea >= '"+barea1+"' and b.barea <= '"+barea2+"' "
                        +"and b.bsize >= '"+bsize1+"' and b.bsize <= '"+bsize2+"' "
                        +"and b.bplane >= '"+bplan1+"' and b.bplane <= '"+bplan2+"' "
                        +"and b.bstore >= '"+bstore1+"' and b.bstore <= '"+bstore2+"' "
                        +"and b.companycode >= '"+company1+"' and b.companycode <= '"+company2+"' "
                        +"and b.brandcode >= '"+brand1+"' and b.brandcode <= '"+brand2+"' "
                        +"and b.buscode >= '"+bustype1+"' and b.buscode <= '"+bustype2+"' "
                        ;
                        if(!this.code.equals("All"))
                        {
                        sql += "group by "+this.code+",rjline "
                                + "order by "+this.code+",rjline";
                        }
                        else
                        {
                             sql += "group by rjline "
                                + "order by rjline";
                        }
            ResultSet rs3 = null;
            Statement stmt3 = (Statement) dbUtility.con.createStatement();
            rs3 = stmt3.executeQuery(sql);
             Tempfield = "mon03";
             TotField = "total";  
             Date dd = Format.fmmonthyear.parse(date3);
             String Tempdata = "sum(mon"+Format.zero.format(m3.getMonth()) +")";
             while(rs3.next())
                {
                    if(!this.code.equals("All"))
                        {
                   if(rs3.getString(this.code)!=null)
                   {
                   TempKey1 = rs3.getString(this.code);
                   }
                   else
                   {
                       TempKey1 = "";
                   }
                   
                   if(rs3.getString(this.name)!=null)
                   {
                   TempName = rs3.getString(this.name);
                   }
                   else
                   {
                        TempName = "";
                   }
                        }
                    else
                    {
                        TempKey1 = "";
                        TempName = "";
                    }
                   TempKey2 = rs3.getInt("rjline");
                   TDept = rs3.getString("dept");
                   TDesc = rs3.getString("descname");
                   TRjNo = rs3.getString("rjno");
                   TAccount = rs3.getString("account");
                   TSub = rs3.getString("sub");
                   TempValue = rs3.getDouble(Tempdata);
                   if(TempKey2>0 && TempKey2<=50)
                   {
                       if(!chkTemp(TempKey1,TempKey2+""))
                       {
                            String sqltemp = "insert into temprjt2(tgroup,tname,dept,descname,account,sub,rjno,rjline,comname) values(?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, TempKey1);
                            prm.setString(2, TempName);
                            prm.setString(3, TDept);
                            prm.setString(4, TDesc);
                            prm.setString(5, TAccount);
                            prm.setString(6, TSub);
                            prm.setString(7, TRjNo);
                            prm.setInt(8, TempKey2);
                            prm.setString(9, comname);
                            prm.executeUpdate();
                            
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                            
                       }
                       else
                       {
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                       }
                      
                       
                   }
                   }
            }
            else
            {
                int TMonth = 0;
                String TYear = "";
                String Tempfield = "";
                String TempKey1= "";
                int TempKey2= 0;
                String TempName = "";
                String TDept = "";
                String TRjNo = "";
                String TDesc = "";
                String TAccount = "";
                String TSub = "";
                double TempValue = 0;
                String TotField = "";
                Date m1 = Format.fmmonthyear.parse(date1);
                Date m2 = Format.fmmonthyear.parse(date2);
                Date m3 = Format.fmmonthyear.parse(date3);
                TMonth = m1.getMonth()+1;
                TYear = Format.year.format(m1);
                
                
                //data 1 set
                sql = "SELECT brcode,tdate,rjno,rjline,dept,account,sub,descname,sum(mac1),sum(mac2),sum(mac3),sum(total)"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + " "
                        + "FROM drjfile d "
                        + "inner join branfile b on d.brcode = b.code "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +"month(d.tdate) = '"+TMonth+"' and Year(d.tdate) = '"+TYear+"' "
                        +"and d.brcode >= '"+cvth.Unicode2ASCII(branch1)+"' and d.brcode <= '"+cvth.Unicode2ASCII(branch2)+"' "
                        +"and b.btype >= '"+cvth.Unicode2ASCII(btype1)+"' and b.btype <= '"+cvth.Unicode2ASCII(btype2)+"' "
                        +"and b.barea >= '"+cvth.Unicode2ASCII(barea1)+"' and b.barea <= '"+cvth.Unicode2ASCII(barea2)+"' "
                        +"and b.bsize >= '"+cvth.Unicode2ASCII(bsize1)+"' and b.bsize <= '"+cvth.Unicode2ASCII(bsize2)+"' "
                        +"and b.bplane >= '"+cvth.Unicode2ASCII(bplan1)+"' and b.bplane <= '"+cvth.Unicode2ASCII(bplan2)+"' "
                        +"and b.bstore >= '"+cvth.Unicode2ASCII(bstore1)+"' and b.bstore <= '"+cvth.Unicode2ASCII(bstore2)+"' "
                        +"and b.companycode >= '"+cvth.Unicode2ASCII(company1)+"' and b.companycode <= '"+cvth.Unicode2ASCII(company2)+"' "
                        +"and b.brandcode >= '"+cvth.Unicode2ASCII(brand1)+"' and b.brandcode <= '"+cvth.Unicode2ASCII(brand2)+"' "
                        +"and b.buscode >= '"+cvth.Unicode2ASCII(bustype1)+"' and b.buscode <= '"+cvth.Unicode2ASCII(bustype2)+"' "
                       ;
                        if(!this.code.equals("All"))
                        {
                        sql += "group by "+this.code+",rjno "
                                + "order by "+this.code+",rjline";
                        }
                        else
                        {
                             sql += "group by rjno "
                                + "order by rjline";
                        }
                ResultSet rs = null;
            Statement stmt = (Statement) dbUtility.con.createStatement();
            rs = stmt.executeQuery(sql);
             Tempfield = "mon01";
             TotField = "total";   
             while(rs.next())
                {
                    if(!this.code.equals("All"))
                        {
                   if(rs.getString(this.code)!=null)
                   {
                   TempKey1 = rs.getString(this.code);
                   }
                   else
                   {
                       TempKey1 = "";
                   }
                   
                   if(rs.getString(this.name)!=null)
                   {
                   TempName = rs.getString(this.name);
                   }
                   else
                   {
                        TempName = "";
                   }
                        }
                    else
                    {
                        TempKey1 = "";
                        TempName = "";
                    }
                   TempKey2 = rs.getInt("rjline");
                   TDept = rs.getString("dept");
                   TDesc = rs.getString("descname");
                   TRjNo = rs.getString("rjno");
                   TAccount = rs.getString("account");
                   TSub = rs.getString("sub");
                   TempValue = rs.getDouble("sum(total)");
                   if(TempKey2>0 && TempKey2<=50 )
                   {
                       if(!chkTemp(TempKey1,TempKey2+""))
                       {
                            String sqltemp = "insert into temprjt2(tgroup,tname,dept,descname,account,sub,rjno,rjline,comname) values(?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, TempKey1);
                            prm.setString(2, TempName);
                            prm.setString(3, TDept);
                            prm.setString(4, TDesc);
                            prm.setString(5, TAccount);
                            prm.setString(6, TSub);
                            prm.setString(7, TRjNo);
                            prm.setInt(8, TempKey2);
                            prm.setString(9, comname);
                            prm.executeUpdate();
                            
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                            
                       }
                       else
                       {
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                       }
                      
                       
                   }
                   }
             
             
             //set data 2
             TMonth = m2.getMonth()+1;
             TYear = Format.year.format(m2);
             sql = "SELECT brcode,tdate,rjno,rjline,dept,account,sub,descname,sum(mac1),sum(mac2),sum(mac3),sum(total)"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + " "
                        + "FROM drjfile d "
                        + "inner join branfile b on d.brcode = b.code "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +"month(d.tdate) = '"+TMonth+"' and Year(d.tdate) = '"+TYear+"' "
                        +"and d.brcode >= '"+cvth.Unicode2ASCII(branch1)+"' and d.brcode <= '"+cvth.Unicode2ASCII(branch2)+"' "
                        +"and b.btype >= '"+cvth.Unicode2ASCII(btype1)+"' and b.btype <= '"+cvth.Unicode2ASCII(btype2)+"' "
                        +"and b.barea >= '"+cvth.Unicode2ASCII(barea1)+"' and b.barea <= '"+cvth.Unicode2ASCII(barea2)+"' "
                        +"and b.bsize >= '"+cvth.Unicode2ASCII(bsize1)+"' and b.bsize <= '"+cvth.Unicode2ASCII(bsize2)+"' "
                        +"and b.bplane >= '"+cvth.Unicode2ASCII(bplan1)+"' and b.bplane <= '"+cvth.Unicode2ASCII(bplan2)+"' "
                        +"and b.bstore >= '"+cvth.Unicode2ASCII(bstore1)+"' and b.bstore <= '"+cvth.Unicode2ASCII(bstore2)+"' "
                        +"and b.companycode >= '"+cvth.Unicode2ASCII(company1)+"' and b.companycode <= '"+cvth.Unicode2ASCII(company2)+"' "
                        +"and b.brandcode >= '"+cvth.Unicode2ASCII(brand1)+"' and b.brandcode <= '"+cvth.Unicode2ASCII(brand2)+"' "
                        +"and b.buscode >= '"+cvth.Unicode2ASCII(bustype1)+"' and b.buscode <= '"+cvth.Unicode2ASCII(bustype2)+"' "
                        ;
                        if(!this.code.equals("All"))
                        {
                        sql += "group by "+this.code+",rjline "
                                + "order by "+this.code+",rjline";
                        }
                        else
                        {
                             sql += "group by rjline "
                                + "order by rjline";
                        }
            ResultSet rs2 = null;
            Statement stmt2 = (Statement) dbUtility.con.createStatement();
            rs2 = stmt2.executeQuery(sql);
             Tempfield = "mon02";
             TotField = "total";   
             while(rs2.next())
                {
                    if(!this.code.equals("All"))
                        {
                   if(rs2.getString(this.code)!=null)
                   {
                   TempKey1 = rs2.getString(this.code);
                   }
                   else
                   {
                       TempKey1 = "";
                   }
                   
                   if(rs2.getString(this.name)!=null)
                   {
                   TempName = rs2.getString(this.name);
                   }
                   else
                   {
                        TempName = "";
                   }
                        }
                    else
                    {
                        TempKey1 = "";
                        TempName = "";
                    }
                   TempKey2 = rs2.getInt("rjline");
                   TDept = rs2.getString("dept");
                   TDesc = rs2.getString("descname");
                   TRjNo = rs2.getString("rjno");
                   TAccount = rs2.getString("account");
                   TSub = rs2.getString("sub");
                   TempValue = rs2.getDouble("sum(total)");
                   if(TempKey2>0 && TempKey2<=50 )
                   {
                       if(!chkTemp(TempKey1,TempKey2+""))
                       {
                            String sqltemp = "insert into temprjt2(tgroup,tname,dept,descname,account,sub,rjno,rjline,comname) values(?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, TempKey1);
                            prm.setString(2, TempName);
                            prm.setString(3, TDept);
                            prm.setString(4, TDesc);
                            prm.setString(5, TAccount);
                            prm.setString(6, TSub);
                            prm.setString(7, TRjNo);
                            prm.setInt(8, TempKey2);
                            prm.setString(9, comname);
                            prm.executeUpdate();
                            
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                            
                       }
                       else
                       {
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                       }
                      
                       
                   }
                   }
             
             
             //set data 3
             TMonth = m3.getMonth()+1;
             TYear = Format.year.format(m3);
             sql = "SELECT brcode,tyear,rjno,rjline,dept,account,sub,descname"
                        + ",b.name as branchname,bt.btname as Btypename,ar.name as BAreaname"
                        + ",si.name as BSizename,pl.name as BPlanname,st.name as BStorename,com.name as Companyname"
                        + ",bf.brandname as Brandname,bust.busname as Bustypename"
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode"
                        + ",sum(mon01),sum(mon02),sum(mon03)"
                        + ",sum(mon04),sum(mon05),sum(mon06)"
                        + ",sum(mon07),sum(mon08),sum(mon09)"
                        + ",sum(mon10),sum(mon11),sum(mon12),sum(total) "
                        + "FROM budrjfile d "
                        + "inner join branfile b on d.brcode = b.code "
                        + "left join btype bt on b.btype = bt.btcode "
                        + "left join area ar on b.barea = ar.code "
                        + "left join size si on b.bsize = si.code "
                        + "left join plane pl on b.bplane = pl.code "
                        + "left join store st on b.bstore = st.code "
                        + "left join businesstype bust on b.buscode = bust.buscode "
                        + "left join brandfile bf on b.brandcode = bf.brandcode "
                        + "left join company com on b.companycode = com.code "
                        +"where "  
                        +" d.tyear = '"+TYear+"' "
                        +"and d.brcode >= '"+cvth.Unicode2ASCII(branch1)+"' and d.brcode <= '"+cvth.Unicode2ASCII(branch2)+"' "
                        +"and b.btype >= '"+cvth.Unicode2ASCII(btype1)+"' and b.btype <= '"+cvth.Unicode2ASCII(btype2)+"' "
                        +"and b.barea >= '"+cvth.Unicode2ASCII(barea1)+"' and b.barea <= '"+cvth.Unicode2ASCII(barea2)+"' "
                        +"and b.bsize >= '"+cvth.Unicode2ASCII(bsize1)+"' and b.bsize <= '"+cvth.Unicode2ASCII(bsize2)+"' "
                        +"and b.bplane >= '"+cvth.Unicode2ASCII(bplan1)+"' and b.bplane <= '"+cvth.Unicode2ASCII(bplan2)+"' "
                        +"and b.bstore >= '"+cvth.Unicode2ASCII(bstore1)+"' and b.bstore <= '"+cvth.Unicode2ASCII(bstore2)+"' "
                        +"and b.companycode >= '"+cvth.Unicode2ASCII(company1)+"' and b.companycode <= '"+cvth.Unicode2ASCII(company2)+"' "
                        +"and b.brandcode >= '"+cvth.Unicode2ASCII(brand1)+"' and b.brandcode <= '"+cvth.Unicode2ASCII(brand2)+"' "
                        +"and b.buscode >= '"+cvth.Unicode2ASCII(bustype1)+"' and b.buscode <= '"+cvth.Unicode2ASCII(bustype2)+"' "
                        ;
                        if(!this.code.equals("All"))
                        {
                        sql += "group by "+this.code+",rjline "
                                + "order by "+this.code+",rjline";
                        }
                        else
                        {
                             sql += "group by rjline "
                                + "order by rjline";
                        }
            ResultSet rs3 = null;
            Statement stmt3 = (Statement) dbUtility.con.createStatement();
            rs3 = stmt3.executeQuery(sql);
             Tempfield = "mon03";
             TotField = "total";  
             Date dd = Format.fmmonthyear.parse(date3);
             String Tempdata = "sum(mon"+Format.zero.format(m3.getMonth()) +")";
             while(rs3.next())
                {
                    if(!this.code.equals("All"))
                        {
                   if(rs3.getString(this.code)!=null)
                   {
                   TempKey1 = rs3.getString(this.code);
                   }
                   else
                   {
                       TempKey1 = "";
                   }
                   
                   if(rs3.getString(this.name)!=null)
                   {
                   TempName = rs3.getString(this.name);
                   }
                   else
                   {
                        TempName = "";
                   }
                        }
                    else
                    {
                        TempKey1 = "";
                        TempName = "";
                    }
                   TempKey2 = rs3.getInt("rjline");
                   TDept = rs3.getString("dept");
                   TDesc = rs3.getString("descname");
                   TRjNo = rs3.getString("rjno");
                   TAccount = rs3.getString("account");
                   TSub = rs3.getString("sub");
                   TempValue = rs3.getDouble(Tempdata);
                   if(TempKey2>0 && TempKey2<=50)
                   {
                       if(!chkTemp(TempKey1,TempKey2+""))
                       {
                            String sqltemp = "insert into temprjt2(tgroup,tname,dept,descname,account,sub,rjno,rjline,comname) values(?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                            prm.setString(1, TempKey1);
                            prm.setString(2, TempName);
                            prm.setString(3, TDept);
                            prm.setString(4, TDesc);
                            prm.setString(5, TAccount);
                            prm.setString(6, TSub);
                            prm.setString(7, TRjNo);
                            prm.setInt(8, TempKey2);
                            prm.setString(9, comname);
                            prm.executeUpdate();
                            
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                            
                       }
                       else
                       {
                            String sqlupdate = "update temprjt2 set "+Tempfield+" = ? , total=total+? where tgroup = ? and rjline = ? and comname = ?";
                            PreparedStatement prm2 = (PreparedStatement) db.con.prepareStatement(sqlupdate);
                            prm2.setDouble(1, TempValue);
                            prm2.setDouble(2, TempValue);
                            prm2.setString(3, TempKey1);
                            prm2.setString(4, TempKey2+"");
                            prm2.setString(5, comname);
                            prm2.executeUpdate();
                       }
                      
                       
                   }
                   }
                
                
            }
    }catch (Exception ex) {
                Logger.getLogger(rptPlaceAvg.class.getName()).log(Level.SEVERE, null, ex);
            }
            
}

 private void deletetemp(String comname) {
       
            try {
                 String sqltemp = "delete from temprjt2 where comname = ?";
                  PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sqltemp);
                  prm.setString(1, comname);
                  prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
           
    }
private void setTxt()
{
    String date = "";
    String branch = "";
    String dept = "";
    String plu = "";
    if(!date1.equals(""))
    {
    date = date1+"-";
    }
    else
    {
    date = " - ";
    }
    
    if(!date2.equals(""))
    {
        date += " / "+date2;
    }
    else
    {
        date += " / -";
    }
    if(!date3.equals(""))
    {
    date += " / "+date3+"";
    }
    else
    {
    date += " - ";
    }
    
    if(!date4.equals("31/12/9999"))
    {
        date += date4;
    }
    
    if(!branch1.equals(""))
    {
        branch = branch1+" - ";
    }
    else
    {
        branch = " - ";
    }
    
    if(!branch2.equals("ZZZ"))
    {
        branch += branch2;
    }
    
    if(!dept1.equals(""))
    {
        dept = dept1+" - ";
    }
    else
    {
        dept = " - ";
    }
    
    if(!dept2.equals("ZZZZ"))
    {
        dept += dept2;
    }
    
    if(!plu1.equals(""))
    {
        plu = plu1+" - ";
    }
    else
    {
        plu = " - ";
    }
    
    if(!plu2.equals("ZZZZZZZZZZZZZ"))
    {
        plu += plu2;
    }
    
    lbldate.setText(date);
    
    condition = this.getTitle()+" Date : "+date;
}
    private boolean chkTemp(String bran , String rjline)
    {
        boolean chk = false;
        try {
            
            
            String sql = "Select * From temprjt2  Where (tgroup='"+bran+"') and (rjline='"+rjline+"' and comname ='"+comname+"') ";
                ResultSet rs = null;
                Statement stmt = (Statement) dbUtility.con.createStatement();
                rs = stmt.executeQuery(sql);
                    while(rs.next())
                    {
                        chk = true;
                    }
            
        } catch (Exception ex) {
            Logger.getLogger(rptVat.class.getName()).log(Level.SEVERE, null, ex);
        }
        return chk;
                
    }
    

}
