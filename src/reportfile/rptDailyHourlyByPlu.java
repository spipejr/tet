/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportfile;

import borfunction.GetComputerName;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import dbutility.dbUtility;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import org.jdesktop.swingx.JXTree;
import reportModel.reportDailyHourlyByPluModel;
import reportModel.reportTempDailySaleModel;
import static reportfile.rptDailyPlu2.tfast;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.*;

/**
 *
 * @author s386
 */
public class rptDailyHourlyByPlu extends javax.swing.JDialog {

    /**
     * Creates new form rptDailyPlu
     */
    public static String date1 = "", date2 = "", date3 = "", date4 = "", tfast = "", dept1 = "", dept2 = "", plu1 = "", plu2 = "", branch1 = "", branch2 = "", btype1 = "", btype2 = "", barea1 = "", barea2 = "", bsize1 = "", bsize2 = "", bplan1 = "", bplan2 = "", bstore1 = "", bstore2 = "", strday = "", strday2 = "", company1 = "", company2 = "", brand1 = "", brand2 = "", bustype1 = "", bustype2 = "", code = "", name = "";
    private Font fontbold = new Font("Norasi", Font.BOLD, 14);
    private Font fontplain = new Font("Norasi", Font.PLAIN, 14);
    String frmName = "rptDailyPlu1";
    ThaiUtilities cvth = new ThaiUtilities();
    private String condition = "";
    dbUtility db = new dbUtility();

    public rptDailyHourlyByPlu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
        inittbl();
        getLanguage lang = new getLanguage();
        lang.setText(frmName, this, lang.getChklang());
        //setcolumn();
        setTxt();
    }

    public rptDailyHourlyByPlu() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        db_btnPrint = new javax.swing.JButton();
        db_btnExel = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lbldate = new javax.swing.JLabel();
        db_lblh1 = new javax.swing.JLabel();
        db_btnExpand = new javax.swing.JButton();
        db_lblh3 = new javax.swing.JLabel();
        lbldate1 = new javax.swing.JLabel();
        btnExit1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new org.jdesktop.swingx.JXTreeTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        db_btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        db_btnPrint.setText("พิมม์");
        db_btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnPrint.setIconTextGap(0);
        db_btnPrint.setName("db_btnPrint"); // NOI18N
        db_btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnPrintActionPerformed(evt);
            }
        });

        db_btnExel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel.setText("Exel File");
        db_btnExel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel.setIconTextGap(0);
        db_btnExel.setName("db_btnExel"); // NOI18N
        db_btnExel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExelActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbldate.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate.setText("-");
        lbldate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh1.setText("วันที่ (Date)");
        db_lblh1.setName("db_lblh1"); // NOI18N

        db_btnExpand.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExpand.setText("Expand On/Off");
        db_btnExpand.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExpand.setIconTextGap(0);
        db_btnExpand.setName("db_btnExpand"); // NOI18N
        db_btnExpand.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExpand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExpandActionPerformed(evt);
            }
        });

        db_lblh3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh3.setText("Dept");
        db_lblh3.setName("db_lblh3"); // NOI18N

        lbldate1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        lbldate1.setText("-");
        lbldate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_lblh1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(db_lblh3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbldate1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_btnExpand)
                .addGap(276, 276, 276))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(db_btnExpand)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(db_lblh1)
                            .addComponent(lbldate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(db_lblh3)
                            .addComponent(lbldate1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        btnExit1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit1.setText("Exit");
        btnExit1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit1.setIconTextGap(0);
        btnExit1.setName("db_btnExit"); // NOI18N
        btnExit1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit1ActionPerformed(evt);
            }
        });

        tbl.setName("tbl"); // NOI18N
        jScrollPane1.setViewportView(tbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnExel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void db_btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnPrintActionPerformed

    private void db_btnExelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExelActionPerformed
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        setTxt();
        try {

            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();

                if (curFile.exists()) {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        db_btnExelActionPerformed(null);

                        return;

                    }

                }

                try {
                    test.setOutputFile(curFile.toString());
                    test.writeTreetableContditionNoSum(tbl, tbl.getColumnModel(), condition);
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }

            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_db_btnExelActionPerformed

    private void db_btnExpandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExpandActionPerformed
        if (tbl.isExpanded(0)) {
            tbl.collapseAll();
        } else {
            tbl.expandAll();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnExpandActionPerformed

    private void btnExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit1ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExit1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rptDailyHourlyByPlu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rptDailyHourlyByPlu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rptDailyHourlyByPlu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rptDailyHourlyByPlu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                rptDailyHourlyByPlu dialog = new rptDailyHourlyByPlu(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit1;
    private javax.swing.JButton db_btnExel;
    private javax.swing.JButton db_btnExpand;
    private javax.swing.JButton db_btnPrint;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JLabel db_lblh3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbldate;
    private javax.swing.JLabel lbldate1;
    private org.jdesktop.swingx.JXTreeTable tbl;
    // End of variables declaration//GEN-END:variables
    private void inittbl() {
        try {
            TableColumnModel tcm = new DefaultTableColumnModel();
            TableColumn tc107 = new TableColumn(0, 180);
            tc107.setHeaderValue("Code");
            TableColumn tc108 = new TableColumn(1, 150);
            tc108.setHeaderValue("Name");
            TableColumn tc1 = new TableColumn(2, 80);
            tc1.setHeaderValue("Dept");
            TableColumn tc2 = new TableColumn(3, 80);
            tc2.setHeaderValue("Pcode");
            TableColumn tc3 = new TableColumn(4, 150);
            tc3.setHeaderValue("Pname");
            TableColumn tc4 = new TableColumn(5, 80);
            tc4.setHeaderValue("Price");
            TableColumn tc11 = new TableColumn(6, 80);
            tc11.setHeaderValue("Unit");
            TableColumn tc5 = new TableColumn(7, 80);
            tc5.setHeaderValue("00:00");
            TableColumn tc6 = new TableColumn(8, 80);
            tc6.setHeaderValue("00:00");
            TableColumn tc7 = new TableColumn(9, 80);
            tc7.setHeaderValue("01:00");
            TableColumn tc8 = new TableColumn(10, 80);
            tc8.setHeaderValue("01:00");
            TableColumn tc9 = new TableColumn(11, 80);
            tc9.setHeaderValue("02:00");
            TableColumn tc10 = new TableColumn(12, 80);
            tc10.setHeaderValue("02:00");
            TableColumn tc13 = new TableColumn(13, 80);
            tc13.setHeaderValue("03:00");
            TableColumn tc14 = new TableColumn(14, 80);
            tc14.setHeaderValue("03:00");
            TableColumn tc15 = new TableColumn(15, 80);
            tc15.setHeaderValue("04:00");
            TableColumn tc16 = new TableColumn(16, 80);
            tc16.setHeaderValue("04:00");
            TableColumn tc17 = new TableColumn(17, 80);
            tc17.setHeaderValue("05:00");
            TableColumn tc18 = new TableColumn(18, 80);
            tc18.setHeaderValue("05:00");
            TableColumn tc19 = new TableColumn(19, 80);
            tc19.setHeaderValue("06:00");
            TableColumn tc20 = new TableColumn(20, 80);
            tc20.setHeaderValue("06:00");
            TableColumn tc21 = new TableColumn(21, 80);
            tc21.setHeaderValue("07:00");
            TableColumn tc22 = new TableColumn(22, 80);
            tc22.setHeaderValue("07:00");
            TableColumn tc23 = new TableColumn(23, 80);
            tc23.setHeaderValue("08:00");
            TableColumn tc24 = new TableColumn(24, 80);
            tc24.setHeaderValue("08:00");
            TableColumn tc25 = new TableColumn(25, 80);
            tc25.setHeaderValue("09:00");
            TableColumn tc26 = new TableColumn(26, 80);
            tc26.setHeaderValue("09:00");
            TableColumn tc27 = new TableColumn(27, 80);
            tc27.setHeaderValue("10:00");
            TableColumn tc28 = new TableColumn(28, 80);
            tc28.setHeaderValue("10:00");
            TableColumn tc29 = new TableColumn(29, 80);
            tc29.setHeaderValue("11:00");
            TableColumn tc30 = new TableColumn(30, 80);
            tc30.setHeaderValue("11:00");
            TableColumn tc31 = new TableColumn(31, 80);
            tc31.setHeaderValue("12:00");
            TableColumn tc32 = new TableColumn(32, 80);
            tc32.setHeaderValue("12:00");
            TableColumn tc33 = new TableColumn(33, 80);
            tc33.setHeaderValue("13:00");
            TableColumn tc34 = new TableColumn(34, 80);
            tc34.setHeaderValue("13:00");
            TableColumn tc35 = new TableColumn(35, 80);
            tc35.setHeaderValue("14:00");
            TableColumn tc36 = new TableColumn(36, 80);
            tc36.setHeaderValue("14:00");
            TableColumn tc37 = new TableColumn(37, 80);
            tc37.setHeaderValue("15:00");
            TableColumn tc38 = new TableColumn(38, 80);
            tc38.setHeaderValue("15:00");
            TableColumn tc39 = new TableColumn(39, 80);
            tc39.setHeaderValue("16:00");
            TableColumn tc40 = new TableColumn(40, 80);
            tc40.setHeaderValue("16:00");
            TableColumn tc41 = new TableColumn(41, 80);
            tc41.setHeaderValue("17:00");
            TableColumn tc42 = new TableColumn(42, 80);
            tc42.setHeaderValue("17:00");
            TableColumn tc43 = new TableColumn(43, 80);
            tc43.setHeaderValue("18:00");
            TableColumn tc44 = new TableColumn(44, 80);
            tc44.setHeaderValue("18:00");
            TableColumn tc45 = new TableColumn(45, 80);
            tc45.setHeaderValue("19:00");
            TableColumn tc46 = new TableColumn(46, 80);
            tc46.setHeaderValue("19:00");
            TableColumn tc47 = new TableColumn(47, 80);
            tc47.setHeaderValue("20:00");
            TableColumn tc48 = new TableColumn(48, 80);
            tc48.setHeaderValue("20:00");
            TableColumn tc49 = new TableColumn(49, 80);
            tc49.setHeaderValue("21:00");
            TableColumn tc50 = new TableColumn(50, 80);
            tc50.setHeaderValue("21:00");
            TableColumn tc51 = new TableColumn(51, 80);
            tc51.setHeaderValue("22:00");
            TableColumn tc52 = new TableColumn(52, 80);
            tc52.setHeaderValue("22:00");
            TableColumn tc53 = new TableColumn(53, 80);
            tc53.setHeaderValue("23:00");
            TableColumn tc54 = new TableColumn(54, 80);
            tc54.setHeaderValue("23:00");
            TableColumn tc55 = new TableColumn(55, 80);
            tc55.setHeaderValue("Total(qty)");
            TableColumn tc56 = new TableColumn(56, 80);
            tc56.setHeaderValue("Total(amt)");

            tcm.addColumn(tc107);
            tcm.addColumn(tc108);
            tcm.addColumn(tc1);
            tcm.addColumn(tc2);
            tcm.addColumn(tc3);
            tcm.addColumn(tc4);
            tcm.addColumn(tc11);
            tcm.addColumn(tc5);
            tcm.addColumn(tc6);
            tcm.addColumn(tc7);
            tcm.addColumn(tc8);
            tcm.addColumn(tc9);
            tcm.addColumn(tc10);
            tcm.addColumn(tc13);
            tcm.addColumn(tc14);
            tcm.addColumn(tc15);
            tcm.addColumn(tc16);
            tcm.addColumn(tc17);
            tcm.addColumn(tc18);
            tcm.addColumn(tc19);
            tcm.addColumn(tc20);
            tcm.addColumn(tc21);
            tcm.addColumn(tc22);
            tcm.addColumn(tc23);
            tcm.addColumn(tc24);
            tcm.addColumn(tc25);
            tcm.addColumn(tc26);
            tcm.addColumn(tc27);
            tcm.addColumn(tc28);
            tcm.addColumn(tc29);
            tcm.addColumn(tc30);
            tcm.addColumn(tc31);
            tcm.addColumn(tc32);
            tcm.addColumn(tc33);
            tcm.addColumn(tc34);
            tcm.addColumn(tc35);
            tcm.addColumn(tc36);
            tcm.addColumn(tc37);
            tcm.addColumn(tc38);
            tcm.addColumn(tc39);
            tcm.addColumn(tc40);
            tcm.addColumn(tc41);
            tcm.addColumn(tc42);
            tcm.addColumn(tc43);
            tcm.addColumn(tc44);
            tcm.addColumn(tc45);
            tcm.addColumn(tc46);
            tcm.addColumn(tc47);
            tcm.addColumn(tc48);
            tcm.addColumn(tc49);
            tcm.addColumn(tc50);
            tcm.addColumn(tc51);
            tcm.addColumn(tc52);
            tcm.addColumn(tc53);
            tcm.addColumn(tc54);
            tcm.addColumn(tc55);
            tcm.addColumn(tc56);

            tcm.getColumn(0).setCellRenderer(FormatCell.l());
            tcm.getColumn(1).setCellRenderer(FormatCell.l());
            tcm.getColumn(2).setCellRenderer(FormatCell.l());
            tcm.getColumn(3).setCellRenderer(FormatCell.l());
            tcm.getColumn(4).setCellRenderer(FormatCell.l());
            tcm.getColumn(5).setCellRenderer(FormatCell.r());
            tcm.getColumn(6).setCellRenderer(FormatCell.l());
            tcm.getColumn(7).setCellRenderer(FormatCell.color1());
            tcm.getColumn(8).setCellRenderer(FormatCell.color1());
            tcm.getColumn(9).setCellRenderer(FormatCell.color2());
            tcm.getColumn(10).setCellRenderer(FormatCell.color2());
            tcm.getColumn(11).setCellRenderer(FormatCell.color1());
            tcm.getColumn(12).setCellRenderer(FormatCell.color1());
            tcm.getColumn(13).setCellRenderer(FormatCell.color2());
            tcm.getColumn(14).setCellRenderer(FormatCell.color2());
            tcm.getColumn(15).setCellRenderer(FormatCell.color1());
            tcm.getColumn(16).setCellRenderer(FormatCell.color1());
            tcm.getColumn(17).setCellRenderer(FormatCell.color2());
            tcm.getColumn(18).setCellRenderer(FormatCell.color2());
            tcm.getColumn(19).setCellRenderer(FormatCell.color1());
            tcm.getColumn(20).setCellRenderer(FormatCell.color1());
            tcm.getColumn(21).setCellRenderer(FormatCell.color2());
            tcm.getColumn(22).setCellRenderer(FormatCell.color2());
            tcm.getColumn(23).setCellRenderer(FormatCell.color1());
            tcm.getColumn(24).setCellRenderer(FormatCell.color1());
            tcm.getColumn(25).setCellRenderer(FormatCell.color2());
            tcm.getColumn(26).setCellRenderer(FormatCell.color2());
            tcm.getColumn(27).setCellRenderer(FormatCell.color1());
            tcm.getColumn(28).setCellRenderer(FormatCell.color1());
            tcm.getColumn(29).setCellRenderer(FormatCell.color2());
            tcm.getColumn(30).setCellRenderer(FormatCell.color2());
            tcm.getColumn(31).setCellRenderer(FormatCell.color1());
            tcm.getColumn(32).setCellRenderer(FormatCell.color1());
            tcm.getColumn(33).setCellRenderer(FormatCell.color2());
            tcm.getColumn(34).setCellRenderer(FormatCell.color2());
            tcm.getColumn(35).setCellRenderer(FormatCell.color1());
            tcm.getColumn(36).setCellRenderer(FormatCell.color1());
            tcm.getColumn(37).setCellRenderer(FormatCell.color2());
            tcm.getColumn(38).setCellRenderer(FormatCell.color2());
            tcm.getColumn(39).setCellRenderer(FormatCell.color1());
            tcm.getColumn(40).setCellRenderer(FormatCell.color1());
            tcm.getColumn(41).setCellRenderer(FormatCell.color2());
            tcm.getColumn(42).setCellRenderer(FormatCell.color2());
            tcm.getColumn(43).setCellRenderer(FormatCell.color1());
            tcm.getColumn(44).setCellRenderer(FormatCell.color1());
            tcm.getColumn(45).setCellRenderer(FormatCell.color2());
            tcm.getColumn(46).setCellRenderer(FormatCell.color2());
            tcm.getColumn(47).setCellRenderer(FormatCell.color1());
            tcm.getColumn(48).setCellRenderer(FormatCell.color1());
            tcm.getColumn(49).setCellRenderer(FormatCell.color2());
            tcm.getColumn(50).setCellRenderer(FormatCell.color2());
            tcm.getColumn(51).setCellRenderer(FormatCell.color1());
            tcm.getColumn(52).setCellRenderer(FormatCell.color1());
            tcm.getColumn(53).setCellRenderer(FormatCell.color2());
            tcm.getColumn(54).setCellRenderer(FormatCell.color2());
            tcm.getColumn(55).setCellRenderer(FormatCell.color1());
            tcm.getColumn(56).setCellRenderer(FormatCell.color1());
            tbl.setEditable(false);//ห้ามแก้ไขตาราง
            tbl.setShowGrid(true);
            tbl.setFont(fontplain);
            tbl.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tbl.setRowSelectionAllowed(true);
            tbl.setBackground(java.awt.Color.WHITE);
            tbl.setGridColor(java.awt.Color.gray);
            tbl.setRowHeight(24);
            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            //-----------------------------------------------------------------------------------------------------------------------------------
            String d1 = "";
            String d2 = "";
            if (!date1.equals("")) {
                Date d = Format.dateFmtShow.parse(date1);
                d1 = Format.dateFmtSql.format(d);
            }
            if (!date2.equals("")) {
                Date dd = Format.dateFmtShow.parse(date2);
                d2 = Format.dateFmtSql.format(dd);
            }
            if (!tfast.equals("")) {
                 sql = "SELECT r_price,d.r_plucode as pcode,s_bran,s_date,r_group as pgroup,r_unit as punit1,r_pname as pdesc "
                        + ",b.name as branchname "
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode,"
                        + "sum(if(substr(r_time,1,2)='00',r_quan,0)) as qty00 , "
                        + "sum(if(substr(r_time,1,2)='01',r_quan,0)) as qty01 , "
                        + "sum(if(substr(r_time,1,2)='02',r_quan,0)) as qty02 , "
                        + "sum(if(substr(r_time,1,2)='03',r_quan,0)) as qty03 , "
                        + "sum(if(substr(r_time,1,2)='04',r_quan,0)) as qty04 , "
                        + "sum(if(substr(r_time,1,2)='05',r_quan,0)) as qty05 , "
                        + "sum(if(substr(r_time,1,2)='06',r_quan,0)) as qty06 , "
                        + "sum(if(substr(r_time,1,2)='07',r_quan,0)) as qty07 , "
                        + "sum(if(substr(r_time,1,2)='08',r_quan,0)) as qty08 , "
                        + "sum(if(substr(r_time,1,2)='09',r_quan,0)) as qty09 , "
                        + "sum(if(substr(r_time,1,2)='10',r_quan,0)) as qty10 , "
                        + "sum(if(substr(r_time,1,2)='11',r_quan,0)) as qty11 , "
                        + "sum(if(substr(r_time,1,2)='12',r_quan,0)) as qty12 , "
                        + "sum(if(substr(r_time,1,2)='13',r_quan,0)) as qty13 , "
                        + "sum(if(substr(r_time,1,2)='14',r_quan,0)) as qty14 , "
                        + "sum(if(substr(r_time,1,2)='15',r_quan,0)) as qty15 , "
                        + "sum(if(substr(r_time,1,2)='16',r_quan,0)) as qty16 , "
                        + "sum(if(substr(r_time,1,2)='17',r_quan,0)) as qty17 , "
                        + "sum(if(substr(r_time,1,2)='18',r_quan,0)) as qty18 , "
                        + "sum(if(substr(r_time,1,2)='19',r_quan,0)) as qty19 , "
                        + "sum(if(substr(r_time,1,2)='20',r_quan,0)) as qty20 , "
                        + "sum(if(substr(r_time,1,2)='21',r_quan,0)) as qty21 , "
                        + "sum(if(substr(r_time,1,2)='22',r_quan,0)) as qty22 , "
                        + "sum(if(substr(r_time,1,2)='23',r_quan,0)) as qty23 , "
                        + "sum(if(substr(r_time,1,2)='00',r_nettotal,0)) as amt00 , "
                        + "sum(if(substr(r_time,1,2)='01',r_nettotal,0)) as amt01 , "
                        + "sum(if(substr(r_time,1,2)='02',r_nettotal,0)) as amt02 , "
                        + "sum(if(substr(r_time,1,2)='03',r_nettotal,0)) as amt03 , "
                        + "sum(if(substr(r_time,1,2)='04',r_nettotal,0)) as amt04 , "
                        + "sum(if(substr(r_time,1,2)='05',r_nettotal,0)) as amt05 , "
                        + "sum(if(substr(r_time,1,2)='06',r_nettotal,0)) as amt06 , "
                        + "sum(if(substr(r_time,1,2)='07',r_nettotal,0)) as amt07 , "
                        + "sum(if(substr(r_time,1,2)='08',r_nettotal,0)) as amt08 , "
                        + "sum(if(substr(r_time,1,2)='09',r_nettotal,0)) as amt09 , "
                        + "sum(if(substr(r_time,1,2)='10',r_nettotal,0)) as amt10 , "
                        + "sum(if(substr(r_time,1,2)='11',r_nettotal,0)) as amt11 , "
                        + "sum(if(substr(r_time,1,2)='12',r_nettotal,0)) as amt12 , "
                        + "sum(if(substr(r_time,1,2)='13',r_nettotal,0)) as amt13 , "
                        + "sum(if(substr(r_time,1,2)='14',r_nettotal,0)) as amt14 , "
                        + "sum(if(substr(r_time,1,2)='15',r_nettotal,0)) as amt15 , "
                        + "sum(if(substr(r_time,1,2)='16',r_nettotal,0)) as amt16 , "
                        + "sum(if(substr(r_time,1,2)='17',r_nettotal,0)) as amt17 , "
                        + "sum(if(substr(r_time,1,2)='18',r_nettotal,0)) as amt18 , "
                        + "sum(if(substr(r_time,1,2)='19',r_nettotal,0)) as amt19 , "
                        + "sum(if(substr(r_time,1,2)='20',r_nettotal,0)) as amt20 , "
                        + "sum(if(substr(r_time,1,2)='21',r_nettotal,0)) as amt21 , "
                        + "sum(if(substr(r_time,1,2)='22',r_nettotal,0)) as amt22 , "
                        + "sum(if(substr(r_time,1,2)='23',r_nettotal,0)) as amt23, "
                        + "sum(r_quan) as totalqty,sum(r_nettotal) as totalamt "
                        + "FROM s_tran d "
                        + "left join branfile b on d.s_bran = b.code "
                        + "inner join tempplu t on t.pcode = r_plucode "
                        + "where "
                         + "t.plugroup = '" + tfast +"' "
                        + "and r_group >= '" + dept1 + "' and r_group <= '" + dept2 + "' "
                        + "and d.s_date>= '" + d1 + "' and d.s_date<='" + d2 + "' "
                        + "and d.s_bran >= '" + branch1 + "' and d.s_bran <= '" + branch2 + "' "
                        + "and b.btype >= '" + btype1 + "' and b.btype <= '" + btype2 + "' "
                        + "and b.barea >= '" + barea1 + "' and b.barea <= '" + barea2 + "' "
                        + "and b.bsize >= '" + bsize1 + "' and b.bsize <= '" + bsize2 + "' "
                        + "and b.bplane >= '" + bplan1 + "' and b.bplane <= '" + bplan2 + "' "
                        + "and b.bstore >= '" + bstore1 + "' and b.bstore <= '" + bstore2 + "' "
                        + "and b.companycode >= '" + company1 + "' and b.companycode <= '" + company2 + "' "
                        + "and b.brandcode >= '" + brand1 + "' and b.brandcode <= '" + brand2 + "' "
                        + "and b.buscode >= '" + bustype1 + "' and b.buscode <= '" + bustype2 + "' "
                        + "and locate(dayofweek(d.s_date),'" + strday + "')>0 and r_void<>'V' and r_refund<>'V' ";

                if (!this.code.equals("All")) {
                    sql += "group by " + this.code + ",d.r_plucode "
                            + "order by " + this.code + ",r_group,d.r_plucode";
                } else {
                    sql += "group by d.r_plucode "
                            + "order by r_group,d.r_plucode";
                }

            } else {
                sql = "SELECT r_price,d.r_plucode as pcode,s_bran,s_date,r_group as pgroup,r_unit as punit1,r_pname as pdesc "
                        + ",b.name as branchname "
                        + ",b.code as BranchCode,b.btype as BtypeCode,b.barea as BAreacode"
                        + ",b.bsize as BSizecode,b.bplane as BPlancode,b.bstore as BStorecode,b.companycode as Companycode"
                        + ",b.brandcode as Brandcode,b.buscode as Bustypecode,"
                        + "sum(if(substr(r_time,1,2)='00',r_quan,0)) as qty00 , "
                        + "sum(if(substr(r_time,1,2)='01',r_quan,0)) as qty01 , "
                        + "sum(if(substr(r_time,1,2)='02',r_quan,0)) as qty02 , "
                        + "sum(if(substr(r_time,1,2)='03',r_quan,0)) as qty03 , "
                        + "sum(if(substr(r_time,1,2)='04',r_quan,0)) as qty04 , "
                        + "sum(if(substr(r_time,1,2)='05',r_quan,0)) as qty05 , "
                        + "sum(if(substr(r_time,1,2)='06',r_quan,0)) as qty06 , "
                        + "sum(if(substr(r_time,1,2)='07',r_quan,0)) as qty07 , "
                        + "sum(if(substr(r_time,1,2)='08',r_quan,0)) as qty08 , "
                        + "sum(if(substr(r_time,1,2)='09',r_quan,0)) as qty09 , "
                        + "sum(if(substr(r_time,1,2)='10',r_quan,0)) as qty10 , "
                        + "sum(if(substr(r_time,1,2)='11',r_quan,0)) as qty11 , "
                        + "sum(if(substr(r_time,1,2)='12',r_quan,0)) as qty12 , "
                        + "sum(if(substr(r_time,1,2)='13',r_quan,0)) as qty13 , "
                        + "sum(if(substr(r_time,1,2)='14',r_quan,0)) as qty14 , "
                        + "sum(if(substr(r_time,1,2)='15',r_quan,0)) as qty15 , "
                        + "sum(if(substr(r_time,1,2)='16',r_quan,0)) as qty16 , "
                        + "sum(if(substr(r_time,1,2)='17',r_quan,0)) as qty17 , "
                        + "sum(if(substr(r_time,1,2)='18',r_quan,0)) as qty18 , "
                        + "sum(if(substr(r_time,1,2)='19',r_quan,0)) as qty19 , "
                        + "sum(if(substr(r_time,1,2)='20',r_quan,0)) as qty20 , "
                        + "sum(if(substr(r_time,1,2)='21',r_quan,0)) as qty21 , "
                        + "sum(if(substr(r_time,1,2)='22',r_quan,0)) as qty22 , "
                        + "sum(if(substr(r_time,1,2)='23',r_quan,0)) as qty23 , "
                        + "sum(if(substr(r_time,1,2)='00',r_nettotal,0)) as amt00 , "
                        + "sum(if(substr(r_time,1,2)='01',r_nettotal,0)) as amt01 , "
                        + "sum(if(substr(r_time,1,2)='02',r_nettotal,0)) as amt02 , "
                        + "sum(if(substr(r_time,1,2)='03',r_nettotal,0)) as amt03 , "
                        + "sum(if(substr(r_time,1,2)='04',r_nettotal,0)) as amt04 , "
                        + "sum(if(substr(r_time,1,2)='05',r_nettotal,0)) as amt05 , "
                        + "sum(if(substr(r_time,1,2)='06',r_nettotal,0)) as amt06 , "
                        + "sum(if(substr(r_time,1,2)='07',r_nettotal,0)) as amt07 , "
                        + "sum(if(substr(r_time,1,2)='08',r_nettotal,0)) as amt08 , "
                        + "sum(if(substr(r_time,1,2)='09',r_nettotal,0)) as amt09 , "
                        + "sum(if(substr(r_time,1,2)='10',r_nettotal,0)) as amt10 , "
                        + "sum(if(substr(r_time,1,2)='11',r_nettotal,0)) as amt11 , "
                        + "sum(if(substr(r_time,1,2)='12',r_nettotal,0)) as amt12 , "
                        + "sum(if(substr(r_time,1,2)='13',r_nettotal,0)) as amt13 , "
                        + "sum(if(substr(r_time,1,2)='14',r_nettotal,0)) as amt14 , "
                        + "sum(if(substr(r_time,1,2)='15',r_nettotal,0)) as amt15 , "
                        + "sum(if(substr(r_time,1,2)='16',r_nettotal,0)) as amt16 , "
                        + "sum(if(substr(r_time,1,2)='17',r_nettotal,0)) as amt17 , "
                        + "sum(if(substr(r_time,1,2)='18',r_nettotal,0)) as amt18 , "
                        + "sum(if(substr(r_time,1,2)='19',r_nettotal,0)) as amt19 , "
                        + "sum(if(substr(r_time,1,2)='20',r_nettotal,0)) as amt20 , "
                        + "sum(if(substr(r_time,1,2)='21',r_nettotal,0)) as amt21 , "
                        + "sum(if(substr(r_time,1,2)='22',r_nettotal,0)) as amt22 , "
                        + "sum(if(substr(r_time,1,2)='23',r_nettotal,0)) as amt23, "
                        + "sum(r_quan) as totalqty,sum(r_nettotal) as totalamt "
                        + "FROM s_tran d "
                        + "left join branfile b on d.s_bran = b.code "
                        + "where "
                        + "r_group >= '" + dept1 + "' and r_group <= '" + dept2 + "' "
                        + "and d.s_date>= '" + d1 + "' and d.s_date<='" + d2 + "' "
                        + "and d.s_bran >= '" + branch1 + "' and d.s_bran <= '" + branch2 + "' "
                        + "and b.btype >= '" + btype1 + "' and b.btype <= '" + btype2 + "' "
                        + "and b.barea >= '" + barea1 + "' and b.barea <= '" + barea2 + "' "
                        + "and b.bsize >= '" + bsize1 + "' and b.bsize <= '" + bsize2 + "' "
                        + "and b.bplane >= '" + bplan1 + "' and b.bplane <= '" + bplan2 + "' "
                        + "and b.bstore >= '" + bstore1 + "' and b.bstore <= '" + bstore2 + "' "
                        + "and b.companycode >= '" + company1 + "' and b.companycode <= '" + company2 + "' "
                        + "and b.brandcode >= '" + brand1 + "' and b.brandcode <= '" + brand2 + "' "
                        + "and b.buscode >= '" + bustype1 + "' and b.buscode <= '" + bustype2 + "' "
                        + "and locate(dayofweek(d.s_date),'" + strday + "')>0 and r_void<>'V' and r_refund<>'V' ";

                if (!this.code.equals("All")) {
                    sql += "group by " + this.code + ",d.r_plucode "
                            + "order by " + this.code + ",r_group,d.r_plucode";
                } else {
                    sql += "group by d.r_plucode "
                            + "order by r_group,d.r_plucode";
                }
            }

            //----------------------------------------------------------------------------------------------------------------------------------
//            setTemp();
//            String sql = "select * from tempdailysale where comname = '" + comname + "' order by tgroup,tcode";
            reportDailyHourlyByPluModel treemodel = new reportDailyHourlyByPluModel(sql, code, name);
            tbl.setTreeTableModel(treemodel);
            tbl.setColumnModel(tcm);
            tbl.setRootVisible(true);
            ((JXTree) tbl.getCellRenderer(0, tbl.getHierarchicalColumn())).setFont(fontplain);
            setTxt();
            JTableHeader h = tbl.getTableHeader();
            h.setFont(fontbold);
            tbl.setLeafIcon(null);
        } catch (SQLException ex) {
            Logger.getLogger(rptSaleOfPlu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(rptDailyHourlyByPlu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    String sql = "";

    private void setTxt() {
        String date = "";
        String datelast = "";
        String branch = "";
        String dept = "";
        String plu = "";
        if (!date1.equals("")) {
            date = date1 + "-";
        } else {
            date = " - ";
        }

        if (!date2.equals("31/12/9999")) {
            date += date2;
        }

        if (!date3.equals("")) {
            datelast = date3 + "-";
        } else {
            datelast = " - ";
        }

        if (!date4.equals("31/12/9999")) {
            datelast += date4;
        }

        if (!branch1.equals("")) {
            datelast = branch1 + " - ";
        } else {
            branch = " - ";
        }

        if (!branch2.equals("ZZZ")) {
            branch += branch2;
        }

        if (!dept1.equals("")) {
            dept = dept1 + " - ";
        } else {
            dept = " - ";
        }

        if (!dept2.equals("ZZZZ")) {
            dept += dept2;
        }

        if (!plu1.equals("")) {
            plu = plu1 + " - ";
        } else {
            plu = " - ";
        }

        if (!plu2.equals("ZZZZZZZZZZZZZ")) {
            plu += plu2;
        }

        lbldate.setText(date);
        lbldate1.setText(dept);
        condition = this.getTitle() + " Date(1) : " + date + " Dept : " + dept;
    }

}
