package EStamp;

import EStamp.EStampReport.Report_ES;
import borfunction.GetApplicationName;
import borfunction.GetUser;
import dbutility.dbUtility;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import report.Report;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.ThaiUtilities;
import utilititiesfunction.getLanguage;

public class dBrows_PrintStampPro extends javax.swing.JDialog {

    dbUtility db = new dbUtility();
    ThaiUtilities cvth = new ThaiUtilities();
    PreparedStatement pre = null;
    PreparedStatement preUp = null;
    ResultSet rs = null;

    formatStamp f = new formatStamp();
    showMessage msn = new showMessage();

    getLanguage lang = new getLanguage();

    String Mode = "";
    String date = "";
    String strFrom = "";
    String strTo = "";
    String strPFrom = "";
    String strPTo = "";
    String strDate1 = "";
    String strDate2 = "";

    public dBrows_PrintStampPro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        clearForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtSFrom = new javax.swing.JTextField();
        btnBrows1 = new javax.swing.JButton();
        db_lblh2 = new javax.swing.JLabel();
        txtSTo = new javax.swing.JTextField();
        btnBrows2 = new javax.swing.JButton();
        db_lblh = new javax.swing.JLabel();
        db_lblh1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDateStr1 = new javax.swing.JTextField();
        btnDate1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtDateStr2 = new javax.swing.JTextField();
        btnDate2 = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        db_lblh3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        db_lblh4 = new javax.swing.JLabel();
        txtPTo = new javax.swing.JTextField();
        txtPFrom = new javax.swing.JTextField();
        db_lblh5 = new javax.swing.JLabel();
        btnPBrows1 = new javax.swing.JButton();
        btnPBrows2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Print Report");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กำหนดเงื่อนไข", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSFrom.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtSFrom.setText("txtSFrom");
        txtSFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSFromActionPerformed(evt);
            }
        });
        txtSFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSFromKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSFromKeyPressed(evt);
            }
        });
        jPanel1.add(txtSFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 62, 30));

        btnBrows1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnBrows1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrows1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnBrows1, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 40, 35, 30));

        db_lblh2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        db_lblh2.setText("ถึง");
        db_lblh2.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 75, 40, 30));

        txtSTo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtSTo.setText("txtSTo");
        txtSTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSToKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSToKeyPressed(evt);
            }
        });
        jPanel1.add(txtSTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 62, 30));

        btnBrows2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnBrows2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrows2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnBrows2, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 40, 35, 30));

        db_lblh.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh.setText("กำหนดรหัสแสตมป์แคมเปญ");
        db_lblh.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 40, 160, 30));

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh1.setText("จาก");
        db_lblh1.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh1, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 40, 28, 30));

        jLabel4.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("กำหนดรหัสแสตมป์โปรโมชั่น");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 75, 160, 30));

        txtDateStr1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtDateStr1.setText("txtDateStr1");
        txtDateStr1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateStr1FocusLost(evt);
            }
        });
        txtDateStr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateStr1ActionPerformed(evt);
            }
        });
        txtDateStr1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDateStr1KeyPressed(evt);
            }
        });
        jPanel1.add(txtDateStr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 115, 80, 30));

        btnDate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btnDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDate1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnDate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 115, 36, 30));

        jLabel3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ถึง");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 115, 40, 30));

        txtDateStr2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtDateStr2.setText("txtDateStr2");
        txtDateStr2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateStr2FocusLost(evt);
            }
        });
        txtDateStr2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateStr2ActionPerformed(evt);
            }
        });
        txtDateStr2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDateStr2KeyPressed(evt);
            }
        });
        jPanel1.add(txtDateStr2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 115, 80, 30));

        btnDate2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btnDate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDate2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 115, 36, 30));

        btnExit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit.setText("ออก (Exit)");
        btnExit.setIconTextGap(5);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel1.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 150, 40));

        btnExcel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        btnExcel.setText("พิมพ์ (Print)");
        btnExcel.setIconTextGap(5);
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });
        jPanel1.add(btnExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 150, 40));

        db_lblh3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh3.setText("จาก");
        db_lblh3.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh3, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 115, 28, 30));

        jLabel5.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("วันที่เริ่มแสตมป์โปรโมชั่น");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 115, 160, 30));

        db_lblh4.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh4.setText("จาก");
        db_lblh4.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh4, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 75, 28, 30));

        txtPTo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPTo.setText("txtPTo");
        txtPTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPToKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPToKeyPressed(evt);
            }
        });
        jPanel1.add(txtPTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 75, 62, 30));

        txtPFrom.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPFrom.setText("txtPFrom");
        txtPFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPFromKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPFromKeyPressed(evt);
            }
        });
        jPanel1.add(txtPFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 75, 62, 30));

        db_lblh5.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        db_lblh5.setText("ถึง");
        db_lblh5.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh5, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 40, 40, 30));

        btnPBrows1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnPBrows1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPBrows1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnPBrows1, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 75, 35, 30));

        btnPBrows2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnPBrows2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPBrows2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnPBrows2, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 75, 35, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSFromActionPerformed

    private void txtSFromKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSFromKeyTyped
        if (txtSFrom.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSFromKeyTyped

    private void txtSFromKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSFromKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtSTo.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txtSFrom.setText("");
        }
        if (evt.getKeyCode() == evt.VK_F1) {
            browsCampaign(txtSFrom);
        }
    }//GEN-LAST:event_txtSFromKeyPressed

    private void btnBrows1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrows1ActionPerformed
        browsCampaign(txtSFrom);
    }//GEN-LAST:event_btnBrows1ActionPerformed

    private void txtSToKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSToKeyTyped
        if (txtSTo.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSToKeyTyped

    private void txtSToKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSToKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtPFrom.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txtSTo.setText("");
        }
        if (evt.getKeyCode() == evt.VK_F1) {
            browsCampaign(txtSTo);
        }
    }//GEN-LAST:event_txtSToKeyPressed

    private void btnBrows2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrows2ActionPerformed
        browsCampaign(txtSTo);
    }//GEN-LAST:event_btnBrows2ActionPerformed

    private void txtDateStr1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateStr1FocusLost
        if (!checkDate(txtDateStr1)) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง...");
            txtDateStr1.requestFocus();
        }
    }//GEN-LAST:event_txtDateStr1FocusLost

    private void txtDateStr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateStr1ActionPerformed

    }//GEN-LAST:event_txtDateStr1ActionPerformed

    private void txtDateStr1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateStr1KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtDateStr2.requestFocus();
        }
    }//GEN-LAST:event_txtDateStr1KeyPressed

    private void btnDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDate1ActionPerformed
        DateUtil.showDateChooserDialog(txtDateStr1, btnDate1);
        txtDateStr1.requestFocus();
    }//GEN-LAST:event_btnDate1ActionPerformed

    private void txtDateStr2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateStr2FocusLost
        if (!checkDate(txtDateStr2)) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง...");
            txtDateStr2.requestFocus();
        }
    }//GEN-LAST:event_txtDateStr2FocusLost

    private void txtDateStr2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateStr2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateStr2ActionPerformed

    private void txtDateStr2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateStr2KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            btnExcel.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_F5) {
            //            ProcessLoadDataSheet1(createNewTable(tblExcel));
        }
    }//GEN-LAST:event_txtDateStr2KeyPressed

    private void btnDate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDate2ActionPerformed
        DateUtil.showDateChooserDialog(txtDateStr2, btnDate2);
        txtDateStr2.requestFocus();
    }//GEN-LAST:event_btnDate2ActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
//        ProcessPrint();
        ProcessPrintBean();
    }//GEN-LAST:event_btnExcelActionPerformed

    private void txtPToKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPToKeyTyped
        if (txtPTo.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPToKeyTyped

    private void txtPToKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPToKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtDateStr1.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txtPFrom.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_F1) {
            browsStampPro(txtPTo);
        }
    }//GEN-LAST:event_txtPToKeyPressed

    private void txtPFromKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPFromKeyTyped
        if (txtPFrom.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPFromKeyTyped

    private void txtPFromKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPFromKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtPTo.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txtSTo.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_F1) {
            browsStampPro(txtPFrom);
        }
    }//GEN-LAST:event_txtPFromKeyPressed

    private void btnPBrows1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPBrows1ActionPerformed
        browsStampPro(txtPFrom);
    }//GEN-LAST:event_btnPBrows1ActionPerformed

    private void btnPBrows2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPBrows2ActionPerformed
        browsStampPro(txtPTo);
    }//GEN-LAST:event_btnPBrows2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dBrows_PrintStampPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dBrows_PrintStampPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dBrows_PrintStampPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dBrows_PrintStampPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dBrows_PrintStampPro dialog = new dBrows_PrintStampPro(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrows1;
    private javax.swing.JButton btnBrows2;
    private javax.swing.JButton btnDate1;
    private javax.swing.JButton btnDate2;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPBrows1;
    private javax.swing.JButton btnPBrows2;
    private javax.swing.JLabel db_lblh;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JLabel db_lblh2;
    private javax.swing.JLabel db_lblh3;
    private javax.swing.JLabel db_lblh4;
    private javax.swing.JLabel db_lblh5;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDateStr1;
    private javax.swing.JTextField txtDateStr2;
    private javax.swing.JTextField txtPFrom;
    private javax.swing.JTextField txtPTo;
    private javax.swing.JTextField txtSFrom;
    private javax.swing.JTextField txtSTo;
    // End of variables declaration//GEN-END:variables

    private void clearForm() {
        CheckStamptempReport();
        txtSFrom.setText("");
        txtSTo.setText("");
        txtPFrom.setText("");
        txtPTo.setText("");

        txtDateStr1.setText(f.First(date));
        txtDateStr2.setText(f.Last(date));
        txtSFrom.requestFocus();

        btnBrows1.setFocusable(false);
        btnBrows2.setFocusable(false);
        btnPBrows1.setFocusable(false);
        btnPBrows2.setFocusable(false);
        btnDate1.setFocusable(false);
        btnDate2.setFocusable(false);
        btnExcel.setFocusable(false);
        btnExit.setFocusable(false);
    }

    private void browsCampaign(JTextField txtOutput) {
        try {
            dBrows_Campaign frm = new dBrows_Campaign(null, true);
            frm.setVisible(true);
            if (frm.getSccode().length() > 0) {
                txtOutput.setText(frm.getSccode());
                txtOutput.requestFocus();
            }
        } catch (Exception e) {
            msn.showMessageWarning(e.getMessage());
        }
    }

    private void browsStampPro(JTextField txtOutput) {
        try {
            dBrows_StampPro frm = new dBrows_StampPro(null, true);
            frm.setVisible(true);
            if (frm.getSpcode().length() > 0) {
                txtOutput.setText(frm.getSpcode());
                txtOutput.requestFocus();
            }
        } catch (Exception e) {
            msn.showMessageWarning(e.getMessage());
        }
    }

    private boolean checkDate(JTextField txtdate) {
        boolean chkDate = false;
        try {
            f.convertDateshowToSQL(txtdate.getText().trim());
            chkDate = true;
        } catch (Exception e) {
        }
        return chkDate;
    }

    private boolean insertTempReport() {
        boolean isSave = false;
        try {
            String sql = "select * from stamppromotion sp "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + " where sp.sp_campaign >='" + strFrom + "' and sp.sp_campaign <='" + strTo + "' "
                    + "and sp.sp_code >='" + strPFrom + "' and sp.sp_code <='" + strPTo + "' "
                    + "and sp.sp_startdate >='" + strDate1 + "' and sp.sp_startdate <='" + strDate2 + "' "
                    + "order by sp.sp_campaign, sp.sp_code";
            System.out.println("insertTempReport //" + sql);
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                do {
                    if (haveFixBranchGroup(rs.getString("sp.sp_campaign"), rs.getString("sp.sp_code"))) {
                        insertFixBranchGroup();
                    }
                } while (rs.next());

//                insertFixBranch();
//                insertFixPLU();
//                insertExceptDate();
                isSave = true;
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }

        return isSave;
    }

    private void ProcessPrint() {
        DeleteStampTempReport();
        strFrom = txtSFrom.getText().trim();
        strTo = txtSTo.getText().trim();
        strPFrom = txtPFrom.getText().trim();
        strPTo = txtPTo.getText().trim();
        strDate1 = txtDateStr1.getText();
        strDate2 = txtDateStr2.getText();

        if (strTo.equals("")) {
            strTo = "ZZZ";
        }

        if (strPTo.equals("")) {
            strPTo = "ZZZ";
        }

        if (strDate1.equals("")) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง !!!");
            txtDateStr1.requestFocus();
        } else {
            strDate1 = f.convertDateshowToSQL(strDate1);
        }

        if (strDate2.equals("")) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง !!!");
            txtDateStr2.requestFocus();
        } else {
            strDate2 = f.convertDateshowToSQL(strDate2);
        }

        getLanguage lang = new getLanguage();
        Map parm = new HashMap();

        if (Mode.equals("Sum")) {
            parm.put("companyName", lang.getTextCompanyReport());
            parm.put("application", new GetApplicationName().getApplicationName());
            parm.put("user", new GetUser().getUser());
            parm.put("strSFrom", strFrom);
            parm.put("strSTo", strTo);
            parm.put("strPFrom", strPFrom);
            parm.put("strPTo", strPTo);
            parm.put("strDate1", strDate1);
            parm.put("strDate2", strDate2);
            String frmName = "dForm_masterPromotion";
            String rptName = "stampPromotionReport";
            Report rpt = new Report();
            rpt.viewReport(rptName, parm, frmName);
        } else if (Mode.equals("Detail")) {
            if (insertTempReport()) {
                parm.put("companyName", lang.getTextCompanyReport());
                parm.put("application", new GetApplicationName().getApplicationName());
                parm.put("user", new GetUser().getUser());
                parm.put("strSFrom", strFrom);
                parm.put("strSTo", strTo);
                parm.put("strPFrom", strPFrom);
                parm.put("strPTo", strPTo);
                parm.put("strDate1", strDate1);
                parm.put("strDate2", strDate2);
                String frmName = "dForm_masterPromotion";
                String rptName = "stampPromotionReportDetail";
                Report rpt = new Report();
                rpt.viewReport(rptName, parm, frmName);
            }
        }
    }

    private void insertFixBranchGroup() {
        try {
            String sql = "select * from stamppromotion sp "
                    + "left join stamppro_linkbgroup sg on sp.sp_code = sg.sp_code "
                    + "and sp.sp_campaign = sg.s_code "
                    + "left join branchgroup bg on sg.bgcode = bg.bgroupcode  "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where sp.sp_campaign >='" + strFrom + "' and sp.sp_campaign <='" + strTo + "' "
                    + "and sp.sp_code >='" + strPFrom + "' and sp.sp_code <='" + strPTo + "' "
                    + "and sp.sp_startdate >='" + strDate1 + "' and sp.sp_startdate <='" + strDate2 + "' "
                    + "order by sp.sp_campaign, sp.sp_code,sg.bgcode";
            System.out.println("insertFixBranchGroup //" + sql);
            PreparedStatement pre1 = dbUtility.con.prepareStatement(sql);
            ResultSet rs1 = pre1.executeQuery();
            rs1.first();
            if (rs1.getRow() != 0) {
                int no = 0;
                String inst = "insert into stamptempreport(s_no,s_code, s_name, st_code, st_name, st_startdate, " //5
                        + "st_enddate, st_day, st_saletype, st_saleitem, st_point, " //10
                        + "description, faggroup, fagdesc) " //14
                        + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        PreparedStatement preUp = dbUtility.con.prepareStatement(inst);
                        preUp.setInt(1, no++);
                        preUp.setString(2, cvth.ASCII2Unicode(rs1.getString("sp.sp_campaign")));
                        preUp.setString(3, cvth.ASCII2Unicode(rs1.getString("s.s_campaignname")));
                        preUp.setString(4, cvth.ASCII2Unicode(rs1.getString("sp.sp_code")));
                        preUp.setString(5, cvth.ASCII2Unicode(rs1.getString("sp.sp_name")));
                        preUp.setString(6, cvth.ASCII2Unicode(rs1.getString("sp.sp_startdate")));
                        preUp.setString(7, cvth.ASCII2Unicode(rs1.getString("sp.sp_enddate")));
                        preUp.setString(8, cvth.ASCII2Unicode(rs1.getString("sp.sp_day")));
                        preUp.setString(9, cvth.ASCII2Unicode(rs1.getString("sp.sp_saletype")));
                        preUp.setString(10, cvth.ASCII2Unicode(rs1.getString("sp.sp_saleitem")));
                        preUp.setString(11, cvth.ASCII2Unicode(rs1.getString("sp.sp_point")));
                        preUp.setString(12, cvth.ASCII2Unicode(rs1.getString("sg.bgcode")) + " " + cvth.ASCII2Unicode(rs1.getString("bg.bgroupname")));
                        preUp.setString(13, cvth.ASCII2Unicode("0-branchgroup"));
                        preUp.setString(14, cvth.ASCII2Unicode("กลุ่มสาขาที่ร่วมรายการ"));
                        preUp.executeUpdate();
                    } while (rs1.next());
                } else {
                    do {
                        PreparedStatement preUp = dbUtility.con.prepareStatement(inst);
                        preUp.setString(1, rs1.getString("sp.sp_campaign"));
                        preUp.setString(2, rs1.getString("s.s_campaignname"));
                        preUp.setString(3, rs1.getString("sp.sp_code"));
                        preUp.setString(4, rs1.getString("sp.sp_name"));
                        preUp.setString(5, rs1.getString("sp.sp_startdate"));
                        preUp.setString(6, rs1.getString("sp.sp_enddate"));
                        preUp.setString(7, rs1.getString("sp.sp_day"));
                        preUp.setString(8, rs1.getString("sp.sp_saletype"));
                        preUp.setString(9, rs1.getString("sp.sp_saleitem"));
                        preUp.setString(10, rs1.getString("sp.sp_point"));
                        preUp.setString(11, rs1.getString("sg.bgcode") + " " + rs1.getString("bg.bgroupname"));
                        preUp.setString(12, "0-branchgroup");
                        preUp.setString(13, "กลุ่มสาขาที่ร่วมรายการ");
                        preUp.setInt(14, no++);
                        preUp.executeUpdate();
                    } while (rs1.next());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void DeleteStampTempReport() {
        try {
            String sql = "select * from stamptempreport";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                String del = "delete from stamptempreport";
                PreparedStatement pre1 = dbUtility.con.prepareStatement(del);
                pre1.executeUpdate();
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void insertFixBranch() {
        try {
            String sql = "select * from stamppromotion sp "
                    + "left join stamplinkbranch sb on sp.sp_code = sb.sp_code and sp.sp_campaign = sb.s_code "
                    + "left join branfile b on sb.bcode = b.code "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where sp.sp_campaign >='" + strFrom + "' and sp.sp_campaign <='" + strTo + "' "
                    + "and sp.sp_code >='" + strPFrom + "' and sp.sp_code <='" + strPTo + "' "
                    + "and sp.sp_startdate >='" + strDate1 + "' and sp.sp_startdate <='" + strDate2 + "' "
                    + "order by sp.sp_campaign, sp.sp_code,sb.bcode";
            PreparedStatement pre1 = dbUtility.con.prepareStatement(sql);
            ResultSet rs1 = pre1.executeQuery();
            rs1.first();
            if (rs1.getRow() != 0) {
                int no = 0;
                String inst = "insert into stamptempreport(s_code, s_name, st_code, st_name, st_startdate, " //5
                        + "st_enddate, st_day, st_saletype, st_saleitem, st_point, " //10
                        + "description, faggroup, fagdesc,s_no) " //14
                        + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        PreparedStatement preUp = dbUtility.con.prepareStatement(inst);
                        preUp.setString(1, cvth.ASCII2Unicode(rs1.getString("sp.sp_campaign")));
                        preUp.setString(2, cvth.ASCII2Unicode(rs1.getString("s.s_campaignname")));
                        preUp.setString(3, cvth.ASCII2Unicode(rs1.getString("sp.sp_code")));
                        preUp.setString(4, cvth.ASCII2Unicode(rs1.getString("sp.sp_name")));
                        preUp.setString(5, cvth.ASCII2Unicode(rs1.getString("sp.sp_startdate")));
                        preUp.setString(6, cvth.ASCII2Unicode(rs1.getString("sp.sp_enddate")));
                        preUp.setString(7, cvth.ASCII2Unicode(rs1.getString("sp.sp_day")));
                        preUp.setString(8, cvth.ASCII2Unicode(rs1.getString("sp.sp_saletype")));
                        preUp.setString(9, cvth.ASCII2Unicode(rs1.getString("sp.sp_saleitem")));
                        preUp.setString(10, cvth.ASCII2Unicode(rs1.getString("sp.sp_point")));
                        preUp.setString(11, cvth.ASCII2Unicode(rs1.getString("sb.bcode")) + " " + cvth.ASCII2Unicode(rs1.getString("b.name")));
                        preUp.setString(12, cvth.ASCII2Unicode("1-branch"));
                        preUp.setString(13, cvth.ASCII2Unicode("สาขาที่ร่วมรายการ"));
                        preUp.setInt(14, no++);
                        preUp.executeUpdate();
                    } while (rs1.next());
                } else {
                    do {
                        PreparedStatement preUp = dbUtility.con.prepareStatement(inst);
                        preUp.setString(1, rs1.getString("sp.sp_campaign"));
                        preUp.setString(2, rs1.getString("s.s_campaignname"));
                        preUp.setString(3, rs1.getString("sp.sp_code"));
                        preUp.setString(4, rs1.getString("sp.sp_name"));
                        preUp.setString(5, rs1.getString("sp.sp_startdate"));
                        preUp.setString(6, rs1.getString("sp.sp_enddate"));
                        preUp.setString(7, rs1.getString("sp.sp_day"));
                        preUp.setString(8, rs1.getString("sp.sp_saletype"));
                        preUp.setString(9, rs1.getString("sp.sp_saleitem"));
                        preUp.setString(10, rs1.getString("sp.sp_point"));
                        preUp.setString(11, rs1.getString("sb.bcode") + " " + rs1.getString("b.name"));
                        preUp.setString(12, "1-branch");
                        preUp.setString(13, "สาขาที่ร่วมรายการ");
                        preUp.setInt(14, no++);
                        preUp.executeUpdate();
                    } while (rs1.next());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void insertFixPLU() {
        try {
            String sql = "select * from stamppromotion sp "
                    + "left join stamplinkplu sl on sp.sp_code = sp.sp_code and sp.sp_campaign = sl.s_code "
                    + "left join product p on sp.pcode = p.pcode "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where sp.sp_campaign >='" + strFrom + "' and sp.sp_campaign <='" + strTo + "' "
                    + "and sp.sp_code >='" + strPFrom + "' and sp.sp_code <='" + strPTo + "' "
                    + "and sp.sp_startdate >='" + strDate1 + "' and sp.sp_startdate <='" + strDate2 + "' "
                    + "order by sp.sp_campaign, sp.sp_code,sl.pcode";
            PreparedStatement pre1 = dbUtility.con.prepareStatement(sql);
            ResultSet rs1 = pre1.executeQuery();
            rs1.first();
            if (rs1.getRow() != 0) {
                int no = 0;
                String inst = "insert into stamptempreport(s_code, s_name, st_code, st_name, st_startdate, " //5
                        + "st_enddate, st_day, st_saletype, st_saleitem, st_point, " //10
                        + "description, faggroup, fagdesc) " //14
                        + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        PreparedStatement preUp = dbUtility.con.prepareStatement(inst);
                        preUp.setString(1, cvth.ASCII2Unicode(rs1.getString("sp.sp_campaign")));
                        preUp.setString(2, cvth.ASCII2Unicode(rs1.getString("s.s_campaignname")));
                        preUp.setString(3, cvth.ASCII2Unicode(rs1.getString("sp.sp_code")));
                        preUp.setString(4, cvth.ASCII2Unicode(rs1.getString("sp.sp_name")));
                        preUp.setString(5, cvth.ASCII2Unicode(rs1.getString("sp.sp_startdate")));
                        preUp.setString(6, cvth.ASCII2Unicode(rs1.getString("sp.sp_enddate")));
                        preUp.setString(7, cvth.ASCII2Unicode(rs1.getString("sp.sp_day")));
                        preUp.setString(8, cvth.ASCII2Unicode(rs1.getString("sp.sp_saletype")));
                        preUp.setString(9, cvth.ASCII2Unicode(rs1.getString("sp.sp_saleitem")));
                        preUp.setString(10, cvth.ASCII2Unicode(rs1.getString("sp.sp_point")));
                        preUp.setString(11, cvth.ASCII2Unicode(rs1.getString("sl.pcode")) + " " + cvth.ASCII2Unicode(rs1.getString("p.pdesc")));
                        preUp.setString(12, cvth.ASCII2Unicode("2-product"));
                        preUp.setString(13, cvth.ASCII2Unicode("สินค้าที่ร่วมรายการ"));
                        preUp.setInt(14, no++);
                        preUp.executeUpdate();
                    } while (rs1.next());
                } else {
                    do {
                        PreparedStatement preUp = dbUtility.con.prepareStatement(inst);
                        preUp.setString(1, rs1.getString("sp.sp_campaign"));
                        preUp.setString(2, rs1.getString("s.s_campaignname"));
                        preUp.setString(3, rs1.getString("sp.sp_code"));
                        preUp.setString(4, rs1.getString("sp.sp_name"));
                        preUp.setString(5, rs1.getString("sp.sp_startdate"));
                        preUp.setString(6, rs1.getString("sp.sp_enddate"));
                        preUp.setString(7, rs1.getString("sp.sp_day"));
                        preUp.setString(8, rs1.getString("sp.sp_saletype"));
                        preUp.setString(9, rs1.getString("sp.sp_saleitem"));
                        preUp.setString(10, rs1.getString("sp.sp_point"));
                        preUp.setString(11, rs1.getString("sl.pcode") + " " + rs1.getString("p.pdesc"));
                        preUp.setString(12, "2-product");
                        preUp.setString(13, "สินค้าที่ร่วมรายการ");
                        preUp.setInt(14, no++);
                        preUp.executeUpdate();
                    } while (rs1.next());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void insertExceptDate() {
        try {
            String sql = "select * from stamppromtion sp "
                    + "left join stampexceptdate sd on sp.sp_code = sd.sp_code and sp.sp_campaign = sd.s_code "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where sp.sp_campaign >='" + strFrom + "' and sp.sp_campaign <='" + strTo + "' "
                    + "and sp.sp_code >='" + strPFrom + "' and sp.sp_code <='" + strPTo + "' "
                    + "and sp.sp_startdate >='" + strDate1 + "' and sp.sp_startdate <='" + strDate2 + "' "
                    + "order by sp.sp_campaign, sp.sp_code,sd.exp_date";
            PreparedStatement pre1 = dbUtility.con.prepareStatement(sql);
            ResultSet rs1 = pre1.executeQuery();
            rs1.first();
            if (rs1.getRow() != 0) {
                int no = 0;
                String inst = "insert into stamptempreport(s_code, s_name, st_code, st_name, st_startdate, " //5
                        + "st_enddate, st_day, st_saletype, st_saleitem, st_point, " //10
                        + "description, faggroup, fagdesc,s_no) " //14
                        + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        PreparedStatement preUp = dbUtility.con.prepareStatement(inst);
                        preUp.setString(1, cvth.ASCII2Unicode(rs1.getString("sp.sp_campaign")));
                        preUp.setString(2, cvth.ASCII2Unicode(rs1.getString("s.s_campaignname")));
                        preUp.setString(3, cvth.ASCII2Unicode(rs1.getString("sp.sp_code")));
                        preUp.setString(4, cvth.ASCII2Unicode(rs1.getString("sp.sp_name")));
                        preUp.setString(5, cvth.ASCII2Unicode(rs1.getString("sp.sp_startdate")));
                        preUp.setString(6, cvth.ASCII2Unicode(rs1.getString("sp.sp_enddate")));
                        preUp.setString(7, cvth.ASCII2Unicode(rs1.getString("sp.sp_day")));
                        preUp.setString(8, cvth.ASCII2Unicode(rs1.getString("sp.sp_saletype")));
                        preUp.setString(9, cvth.ASCII2Unicode(rs1.getString("sp.sp_saleitem")));
                        preUp.setString(10, cvth.ASCII2Unicode(rs1.getString("sp.sp_point")));
                        preUp.setString(11, f.convertDatesqlToShow(cvth.ASCII2Unicode(rs1.getString("sd.exp_date"))));
                        preUp.setString(12, cvth.ASCII2Unicode("3-expdate"));
                        preUp.setString(13, cvth.ASCII2Unicode("วันที่ยกเว้น"));
                        preUp.setInt(14, no++);
                        preUp.executeUpdate();
                    } while (rs1.next());
                } else {
                    do {
                        PreparedStatement preUp = dbUtility.con.prepareStatement(inst);
                        preUp.setString(1, rs1.getString("sp.sp_campaign"));
                        preUp.setString(2, rs1.getString("s.s_campaignname"));
                        preUp.setString(3, rs1.getString("sp.sp_code"));
                        preUp.setString(4, rs1.getString("sp.sp_name"));
                        preUp.setString(5, rs1.getString("sp.sp_startdate"));
                        preUp.setString(6, rs1.getString("sp.sp_enddate"));
                        preUp.setString(7, rs1.getString("sp.sp_day"));
                        preUp.setString(8, rs1.getString("sp.sp_saletype"));
                        preUp.setString(9, rs1.getString("sp.sp_saleitem"));
                        preUp.setString(10, rs1.getString("sp.pt_point"));
                        preUp.setString(11, f.convertDatesqlToShow(rs1.getString("sd.exp_date")));
                        preUp.setString(12, "3-expdate");
                        preUp.setString(13, "วันที่ยกเว้น");
                        preUp.setInt(14, no++);
                        preUp.executeUpdate();
                    } while (rs1.next());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void CheckStamptempReport() {
        try {
            String sql = "select * from stamptempreport";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
        } catch (Exception e) {
            try {
                String creat = "CREATE TABLE  `myborsys`.`stamptempreport` ("
                        + "  `s_no` varchar(6) NOT NULL DEFAULT '',"
                        + "  `s_code` varchar(6) NOT NULL DEFAULT '',"
                        + "  `s_name` varchar(50) NOT NULL DEFAULT '',"
                        + "  `st_code` varchar(6) NOT NULL DEFAULT '',"
                        + "  `st_name` varchar(50) NOT NULL DEFAULT '',"
                        + "  `st_startdate` date NOT NULL DEFAULT '1900-01-01',"
                        + "  `st_enddate` date NOT NULL DEFAULT '1900-01-01',"
                        + "  `st_day` varchar(50) NOT NULL DEFAULT '',"
                        + "  `st_saletype` varchar(50) NOT NULL DEFAULT '',"
                        + "  `st_saleitem` int(10) NOT NULL DEFAULT '0',"
                        + "  `st_point` int(10) NOT NULL DEFAULT '0',"
                        + "  `description` varchar(100) NOT NULL DEFAULT '',"
                        + "  `faggroup` varchar(20) NOT NULL DEFAULT '',"
                        + "  `fagdesc` varchar(100) NOT NULL DEFAULT '',"
                        + "  PRIMARY KEY (`s_code`, `st_code`, `faggroup`, `description`)"
                        + ") ENGINE=MyISAM DEFAULT CHARSET=utf8";
                PreparedStatement pre1 = dbUtility.con.prepareStatement(creat);
                pre1.executeUpdate();
            } catch (Exception ex) {
            }
        }
    }

    private boolean haveFixBranchGroup(String scode, String stcode) {
        boolean isHave = false;
        try {
            String sql = "select * from stamppro_linkbgroup where s_code='" + scode + "' and sp_code='" + stcode + "' ";
            PreparedStatement pre1 = dbUtility.con.prepareStatement(sql);
            ResultSet rs1 = pre1.executeQuery();
            rs1.first();
            if (rs1.getRow() != 0) {
                isHave = true;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return isHave;
    }

    private void ProcessPrintBean() {
        try {
            strFrom = txtSFrom.getText().trim();
            strTo = txtSTo.getText().trim();
            strPFrom = txtPFrom.getText().trim();
            strPTo = txtPTo.getText().trim();
            strDate1 = txtDateStr1.getText();
            strDate2 = txtDateStr2.getText();

            if (strTo.equals("")) {
                strTo = "ZZZ";
            }

            if (strPTo.equals("")) {
                strPTo = "ZZZ";
            }

            if (strDate1.equals("")) {
                msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง !!!");
                txtDateStr1.requestFocus();
            } else {
                strDate1 = f.convertDateshowToSQL(strDate1);
            }

            if (strDate2.equals("")) {
                msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง !!!");
                txtDateStr2.requestFocus();
            } else {
                strDate2 = f.convertDateshowToSQL(strDate2);
            }

            Map parm = new HashMap();
            JRBeanCollectionDataSource ds = null;
            ds = new JRBeanCollectionDataSource(EStamp.EStampReport.dataBeanPromotion.getCollectionPromotion(strFrom, strTo, strPFrom, strPTo, strDate1, strDate2));
            parm.put("companyName", lang.getTextCompanyReport());
            parm.put("application", new GetApplicationName().getApplicationName());
            parm.put("user", new GetUser().getUser());

            String frmName = "dForm_masterPromotion";
            String rptName = "ES_rptPromotion";
            Report_ES rpt = new Report_ES();
            rpt.viewReportbean(rptName, parm, frmName, ds);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
