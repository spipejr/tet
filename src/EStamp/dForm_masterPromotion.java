package EStamp;

import EStamp.EStampReport.Report_ES;
import Entity.BranchCodeName;
import borfunction.GetApplicationName;
import borfunction.GetUser;
import dbutility.dbUtility;
import frmlist.BrowserBranchGroup;
import frmlist.ListProduct;
import java.awt.Color;
import java.awt.Point;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import masterfile.NimbusFrame;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import report.Report;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.Export2Excel;
import utilititiesfunction.Format;
import utilititiesfunction.PUtility;
import utilititiesfunction.ThaiUtilities;
import utilititiesfunction.UserLogin;
import utilititiesfunction.getLanguage;

public class dForm_masterPromotion extends javax.swing.JDialog {

    dbUtility db = new dbUtility();
    PreparedStatement pre = null;
    PreparedStatement preUp = null;
    ResultSet rs = null;

    Statement stmt;

    showMessage msn = new showMessage();
    formatStamp f = new formatStamp();
    utilityStamp u = new utilityStamp();
    eventFocusStamp ef = new eventFocusStamp();
    ThaiUtilities cvth = new ThaiUtilities();

    getLanguage lang = new getLanguage();

    String procode = "";
    String scode = "";
    String expdate = "";

    boolean userconfig = false;

    public dForm_masterPromotion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();

        jPanel15.setVisible(false);
        clearForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        popdelBGoup = new javax.swing.JPopupMenu();
        delBgroup = new javax.swing.JMenuItem();
        delBgroupAll = new javax.swing.JMenuItem();
        popdelBranch = new javax.swing.JPopupMenu();
        delBranch = new javax.swing.JMenuItem();
        delBranchAll = new javax.swing.JMenuItem();
        popdelPlu = new javax.swing.JPopupMenu();
        delPlu = new javax.swing.JMenuItem();
        delPluAll = new javax.swing.JMenuItem();
        popdelExpdate = new javax.swing.JPopupMenu();
        delExpdate = new javax.swing.JMenuItem();
        delExpdateAll = new javax.swing.JMenuItem();
        popPrint = new javax.swing.JPopupMenu();
        popPrintSum = new javax.swing.JMenuItem();
        popPrintDetail = new javax.swing.JMenuItem();
        popdelUnlinkPlu = new javax.swing.JPopupMenu();
        delPlu1 = new javax.swing.JMenuItem();
        delPluAll1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        Tab = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_promotion = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        txt_scname = new javax.swing.JTextField();
        txt_sccode = new javax.swing.JTextField();
        btnBrowscampaign = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        txt_proname = new javax.swing.JTextField();
        txt_procode = new javax.swing.JTextField();
        txt_scdatestart = new javax.swing.JTextField();
        txt_scdateend = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txt_saleitem = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txt_salepoint = new javax.swing.JTextField();
        jPanel46 = new javax.swing.JPanel();
        txt_proday = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        day7 = new javax.swing.JCheckBox();
        day1 = new javax.swing.JCheckBox();
        day2 = new javax.swing.JCheckBox();
        day3 = new javax.swing.JCheckBox();
        day4 = new javax.swing.JCheckBox();
        day5 = new javax.swing.JCheckBox();
        day6 = new javax.swing.JCheckBox();
        btnsDay = new javax.swing.JButton();
        jPanel45 = new javax.swing.JPanel();
        txt_saletype = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        saletype1 = new javax.swing.JCheckBox();
        saletype2 = new javax.swing.JCheckBox();
        saletype3 = new javax.swing.JCheckBox();
        saletype4 = new javax.swing.JCheckBox();
        saletype5 = new javax.swing.JCheckBox();
        pro_timeend = new javax.swing.JFormattedTextField();
        pro_timestart = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        btnDate1 = new javax.swing.JButton();
        btnDate2 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        chkUsejoycard = new javax.swing.JCheckBox();
        chkUsepro = new javax.swing.JCheckBox();
        tbl_proRow = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        rdall = new javax.swing.JRadioButton();
        rdon = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        txtPro1 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        txtBGroupName = new javax.swing.JTextField();
        txtBGroup = new javax.swing.JTextField();
        btnBrowsBGroup = new javax.swing.JButton();
        btncancel1 = new javax.swing.JButton();
        btnFixbgroup = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_fixbranchgroup = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        txtBName = new javax.swing.JTextField();
        txtBCode = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_fixbranch = new javax.swing.JTable();
        btnBrowsBranch = new javax.swing.JButton();
        btnFixbranch = new javax.swing.JButton();
        btncancel2 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        txtPCode = new javax.swing.JTextField();
        txtPName = new javax.swing.JTextField();
        btnBrowsPlu = new javax.swing.JButton();
        btnFixPlu = new javax.swing.JButton();
        btncancel3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_fixplu = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtPgroup = new javax.swing.JTextField();
        btnPgroup = new javax.swing.JButton();
        btnSelectPgroupAll = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        txtPro2 = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        txtDateexcept = new javax.swing.JTextField();
        btnDateExcept = new javax.swing.JButton();
        btncancel4 = new javax.swing.JButton();
        btnBrowsDate = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_excdate = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        txtPCode1 = new javax.swing.JTextField();
        txtPName1 = new javax.swing.JTextField();
        btnBrowsPlu1 = new javax.swing.JButton();
        btnFixPlu1 = new javax.swing.JButton();
        btncancel5 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        txtPgroup1 = new javax.swing.JTextField();
        btnPgroup1 = new javax.swing.JButton();
        btnSelectPgroupAll1 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_unlinkplu = new javax.swing.JTable();
        jMenuBar2 = new javax.swing.JMenuBar();
        mainmenu = new javax.swing.JMenu();
        m1 = new javax.swing.JMenuItem();
        m2 = new javax.swing.JMenuItem();
        m3 = new javax.swing.JMenuItem();
        m4 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        delBgroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delBgroup.setText("ลบรายการที่เลือก");
        delBgroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBgroupActionPerformed(evt);
            }
        });
        popdelBGoup.add(delBgroup);

        delBgroupAll.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delBgroupAll.setText("ลบรายการทั้งหมด");
        delBgroupAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBgroupAllActionPerformed(evt);
            }
        });
        popdelBGoup.add(delBgroupAll);

        delBranch.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delBranch.setText("ลบรายการที่เลือก");
        delBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBranchActionPerformed(evt);
            }
        });
        popdelBranch.add(delBranch);

        delBranchAll.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delBranchAll.setText("ลบรายการทั้งหมด");
        delBranchAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBranchAllActionPerformed(evt);
            }
        });
        popdelBranch.add(delBranchAll);

        delPlu.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delPlu.setText("ลบรายการที่เลือก");
        delPlu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPluActionPerformed(evt);
            }
        });
        popdelPlu.add(delPlu);

        delPluAll.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delPluAll.setText("ลบรายการทั้งหมด");
        delPluAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPluAllActionPerformed(evt);
            }
        });
        popdelPlu.add(delPluAll);

        delExpdate.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delExpdate.setText("ลบรายการที่เลือก");
        delExpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delExpdateActionPerformed(evt);
            }
        });
        popdelExpdate.add(delExpdate);

        delExpdateAll.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delExpdateAll.setText("ลบรายการทั้งหมด");
        delExpdateAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delExpdateAllActionPerformed(evt);
            }
        });
        popdelExpdate.add(delExpdateAll);

        popPrint.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        popPrintSum.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        popPrintSum.setText("รายงานสรุปรายการแสตมป์โปรโมชั่น");
        popPrintSum.setToolTipText("");
        popPrintSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popPrintSumActionPerformed(evt);
            }
        });
        popPrint.add(popPrintSum);

        popPrintDetail.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        popPrintDetail.setText("รายงานแสดงรายละเอียดรายการแสตมป์โปรโมชั่น");
        popPrintDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popPrintDetailActionPerformed(evt);
            }
        });
        popPrint.add(popPrintDetail);

        delPlu1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delPlu1.setText("ลบรายการที่เลือก");
        delPlu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPlu1ActionPerformed(evt);
            }
        });
        popdelUnlinkPlu.add(delPlu1);

        delPluAll1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        delPluAll1.setText("ลบรายการทั้งหมด");
        delPluAll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPluAll1ActionPerformed(evt);
            }
        });
        popdelUnlinkPlu.add(delPluAll1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("แฟ้มข้อมูลแสตมป์โปรโมชั่นสำหรับการแจก");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAdd.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Add-icon.png"))); // NOI18N
        btnAdd.setText("เพิ่มรายการ");
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setIconTextGap(0);
        btnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 100, 67));

        btnExit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Log-Out-icon.png"))); // NOI18N
        btnExit.setText("ออก");
        btnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit.setIconTextGap(0);
        btnExit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel1.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(902, 2, 100, 67));

        btnCancel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Cancel-icon.png"))); // NOI18N
        btnCancel.setText("ยกเลิก");
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setIconTextGap(0);
        btnCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 2, 100, 67));

        btnSave.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Actions-document-save-icon1.png"))); // NOI18N
        btnSave.setText("บันทึกข้อมูล");
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setIconTextGap(0);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 2, 100, 67));

        btnDel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        btnDel.setText("ลบข้อมูล");
        btnDel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDel.setIconTextGap(0);
        btnDel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jPanel1.add(btnDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 2, 100, 67));

        btnExcel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        btnExcel.setText("Excel File");
        btnExcel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcel.setIconTextGap(0);
        btnExcel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });
        jPanel1.add(btnExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(702, 2, 100, 67));

        btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        btnPrint.setText("พิมพ์");
        btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrint.setIconTextGap(0);
        btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPrintMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnPrintMouseReleased(evt);
            }
        });
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(802, 2, 100, 67));

        Tab.setFont(new java.awt.Font("Norasi", 1, 15)); // NOI18N

        tbl_promotion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "รหัส", "ชื่อโปรโมชั่น", "แคมเปญ", "วันที่เริ่ม", "วันที่สิ้นสุด", "ใช้เฉพาะวัน", "ประเภทการขาย", "จำนวนซื้อ", "จำนวนที่แจก"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_promotion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_promotionMouseClicked(evt);
            }
        });
        tbl_promotion.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tbl_promotionAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tbl_promotion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbl_promotionKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_promotion);
        if (tbl_promotion.getColumnModel().getColumnCount() > 0) {
            tbl_promotion.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbl_promotion.getColumnModel().getColumn(1).setPreferredWidth(200);
            tbl_promotion.getColumnModel().getColumn(2).setPreferredWidth(190);
            tbl_promotion.getColumnModel().getColumn(3).setPreferredWidth(80);
            tbl_promotion.getColumnModel().getColumn(4).setPreferredWidth(80);
            tbl_promotion.getColumnModel().getColumn(5).setPreferredWidth(110);
            tbl_promotion.getColumnModel().getColumn(6).setPreferredWidth(110);
            tbl_promotion.getColumnModel().getColumn(7).setPreferredWidth(60);
            tbl_promotion.getColumnModel().getColumn(8).setPreferredWidth(60);
        }

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel54.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel54.setText("รหัสแสตมป์แคมเปญ");
        jPanel2.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 30));

        jLabel60.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel60.setText("ช่วงวันที่เริ่มโปรโมชั่น");
        jPanel2.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 110, 30));

        txt_scname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_scname.setText("txt_scname");
        jPanel2.add(txt_scname, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 290, 30));

        txt_sccode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_sccode.setText("txt_sccode");
        txt_sccode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sccodeActionPerformed(evt);
            }
        });
        txt_sccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sccodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_sccodeKeyTyped(evt);
            }
        });
        jPanel2.add(txt_sccode, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 70, 30));

        btnBrowscampaign.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnBrowscampaign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowscampaignActionPerformed(evt);
            }
        });
        jPanel2.add(btnBrowscampaign, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 30, 30));

        jLabel55.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel55.setText("รหัสแสตมป์โปรโมชั่น");
        jPanel2.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 110, 30));

        txt_proname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_proname.setText("txt_proname");
        txt_proname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_pronameKeyPressed(evt);
            }
        });
        jPanel2.add(txt_proname, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 320, 30));

        txt_procode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_procode.setText("txt_procode");
        txt_procode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_procodeKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_procodeKeyPressed(evt);
            }
        });
        jPanel2.add(txt_procode, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 70, 30));

        txt_scdatestart.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_scdatestart.setText("txt_scdatestart");
        jPanel2.add(txt_scdatestart, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 90, 30));

        txt_scdateend.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_scdateend.setText("txt_scdateend");
        jPanel2.add(txt_scdateend, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 90, 30));

        jLabel3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ถึง");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 70, 30, 30));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "อัตราการแจก Stamp", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel18.setText("จำนวนสินค้าที่ซื้อ");
        jLabel18.setName("D_disper"); // NOI18N
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 35, 100, 30));

        txt_saleitem.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_saleitem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_saleitem.setText("txt_saleitem");
        txt_saleitem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_saleitemKeyPressed(evt);
            }
        });
        jPanel3.add(txt_saleitem, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 35, 60, 30));

        jLabel17.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel17.setText("จำนวนแต้มที่แจก");
        jLabel17.setName("D_disper"); // NOI18N
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 35, 100, 30));

        txt_salepoint.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_salepoint.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_salepoint.setText("txt_salepoint");
        txt_salepoint.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_salepointKeyPressed(evt);
            }
        });
        jPanel3.add(txt_salepoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 35, 60, 30));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 520, 90));

        jPanel46.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel46.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_proday.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jPanel46.add(txt_proday, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 5, 220, 30));

        jLabel59.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel59.setText("ใช้ได้เฉพาะวัน (Day)");
        jPanel46.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        day7.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        day7.setText("วันเสาร์");
        day7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day7ActionPerformed(evt);
            }
        });
        jPanel46.add(day7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, -1, -1));

        day1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        day1.setText("วันอาทิตย์");
        day1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day1ActionPerformed(evt);
            }
        });
        jPanel46.add(day1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 40, -1, -1));

        day2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        day2.setText("วันจันทร์");
        day2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day2ActionPerformed(evt);
            }
        });
        jPanel46.add(day2, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 40, -1, -1));

        day3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        day3.setText("วันอังคาร");
        day3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day3ActionPerformed(evt);
            }
        });
        jPanel46.add(day3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, -1));

        day4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        day4.setText("วันพุธ");
        day4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day4ActionPerformed(evt);
            }
        });
        jPanel46.add(day4, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 40, -1, -1));

        day5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        day5.setText("วันพฤหัสฯ");
        day5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day5ActionPerformed(evt);
            }
        });
        jPanel46.add(day5, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 40, -1, -1));

        day6.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        day6.setText("วันศุกร์");
        day6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day6ActionPerformed(evt);
            }
        });
        jPanel46.add(day6, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 40, -1, -1));

        btnsDay.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnsDay.setText("เลือกทั้งหมด");
        btnsDay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnsDayMouseClicked(evt);
            }
        });
        btnsDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsDayActionPerformed(evt);
            }
        });
        jPanel46.add(btnsDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 5, 130, 30));

        jPanel2.add(jPanel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 105, 520, 70));

        jPanel45.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel45.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_saletype.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jPanel45.add(txt_saletype, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 5, 200, 30));

        jLabel56.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel56.setText("Sale Type");
        jPanel45.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, -1));

        saletype1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        saletype1.setText("Eat-In");
        saletype1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saletype1ActionPerformed(evt);
            }
        });
        jPanel45.add(saletype1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        saletype2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        saletype2.setText("Take Away");
        saletype2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saletype2ActionPerformed(evt);
            }
        });
        jPanel45.add(saletype2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        saletype3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        saletype3.setText("Delivery");
        saletype3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saletype3ActionPerformed(evt);
            }
        });
        jPanel45.add(saletype3, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 40, -1, -1));

        saletype4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        saletype4.setText("Pinto");
        saletype4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saletype4ActionPerformed(evt);
            }
        });
        jPanel45.add(saletype4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, -1, -1));

        saletype5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        saletype5.setText("Whole Sale");
        saletype5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saletype5ActionPerformed(evt);
            }
        });
        jPanel45.add(saletype5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        try {
            pro_timeend.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        pro_timeend.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        pro_timeend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pro_timeendKeyPressed(evt);
            }
        });
        jPanel45.add(pro_timeend, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 5, 50, 30));

        try {
            pro_timestart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        pro_timestart.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        pro_timestart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pro_timestartKeyPressed(evt);
            }
        });
        jPanel45.add(pro_timestart, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 5, 50, 30));

        jLabel2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel2.setText("เวลา");
        jPanel45.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, -1));

        jPanel2.add(jPanel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 520, 70));

        btnDate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btnDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDate1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnDate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 36, 30));

        btnDate2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btnDate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDate2ActionPerformed(evt);
            }
        });
        jPanel2.add(btnDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 36, 30));

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        chkUsejoycard.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        chkUsejoycard.setText("ใช้ร่วมกับบัตร Joy Card");

        chkUsepro.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        chkUsepro.setText("ใช้ร่วมกับโปรโมชั่นอื่นได้");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkUsepro, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkUsejoycard, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkUsepro)
                    .addComponent(chkUsejoycard))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 510, 60));

        tbl_proRow.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        tbl_proRow.setText("ทั้งหมด 00 รายการ");

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Condition Selected", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N

        jLabel25.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel25.setText("โปรโมชั่น");

        buttonGroup1.add(rdall);
        rdall.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        rdall.setText("แสดงรายการทั้งหมด");
        rdall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdallActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdon);
        rdon.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        rdon.setText("แสดงเฉพาะที่ Active");
        rdon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(55, 55, 55)
                            .addComponent(rdall))
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(4, 4, 4)
                    .addComponent(rdon)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rdall)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(jLabel25))
                        .addComponent(rdon))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tbl_proRow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbl_proRow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        Tab.addTab("Setup Stamp", jPanel6);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPro1.setBackground(new java.awt.Color(253, 226, 153));
        txtPro1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPro1.setText("txtPro1");
        jPanel8.add(txtPro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 430, 30));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Branch Group Setup", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtBGroupName.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtBGroupName.setText("txtBGroupName");
        jPanel10.add(txtBGroupName, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 30, 165, 30));

        txtBGroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtBGroup.setText("txtBGroup");
        txtBGroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBGroupKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBGroupKeyTyped(evt);
            }
        });
        jPanel10.add(txtBGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 30));

        btnBrowsBGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnBrowsBGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowsBGroupActionPerformed(evt);
            }
        });
        jPanel10.add(btnBrowsBGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 65, 30, 30));

        btncancel1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btncancel1.setText("ยกเลิก(Cancel)");
        btncancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel1ActionPerformed(evt);
            }
        });
        jPanel10.add(btncancel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 65, 100, 30));

        btnFixbgroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnFixbgroup.setText("ตกลง(OK)");
        btnFixbgroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFixbgroupActionPerformed(evt);
            }
        });
        jPanel10.add(btnFixbgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 65, 90, 30));

        tbl_fixbranchgroup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "กลุ่มสาขา", "ชื่อกลุ่มสาขา"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_fixbranchgroup.setComponentPopupMenu(popdelBGoup);
        jScrollPane3.setViewportView(tbl_fixbranchgroup);
        if (tbl_fixbranchgroup.getColumnModel().getColumnCount() > 0) {
            tbl_fixbranchgroup.getColumnModel().getColumn(0).setPreferredWidth(70);
            tbl_fixbranchgroup.getColumnModel().getColumn(1).setPreferredWidth(165);
        }

        jPanel10.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 230, 380));

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fix Branch Setup", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtBName.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtBName.setText("txtBName");
        jPanel11.add(txtBName, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 30, 255, 30));

        txtBCode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtBCode.setText("txtBCode");
        txtBCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBCodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBCodeKeyTyped(evt);
            }
        });
        jPanel11.add(txtBCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 30));

        tbl_fixbranch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "กลุ่มสาขา", "รหัสสาขา", "ชื่อสาขา"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_fixbranch.setComponentPopupMenu(popdelBranch);
        jScrollPane1.setViewportView(tbl_fixbranch);
        if (tbl_fixbranch.getColumnModel().getColumnCount() > 0) {
            tbl_fixbranch.getColumnModel().getColumn(0).setPreferredWidth(70);
            tbl_fixbranch.getColumnModel().getColumn(1).setPreferredWidth(90);
            tbl_fixbranch.getColumnModel().getColumn(2).setPreferredWidth(140);
        }

        jPanel11.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 320, 380));

        btnBrowsBranch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnBrowsBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowsBranchActionPerformed(evt);
            }
        });
        jPanel11.add(btnBrowsBranch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 65, 30, 30));

        btnFixbranch.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnFixbranch.setText("ตกลง(OK)");
        btnFixbranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFixbranchActionPerformed(evt);
            }
        });
        jPanel11.add(btnFixbranch, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 65, 90, 30));

        btncancel2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btncancel2.setText("ยกเลิก(Cancel)");
        btncancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel2ActionPerformed(evt);
            }
        });
        jPanel11.add(btncancel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 65, 100, 30));

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Setup PLU ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPCode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPCode.setText("txtPCode");
        txtPCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPCodeActionPerformed(evt);
            }
        });
        txtPCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPCodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPCodeKeyTyped(evt);
            }
        });
        jPanel12.add(txtPCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 30));

        txtPName.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPName.setText("txtPName");
        jPanel12.add(txtPName, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 30, 310, 30));

        btnBrowsPlu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnBrowsPlu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowsPluActionPerformed(evt);
            }
        });
        jPanel12.add(btnBrowsPlu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 65, 30, 30));

        btnFixPlu.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnFixPlu.setText("ตกลง(OK)");
        btnFixPlu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFixPluActionPerformed(evt);
            }
        });
        jPanel12.add(btnFixPlu, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 65, 90, 30));

        btncancel3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btncancel3.setText("ยกเลิก(Cancel)");
        btncancel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel3ActionPerformed(evt);
            }
        });
        jPanel12.add(btncancel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 65, 100, 30));

        tbl_fixplu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "กลุ่ม", "รหัสสินค้า", "ชื่อสินค้า"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_fixplu.setComponentPopupMenu(popdelPlu);
        jScrollPane4.setViewportView(tbl_fixplu);
        if (tbl_fixplu.getColumnModel().getColumnCount() > 0) {
            tbl_fixplu.getColumnModel().getColumn(0).setPreferredWidth(70);
            tbl_fixplu.getColumnModel().getColumn(1).setPreferredWidth(90);
            tbl_fixplu.getColumnModel().getColumn(2).setPreferredWidth(190);
        }

        jPanel12.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 380, 320));

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel13.setText("รหัสกลุ่ม");
        jLabel13.setName("D_groupcode"); // NOI18N
        jPanel14.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        txtPgroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPgroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPgroupKeyPressed(evt);
            }
        });
        jPanel14.add(txtPgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 90, 30));

        btnPgroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnPgroup.setFocusable(false);
        btnPgroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPgroupActionPerformed(evt);
            }
        });
        jPanel14.add(btnPgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 30, 30));

        btnSelectPgroupAll.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnSelectPgroupAll.setText("เลือกทั้งกลุ่ม");
        btnSelectPgroupAll.setName("DBbtnallgroup"); // NOI18N
        btnSelectPgroupAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectPgroupAllActionPerformed(evt);
            }
        });
        jPanel14.add(btnSelectPgroupAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 10, 180, 30));

        jPanel12.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 380, 50));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        Tab.addTab("BranchGroup & Product", jPanel5);

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPro2.setBackground(new java.awt.Color(253, 226, 153));
        txtPro2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPro2.setText("txtPro2");
        jPanel9.add(txtPro2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 430, 30));

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Except Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtDateexcept.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtDateexcept.setText("txtDateexcept");
        txtDateexcept.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateexceptFocusLost(evt);
            }
        });
        txtDateexcept.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDateexceptKeyPressed(evt);
            }
        });
        jPanel13.add(txtDateexcept, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 30));

        btnDateExcept.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnDateExcept.setText("ตกลง(OK)");
        btnDateExcept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDateExceptActionPerformed(evt);
            }
        });
        jPanel13.add(btnDateExcept, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 65, 90, 30));

        btncancel4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btncancel4.setText("ยกเลิก(Cancel)");
        btncancel4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel4ActionPerformed(evt);
            }
        });
        jPanel13.add(btncancel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 65, 100, 30));

        btnBrowsDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btnBrowsDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowsDateActionPerformed(evt);
            }
        });
        jPanel13.add(btnBrowsDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 30, 30));

        tbl_excdate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "วันที่ไม่ร่วมรายการ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_excdate.setComponentPopupMenu(popdelExpdate);
        jScrollPane5.setViewportView(tbl_excdate);
        if (tbl_excdate.getColumnModel().getColumnCount() > 0) {
            tbl_excdate.getColumnModel().getColumn(0).setPreferredWidth(200);
        }

        jPanel13.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 280, 370));

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Except PLU", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N

        txtPCode1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPCode1.setText("txtPCode1");
        txtPCode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPCode1ActionPerformed(evt);
            }
        });
        txtPCode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPCode1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPCode1KeyTyped(evt);
            }
        });

        txtPName1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPName1.setText("txtPName1");

        btnBrowsPlu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnBrowsPlu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowsPlu1ActionPerformed(evt);
            }
        });

        btnFixPlu1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnFixPlu1.setText("ตกลง(OK)");
        btnFixPlu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFixPlu1ActionPerformed(evt);
            }
        });

        btncancel5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btncancel5.setText("ยกเลิก(Cancel)");
        btncancel5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancel5ActionPerformed(evt);
            }
        });

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel14.setText("รหัสกลุ่ม");
        jLabel14.setName("D_groupcode"); // NOI18N
        jPanel16.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        txtPgroup1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPgroup1.setText("txtPgroup1");
        txtPgroup1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPgroup1KeyPressed(evt);
            }
        });
        jPanel16.add(txtPgroup1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 60, 30));

        btnPgroup1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnPgroup1.setFocusable(false);
        btnPgroup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPgroup1ActionPerformed(evt);
            }
        });
        jPanel16.add(btnPgroup1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 30, 30));

        btnSelectPgroupAll1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnSelectPgroupAll1.setText("เลือกทั้งกลุ่ม");
        btnSelectPgroupAll1.setName("DBbtnallgroup"); // NOI18N
        btnSelectPgroupAll1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectPgroupAll1ActionPerformed(evt);
            }
        });
        jPanel16.add(btnSelectPgroupAll1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 180, 30));

        tbl_unlinkplu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "กลุ่ม", "รหัสสินค้า", "ชื่อสินค้า"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_unlinkplu.setComponentPopupMenu(popdelUnlinkPlu);
        jScrollPane6.setViewportView(tbl_unlinkplu);
        if (tbl_unlinkplu.getColumnModel().getColumnCount() > 0) {
            tbl_unlinkplu.getColumnModel().getColumn(0).setPreferredWidth(70);
            tbl_unlinkplu.getColumnModel().getColumn(1).setPreferredWidth(90);
            tbl_unlinkplu.getColumnModel().getColumn(2).setPreferredWidth(190);
        }

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(btnBrowsPlu1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFixPlu1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btncancel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(txtPCode1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPName1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPCode1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPName1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(btnBrowsPlu1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFixPlu1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btncancel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(307, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Tab.addTab("Setup Except Date", jPanel4);

        mainmenu.setText("ฟังก์ชั่น");
        mainmenu.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        m1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        m1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        m1.setText("เพิ่มรายการ");
        m1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m1ActionPerformed(evt);
            }
        });
        mainmenu.add(m1);

        m2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        m2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        m2.setText("ยกเลิก");
        m2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m2ActionPerformed(evt);
            }
        });
        mainmenu.add(m2);

        m3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        m3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        m3.setText("บันทึกข้อมูล");
        m3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m3ActionPerformed(evt);
            }
        });
        mainmenu.add(m3);

        m4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        m4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        m4.setText("ลบข้อมูล");
        m4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m4ActionPerformed(evt);
            }
        });
        mainmenu.add(m4);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem4.setText("ออก");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        mainmenu.add(jMenuItem4);

        jMenuBar2.add(mainmenu);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Tab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Tab, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1028, 739));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        clearForm();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clearForm();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        checkValues();
        ProcessSave();
        loadDataProAll();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        ProcessDelete();
    }//GEN-LAST:event_btnDelActionPerformed

    private void tbl_promotionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_promotionMouseClicked
        int index = tbl_promotion.getSelectedRow();
        if (evt.getClickCount() == 2) {
            String procode = tbl_promotion.getValueAt(index, 0).toString();
            String campaign = tbl_promotion.getValueAt(index, 2).toString();
            String str[] = campaign.split("-");
            campaign = str[0];
            searchStampPromotion(campaign.trim(), procode.trim());
            openForm();
        }
    }//GEN-LAST:event_tbl_promotionMouseClicked

    private void btnBrowscampaignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowscampaignActionPerformed
        browsCampaign();
    }//GEN-LAST:event_btnBrowscampaignActionPerformed

    private void day7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day7ActionPerformed
        checkDay();
    }//GEN-LAST:event_day7ActionPerformed

    private void day1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day1ActionPerformed
        checkDay();
    }//GEN-LAST:event_day1ActionPerformed

    private void day2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day2ActionPerformed
        checkDay();
    }//GEN-LAST:event_day2ActionPerformed

    private void day3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day3ActionPerformed
        checkDay();
    }//GEN-LAST:event_day3ActionPerformed

    private void day4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day4ActionPerformed
        checkDay();
    }//GEN-LAST:event_day4ActionPerformed

    private void day5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day5ActionPerformed
        checkDay();
    }//GEN-LAST:event_day5ActionPerformed

    private void day6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day6ActionPerformed
        checkDay();
    }//GEN-LAST:event_day6ActionPerformed

    private void btnsDayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsDayMouseClicked

    }//GEN-LAST:event_btnsDayMouseClicked

    private void btnsDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsDayActionPerformed
        selectDay();
    }//GEN-LAST:event_btnsDayActionPerformed

    private void saletype1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saletype1ActionPerformed
        checkSaletype();
    }//GEN-LAST:event_saletype1ActionPerformed

    private void saletype2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saletype2ActionPerformed
        checkSaletype();
    }//GEN-LAST:event_saletype2ActionPerformed

    private void saletype3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saletype3ActionPerformed
        checkSaletype();
    }//GEN-LAST:event_saletype3ActionPerformed

    private void saletype4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saletype4ActionPerformed
        checkSaletype();
    }//GEN-LAST:event_saletype4ActionPerformed

    private void saletype5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saletype5ActionPerformed
        checkSaletype();
    }//GEN-LAST:event_saletype5ActionPerformed

    private void rdallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdallActionPerformed
        loadDataProAll();
    }//GEN-LAST:event_rdallActionPerformed

    private void rdonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdonActionPerformed
        loadDataProAll();
    }//GEN-LAST:event_rdonActionPerformed

    private void btncancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel1ActionPerformed
        txtBGroup.setText("");
        txtBGroupName.setText("");
        txtBGroup.requestFocus();
    }//GEN-LAST:event_btncancel1ActionPerformed

    private void btncancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel2ActionPerformed
        txtBCode.setText("");
        txtBName.setText("");
        txtBCode.requestFocus();
    }//GEN-LAST:event_btncancel2ActionPerformed

    private void btncancel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel3ActionPerformed
        txtPCode.setText("");
        txtPName.setText("");
        txtPgroup.setText("");
        txtPCode.requestFocus();
    }//GEN-LAST:event_btncancel3ActionPerformed

    private void btncancel4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel4ActionPerformed
        txtDateexcept.setText("");
        txtDateexcept.requestFocus();
    }//GEN-LAST:event_btncancel4ActionPerformed

    private void btnBrowsDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowsDateActionPerformed
        DateUtil.showDateChooserDialog(txtDateexcept, btnBrowsDate);
        txtDateexcept.requestFocus();
    }//GEN-LAST:event_btnBrowsDateActionPerformed

    private void txt_sccodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sccodeActionPerformed

    }//GEN-LAST:event_txt_sccodeActionPerformed

    private void txt_sccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sccodeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!txt_sccode.getText().equals("")) {
                loadStampCampaign();
                if (txt_sccode.getText().equals("")) {
                    msn.showMessageInformation("ไม่พบรหัสแสตมป์แคมเปญที่ระบุ...");
                    txt_sccode.setText("");
                    txt_sccode.requestFocus();
                } else {
                    openForm();
                    txt_procode.setEditable(true);
                    txt_procode.setFocusable(true);
                    txt_procode.requestFocus();
                }
            }
        } else if (evt.getKeyCode()
                == evt.VK_ESCAPE) {
            dispose();
        }
    }//GEN-LAST:event_txt_sccodeKeyPressed

    private void txt_procodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_procodeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            String stampcampaign = txt_sccode.getText().trim();
            String stamppro = txt_procode.getText().trim();
            if (checkStampCampaign()) {
                if (!stamppro.equals("")) {
                    searchStampPromotion(stampcampaign, stamppro);
                } else {
                    msn.showMessageInformation("กรุณาระบุรหัสแสตมป์โปรโมชั่นที่ต้องการทำรายการ...");
                    return;
                }
            } else {
                msn.showMessageInformation("กรุณาระบุรหัสแสตมป์แคมเปญที่ต้องการทำรายการ...");
                clearForm();
                return;
            }
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            dispose();
        }
    }//GEN-LAST:event_txt_procodeKeyPressed

    private void btnBrowsBGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowsBGroupActionPerformed
        Point point = btnBrowsBGroup.getLocation();
        point.setLocation(point.getX() + 1, point.getY() + 1);
        BrowserBranchGroup dialog = new BrowserBranchGroup(new NimbusFrame(), true, point);
        dialog.setVisible(true);

        try {
            if (!dialog.code.equals("")) {
                BranchCodeName hrb = dialog.getDataRecord();
                txtBGroup.setText(dialog.code);
                btnFixbgroup.requestFocus();
            } else {
                txtBGroup.requestFocus();
            }
        } catch (Exception e) {
            txtBGroup.requestFocus();
        }

//        
//        dBrows_Branchgroup frm = new dBrows_Branchgroup(null, true);
//        frm.setVisible(true);
//        txtBGroup.setText(frm.getBgcode());
//        txtBGroupName.setText(frm.getBgname());
    }//GEN-LAST:event_btnBrowsBGroupActionPerformed

    private void txtPgroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPgroupKeyPressed

    }//GEN-LAST:event_txtPgroupKeyPressed

    private void btnPgroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPgroupActionPerformed
        try {
            dBrows_Groupfile frm = new dBrows_Groupfile(null, true);
            frm.setVisible(true);
            if (frm.getGcode().length() > 0) {
                txtPgroup.setText(frm.getGcode());
            } else {
                txtPgroup.setText("");
                txtPgroup.requestFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPgroupActionPerformed

    private void btnSelectPgroupAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectPgroupAllActionPerformed
        if (tbl_fixbranchgroup.getRowCount() > 0) {
            SavePLU();
        } else {
            msn.showMessageInformation("กรุณากำหนดกลุ่มสาขาก่อน...");
            txtBGroup.requestFocus();
        }
    }//GEN-LAST:event_btnSelectPgroupAllActionPerformed

    private void btnFixbgroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFixbgroupActionPerformed
        addFixBranchGroup();
    }//GEN-LAST:event_btnFixbgroupActionPerformed

    private void btnBrowsBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowsBranchActionPerformed
        if (tbl_fixbranchgroup.getRowCount() > 0) {
            dBrows_Branch list = new dBrows_Branch(new NimbusFrame(), true, scode, procode);
            list.setVisible(true);
            loadFixbranch(scode, procode);
            txtBCode.requestFocus();
        } else {
            msn.showMessageInformation("กรุณากำหนดกลุ่มสาขาก่อน...");
            txtBGroup.requestFocus();
        }
    }//GEN-LAST:event_btnBrowsBranchActionPerformed

    private void btnBrowsPluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowsPluActionPerformed
//        dBrows_Plu dialog = new dBrows_Plu(new NimbusFrame(), true, scode, procode);
//        dialog.setVisible(true);
//        txtPCode.requestFocus();
//        loadFixPlu(scode, procode);
        if (tbl_fixbranchgroup.getRowCount() > 0) {
            BrowsPlu();
        } else {
            msn.showMessageInformation("กรุณากำหนดกลุ่มสาขาก่อน...");
            txtBGroup.requestFocus();
        }
    }//GEN-LAST:event_btnBrowsPluActionPerformed

    private void btnFixPluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFixPluActionPerformed
        String pcode = txtPCode.getText().trim();
        if (tbl_fixbranchgroup.getRowCount() > 0) {
            if (!pcode.equals("")) {
                addFixPlu(pcode);
                loadFixPlu(scode, procode);
                clearTab2();
            } else {
                msn.showMessageInformation("กรุณาระบุรหัสสินค้าที่ต้องการทำรายการ...");
                txtPCode.requestFocus();
                return;
            }
        } else {
            msn.showMessageInformation("กรุณากำหนดกลุ่มสาขาก่อน...");
            txtBGroup.requestFocus();
        }
    }//GEN-LAST:event_btnFixPluActionPerformed

    private void btnDateExceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDateExceptActionPerformed
        addExpDate();
    }//GEN-LAST:event_btnDateExceptActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        ProcessSaveExcel();
    }//GEN-LAST:event_btnExcelActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        dBrows_PrintStampPro frm = new dBrows_PrintStampPro(null, true);
        frm.setVisible(true);
//        ProcessPrintBean();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void txt_sccodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sccodeKeyTyped
        if (txt_sccode.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_sccodeKeyTyped

    private void m1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m1ActionPerformed
        btnAddActionPerformed(evt);
    }//GEN-LAST:event_m1ActionPerformed

    private void m2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m2ActionPerformed
        btnAddActionPerformed(evt);
    }//GEN-LAST:event_m2ActionPerformed

    private void m3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m3ActionPerformed
        btnSaveActionPerformed(evt);
    }//GEN-LAST:event_m3ActionPerformed

    private void m4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m4ActionPerformed
        btnDelActionPerformed(evt);
    }//GEN-LAST:event_m4ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        btnExitActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void txt_procodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_procodeKeyTyped
        if (txt_procode.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_procodeKeyTyped

    private void btnFixbranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFixbranchActionPerformed
        ProcessSaveFixBranch();
    }//GEN-LAST:event_btnFixbranchActionPerformed

    private void txtDateexceptFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateexceptFocusLost
        if (!txtDateexcept.getText().equals("")) {
            if (!checkDate(txtDateexcept)) {
                msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง...");
                txtDateexcept.setText("");
                txtDateexcept.requestFocus();
            }
        }
    }//GEN-LAST:event_txtDateexceptFocusLost

    private void txtDateexceptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateexceptKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!txtDateexcept.getText().equals("")) {
                if (!checkDate(txtDateexcept)) {
                    msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง...");
                    txtDateexcept.setText("");
                    txtDateexcept.requestFocus();
                } else {
                    btnDateExcept.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_txtDateexceptKeyPressed

    private void txtPCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPCodeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!txtPCode.getText().equals("")) {
                searchPLU(txtPCode, "fixplu");
            }
        }
    }//GEN-LAST:event_txtPCodeKeyPressed

    private void txtBGroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBGroupKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!txtBGroup.getText().equals("")) {
                searchBranchGroup();
            }
        }
    }//GEN-LAST:event_txtBGroupKeyPressed

    private void txtBCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBCodeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            ProcessSaveFixBranch();
        }
    }//GEN-LAST:event_txtBCodeKeyPressed

    private void txtBGroupKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBGroupKeyTyped
        if (txtBGroup.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtBGroupKeyTyped

    private void txtBCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBCodeKeyTyped
        if (txtBCode.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtBCodeKeyTyped

    private void txtPCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPCodeKeyTyped
        if (txtPCode.getText().length() >= 13) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPCodeKeyTyped

    private void delBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBranchActionPerformed
        deleteBranch();
    }//GEN-LAST:event_delBranchActionPerformed

    private void delBgroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBgroupActionPerformed
        deleteBGroup();
    }//GEN-LAST:event_delBgroupActionPerformed

    private void delBgroupAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBgroupAllActionPerformed
        deleteBGroupAll();
    }//GEN-LAST:event_delBgroupAllActionPerformed

    private void delBranchAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBranchAllActionPerformed
        deleteBranchAll();
    }//GEN-LAST:event_delBranchAllActionPerformed

    private void delPluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPluActionPerformed
        deletePLU();
    }//GEN-LAST:event_delPluActionPerformed

    private void delPluAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPluAllActionPerformed
        deletePLUAll();
    }//GEN-LAST:event_delPluAllActionPerformed

    private void delExpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delExpdateActionPerformed
        deleteExpDate();
    }//GEN-LAST:event_delExpdateActionPerformed

    private void delExpdateAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delExpdateAllActionPerformed
        deleteExpDateAll();
    }//GEN-LAST:event_delExpdateAllActionPerformed

    private void txt_pronameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_pronameKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            pro_timestart.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            clearForm();
        }
    }//GEN-LAST:event_txt_pronameKeyPressed

    private void txt_saleitemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saleitemKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!txt_saleitem.getText().equals("")) {
                try {
                    int sitem = Integer.parseInt(txt_saleitem.getText());
                    txt_salepoint.requestFocus();
                } catch (Exception e) {
                    msn.showMessageWarning("กรุณาระบุจำนวนซื้อเป็นตัวเลขเท่านั้น !!!");
                    txt_saleitem.setText("");
                    return;
                }
            } else {
                txt_saleitem.setText("กรุณาระบุจำนวนซื้อ !!!");
                txt_salepoint.requestFocus();
            }
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            pro_timeend.requestFocus();
        }
    }//GEN-LAST:event_txt_saleitemKeyPressed

    private void txt_salepointKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_salepointKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!txt_salepoint.getText().equals("")) {
                try {
                    int spoint = Integer.parseInt(txt_salepoint.getText());
                    btnSave.setFocusable(true);
                    btnSave.requestFocus();
                } catch (Exception e) {
                    msn.showMessageWarning("กรุณาระบุจำนวนแจกเป็นตัวเลขเท่านั้น !!!");
                    txt_salepoint.setText("");
                    return;
                }
            } else {
                txt_salepoint.setText("0");
                txt_salepoint.requestFocus();
            }
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            pro_timeend.requestFocus();
        }
    }//GEN-LAST:event_txt_salepointKeyPressed

    private void pro_timestartKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pro_timestartKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!pro_timestart.getText().equals("")) {
                if (checkTime(pro_timestart)) {
                    pro_timeend.requestFocus();
                }
            }
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txt_proname.requestFocus();
        }
    }//GEN-LAST:event_pro_timestartKeyPressed

    private void pro_timeendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pro_timeendKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!pro_timeend.getText().equals("")) {
                if (checkTime(pro_timestart)) {
                    txt_saleitem.requestFocus();
                }
            }
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txt_proname.requestFocus();
        }
    }//GEN-LAST:event_pro_timeendKeyPressed

    private void btnPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMouseClicked
//        if (evt.getClickCount() == 1) {
//            popPrint.show(btnPrint, 5, 60);
//        }
        ProcessPrint("Sum");
    }//GEN-LAST:event_btnPrintMouseClicked

    private void btnPrintMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMouseReleased

    }//GEN-LAST:event_btnPrintMouseReleased

    private void popPrintSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popPrintSumActionPerformed
        ProcessPrint("Sum");
    }//GEN-LAST:event_popPrintSumActionPerformed

    private void popPrintDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popPrintDetailActionPerformed
        ProcessPrint("Detail");
    }//GEN-LAST:event_popPrintDetailActionPerformed

    private void btnDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDate1ActionPerformed
        DateUtil.showDateChooserDialog(txt_scdatestart, btnDate1);
        txt_scdatestart.requestFocus();
    }//GEN-LAST:event_btnDate1ActionPerformed

    private void btnDate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDate2ActionPerformed
        DateUtil.showDateChooserDialog(txt_scdateend, btnDate2);
        txt_scdatestart.requestFocus();
    }//GEN-LAST:event_btnDate2ActionPerformed

    private void tbl_promotionAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tbl_promotionAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_promotionAncestorAdded

    private void txtPCode1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPCode1KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!txtPCode1.getText().equals("")) {
                searchPLU(txtPCode1, "unlinkplu");
            }
        }
    }//GEN-LAST:event_txtPCode1KeyPressed

    private void txtPCode1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPCode1KeyTyped
        if (txtPCode1.getText().length() >= 13) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPCode1KeyTyped

    private void btnBrowsPlu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowsPlu1ActionPerformed
        if (tbl_fixbranchgroup.getRowCount() > 0) {
            BrowsUnlinkPlu();
        } else {
            msn.showMessageInformation("กรุณากำหนดกลุ่มสาขาก่อน...");
            txtBGroup.requestFocus();
        }
    }//GEN-LAST:event_btnBrowsPlu1ActionPerformed

    private void btnFixPlu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFixPlu1ActionPerformed
        String pcode = txtPCode1.getText().trim();
        if (tbl_fixbranchgroup.getRowCount() > 0) {
            if (!pcode.equals("")) {
                addUnLinkPlu(pcode);
                loadUnlinkPlu(scode, procode);
                clearTab3();
            } else {
                msn.showMessageInformation("กรุณาระบุรหัสสินค้าที่ต้องการทำรายการ...");
                txtPCode1.requestFocus();
                return;
            }
        } else {
            Tab.setSelectedIndex(1);
            msn.showMessageInformation("กรุณากำหนดกลุ่มสาขาก่อน...");
            txtBGroup.requestFocus();
        }
    }//GEN-LAST:event_btnFixPlu1ActionPerformed

    private void btncancel5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancel5ActionPerformed
        txtPCode1.setText("");
        txtPName1.setText("");
        txtPgroup1.setText("");
        txtPCode1.requestFocus();
    }//GEN-LAST:event_btncancel5ActionPerformed

    private void txtPgroup1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPgroup1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPgroup1KeyPressed

    private void btnPgroup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPgroup1ActionPerformed
        try {
            dBrows_Groupfile frm = new dBrows_Groupfile(null, true);
            frm.setVisible(true);
            if (frm.getGcode().length() > 0) {
                txtPgroup1.setText(frm.getGcode());
            } else {
                txtPgroup1.setText("");
                txtPgroup1.requestFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPgroup1ActionPerformed

    private void btnSelectPgroupAll1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectPgroupAll1ActionPerformed
        if (tbl_fixbranchgroup.getRowCount() > 0) {
            SaveUnlinkPLU();
        } else {
            Tab.setSelectedIndex(1);
            msn.showMessageInformation("กรุณากำหนดกลุ่มสาขาก่อน...");
            txtBGroup.requestFocus();
        }
    }//GEN-LAST:event_btnSelectPgroupAll1ActionPerformed

    private void txtPCode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPCode1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPCode1ActionPerformed

    private void txtPCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPCodeActionPerformed

    private void delPlu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPlu1ActionPerformed
        deleteUnlinkPLU();
    }//GEN-LAST:event_delPlu1ActionPerformed

    private void delPluAll1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPluAll1ActionPerformed
        deleteUnlinkPLUAll();
    }//GEN-LAST:event_delPluAll1ActionPerformed

    private void tbl_promotionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_promotionKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_promotionKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dForm_masterPromotion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dForm_masterPromotion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dForm_masterPromotion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dForm_masterPromotion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dForm_masterPromotion dialog = new dForm_masterPromotion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBrowsBGroup;
    private javax.swing.JButton btnBrowsBranch;
    private javax.swing.JButton btnBrowsDate;
    private javax.swing.JButton btnBrowsPlu;
    private javax.swing.JButton btnBrowsPlu1;
    private javax.swing.JButton btnBrowscampaign;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDate1;
    private javax.swing.JButton btnDate2;
    private javax.swing.JButton btnDateExcept;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFixPlu;
    private javax.swing.JButton btnFixPlu1;
    private javax.swing.JButton btnFixbgroup;
    private javax.swing.JButton btnFixbranch;
    private javax.swing.JButton btnPgroup;
    private javax.swing.JButton btnPgroup1;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSelectPgroupAll;
    private javax.swing.JButton btnSelectPgroupAll1;
    private javax.swing.JButton btncancel1;
    private javax.swing.JButton btncancel2;
    private javax.swing.JButton btncancel3;
    private javax.swing.JButton btncancel4;
    private javax.swing.JButton btncancel5;
    private javax.swing.JButton btnsDay;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkUsejoycard;
    private javax.swing.JCheckBox chkUsepro;
    private javax.swing.JCheckBox day1;
    private javax.swing.JCheckBox day2;
    private javax.swing.JCheckBox day3;
    private javax.swing.JCheckBox day4;
    private javax.swing.JCheckBox day5;
    private javax.swing.JCheckBox day6;
    private javax.swing.JCheckBox day7;
    private javax.swing.JMenuItem delBgroup;
    private javax.swing.JMenuItem delBgroupAll;
    private javax.swing.JMenuItem delBranch;
    private javax.swing.JMenuItem delBranchAll;
    private javax.swing.JMenuItem delExpdate;
    private javax.swing.JMenuItem delExpdateAll;
    private javax.swing.JMenuItem delPlu;
    private javax.swing.JMenuItem delPlu1;
    private javax.swing.JMenuItem delPluAll;
    private javax.swing.JMenuItem delPluAll1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JMenuItem m1;
    private javax.swing.JMenuItem m2;
    private javax.swing.JMenuItem m3;
    private javax.swing.JMenuItem m4;
    private javax.swing.JMenu mainmenu;
    private javax.swing.JPopupMenu popPrint;
    private javax.swing.JMenuItem popPrintDetail;
    private javax.swing.JMenuItem popPrintSum;
    private javax.swing.JPopupMenu popdelBGoup;
    private javax.swing.JPopupMenu popdelBranch;
    private javax.swing.JPopupMenu popdelExpdate;
    private javax.swing.JPopupMenu popdelPlu;
    private javax.swing.JPopupMenu popdelUnlinkPlu;
    private javax.swing.JFormattedTextField pro_timeend;
    private javax.swing.JFormattedTextField pro_timestart;
    private javax.swing.JRadioButton rdall;
    private javax.swing.JRadioButton rdon;
    private javax.swing.JCheckBox saletype1;
    private javax.swing.JCheckBox saletype2;
    private javax.swing.JCheckBox saletype3;
    private javax.swing.JCheckBox saletype4;
    private javax.swing.JCheckBox saletype5;
    private javax.swing.JTable tbl_excdate;
    private javax.swing.JTable tbl_fixbranch;
    private javax.swing.JTable tbl_fixbranchgroup;
    private javax.swing.JTable tbl_fixplu;
    private javax.swing.JLabel tbl_proRow;
    private javax.swing.JTable tbl_promotion;
    private javax.swing.JTable tbl_unlinkplu;
    private javax.swing.JTextField txtBCode;
    private javax.swing.JTextField txtBGroup;
    private javax.swing.JTextField txtBGroupName;
    private javax.swing.JTextField txtBName;
    private javax.swing.JTextField txtDateexcept;
    private javax.swing.JTextField txtPCode;
    private javax.swing.JTextField txtPCode1;
    private javax.swing.JTextField txtPName;
    private javax.swing.JTextField txtPName1;
    private javax.swing.JTextField txtPgroup;
    private javax.swing.JTextField txtPgroup1;
    private javax.swing.JTextField txtPro1;
    private javax.swing.JTextField txtPro2;
    private javax.swing.JTextField txt_procode;
    private javax.swing.JTextField txt_proday;
    private javax.swing.JTextField txt_proname;
    private javax.swing.JTextField txt_saleitem;
    private javax.swing.JTextField txt_salepoint;
    private javax.swing.JTextField txt_saletype;
    private javax.swing.JTextField txt_sccode;
    private javax.swing.JTextField txt_scdateend;
    private javax.swing.JTextField txt_scdatestart;
    private javax.swing.JTextField txt_scname;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel modelP;

    private void resetTablePromotion() {
        int rowCount = modelP.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            modelP.removeRow(0);
        }
    }

    private void setTablePromotion() {
        modelP = (DefaultTableModel) tbl_promotion.getModel();
        tbl_promotion.setShowGrid(true);
        tbl_promotion.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl_promotion.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl_promotion.setRowSelectionAllowed(true);
        tbl_promotion.setShowGrid(true);
        tbl_promotion.setBackground(Color.WHITE);
        tbl_promotion.setGridColor(Color.LIGHT_GRAY);

        JTableHeader header = tbl_promotion.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl_promotion.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tbl_promotion.setRowHeight(25);
        tbl_promotion.setAutoCreateRowSorter(true);

        ((DefaultTableCellRenderer) tbl_promotion.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
        DecimalFormat IntegerFmt = new DecimalFormat("##,###,##0");
        DecimalFormat PersentFmt = new DecimalFormat("#,##0.00%");

        TableColumnModel tcm = tbl_promotion.getColumnModel();

        DefaultTableCellRenderer d;

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(3).setCellRenderer(d);
        tcm.getColumn(4).setCellRenderer(d);

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEFT);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(2).setCellRenderer(d);
        tcm.getColumn(5).setCellRenderer(d);
        tcm.getColumn(6).setCellRenderer(d);

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.RIGHT);
        tcm.getColumn(7).setCellRenderer(d);
        tcm.getColumn(8).setCellRenderer(d);
    }

    private void clearForm() {
        Tab.setSelectedIndex(0);
        Tab.setEnabledAt(0, true);
        Tab.setEnabledAt(1, false);
        Tab.setEnabledAt(2, false);
        Tab.setFocusable(false);

        txt_sccode.setText("");
        txt_sccode.setEditable(true);
        txt_sccode.setFocusable(true);
        txt_sccode.requestFocus();
        txt_sccode.setBackground(Color.WHITE);
        txt_scname.setText("");
        txt_scname.setEditable(false);
        txt_scname.setFocusable(false);
        txt_scname.setBackground(Color.WHITE);
        txt_procode.setText("");
        txt_procode.setBackground(Color.WHITE);
        txt_proname.setText("");
        txt_scdatestart.setText("");
        txt_scdatestart.setEditable(false);
        txt_scdatestart.setFocusable(false);
        txt_scdateend.setText("");
        txt_scdateend.setEditable(false);
        txt_scdateend.setFocusable(false);
        txt_scdatestart.setText(Format.dateFmtShow.format(new java.util.Date()));
        txt_scdateend.setText(Format.dateFmtShow.format(new java.util.Date()));

        txt_proday.setText("");
        txt_proday.setFocusable(false);
        txt_saletype.setText("");
        txt_saletype.setFocusable(false);
        pro_timestart.setText("00:00");
        pro_timeend.setText("00:00");
        txt_saleitem.setText("0");
        txt_salepoint.setText("0");
        chkUsepro.setSelected(false);
        chkUsejoycard.setSelected(false);

        txtPro1.setText("");
        txtPro1.setFocusable(false);
        txtPro2.setText("");
        txtPro2.setFocusable(false);

        rdon.setSelected(true);

        btnAdd.setFocusable(false);
        btnCancel.setFocusable(false);
        btnSave.setFocusable(false);
        btnDel.setFocusable(false);
        btnExcel.setFocusable(false);
        btnPrint.setFocusable(false);
        btnExit.setFocusable(false);
        btnBrowscampaign.setFocusable(false);
        btnsDay.setFocusable(false);

        day1.setSelected(false);
        day2.setSelected(false);
        day3.setSelected(false);
        day4.setSelected(false);
        day5.setSelected(false);
        day6.setSelected(false);
        day7.setSelected(false);

        saletype1.setSelected(false);
        saletype2.setSelected(false);
        saletype3.setSelected(false);
        saletype4.setSelected(false);
        saletype5.setSelected(false);

        selectDay();
        setEvenfocus();
        setTablePromotion();
        loadDataProAll();
        clearTab1();
        clearTab2();
        clearTab3();
        checkuserconfig();
    }

    private void browsCampaign() {
        try {
            dBrows_Campaign frm = new dBrows_Campaign(null, true);
            frm.setVisible(true);
            if (frm.getSccode().length() > 0) {
                txt_sccode.setText(frm.getSccode());
                txt_scname.setText(frm.getScname());
//                txt_scdatestart.setText(frm.getScdateStr());
//                txt_scdateend.setText(frm.getScdateEnd());
                txt_sccode.requestFocus();
            }
        } catch (Exception e) {
            msn.showMessageWarning(e.getMessage());
        }
    }

    private void ProcessSave() {
        String campaigncode = txt_sccode.getText().trim();
        String procode = txt_procode.getText().trim();
        String proname = txt_proname.getText();
        String dateS = f.convertDateshowToSQL(txt_scdatestart.getText().trim());
        String dateE = f.convertDateshowToSQL(txt_scdateend.getText().trim());
        String pday = txt_proday.getText();
        String saletype = txt_saletype.getText();
        String timeS = pro_timestart.getText();
        String timeE = pro_timeend.getText();
        String saleitem = txt_saleitem.getText();
        String salepoint = txt_salepoint.getText();
        String usepro = "N";
        String usejoycard = "N";

        if (chkUsepro.isSelected()) {
            usepro = "Y";
        }

        if (chkUsejoycard.isSelected()) {
            usejoycard = "Y";
        }

        try {
            String sql = "select * from stamppromotion where sp_campaign ='" + campaigncode + "' and sp_code='" + procode + "' ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    String upd = "update  stamppromotion set sp_name=?, sp_startdate=?, sp_enddate=?, sp_day=?, sp_saletype=?, "
                            + "sp_saletimeS=?, sp_saletimeE=?, sp_saleitem=?, sp_point=?, sp_usepro=?, sp_joycard=? "
                            + "where sp_campaign ='" + cvth.Unicode2ASCII(campaigncode) + "' "
                            + "and sp_code='" + cvth.Unicode2ASCII(procode) + "' ";
                    preUp = dbUtility.con.prepareStatement(upd);
                    preUp.setString(1, cvth.Unicode2ASCII(proname));
                    preUp.setString(2, cvth.Unicode2ASCII(dateS));
                    preUp.setString(3, cvth.Unicode2ASCII(dateE));
                    preUp.setString(4, cvth.Unicode2ASCII(pday));
                    preUp.setString(5, cvth.Unicode2ASCII(saletype));
                    preUp.setString(6, cvth.Unicode2ASCII(timeS));
                    preUp.setString(7, cvth.Unicode2ASCII(timeE));
                    preUp.setString(8, cvth.Unicode2ASCII(saleitem));
                    preUp.setString(9, cvth.Unicode2ASCII(salepoint));
                    preUp.setString(10, cvth.Unicode2ASCII(usepro));
                    preUp.setString(11, cvth.Unicode2ASCII(usejoycard));
                    preUp.executeUpdate();
                } else {
                    String upd = "update  stamppromotion set sp_name=?, sp_startdate=?, sp_enddate=?, sp_day=?, sp_saletype=?, "
                            + "sp_saletimeS=?, sp_saletimeE=?, sp_saleitem=?, sp_point=?, sp_usepro=?, sp_joycard=? "
                            + "where sp_campaign ='" + campaigncode + "' and sp_code='" + procode + "' ";
                    preUp = dbUtility.con.prepareStatement(upd);
                    preUp.setString(1, proname);
                    preUp.setString(2, dateS);
                    preUp.setString(3, dateE);
                    preUp.setString(4, pday);
                    preUp.setString(5, saletype);
                    preUp.setString(6, timeS);
                    preUp.setString(7, timeE);
                    preUp.setString(8, saleitem);
                    preUp.setString(9, salepoint);
                    preUp.setString(10, usepro);
                    preUp.setString(11, usejoycard);
                    preUp.executeUpdate();
                }
            } else {
                String inst = "insert into stamppromotion(sp_name, sp_startdate, sp_enddate, sp_day, sp_saletype,"
                        + "sp_saletimeS, sp_saletimeE, sp_saleitem, sp_point, sp_campaign, sp_code, sp_usepro,sp_joycard) "
                        + "values(?,?,?,?,?,?,?,?,?,?,?,?,?)";
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    preUp = dbUtility.con.prepareStatement(inst);
                    preUp.setString(1, cvth.Unicode2ASCII(proname));
                    preUp.setString(2, cvth.Unicode2ASCII(dateS));
                    preUp.setString(3, cvth.Unicode2ASCII(dateE));
                    preUp.setString(4, cvth.Unicode2ASCII(pday));
                    preUp.setString(5, cvth.Unicode2ASCII(saletype));
                    preUp.setString(6, cvth.Unicode2ASCII(timeS));
                    preUp.setString(7, cvth.Unicode2ASCII(timeE));
                    preUp.setString(8, cvth.Unicode2ASCII(saleitem));
                    preUp.setString(9, cvth.Unicode2ASCII(salepoint));
                    preUp.setString(10, cvth.Unicode2ASCII(campaigncode));
                    preUp.setString(11, cvth.Unicode2ASCII(procode));
                    preUp.setString(12, cvth.Unicode2ASCII(usepro));
                    preUp.setString(13, cvth.Unicode2ASCII(usejoycard));
                    preUp.executeUpdate();
                } else {
                    preUp = dbUtility.con.prepareStatement(inst);
                    preUp.setString(1, proname);
                    preUp.setString(2, dateS);
                    preUp.setString(3, dateE);
                    preUp.setString(4, pday);
                    preUp.setString(5, saletype);
                    preUp.setString(6, timeS);
                    preUp.setString(7, timeE);
                    preUp.setString(8, saleitem);
                    preUp.setString(9, salepoint);
                    preUp.setString(10, campaigncode);
                    preUp.setString(11, procode);
                    preUp.setString(12, usepro);
                    preUp.setString(13, usejoycard);
                    preUp.executeUpdate();
                }
            }
            msn.showMessageInformation("บันทึกข้อมูลเรียบร้อยแล้ว...");
            txt_proname.requestFocus();
            openForm();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void ProcessDelete() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        try {

            int confirm = msn.showMessageConfirm("Yes", "No", "คุณต้องการลบรหัสโปรโมชั่น " + procode + " ใช่หรือไม่ ...?");
            if (confirm != 0) {
                return;
            }

            String sql = "delete from stamppromotion  where sp_campaign='" + scode + "' and sp_code='" + procode + "' ";
            String sql1 = "delete from stamppro_linkbgroup  where s_code='" + scode + "' and sp_code='" + procode + "' ";
            String sql2 = "delete from stamppro_linkbranch  where s_code='" + scode + "' and sp_code='" + procode + "' ";
            String sql3 = "delete from stamppro_linkplu  where s_code='" + scode + "' and sp_code='" + procode + "' ";
            String sql4 = "delete from stamppro_exceptdate  where s_code='" + scode + "' and sp_code='" + procode + "' ";

            pre = dbUtility.con.prepareStatement(sql);
            pre.executeUpdate();

            pre = dbUtility.con.prepareStatement(sql1);
            pre.executeUpdate();

            pre = dbUtility.con.prepareStatement(sql2);
            pre.executeUpdate();

            pre = dbUtility.con.prepareStatement(sql3);
            pre.executeUpdate();

            pre = dbUtility.con.prepareStatement(sql4);
            pre.executeUpdate();

            clearForm();
            msn.showMessageInformation("ลบรหัสโปรโมชั่น " + procode + " เรียบร้อยแล้ว...");

        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void selectDay() {
        boolean sDay;
        if (btnsDay.getText().equals("ยกเลิกทั้งหมด")) {
            btnsDay.setText("เลือกทั้งหมด");
            sDay = false;
        } else {
            btnsDay.setText("ยกเลิกทั้งหมด");
            sDay = true;
        }
        day1.setSelected(sDay);
        day2.setSelected(sDay);
        day3.setSelected(sDay);
        day4.setSelected(sDay);
        day5.setSelected(sDay);
        day6.setSelected(sDay);
        day7.setSelected(sDay);
        checkDay();
    }

    private void checkDay() {
        String pid = txt_procode.getText().trim();
        if (pid.length() > 0) {
            String day = "";
            if (day1.isSelected()) {
                day += ",Sun";
            }
            if (day2.isSelected()) {
                day += ",Mon";
            }
            if (day3.isSelected()) {
                day += ",Tue";
            }
            if (day4.isSelected()) {
                day += ",Wed";
            }
            if (day5.isSelected()) {
                day += ",Thu";
            }
            if (day6.isSelected()) {
                day += ",Fri";
            }
            if (day7.isSelected()) {
                day += ",Sat";
            }
            txt_proday.setText(day);

            if (day.length() >= 28) {
                btnsDay.setText("ยกเลิกทั้งหมด");
            } else {
                btnsDay.setText("เลือกทั้งหมด");
            }
        } else {
            txt_procode.requestFocus();
        }
    }

    private void checkSaletype() {
        String pid = txt_procode.getText().trim();
        if (pid.length() > 0) {
            String saletype = "";
            if (saletype1.isSelected()) {
                saletype += ",E";
            }
            if (saletype2.isSelected()) {
                saletype += ",T";
            }
            if (saletype3.isSelected()) {
                saletype += ",D";
            }
            if (saletype4.isSelected()) {
                saletype += ",P";
            }
            if (saletype5.isSelected()) {
                saletype += ",W";
            }
            txt_saletype.setText(saletype);
        } else {
            txt_procode.requestFocus();
        }
    }

    private void clearTab1() {
        txt_procode.setEnabled(false);
        txt_proname.setEnabled(false);
        txt_scdatestart.setEnabled(false);
        txt_scdateend.setEnabled(false);
        txt_proday.setEnabled(false);
        btnsDay.setEnabled(false);
        day1.setEnabled(false);
        day2.setEnabled(false);
        day3.setEnabled(false);
        day4.setEnabled(false);
        day5.setEnabled(false);
        day6.setEnabled(false);
        day7.setEnabled(false);
        txt_saletype.setEnabled(false);
        pro_timestart.setEnabled(false);
        pro_timeend.setEnabled(false);
        saletype1.setEnabled(false);
        saletype2.setEnabled(false);
        saletype3.setEnabled(false);
        saletype4.setEnabled(false);
        saletype5.setEnabled(false);
        txt_saleitem.setEnabled(false);
        txt_salepoint.setEnabled(false);

        chkUsepro.setEnabled(false);
        chkUsejoycard.setEnabled(false);
    }

    private void clearTab2() {
        txtBGroup.setText("");
        txtBGroupName.setText("");
        txtBGroupName.setEditable(false);
        txtBGroupName.setFocusable(false);
        btnBrowsBGroup.setFocusable(false);
        btnFixbgroup.setFocusable(false);
        btncancel1.setFocusable(false);

        txtBCode.setText("");
        txtBName.setText("");
        txtBName.setEditable(false);
        txtBName.setFocusable(false);
        btnBrowsBranch.setFocusable(false);
        btnFixbranch.setFocusable(false);
        btncancel2.setFocusable(false);

        txtPCode.setText("");
        txtPName.setText("");
        txtPName.setEditable(false);
        txtPName.setFocusable(false);
        btnBrowsPlu.setFocusable(false);
        btnFixPlu.setFocusable(false);
        btncancel3.setFocusable(false);

        txtPgroup.setText("");
        btnPgroup.setFocusable(false);
        btnSelectPgroupAll.setFocusable(false);
    }

    private void clearTab3() {
        txtPCode1.setText("");
        txtPName1.setText("");
        btnBrowsPlu1.setFocusable(false);
        btnFixPlu1.setFocusable(false);
        btncancel5.setFocusable(false);
        txtPCode1.requestFocus();

        txtPgroup1.setText("");
        btnPgroup1.setFocusable(false);
        btnSelectPgroupAll1.setFocusable(false);

        txtDateexcept.setText("");
        btnBrowsDate.setFocusable(false);
        btnDateExcept.setFocusable(false);
        btncancel4.setFocusable(false);
    }

    private void loadDataProAll() {
        resetTablePromotion();
        String sccode = txt_sccode.getText().trim();
        String procode = txt_procode.getText().trim();
        String sql = "";
        if (rdall.isSelected()) {
            sql = "select * from stamppromotion sp "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "order by sp.sp_campaign, sp.sp_code";
        } else {
            sql = "select * from stamppromotion sp "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where sp_enddate>= '" + f.dateFmtSQL(new Date()) + "' order by sp.sp_campaign, sp.sp_code";
        }

        try {
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        modelP.addRow(new Object[]{
                            cvth.ASCII2Unicode(rs.getString("sp.sp_code")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_name")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + " - " + cvth.ASCII2Unicode(rs.getString("s.s_campaignname")),
                            cvth.ASCII2Unicode(f.convertDatesqlToShow(rs.getString("sp.sp_startdate"))),
                            cvth.ASCII2Unicode(f.convertDatesqlToShow(rs.getString("sp.sp_enddate"))),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_day")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_saletype")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_saleitem")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_point"))
                        });
                    } while (rs.next());
                } else {
                    do {
                        modelP.addRow(new Object[]{
                            rs.getString("sp.sp_code"),
                            rs.getString("sp.sp_name"),
                            rs.getString("sp.sp_campaign") + " - " + rs.getString("s.s_campaignname"),
                            f.convertDatesqlToShow(rs.getString("sp.sp_startdate")),
                            f.convertDatesqlToShow(rs.getString("sp.sp_enddate")),
                            rs.getString("sp.sp_day"),
                            rs.getString("sp.sp_saletype"),
                            rs.getString("sp.sp_saleitem"),
                            rs.getString("sp.sp_point")
                        });
                    } while (rs.next());
                }
            }
            tbl_proRow.setText("ทั้งหมด " + tbl_promotion.getRowCount() + " รายการ");
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void openForm() {
        txt_sccode.setEditable(false);
        txt_sccode.setFocusable(false);
        txt_sccode.setBackground(colorDisable());
        txt_scname.setFocusable(false);
        txt_scname.setBackground(colorDisable());

        txtPro1.setText(txt_procode.getText() + " - " + txt_proname.getText());
        txtPro2.setText(txt_procode.getText() + " - " + txt_proname.getText());

        openTab1();
    }

    public Color colorDisable() {
        return new Color(255, 245, 131);
    }

    private void loadStampCampaign() {
        String campaigncode = txt_sccode.getText().trim();
        try {
            String sql = "select * from stampcampaign where s_campaigncode ='" + campaigncode + "'  ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    txt_sccode.setText(cvth.ASCII2Unicode(rs.getString("s_campaigncode")));
                    txt_scname.setText(cvth.ASCII2Unicode(rs.getString("s_campaignname")));
                } else {
                    txt_sccode.setText(rs.getString("s_campaigncode"));
                    txt_scname.setText(rs.getString("s_campaignname"));
                }
//                txt_scdatestart.setText(f.convertDatesqlToShow(rs.getString("s_campaignstart")));
//                txt_scdateend.setText(f.convertDatesqlToShow(rs.getString("s_campaignend")));
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void searchStampPromotion(String _campaigncode, String _procode) {
        clearChkboxDay();
        clearChkboxSaletype();
        String day = "";
        String sale = "";
        try {
            String sql = "select * from stamppromotion sp "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where sp.sp_campaign ='" + _campaigncode + "' and sp.sp_code='" + _procode + "' ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    txt_sccode.setText(cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")));
                    txt_scname.setText(cvth.ASCII2Unicode(rs.getString("s.s_campaignname")));
                    txt_scdatestart.setText(cvth.ASCII2Unicode(f.convertDatesqlToShow(rs.getString("sp.sp_startdate"))));
                    txt_scdateend.setText(cvth.ASCII2Unicode(f.convertDatesqlToShow(rs.getString("sp.sp_enddate"))));
                    txt_procode.setText(cvth.ASCII2Unicode(rs.getString("sp.sp_code")));
                    txt_proname.setText(cvth.ASCII2Unicode(rs.getString("sp.sp_name")));
                    txt_proday.setText(cvth.ASCII2Unicode(rs.getString("sp.sp_day")));
                    txt_saletype.setText(cvth.ASCII2Unicode(rs.getString("sp.sp_saletype")));

                    pro_timestart.setText(cvth.ASCII2Unicode(rs.getString("sp.sp_saletimeS")));
                    pro_timeend.setText(cvth.ASCII2Unicode(rs.getString("sp.sp_saletimeE")));
                    txt_saleitem.setText(cvth.ASCII2Unicode(rs.getString("sp.sp_saleitem")));
                    txt_salepoint.setText(cvth.ASCII2Unicode(rs.getString("sp.sp_point")));

                    day = txt_proday.getText(); //checkBoxboDay
                    sale = txt_saletype.getText(); //checkBoxSaletype
                } else {
                    txt_sccode.setText(rs.getString("sp.sp_campaign"));
                    txt_scname.setText(rs.getString("s.s_campaignname"));
                    txt_scdatestart.setText(f.convertDatesqlToShow(rs.getString("sp.sp_startdate")));
                    txt_scdateend.setText(f.convertDatesqlToShow(rs.getString("sp.sp_enddate")));
                    txt_procode.setText(rs.getString("sp.sp_code"));
                    txt_proname.setText(rs.getString("sp.sp_name"));
                    txt_proday.setText(rs.getString("sp.sp_day"));
                    txt_saletype.setText(rs.getString("sp.sp_saletype"));

                    pro_timestart.setText(rs.getString("sp.sp_saletimeS"));
                    pro_timeend.setText(rs.getString("sp.sp_saletimeE"));
                    txt_saleitem.setText(rs.getString("sp.sp_saleitem"));
                    txt_salepoint.setText(rs.getString("sp.sp_point"));

                    day = txt_proday.getText(); //checkBoxboDay
                    sale = txt_saletype.getText(); //checkBoxSaletype
                }

                //---------------------------------------------------------------------------------
                if (rs.getString("sp.sp_usepro").equals("N")) {
                    chkUsepro.setSelected(false);
                } else {
                    chkUsepro.setSelected(true);
                }

                if (rs.getString("sp.sp_joycard").equals("N")) {
                    chkUsejoycard.setSelected(false);
                } else {
                    chkUsejoycard.setSelected(true);
                }

                String[] out = day.split(",");
                for (int i = 0; i < out.length; i++) {
                    if (out[i].equals("Sun")) {
                        day1.setSelected(true);
                    }
                    if (out[i].equals("Mon")) {
                        day2.setSelected(true);
                    }
                    if (out[i].equals("Tue")) {
                        day3.setSelected(true);
                    }
                    if (out[i].equals("Wed")) {
                        day4.setSelected(true);
                    }
                    if (out[i].equals("Thu")) {
                        day5.setSelected(true);
                    }
                    if (out[i].equals("Fri")) {
                        day6.setSelected(true);
                    }
                    if (out[i].equals("Sat")) {
                        day7.setSelected(true);
                    }
                }
                //---------------------------------------------------------------------------------
                String[] out1 = sale.split(",");
                for (int i = 0; i < out1.length; i++) {
                    if (out1[i].equals("E")) {
                        saletype1.setSelected(true);
                    }
                    if (out1[i].equals("T")) {
                        saletype2.setSelected(true);
                    }
                    if (out1[i].equals("D")) {
                        saletype3.setSelected(true);
                    }
                    if (out1[i].equals("P")) {
                        saletype4.setSelected(true);
                    }
                    if (out1[i].equals("W")) {
                        saletype5.setSelected(true);
                    }
                }

                if (day.length() >= 28) {
                    btnsDay.setText("ยกเลิกทั้งหมด");
                } else {
                    btnsDay.setText("เลือกทั้งหมด");
                }

                procode = _procode;
                openTab();
            }
            txt_procode.setBackground(colorDisable());
            txt_procode.setEditable(false);
            txt_procode.setFocusable(false);
            txt_proname.requestFocus();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void clearChkboxDay() {
        day1.setSelected(false);
        day2.setSelected(false);
        day3.setSelected(false);
        day4.setSelected(false);
        day5.setSelected(false);
        day6.setSelected(false);
        day7.setSelected(false);
    }

    private void clearChkboxSaletype() {
        saletype1.setSelected(false);
        saletype2.setSelected(false);
        saletype3.setSelected(false);
        saletype4.setSelected(false);
        saletype5.setSelected(false);
    }

    private void setEvenfocus() {
        ef.setFocusSwing(txt_sccode);
        ef.setFocusSwing(txt_procode);
        ef.setFocusSwing(txt_proname);
        ef.setFocusSwing(pro_timestart);
        ef.setFocusSwing(pro_timeend);
        ef.setFocusSwing(txt_saleitem);
        ef.setFocusSwing(txt_salepoint);
        ef.setFocusSwing(txtBGroup);
        ef.setFocusSwing(txtBCode);
        ef.setFocusSwing(txtPCode);
        ef.setFocusSwing(txtDateexcept);
    }

    private void openTab() {
        Tab.setEnabledAt(1, true);
        Tab.setEnabledAt(2, true);

        procode = txt_procode.getText();
        scode = txt_sccode.getText();
        loadFixbranchgroup(scode, procode);
        loadFixbranch(scode, procode);
        loadFixPlu(scode, procode);
        loadUnlinkPlu(scode, procode);
        loadExceptdate(scode, procode);
    }

    DefaultTableModel modelBG;

    private void loadFixbranchgroup(String scode, String procode) {
        tbl_fixbranchgroup.setShowGrid(true);
        tbl_fixbranchgroup.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl_fixbranchgroup.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl_fixbranchgroup.setRowSelectionAllowed(true);
        tbl_fixbranchgroup.setBackground(java.awt.Color.WHITE);
        tbl_fixbranchgroup.setGridColor(java.awt.Color.gray);
        tbl_fixbranchgroup.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION); // select row (shift + row or ctrl + row)

        tbl_fixbranchgroup.setAutoCreateRowSorter(true);

        ((DefaultTableCellRenderer) tbl_fixbranchgroup.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        TableColumnModel tcm = tbl_fixbranchgroup.getColumnModel();
        DefaultTableCellRenderer d;
        JTableHeader header = tbl_fixbranchgroup.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl_fixbranchgroup.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tbl_fixbranchgroup.setRowHeight(25);

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(0).setCellRenderer(d);

        modelBG = (DefaultTableModel) tbl_fixbranchgroup.getModel();
        int rowCount = modelBG.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            modelBG.removeRow(0);
        }

        try {
            String sql = "select * from stamppro_linkbgroup sb "
                    + "left join branchgroup b on sb.bgcode = b.bgroupcode "
                    + "where sp_code='" + procode + "' and s_code='" + scode + "' ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                do {
                    modelBG.addRow(new Object[]{
                        cvth.ASCII2Unicode(rs.getString("sb.bgcode")),
                        cvth.ASCII2Unicode(rs.getString("b.bgroupname"))
                    });
                } while (rs.next());
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void addFixBranchGroup() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        String bgcode = txtBGroup.getText().trim();
        try {
            String sql = "select * from stamppro_linkbgroup where s_code='" + scode + "' and sp_code='" + procode + "' and bgcode ='" + bgcode + "' ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() == 0) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    String inst = "insert into stamppro_linkbgroup(s_code, sp_code, bgcode) values(?,?,?)";
                    preUp = dbUtility.con.prepareStatement(inst);
                    preUp.setString(1, cvth.Unicode2ASCII(scode));
                    preUp.setString(2, cvth.Unicode2ASCII(procode));
                    preUp.setString(3, cvth.Unicode2ASCII(bgcode));
                    preUp.executeUpdate();
                } else {
                    String inst = "insert into stamppro_linkbgroup(s_code, sp_code, bgcode) values(?,?,?)";
                    preUp = dbUtility.con.prepareStatement(inst);
                    preUp.setString(1, scode);
                    preUp.setString(2, procode);
                    preUp.setString(3, bgcode);
                    preUp.executeUpdate();
                }

            }
            clearTab2();
            loadFixbranchgroup(scode, procode);
            txtBGroup.requestFocus();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    DefaultTableModel modelB;

    private void loadFixbranch(String scode, String procode) {
        tbl_fixbranch.setShowGrid(true);
        tbl_fixbranch.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl_fixbranch.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl_fixbranch.setRowSelectionAllowed(true);
        tbl_fixbranch.setBackground(java.awt.Color.WHITE);
        tbl_fixbranch.setGridColor(java.awt.Color.gray);
        tbl_fixbranch.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION); // select row (shift + row or ctrl + row)

        tbl_fixbranch.setAutoCreateRowSorter(true);

        ((DefaultTableCellRenderer) tbl_fixbranch.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        TableColumnModel tcm = tbl_fixbranch.getColumnModel();
        DefaultTableCellRenderer d;
        JTableHeader header = tbl_fixbranch.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl_fixbranch.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tbl_fixbranch.setRowHeight(25);

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(0).setCellRenderer(d);

        modelB = (DefaultTableModel) tbl_fixbranch.getModel();
        int rowCount = modelB.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            modelB.removeRow(0);
        }

        try {
            String sql = "select * from stamppro_linkbranch sb "
                    + "left join branfile b on sb.bcode = b.code "
                    + "where sb.s_code='" + scode + "' and sb.sp_code='" + procode + "' order by sb.bcode";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                do {
                    modelB.addRow(new Object[]{
                        cvth.ASCII2Unicode(rs.getString("b.btype")),
                        cvth.ASCII2Unicode(rs.getString("sb.bcode")),
                        cvth.ASCII2Unicode(rs.getString("b.name"))
                    });
                } while (rs.next());
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void addFixBranch() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        String bcode = txtBCode.getText().trim();
        try {
            String sql = "select * from stamppro_linkbranch where s_code='" + scode + "' and sp_code='" + procode + "' and bcode ='" + bcode + "' ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() == 0) {
                String inst = "insert into stamppro_linkbranch(s_code, sp_code, bcode) values(?,?,?)";
                preUp = dbUtility.con.prepareStatement(inst);
                preUp.setString(1, scode);
                preUp.setString(2, procode);
                preUp.setString(3, bcode);
                preUp.executeUpdate();
            }
            clearTab2();
            loadFixbranch(scode, procode);
            txtBCode.requestFocus();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    DefaultTableModel modelPlu;

    private void loadFixPlu(String scode, String procode) {
        tbl_fixplu.setShowGrid(true);
        tbl_fixplu.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl_fixplu.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl_fixplu.setRowSelectionAllowed(true);
        tbl_fixplu.setBackground(java.awt.Color.WHITE);
        tbl_fixplu.setGridColor(java.awt.Color.gray);
        tbl_fixplu.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION); // select row (shift + row or ctrl + row)

        tbl_fixplu.setAutoCreateRowSorter(true);

        ((DefaultTableCellRenderer) tbl_fixplu.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        TableColumnModel tcm = tbl_fixplu.getColumnModel();
        DefaultTableCellRenderer d;
        JTableHeader header = tbl_fixplu.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl_fixplu.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tbl_fixplu.setRowHeight(25);

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(0).setCellRenderer(d);

        modelPlu = (DefaultTableModel) tbl_fixplu.getModel();
        int rowCount = modelPlu.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            modelPlu.removeRow(0);
        }

        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select * from stamppro_linkplu sp "
                    + "left join product p on sp.pcode = p.pcode "
                    + "where sp.sp_code='" + procode + "' and sp.s_code='" + scode + "' "
                    + "order by p.pgroup, sp.pcode ";
//            pre = dbUtility.con.prepareStatement(sql);
//            rs = pre.executeQuery();
//            rs.first();
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
//            if (rs.getRow() != 0) {
//                do {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    modelPlu.addRow(new Object[]{
                        cvth.ASCII2Unicode(rs.getString("p.pgroup")),
                        cvth.ASCII2Unicode(rs.getString("sp.pcode")),
                        cvth.ASCII2Unicode(rs.getString("p.pdesc"))
                    });
                } else {
                    modelPlu.addRow(new Object[]{
                        rs.getString("p.pgroup"),
                        rs.getString("sp.pcode"),
                        rs.getString("p.pdesc")
                    });
                }
//                } while (rs.next());
            }
            txtPCode.requestFocus();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    DefaultTableModel modelUnlinkPlu;

    private void loadUnlinkPlu(String scode, String procode) {
        tbl_unlinkplu.setShowGrid(true);
        tbl_unlinkplu.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl_unlinkplu.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl_unlinkplu.setRowSelectionAllowed(true);
        tbl_unlinkplu.setBackground(java.awt.Color.WHITE);
        tbl_unlinkplu.setGridColor(java.awt.Color.gray);
        tbl_unlinkplu.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION); // select row (shift + row or ctrl + row)

        tbl_unlinkplu.setAutoCreateRowSorter(true);

        ((DefaultTableCellRenderer) tbl_unlinkplu.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        TableColumnModel tcm = tbl_unlinkplu.getColumnModel();
        DefaultTableCellRenderer d;
        JTableHeader header = tbl_unlinkplu.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl_unlinkplu.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tbl_unlinkplu.setRowHeight(25);

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(0).setCellRenderer(d);

        modelUnlinkPlu = (DefaultTableModel) tbl_unlinkplu.getModel();
        int rowCount = modelUnlinkPlu.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            modelUnlinkPlu.removeRow(0);
        }

        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select * from stamppro_unlinkplu sp "
                    + "left join product p on sp.unpcode = p.pcode "
                    + "where sp.sp_code='" + procode + "' and sp.s_code='" + scode + "' "
                    + "order by p.pgroup, sp.unpcode ";
//            pre = dbUtility.con.prepareStatement(sql);
//            rs = pre.executeQuery();
//            rs.first();
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
//            if (rs.getRow() != 0) {
//                do {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    modelUnlinkPlu.addRow(new Object[]{
                        cvth.ASCII2Unicode(rs.getString("p.pgroup")),
                        cvth.ASCII2Unicode(rs.getString("sp.unpcode")),
                        cvth.ASCII2Unicode(rs.getString("p.pdesc"))
                    });
                } else {
                    modelUnlinkPlu.addRow(new Object[]{
                        rs.getString("p.pgroup"),
                        rs.getString("sp.unpcode"),
                        rs.getString("p.pdesc")
                    });
                }
//                } while (rs.next());
            }
            txtPCode1.requestFocus();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void addFixPlu(String pcode) {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        try {
            String sql = "select * from stamppro_linkplu where s_code='" + scode + "' and sp_code='" + procode + "' and pcode ='" + pcode + "' ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() == 0) {
                String inst = "insert into stamppro_linkplu(s_code,sp_code, pcode) values(?,?,?)";
                preUp = dbUtility.con.prepareStatement(inst);
                preUp.setString(1, scode);
                preUp.setString(2, procode);
                preUp.setString(3, pcode);
                preUp.executeUpdate();
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void addUnLinkPlu(String pcode) {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        try {
            String sql = "select * from stamppro_unlinkplu where s_code='" + scode + "' and sp_code='" + procode + "' and unpcode ='" + pcode + "' ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() == 0) {
                String inst = "insert into stamppro_unlinkplu(s_code,sp_code, unpcode) values(?,?,?)";
                preUp = dbUtility.con.prepareStatement(inst);
                preUp.setString(1, scode);
                preUp.setString(2, procode);
                preUp.setString(3, pcode);
                preUp.executeUpdate();

                txtPCode.setText("");
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void addFixPluGroup() {
        String procode = txt_procode.getText().trim();
        String gcode = txtPgroup.getText().trim();
        String pcode = "";
        try {
            String sql = "SELECT pcode FROM product  where pgroup='" + gcode + "' "
                    + "and pactive='Y' order by pgroup ";
            PreparedStatement pre1 = dbUtility.con.prepareStatement(sql);
            ResultSet rs1 = pre1.executeQuery();
//            rs1.first();
            while (rs1.next()) {
                pcode = rs1.getString("pcode");
                addFixPlu(pcode);
            }
//            if (rs1.getRow() != 0) {
//                do {
//                    pcode = rs1.getString("pcode");
//                    addFixPlu(pcode);
//                } while (rs1.next());
//            }
            loadFixPlu(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void addExpDate() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        try {
            if (checkDate()) {
                String sql = "select * from stamppro_exceptdate where s_code='" + scode + "' and sp_code='" + procode + "' "
                        + "and exp_date='" + expdate + "' order by sp_code, exp_date ";
                String ins = "insert into stamppro_exceptdate(s_code,sp_code, exp_date) values(?,?,?)";
                pre = dbUtility.con.prepareStatement(sql);
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    txtDateexcept.setText("");
                    txtDateexcept.requestFocus();
                } else {
                    preUp = dbUtility.con.prepareStatement(ins);
                    preUp.setString(1, scode);
                    preUp.setString(2, procode);
                    preUp.setString(3, expdate);
                    preUp.executeUpdate();
                }
                txtDateexcept.setText("");
                txtDateexcept.requestFocus();
                loadExceptdate(scode, procode);
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private boolean checkDate() {
        boolean chkDate = false;
        try {
            expdate = f.convertDateshowToSQL(txtDateexcept.getText().trim());
            chkDate = true;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return chkDate;
    }
    DefaultTableModel modelExpDate;

    private void loadExceptdate(String scode, String procode) {
        tbl_excdate.setShowGrid(true);
        tbl_excdate.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl_excdate.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl_excdate.setRowSelectionAllowed(true);
        tbl_excdate.setBackground(java.awt.Color.WHITE);
        tbl_excdate.setGridColor(java.awt.Color.gray);
        tbl_excdate.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION); // select row (shift + row or ctrl + row)

        tbl_excdate.setAutoCreateRowSorter(true);

        ((DefaultTableCellRenderer) tbl_excdate.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        TableColumnModel tcm = tbl_excdate.getColumnModel();
        DefaultTableCellRenderer d;
        JTableHeader header = tbl_excdate.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl_excdate.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tbl_excdate.setRowHeight(25);

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(0).setCellRenderer(d);

        modelExpDate = (DefaultTableModel) tbl_excdate.getModel();
        int rowCount = modelExpDate.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            modelExpDate.removeRow(0);
        }

        try {
            String sql = "select * from stamppro_exceptdate where s_code='" + scode + "' and sp_code='" + procode + "' order by exp_date";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                do {
                    modelExpDate.addRow(new Object[]{
                        f.convertDatesqlToShow(rs.getString("exp_date"))
                    });
                } while (rs.next());
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void ProcessSaveExcel() {
        dBrows_ExcelStampPro frm = new dBrows_ExcelStampPro(null, true, tbl_promotion);
        frm.setVisible(true);
    }

    private void ProcessPrint(String mode) {
        dBrows_PrintStampPro frm = new dBrows_PrintStampPro(null, true);
        frm.setVisible(true);
    }

    private boolean checkDate(JTextField txtdate) {
        boolean chkDate = false;
        try {
            f.convertDateshowToSQL(txtdate.getText().trim());
            chkDate = true;
        } catch (Exception e) {
//            e.printStackTrace();
        }
        return chkDate;
    }

    private void searchBranchGroup() {
        try {
            String sql = "select * from branchgroup  where bgroupcode='" + txtBGroup.getText().trim() + "' order by bgroupcode";
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                txtBGroup.setText(rs.getString("bgroupcode"));
                if (userconfig) {
                    addFixBranchGroup();
                }
            } else {
                msn.showMessageInformation("ไม่พบข้อมูลกลุ่มสินค้าที่ระบุ...");
                txtBGroup.setText("");
                txtBGroup.requestFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean checkBranch() {
        boolean chk = false;
        String sql = "select * from branfile "
                + "where code='" + txtBCode.getText().trim() + "' order by code ";
        try {
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                chk = true;
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }

        return chk;
    }

    private void searchPLU(JTextField txtField, String type) {
        try {
            String sql = "SELECT * FROM product where pcode='" + txtField.getText().trim() + "' and pactive='Y' order by pcode";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                if (type.equals("fixplu")) {
                    if (userconfig) {
                        addFixPlu(txtField.getText().trim());
                        clearTab2();
                        txtBCode.requestFocus();
                        loadFixPlu(scode, procode);
                    }
                } else {
                    if (userconfig) {
                        addUnLinkPlu(txtField.getText().trim());
                        loadUnlinkPlu(scode, procode);
                        txtField.setText("");
                        txtField.requestFocus();
                    }
                }
            } else {
                msn.showMessageWarning("ไม่พบรหัสสินค้าที่ระบุ...");
                txtField.setText("");
                txtPCode.requestFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void deleteBranch() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        int[] selectedRow = tbl_fixbranch.getSelectedRows();
        String bcode = "";
        try {
            String seek = "select * from stamppro_linkbranch where s_code='" + scode + "' and sp_code='" + procode + "' and bcode=?";
            String sql = "delete from stamppro_linkbranch where s_code='" + scode + "' and sp_code='" + procode + "' and bcode=?";

            for (int i = selectedRow.length - 1; i >= 0; i--) {
                int row = selectedRow[i];
                bcode = tbl_fixbranch.getValueAt(row, 1).toString();

                pre = dbUtility.con.prepareStatement(seek);
                pre.setString(1, bcode);
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    pre = dbUtility.con.prepareStatement(sql);
                    pre.setString(1, bcode);
                    pre.executeUpdate();
                }
            }
            loadFixbranch(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void deleteBGroup() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        int[] selectedRow = tbl_fixbranchgroup.getSelectedRows();
        String bgcode = "";
        try {
            String seek = "select * from stamppro_linkbgroup where s_code='" + scode + "' and sp_code='" + procode + "' and bgcode=?";
            String delBGroup = "delete from stamppro_linkbgroup where s_code='" + scode + "' and sp_code='" + procode + "' and bgcode=?";

            for (int i = selectedRow.length - 1; i >= 0; i--) {
                int row = selectedRow[i];
                bgcode = tbl_fixbranchgroup.getValueAt(row, 0).toString();

                pre = dbUtility.con.prepareStatement(seek);
                pre.setString(1, bgcode);
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    pre = dbUtility.con.prepareStatement(delBGroup);
                    pre.setString(1, bgcode);
                    pre.executeUpdate();
                }
            }
            loadFixbranchgroup(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void deleteBGroupAll() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        try {
            String seek = "select * from stamppro_linkbgroup where s_code='" + scode + "' and sp_code='" + procode + "' ";
            String sql = "delete from stamppro_linkbgroup where s_code='" + scode + "' and sp_code='" + procode + "' ";
            pre = dbUtility.con.prepareStatement(seek);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                pre = dbUtility.con.prepareStatement(sql);
                pre.executeUpdate();
            }
            loadFixbranchgroup(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void deleteBranchAll() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        try {
            String seek = "select * from stamppro_linkbranch where s_code='" + scode + "' and sp_code='" + procode + "' ";
            String sql = "delete from stamppro_linkbranch where s_code='" + scode + "' and sp_code='" + procode + "' ";
            pre = dbUtility.con.prepareStatement(seek);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                pre = dbUtility.con.prepareStatement(sql);
                pre.executeUpdate();
            }
            loadFixbranch(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void deletePLU() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        int[] selectedRow = tbl_fixplu.getSelectedRows();
        String pcode = "";
        try {
            String seek = "select * from stamppro_linkplu where s_code='" + scode + "' and sp_code='" + procode + "' and pcode=?";
            String sql = "delete from stamppro_linkplu where s_code='" + scode + "' and sp_code='" + procode + "' and pcode=?";

            for (int i = selectedRow.length - 1; i >= 0; i--) {
                int row = selectedRow[i];
                pcode = tbl_fixplu.getValueAt(row, 1).toString();
                pre = dbUtility.con.prepareStatement(seek);
                pre.setString(1, pcode);
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    pre = dbUtility.con.prepareStatement(sql);
                    pre.setString(1, pcode);
                    pre.executeUpdate();
                }
            }
            loadFixPlu(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void deletePLUAll() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        try {
            String seek = "select * from stamppro_linkplu where s_code='" + scode + "' and sp_code='" + procode + "' ";
            String sql = "delete from stamppro_linkplu where s_code='" + scode + "' and sp_code='" + procode + "' ";
            pre = dbUtility.con.prepareStatement(seek);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                pre = dbUtility.con.prepareStatement(sql);
                pre.executeUpdate();
            }
            loadFixPlu(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void deleteExpDate() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        int[] selectedRow = tbl_excdate.getSelectedRows();
        String expdate = "";
        try {
            String seek = "select * from stamppro_linkplu where s_code='" + scode + "' and sp_code='" + procode + "' and exp_date=?";
            String sql = "delete from stamppro_linkplu where s_code='" + scode + "' and sp_code='" + procode + "' and exp_date=?";

            for (int i = selectedRow.length - 1; i >= 0; i--) {
                int row = selectedRow[i];
                expdate = tbl_excdate.getValueAt(row, 0).toString();
                pre = dbUtility.con.prepareStatement(seek);
                pre.setString(1, f.convertDateshowToSQL(expdate));
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    pre = dbUtility.con.prepareStatement(sql);
                    pre.setString(1, f.convertDateshowToSQL(expdate));
                    pre.executeUpdate();
                }
            }
            loadExceptdate(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void deleteExpDateAll() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        try {
            String seek = "select * from stamppro_linkplu where s_code='" + scode + "' and sp_code='" + procode + "' ";
            String sql = "delete from stamppro_linkplu where s_code='" + scode + "' and sp_code='" + procode + "' ";
            pre = dbUtility.con.prepareStatement(seek);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                pre = dbUtility.con.prepareStatement(sql);
                pre.executeUpdate();
            }
            loadExceptdate(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private boolean checkTime(JFormattedTextField pro_timestart) {
        boolean chk = true;
        String _time = pro_timestart.getText();
        String str[] = _time.split(":");
        try {
            int time1 = Integer.parseInt(str[0]);
            int time2 = Integer.parseInt(str[1]);

            System.out.println("time1 " + time1);
            System.out.println("time2 " + time2);

            if (!(time1 >= 0) || !(time1 <= 24)) {
                msn.showMessageWarning("กรุณาระบุเวลาให้ถูกต้อง !!");
                pro_timestart.requestFocus();
                chk = false;
            }

            if (!(time2 >= 0) || !(time2 <= 60)) {
                msn.showMessageWarning("กรุณาระบุเวลาให้ถูกต้อง !!");
                pro_timestart.requestFocus();
                chk = false;
            }
        } catch (Exception e) {
            msn.showMessageWarning("กรุณาระบุเวลาให้ถูกต้อง !!");
            pro_timestart.requestFocus();
            chk = false;
        }

        return chk;
    }

    private void BrowsPlu() {
        Point point = btnFixPlu.getLocation();
        point.setLocation(point.getX() + 1, point.getY() + 1);
        ListProduct dialog = new ListProduct(new NimbusFrame(), true);
        dialog.setVisible(true);

        try {
            if (!dialog.code.equals("")) {
                txtPCode.setText(dialog.code);
                GetDataplu(dialog.code);
                btnFixPlu.setFocusable(true);
                btnFixPlu.requestFocus();
            } else {
                txtPCode.requestFocus();
            }
        } catch (Exception e) {
            txtPCode.requestFocus();
        }
    }

    private void BrowsUnlinkPlu() {
        Point point = btnBrowsPlu.getLocation();
        point.setLocation(point.getX() + 1, point.getY() + 1);
        ListProduct dialog = new ListProduct(new NimbusFrame(), true);
        dialog.setVisible(true);

        try {
            if (!dialog.code.equals("")) {
                txtPCode1.setText(dialog.code);
                GetDataUnlinkPlu(dialog.code);
                btnFixPlu1.setFocusable(true);
                btnFixPlu1.requestFocus();
            } else {
                txtPCode1.requestFocus();
            }
        } catch (Exception e) {
            txtPCode1.requestFocus();
        }
    }

    private void GetDataplu(String code) {
        try {
            String sql = "select * from product where PCode='" + code + "'";
            stmt = (Statement) dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next()) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    txtPCode.setText(cvth.ASCII2Unicode(rs.getString("PCode")));
                    txtPName.setText(cvth.ASCII2Unicode(rs.getString("PDesc")));
                } else {
                    txtPCode.setText(rs.getString("PCode"));
                    txtPName.setText(rs.getString("PDesc"));
                }
                btnFixPlu.setFocusable(true);
                btnFixPlu.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this, "ไม่พบข้อมูลสินค้า");
                txtPCode.requestFocus();
            }
            rs.close();
            stmt.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    private void GetDataUnlinkPlu(String code) {
        try {
            String sql = "select * from product where PCode='" + code + "'";
            stmt = (Statement) dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next()) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    txtPCode1.setText(cvth.ASCII2Unicode(rs.getString("PCode")));
                    txtPName1.setText(cvth.ASCII2Unicode(rs.getString("PDesc")));
                } else {
                    txtPCode1.setText(rs.getString("PCode"));
                    txtPName1.setText(rs.getString("PDesc"));
                }
                btnFixPlu1.setFocusable(true);
                btnFixPlu1.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this, "ไม่พบข้อมูลสินค้า");
                txtPCode1.requestFocus();
            }
            rs.close();
            stmt.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    private boolean checkbranchgroup() {
        boolean chk = false;
        String bgroup = "";
        try {
            String sql = "select * from branfile where code='" + txtBCode.getText() + "' ";
            stmt = (Statement) dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next()) {
                bgroup = rs.getString("bgroup");
                if (!bgroup.equals("")) {
                    String sqlBG = "select * from stamppro_linkbgroup where bgcode ='" + bgroup + "' and s_code='" + scode + "' and sp_code='" + procode + "' ";
                    pre = dbUtility.con.prepareStatement(sqlBG);
                    ResultSet rs1 = pre.executeQuery();
                    rs1.first();
                    if (rs1.getRow() != 0) {
                        chk = true;
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }

        return chk;
    }

    private void ProcessSaveFixBranch() {
        if (tbl_fixbranchgroup.getRowCount() > 0) {
            if (!txtBCode.getText().equals("")) {
                if (checkBranch()) {
                    if (checkbranchgroup()) {
                        if (userconfig) {
                            addFixBranch();
                        }
                    } else {
                        msn.showMessageWarning("สาขานี้ไม่มีในกลุ่มที่กำหนด...");
                        clearTab2();
                        txtBCode.requestFocus();
                    }
                } else {
                    msn.showMessageWarning("ไม่พบรหัสสาขานี้ในระบบ...");
                    clearTab2();
                    txtBCode.requestFocus();
                }
            } else {
                msn.showMessageWarning("กรุณาระบุรหัสสาขาที่ต้องการทำรายการ...");
                txtBCode.requestFocus();
            }
        } else {
            msn.showMessageWarning("กรุณากำหนดกลุ่มสาขาก่อน...");
            clearTab2();
            txtBGroup.requestFocus();
        }
    }

    private void openTab1() {
        txt_procode.setEnabled(true);
        txt_proname.setEnabled(true);
        txt_scdatestart.setEnabled(true);
        txt_scdateend.setEnabled(true);
        txt_proday.setEnabled(true);
        btnsDay.setEnabled(true);
        day1.setEnabled(true);
        day2.setEnabled(true);
        day3.setEnabled(true);
        day4.setEnabled(true);
        day5.setEnabled(true);
        day6.setEnabled(true);
        day7.setEnabled(true);
        txt_saletype.setEnabled(true);
        pro_timestart.setEnabled(true);
        pro_timeend.setEnabled(true);
        saletype1.setEnabled(true);
        saletype2.setEnabled(true);
        saletype3.setEnabled(true);
        saletype4.setEnabled(true);
        saletype5.setEnabled(true);
        txt_saleitem.setEnabled(true);
        txt_salepoint.setEnabled(true);

        chkUsepro.setEnabled(true);
        chkUsejoycard.setEnabled(true);
    }

    private boolean checkStampCampaign() {
        boolean chk = false;
        try {
            String sql = "select * from stampcampaign where s_campaigncode='" + txt_sccode.getText().trim() + "' ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                chk = true;
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }

        return chk;
    }

    private void checkValues() {
        if (txt_sccode.getText().equals("")) {
            msn.showMessageInformation("กรุณาระบุรหัสแสตมป์แคมเปญที่ต้องการทำรายการ...");
            txt_sccode.requestFocus();
            return;
        }

        if (txt_procode.getText().equals("")) {
            msn.showMessageInformation("กรุณาระบุรหัสแสตมป์โปรโมชั่นที่ต้องการทำรายการ...");
            txt_procode.requestFocus();
            return;
        }

        if (txt_scdatestart.getText().equals("")) {
            msn.showMessageInformation("กรุณาระบุวันที่เริ่มโปรโมชั่น...");
            txt_scdatestart.requestFocus();
            return;
        }

        if (txt_scdateend.getText().equals("")) {
            msn.showMessageInformation("กรุณาระบุวันที่สิ้นสุดโปรโมชั่น...");
            txt_scdateend.requestFocus();
            return;
        }

    }

    private void SavePLU() {
        String scode = txt_sccode.getText();
        String procode = txt_procode.getText();

        if (!txtPgroup.getText().trim().equals("")) {
            int confirm = msn.showMessageConfirm("Yes", "No", "คุณต้องการเพิ่มข้อมูลกลุ่มสินค้า " + txtPgroup.getText() + " ทั้งหมดใช่หรือไม่ ?");
            if (confirm == 0) {
                String code = txtPgroup.getText().trim();
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    getProductGroup(cvth.Unicode2ASCII(code));
                } else {
                    getProductGroup(code);
                }
                loadFixPlu(scode, procode);
                txtPgroup.setText("");
                txtPgroup.requestFocus();
            }
        }
    }

    private void SaveUnlinkPLU() {
        String scode = txt_sccode.getText();
        String procode = txt_procode.getText();

        if (!txtPgroup1.getText().trim().equals("")) {
            int confirm = msn.showMessageConfirm("Yes", "No", "คุณต้องการเพิ่มข้อมูลกลุ่มสินค้า " + txtPgroup1.getText() + " ทั้งหมดใช่หรือไม่ ?");
            if (confirm == 0) {
                String code = txtPgroup1.getText().trim();
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    getUnProductGroup(cvth.Unicode2ASCII(code));
                } else {
                    getUnProductGroup(code);
                }
                loadUnlinkPlu(scode, procode);
                txtPgroup1.setText("");
                txtPgroup1.requestFocus();
            }
        }
    }

    private void getProductGroup(String group) {
        String scode = txt_sccode.getText();
        String procode = txt_procode.getText();
        ResultSet rs;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                group = cvth.Unicode2ASCII(group);
            }
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT product.pcode,pdesc,pgroup FROM product "
                    + "left join blink on blink.pcode = product.pcode "
                    + "left join stamppro_linkbgroup on stamppro_linkbgroup.bgcode = blink.bgroup "
                    + "where pgroup = '" + group + "' and s_code='" + txt_sccode.getText() + "' and sp_code='" + txt_procode.getText() + "' "
                    + " order by pgroup,product.pcode";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String plu = rs.getString("pcode");
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    if (chkplu(scode, procode, plu) & (!chkFixplu(scode, procode, plu))) {
                        insertFixplu(cvth.ASCII2Unicode(scode), cvth.ASCII2Unicode(procode), cvth.ASCII2Unicode(plu));
                    }
                } else if (chkplu(scode, procode, plu) & (!chkFixplu(scode, procode, plu))) {
                    insertFixplu(scode, procode, plu);
                }
            }
        } catch (Exception e) {
            PUtility.ShowMsg(e.getMessage());
        }
    }

    private void getUnProductGroup(String group) {
        String scode = txt_sccode.getText();
        String procode = txt_procode.getText();
        ResultSet rs;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                group = cvth.Unicode2ASCII(group);
            }
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT product.pcode,pdesc,pgroup FROM product "
                    + "left join blink on blink.pcode = product.pcode "
                    + "left join stamppro_linkbgroup on stamppro_linkbgroup.bgcode = blink.bgroup "
                    + "where pgroup = '" + group + "' and s_code='" + txt_sccode.getText() + "' and sp_code='" + txt_procode.getText() + "' "
                    + " order by pgroup,product.pcode";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String plu = rs.getString("pcode");
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    if (chkplu(scode, procode, plu) & (!chkUnlinkPlu(scode, procode, plu))) {
                        insertUnlinkPlu(cvth.ASCII2Unicode(scode), cvth.ASCII2Unicode(procode), cvth.ASCII2Unicode(plu));
                    }
                } else if (chkplu(scode, procode, plu) & (!chkUnlinkPlu(scode, procode, plu))) {
                    insertUnlinkPlu(scode, procode, plu);
                }
            }
        } catch (Exception e) {
            PUtility.ShowMsg(e.getMessage());
        }
    }

    public boolean chkplu(String scode, String procode, String plu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select p.pcode from product p "
                    + "left join blink b on b.pcode=p.pcode "
                    + "left join stamppro_linkbgroup s on b.bgroup=s.bgcode "
                    + "where s.s_code ='" + scode + "' and s.sp_code='" + procode + "'  and p.pcode='" + plu + "' ";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                chk = true;
            } else {
                chk = false;
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean chkFixplu(String scode, String procode, String plu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select *from stamppro_linkplu "
                    + "where s_code ='" + scode + "' and sp_code='" + procode + "' and pcode='" + plu + "' ";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                chk = true;
            } else {
                chk = false;
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean insertFixplu(String scode, String procode, String pcode) {
        Statement stmt = null;
        boolean isupdate = false;
        int rowInsert = 0;
        String sql = "";

        try {
            stmt = (Statement) dbUtility.con.createStatement();
            sql = "insert into stamppro_linkplu(s_code, sp_code, pcode) values('" + scode + "' , '" + procode + "','" + pcode + "')";
            rowInsert = stmt.executeUpdate(sql);
            System.out.println(" " + f.timeFmtmili(f.nowDate()));
            if (rowInsert > 0) {
                isupdate = true;
            }
        } catch (Exception e) {
        }
        return isupdate;
    }

    public boolean chkUnlinkPlu(String scode, String procode, String plu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select *from stamppro_unlinkplu "
                    + "where s_code ='" + scode + "' and sp_code='" + procode + "' and unpcode='" + plu + "' ";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                chk = true;
            } else {
                chk = false;
            }
        } catch (Exception e) {
        }
        return chk;
    }

    private boolean insertUnlinkPlu(String scode, String procode, String pcode) {
        Statement stmt = null;
        boolean isupdate = false;
        int rowInsert = 0;
        String sql = "";

        try {
            stmt = (Statement) dbUtility.con.createStatement();
            sql = "insert into stamppro_unlinkplu(s_code, sp_code, unpcode) values('" + scode + "' , '" + procode + "','" + pcode + "')";
            rowInsert = stmt.executeUpdate(sql);
            System.out.println(" " + f.timeFmtmili(f.nowDate()));
            if (rowInsert > 0) {
                isupdate = true;
            }
        } catch (Exception e) {
        }
        return isupdate;
    }

    private void deleteUnlinkPLU() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        int[] selectedRow = tbl_unlinkplu.getSelectedRows();
        String pcode = "";
        try {
            String seek = "select * from stamppro_unlinkplu where s_code='" + scode + "' and sp_code='" + procode + "' and unpcode=?";
            String sql = "delete from stamppro_unlinkplu where s_code='" + scode + "' and sp_code='" + procode + "' and unpcode=?";

            for (int i = selectedRow.length - 1; i >= 0; i--) {
                int row = selectedRow[i];
                pcode = tbl_unlinkplu.getValueAt(row, 1).toString();
                pre = dbUtility.con.prepareStatement(seek);
                pre.setString(1, pcode);
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    pre = dbUtility.con.prepareStatement(sql);
                    pre.setString(1, pcode);
                    pre.executeUpdate();
                }
            }
            loadUnlinkPlu(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void deleteUnlinkPLUAll() {
        scode = txt_sccode.getText().trim();
        procode = txt_procode.getText().trim();
        try {
            String seek = "select * from stamppro_unlinkplu where s_code='" + scode + "' and sp_code='" + procode + "' ";
            String sql = "delete from stamppro_unlinkplu where s_code='" + scode + "' and sp_code='" + procode + "' ";
            pre = dbUtility.con.prepareStatement(seek);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                pre = dbUtility.con.prepareStatement(sql);
                pre.executeUpdate();
            }
            loadUnlinkPlu(scode, procode);
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void checkuserconfig() {
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getMast26().equals("1")) {
            btnAdd.setEnabled(false);
            btnCancel.setEnabled(false);
            btnSave.setEnabled(false);
            btnDel.setEnabled(false);
            btnExcel.setEnabled(true);
            btnPrint.setEnabled(true);
            btnBrowscampaign.setEnabled(false);
            btnDate1.setEnabled(false);
            btnDate2.setEnabled(false);
            btnsDay.setEnabled(false);

            btnBrowsBGroup.setEnabled(false);
            btnFixbgroup.setEnabled(false);
            btncancel1.setEnabled(false);

            btnBrowsBranch.setEnabled(false);
            btnFixbranch.setEnabled(false);
            btncancel2.setEnabled(false);

            btnBrowsPlu.setEnabled(false);
            btnFixPlu.setEnabled(false);
            btncancel3.setEnabled(false);
            btnPgroup.setEnabled(false);
            btnSelectPgroupAll.setEnabled(false);
            btnBrowsDate.setEnabled(false);

            delBgroup.setEnabled(false);
            delBgroupAll.setEnabled(false);
            delBranch.setEnabled(false);
            delBranchAll.setEnabled(false);
            delPlu.setEnabled(false);
            delPluAll.setEnabled(false);
            delExpdate.setEnabled(false);
            delExpdateAll.setEnabled(false);

            userconfig = false;
            m1.setEnabled(false);
            m2.setEnabled(false);
            m3.setEnabled(false);
            m4.setEnabled(false);
        } else if (userrec.getMast26().equals("2")) {
            btnAdd.setEnabled(true);
            btnCancel.setEnabled(true);
            btnSave.setEnabled(true);
            btnDel.setEnabled(false);
            btnExcel.setEnabled(false);
            btnPrint.setEnabled(false);
            btnBrowscampaign.setEnabled(false);
            btnDate1.setEnabled(true);
            btnDate2.setEnabled(true);

            btnBrowsBGroup.setEnabled(true);
            btnFixbgroup.setEnabled(true);
            btncancel1.setEnabled(true);

            btnBrowsBranch.setEnabled(true);
            btnFixbranch.setEnabled(true);
            btncancel2.setEnabled(true);

            btnBrowsPlu.setEnabled(true);
            btnFixPlu.setEnabled(true);
            btncancel3.setEnabled(true);
            btnPgroup.setEnabled(true);
            btnSelectPgroupAll.setEnabled(true);
            btnBrowsDate.setEnabled(true);

            delBgroup.setEnabled(false);
            delBgroupAll.setEnabled(false);
            delBranch.setEnabled(false);
            delBranchAll.setEnabled(false);
            delPlu.setEnabled(false);
            delPluAll.setEnabled(false);
            delExpdate.setEnabled(false);
            delExpdateAll.setEnabled(false);

            userconfig = true;
            m1.setEnabled(true);
            m2.setEnabled(true);
            m3.setEnabled(true);
            m4.setEnabled(false);
        } else if (userrec.getMast26().equals("3")) {
            btnAdd.setEnabled(true);
            btnCancel.setEnabled(true);
            btnSave.setEnabled(true);
            btnDel.setEnabled(true);
            btnExcel.setEnabled(true);
            btnPrint.setEnabled(true);
            btnBrowscampaign.setEnabled(true);
            btnDate1.setEnabled(true);
            btnDate2.setEnabled(true);

            btnBrowsBGroup.setEnabled(true);
            btnFixbgroup.setEnabled(true);
            btncancel1.setEnabled(true);

            btnBrowsBranch.setEnabled(true);
            btnFixbranch.setEnabled(true);
            btncancel2.setEnabled(true);

            btnBrowsPlu.setEnabled(true);
            btnFixPlu.setEnabled(true);
            btncancel3.setEnabled(true);
            btnPgroup.setEnabled(true);
            btnSelectPgroupAll.setEnabled(true);
            btnBrowsDate.setEnabled(true);

            delBgroup.setEnabled(true);
            delBgroupAll.setEnabled(true);
            delBranch.setEnabled(true);
            delBranchAll.setEnabled(true);
            delPlu.setEnabled(true);
            delPluAll.setEnabled(true);
            delExpdate.setEnabled(true);
            delExpdateAll.setEnabled(true);
            userconfig = true;
            m1.setEnabled(true);
            m2.setEnabled(true);
            m3.setEnabled(true);
            m4.setEnabled(true);
        }
    }

}
