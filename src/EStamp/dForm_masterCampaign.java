package EStamp;

import borfunction.GetApplicationName;
import borfunction.GetUser;
import dbutility.dbUtility;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import report.Report;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.Export2Excel;
import utilititiesfunction.Format;
import utilititiesfunction.ThaiUtilities;
import utilititiesfunction.UserLogin;
import static utilititiesfunction.UserLogin.userlogin;
import utilititiesfunction.getLanguage;

public class dForm_masterCampaign extends javax.swing.JDialog {

    dbUtility db = new dbUtility();
    ThaiUtilities cvth = new ThaiUtilities();
    PreparedStatement pre = null;
    PreparedStatement preUp = null;
    ResultSet rs = null;

    showMessage msn = new showMessage();
    formatStamp f = new formatStamp();
    utilityStamp u = new utilityStamp();
    eventFocusStamp ef = new eventFocusStamp();

    public dForm_masterCampaign(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.dbconnect();
        clearForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_sccode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_scname = new javax.swing.JTextField();
        txt_scdateend = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_scdatestart = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_remark = new javax.swing.JTextArea();
        btnDate2 = new javax.swing.JButton();
        btnDate1 = new javax.swing.JButton();
        btnClearPoint = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_campaign = new javax.swing.JTable();
        btnShowBranch = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        mainmenu = new javax.swing.JMenu();
        m1 = new javax.swing.JMenuItem();
        m2 = new javax.swing.JMenuItem();
        m3 = new javax.swing.JMenuItem();
        m4 = new javax.swing.JMenuItem();
        m5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("แฟ้มข้อมูลแสตมป์แคมเปญ ");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAdd.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Add-icon.png"))); // NOI18N
        btnAdd.setText("เพิ่มรายการ");
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setIconTextGap(0);
        btnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 100, 67));

        btnCancel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Cancel-icon.png"))); // NOI18N
        btnCancel.setText("ยกเลิก");
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setIconTextGap(0);
        btnCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 2, 100, 67));

        btnSave.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/save-icon.png"))); // NOI18N
        btnSave.setText("บันทึกข้อมูล");
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setIconTextGap(0);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 2, 100, 67));

        btnDel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        btnDel.setText("ลบข้อมูล");
        btnDel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDel.setIconTextGap(0);
        btnDel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jPanel1.add(btnDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 2, 100, 67));

        btnExcel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        btnExcel.setText("Excel File");
        btnExcel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcel.setIconTextGap(0);
        btnExcel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });
        jPanel1.add(btnExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 2, 100, 67));

        btnExit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit.setText("ออก");
        btnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit.setIconTextGap(0);
        btnExit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel1.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(602, 2, 100, 67));

        btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        btnPrint.setText("พิมพ์");
        btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrint.setIconTextGap(0);
        btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(502, 2, 100, 67));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel1.setText("รหัสแคมเปญ");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 10, 79, 30));

        jLabel2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel2.setText("หมายเหตุ");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 106, 70, 30));

        txt_sccode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_sccode.setText("txt_sccode");
        txt_sccode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sccodeActionPerformed(evt);
            }
        });
        txt_sccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sccodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_sccodeKeyTyped(evt);
            }
        });
        jPanel2.add(txt_sccode, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 60, 30));

        jLabel3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ถึง");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 74, 30, 30));

        txt_scname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_scname.setText("txt_scname");
        txt_scname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_scnameKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_scnameKeyPressed(evt);
            }
        });
        jPanel2.add(txt_scname, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 42, 360, 30));

        txt_scdateend.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_scdateend.setText("txt_scdateend");
        txt_scdateend.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_scdateendFocusLost(evt);
            }
        });
        txt_scdateend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_scdateendActionPerformed(evt);
            }
        });
        txt_scdateend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_scdateendKeyPressed(evt);
            }
        });
        jPanel2.add(txt_scdateend, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 74, 80, 30));

        jLabel4.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel4.setText("วันที่ร่วมแคมเปญ");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 74, 110, 30));

        txt_scdatestart.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_scdatestart.setText("txt_scdatestart");
        txt_scdatestart.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_scdatestartFocusLost(evt);
            }
        });
        txt_scdatestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_scdatestartActionPerformed(evt);
            }
        });
        txt_scdatestart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_scdatestartKeyPressed(evt);
            }
        });
        jPanel2.add(txt_scdatestart, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 74, 80, 30));

        jLabel5.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel5.setText("ชื่อแคมเปญ");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 42, 79, 30));

        txt_remark.setColumns(20);
        txt_remark.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txt_remark.setRows(5);
        txt_remark.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_remarkKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txt_remark);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 560, 100));

        btnDate2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btnDate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDate2ActionPerformed(evt);
            }
        });
        jPanel2.add(btnDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 74, 36, 30));

        btnDate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btnDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDate1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnDate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 74, 36, 30));

        btnClearPoint.setFont(new java.awt.Font("Norasi", 1, 15)); // NOI18N
        btnClearPoint.setForeground(new java.awt.Color(221, 1, 1));
        btnClearPoint.setText("Clear Points");
        btnClearPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearPointActionPerformed(evt);
            }
        });
        jPanel2.add(btnClearPoint, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 140, 40));

        tbl_campaign.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "รหัส", "ชื่อแคมเปญ", "วันที่เริ่ม", "วันที่สิ้นสุด", "หมายเหตุ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_campaign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_campaignMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_campaign);
        if (tbl_campaign.getColumnModel().getColumnCount() > 0) {
            tbl_campaign.getColumnModel().getColumn(0).setPreferredWidth(90);
            tbl_campaign.getColumnModel().getColumn(1).setPreferredWidth(270);
            tbl_campaign.getColumnModel().getColumn(2).setPreferredWidth(90);
            tbl_campaign.getColumnModel().getColumn(3).setPreferredWidth(90);
            tbl_campaign.getColumnModel().getColumn(4).setPreferredWidth(170);
        }

        btnShowBranch.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnShowBranch.setText("แสดงรายละเอียดในแสตมป์แคมเปญ");
        btnShowBranch.setName("d_btnShowBranch"); // NOI18N
        btnShowBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowBranchActionPerformed(evt);
            }
        });

        mainmenu.setText("ฟังก์ชั่น");
        mainmenu.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        m1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        m1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        m1.setText("เพิ่มรายการ");
        m1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m1ActionPerformed(evt);
            }
        });
        mainmenu.add(m1);

        m2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        m2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        m2.setText("ยกเลิก");
        m2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m2ActionPerformed(evt);
            }
        });
        mainmenu.add(m2);

        m3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        m3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        m3.setText("บันทึกข้อมูล");
        m3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m3ActionPerformed(evt);
            }
        });
        mainmenu.add(m3);

        m4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        m4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        m4.setText("ลบข้อมูล");
        m4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m4ActionPerformed(evt);
            }
        });
        mainmenu.add(m4);

        m5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        m5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        m5.setText("ออก");
        m5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m5ActionPerformed(evt);
            }
        });
        mainmenu.add(m5);

        jMenuBar2.add(mainmenu);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 714, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnShowBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnShowBranch)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(724, 666));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDate1ActionPerformed
        DateUtil.showDateChooserDialog(txt_scdatestart, btnDate1);
        txt_scdatestart.requestFocus();
    }//GEN-LAST:event_btnDate1ActionPerformed

    private void btnDate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDate2ActionPerformed
        DateUtil.showDateChooserDialog(txt_scdateend, btnDate2);
        txt_scdateend.requestFocus();
    }//GEN-LAST:event_btnDate2ActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void txt_sccodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sccodeKeyTyped
        if (txt_sccode.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_sccodeKeyTyped

    private void txt_scnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_scnameKeyTyped
        if (txt_scname.getText().length() >= 150) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_scnameKeyTyped

    private void txt_remarkKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_remarkKeyTyped
        if (txt_remark.getText().length() >= 200) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_remarkKeyTyped

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clearForm();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        ProcessSave();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        clearForm();
    }//GEN-LAST:event_btnAddActionPerformed

    private void tbl_campaignMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_campaignMouseClicked
        int index = tbl_campaign.getSelectedRow();
        if (evt.getClickCount() == 2) {
            String ccode = tbl_campaign.getValueAt(index, 0).toString();
            String cname = tbl_campaign.getValueAt(index, 1).toString();
            String date1 = tbl_campaign.getValueAt(index, 2).toString();
            String date2 = tbl_campaign.getValueAt(index, 3).toString();
            String remark = tbl_campaign.getValueAt(index, 4).toString();

            txt_sccode.setText(ccode);
            txt_scname.setText(cname);
            txt_scdatestart.setText(date1);
            txt_scdateend.setText(date2);
            txt_remark.setText(remark);
            openForm();
        }
    }//GEN-LAST:event_tbl_campaignMouseClicked

    private void txt_sccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sccodeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (!txt_sccode.getText().equals("")) {
                searchStampCampaign();
            }
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            dispose();
        }
    }//GEN-LAST:event_txt_sccodeKeyPressed

    private void txt_scnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_scnameKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txt_scdatestart.requestFocus();
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txt_sccode.requestFocus();
        }
    }//GEN-LAST:event_txt_scnameKeyPressed

    private void txt_scdatestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_scdatestartActionPerformed

    }//GEN-LAST:event_txt_scdatestartActionPerformed

    private void txt_scdateendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_scdateendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_scdateendActionPerformed

    private void txt_scdatestartKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_scdatestartKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txt_scdateend.requestFocus();
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txt_scname.requestFocus();
        }
    }//GEN-LAST:event_txt_scdatestartKeyPressed

    private void txt_scdateendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_scdateendKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txt_remark.requestFocus();
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txt_scdatestart.requestFocus();
        }
    }//GEN-LAST:event_txt_scdateendKeyPressed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        ProcessDelete();
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        ProcessSaveExcel();
    }//GEN-LAST:event_btnExcelActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        ProcessPrint();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void txt_scdatestartFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_scdatestartFocusLost
        if (!checkDate(txt_scdatestart)) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง...");
            txt_scdatestart.requestFocus();
        }
    }//GEN-LAST:event_txt_scdatestartFocusLost

    private void txt_scdateendFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_scdateendFocusLost
        if (!checkDate(txt_scdateend)) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง...");
            txt_scdateend.requestFocus();
        }
    }//GEN-LAST:event_txt_scdateendFocusLost

    private void m1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m1ActionPerformed
        btnAddActionPerformed(evt);
    }//GEN-LAST:event_m1ActionPerformed

    private void m2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m2ActionPerformed
        btnAddActionPerformed(evt);
    }//GEN-LAST:event_m2ActionPerformed

    private void m3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m3ActionPerformed
        btnSaveActionPerformed(evt);
    }//GEN-LAST:event_m3ActionPerformed

    private void m5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m5ActionPerformed
        btnExitActionPerformed(evt);
    }//GEN-LAST:event_m5ActionPerformed

    private void m4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m4ActionPerformed
        btnDelActionPerformed(evt);
    }//GEN-LAST:event_m4ActionPerformed

    private void btnShowBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowBranchActionPerformed
        dForm_showStampCampaign f = new dForm_showStampCampaign(null, true);
        f.setVisible(true);
    }//GEN-LAST:event_btnShowBranchActionPerformed

    private void txt_sccodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sccodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sccodeActionPerformed

    private void btnClearPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearPointActionPerformed
        ProcessClearPoint();
    }//GEN-LAST:event_btnClearPointActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dForm_masterCampaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dForm_masterCampaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dForm_masterCampaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dForm_masterCampaign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dForm_masterCampaign dialog = new dForm_masterCampaign(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClearPoint;
    private javax.swing.JButton btnDate1;
    private javax.swing.JButton btnDate2;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnShowBranch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem m1;
    private javax.swing.JMenuItem m2;
    private javax.swing.JMenuItem m3;
    private javax.swing.JMenuItem m4;
    private javax.swing.JMenuItem m5;
    private javax.swing.JMenu mainmenu;
    private javax.swing.JTable tbl_campaign;
    private javax.swing.JTextArea txt_remark;
    private javax.swing.JTextField txt_sccode;
    private javax.swing.JTextField txt_scdateend;
    private javax.swing.JTextField txt_scdatestart;
    private javax.swing.JTextField txt_scname;
    // End of variables declaration//GEN-END:variables

    DefaultTableModel model;

    private void resetTable() {
        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            model.removeRow(0);
        }
    }

    private void setTable() {
        model = (DefaultTableModel) tbl_campaign.getModel();
        tbl_campaign.setShowGrid(true);
        tbl_campaign.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl_campaign.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl_campaign.setRowSelectionAllowed(true);
        tbl_campaign.setShowGrid(true);
        tbl_campaign.setBackground(Color.WHITE);
        tbl_campaign.setGridColor(Color.LIGHT_GRAY);

        JTableHeader header = tbl_campaign.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl_campaign.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tbl_campaign.setRowHeight(25);
        tbl_campaign.setAutoCreateRowSorter(true);

        ((DefaultTableCellRenderer) tbl_campaign.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
        DecimalFormat IntegerFmt = new DecimalFormat("##,###,##0");
        DecimalFormat PersentFmt = new DecimalFormat("#,##0.00%");

        TableColumnModel tcm = tbl_campaign.getColumnModel();

        DefaultTableCellRenderer d;

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.CENTER);
        tcm.getColumn(2).setCellRenderer(d);
        tcm.getColumn(3).setCellRenderer(d);

        d = new DefaultTableCellRenderer();
        d.setHorizontalAlignment(SwingConstants.LEFT);
        tcm.getColumn(0).setCellRenderer(d);
        tcm.getColumn(1).setCellRenderer(d);
        tcm.getColumn(4).setCellRenderer(d);

    }

    private void clearForm() {
        txt_sccode.setText("");
        txt_sccode.setEditable(true);
        txt_sccode.setBackground(Color.WHITE);
        txt_sccode.setFocusable(true);
        txt_sccode.requestFocus();
        txt_scname.setText("");
        txt_scname.setEnabled(false);
        txt_scdatestart.setText("");
        txt_scdatestart.setEnabled(false);
        txt_scdateend.setText("");
        txt_scdateend.setEnabled(false);
        txt_remark.setText("");
        txt_remark.setEnabled(false);
        txt_scdatestart.setText(Format.dateFmtShow.format(new java.util.Date()));
        txt_scdateend.setText(Format.dateFmtShow.format(new java.util.Date()));

        btnDate1.setFocusable(false);
//        btnDate1.setEnabled(false);
        btnDate2.setFocusable(false);
//        btnDate2.setEnabled(false);

        btnAdd.setFocusable(false);
        btnCancel.setFocusable(false);
        btnSave.setFocusable(false);
        btnDel.setFocusable(false);
        btnExcel.setFocusable(false);
        btnPrint.setFocusable(false);
        btnExit.setFocusable(false);
        btnClearPoint.setFocusable(false);
        btnShowBranch.setFocusable(false);

        mainmenu.setFocusable(false);

        ef.setFocusSwing(txt_sccode);
        ef.setFocusSwing(txt_scname);
        ef.setFocusSwing(txt_scdatestart);
        ef.setFocusSwing(txt_scdateend);

        setTable();
        loadDataCampaignAll();
        checkuserconfig();
    }

    private void loadDataCampaignAll() {
        resetTable();
        try {
            String sql = "select * from stampcampaign order by s_campaigncode ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        model.addRow(new Object[]{
                            cvth.ASCII2Unicode(rs.getString("s_campaigncode")),
                            cvth.ASCII2Unicode(rs.getString("s_campaignname")),
                            cvth.ASCII2Unicode(f.convertDatesqlToShow(rs.getString("s_campaignstart"))),
                            cvth.ASCII2Unicode(f.convertDatesqlToShow(rs.getString("s_campaignend"))),
                            cvth.ASCII2Unicode(rs.getString("s_campaignremark"))
                        });
                    } while (rs.next());
                } else {
                    do {
                        model.addRow(new Object[]{
                            rs.getString("s_campaigncode"),
                            rs.getString("s_campaignname"),
                            f.convertDatesqlToShow(rs.getString("s_campaignstart")),
                            f.convertDatesqlToShow(rs.getString("s_campaignend")),
                            rs.getString("s_campaignremark")
                        });
                    } while (rs.next());
                }
            }
            pre.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void ProcessSave() {
        String campaigncode = txt_sccode.getText().trim();
        String campaignname = txt_scname.getText();
        String datestart = txt_scdatestart.getText();
        String dateend = txt_scdateend.getText();
        String remark = txt_remark.getText();

        if (campaigncode.equals("")) {
            msn.showMessageWarning("กรุณาระบุรหัสแคมเปญ");
            txt_sccode.requestFocus();
            return;
        }

        if (!datestart.equals("")) {
            try {
                datestart = f.convertDateshowToSQL(txt_scdatestart.getText().trim());
            } catch (Exception e) {
                msn.showMessageError("กรุณาระบุวันที่เริ่มแคมเปญให้ถูกต้อง...");
                txt_scdatestart.requestFocus();
                return;
            }
        } else {
            msn.showMessageError("กรุณาระบุวันที่เริ่มแคมเปญ...");
            txt_scdatestart.requestFocus();
            return;
        }

        if (!dateend.equals("")) {
            try {
                dateend = f.convertDateshowToSQL(txt_scdateend.getText().trim());
            } catch (Exception e) {
                msn.showMessageError("กรุณาระบุวันที่สิ้นสุดแคมเปญให้ถูกต้อง...");
                txt_scdateend.requestFocus();
                return;
            }
        } else {
            msn.showMessageError("กรุณาระบุวันที่สิ้นสุดแคมเปญ...");
            txt_scdateend.requestFocus();
            return;
        }

        try {
            String sql = "select * from stampcampaign where s_campaigncode ='" + campaigncode + "'  ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                if (checkCampaignInStampPro()) {
                    updateDateAtCampaignPromotion(datestart, dateend);
                }

//                if (CheckPointActive()) {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    String upd = "update stampcampaign set s_campaignname=?, s_campaignstart=?, s_campaignend=?, s_campaignremark=?, "
                            + "s_modifyuser=?, s_modifydate=?, s_modifytime=? "
                            + "where s_campaigncode ='" + cvth.Unicode2ASCII(campaigncode) + "'  ";
                    preUp = dbUtility.con.prepareStatement(upd);
                    preUp.setString(1, cvth.Unicode2ASCII(campaignname));
                    preUp.setString(2, cvth.Unicode2ASCII(datestart));
                    preUp.setString(3, cvth.Unicode2ASCII(dateend));
                    preUp.setString(4, cvth.Unicode2ASCII(remark));
                    preUp.setString(5, cvth.Unicode2ASCII(userlogin.getUserName()));
                    preUp.setString(6, Format.dateFmtSql.format(new java.util.Date()));
                    preUp.setString(7, Format.timeFmt.format(new java.util.Date()));
                    preUp.executeUpdate();
                } else {
                    String upd = "update stampcampaign set s_campaignname=?, s_campaignstart=?, s_campaignend=?, s_campaignremark=? "
                            + "where s_campaigncode ='" + campaigncode + "'  ";
                    preUp = dbUtility.con.prepareStatement(upd);
                    preUp.setString(1, campaignname);
                    preUp.setString(2, datestart);
                    preUp.setString(3, dateend);
                    preUp.setString(4, remark);
                    preUp.setString(5, cvth.Unicode2ASCII(userlogin.getUserName()));
                    preUp.setString(6, Format.dateFmtSql.format(new java.util.Date()));
                    preUp.setString(7, Format.timeFmt.format(new java.util.Date()));
                    preUp.executeUpdate();
                }
//                }
            } else {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    String inst = "insert into stampcampaign(s_campaignname, s_campaignstart, s_campaignend, s_campaignremark, s_campaigncode, "
                            + "s_createuser, s_createdate, s_createtime)"
                            + "values(?,?,?,?,?,?,?,?)";
                    preUp = dbUtility.con.prepareStatement(inst);
                    preUp.setString(1, cvth.Unicode2ASCII(campaignname));
                    preUp.setString(2, cvth.Unicode2ASCII(datestart));
                    preUp.setString(3, cvth.Unicode2ASCII(dateend));
                    preUp.setString(4, cvth.Unicode2ASCII(remark));
                    preUp.setString(5, cvth.Unicode2ASCII(campaigncode));
                    preUp.setString(6, cvth.Unicode2ASCII(userlogin.getUserName()));
                    preUp.setString(7, Format.dateFmtSql.format(new java.util.Date()));
                    preUp.setString(8, Format.timeFmt.format(new java.util.Date()));
                    preUp.executeUpdate();
                } else {
                    String inst = "insert into stampcampaign(s_campaignname, s_campaignstart, s_campaignend, s_campaignremark, s_campaigncode,"
                            + "s_createuser, s_createdate, s_createtime)"
                            + "values(?,?,?,?,?,?,?,?)";
                    preUp = dbUtility.con.prepareStatement(inst);
                    preUp.setString(1, campaignname);
                    preUp.setString(2, datestart);
                    preUp.setString(3, dateend);
                    preUp.setString(4, remark);
                    preUp.setString(5, campaigncode);
                    preUp.setString(6, userlogin.getUserName());
                    preUp.setString(7, Format.dateFmtSql.format(new java.util.Date()));
                    preUp.setString(8, Format.timeFmt.format(new java.util.Date()));
                    preUp.executeUpdate();
                }
            }
            pre.close();
            preUp.close();
            rs.close();
            msn.showMessageInformation("บันทึกข้อมูลเรียบร้อยแล้ว...");
            clearForm();
            loadDataCampaignAll();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void openForm() {
        txt_sccode.setEditable(false);
        txt_sccode.setFocusable(false);
        txt_sccode.setBackground(colorDisable());
        txt_scname.setEnabled(true);
        txt_scname.requestFocus();
        txt_scdatestart.setEnabled(true);
        txt_scdateend.setEnabled(true);
        btnDate1.setEnabled(true);
        btnDate2.setEnabled(true);
        txt_remark.setEnabled(true);
    }

    public Color colorDisable() {
        return new Color(255, 245, 131);
    }

    private void ProcessDelete() {
        String scode = txt_sccode.getText().trim();
        if (scode.equals("")) {
            msn.showMessageWarning("กรุณาเลือกรหัสแคมเปญที่ต้องการลบ...");
            txt_sccode.requestFocus();
            return;
        }

        int confirm = msn.showMessageConfirm("Yes", "No", "คุณต้องการลบรหัสแคมเปญ " + scode + " ใช่หรือไม่ ...?");
        if (confirm != 0) {
            return;
        }
        if (!checkCampaignInStampPro() && !checkCampaignInStampRedeem()) {
            try {
                String del = "delete from stampcampaign where s_campaigncode='" + scode + "' ";
                pre = dbUtility.con.prepareStatement(del);
                pre.executeUpdate();
                clearForm();
                msn.showMessageInformation("ลบรหัสแคมเปญ " + scode + " เรียบร้อยแล้ว...");
            } catch (Exception e) {
                e.printStackTrace();
                msn.showMessageError(e.getMessage());
            }
        } else {
            msn.showMessageError("ไม่สามารถลบรหัสแสตมป์แคมเปญนี้ได้ เนื่องจากมีแสตมป์โปรโมชั่นที่ใช้รหัสนี้อยู่...");
        }
    }

    private void searchStampCampaign() {
        String campaigncode = txt_sccode.getText().trim();
        try {
            String sql = "select * from stampcampaign where s_campaigncode ='" + campaigncode + "'  ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    txt_sccode.setText(cvth.ASCII2Unicode(rs.getString("s_campaigncode")));
                    txt_scname.setText(cvth.ASCII2Unicode(rs.getString("s_campaignname")));
                    txt_scdatestart.setText(f.convertDatesqlToShow(rs.getString("s_campaignstart")));
                    txt_scdateend.setText(f.convertDatesqlToShow(rs.getString("s_campaignend")));
                    txt_remark.setText(cvth.ASCII2Unicode(rs.getString("s_campaignremark")));
                } else {
                    txt_sccode.setText(rs.getString("s_campaigncode"));
                    txt_scname.setText(rs.getString("s_campaignname"));
                    txt_scdatestart.setText(f.convertDatesqlToShow(rs.getString("s_campaignstart")));
                    txt_scdateend.setText(f.convertDatesqlToShow(rs.getString("s_campaignend")));
                    txt_remark.setText(rs.getString("s_campaignremark"));
                }
            }
            pre.close();
            rs.close();
            openForm();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private boolean checkDate(JTextField txtdate) {
        boolean chkDate = false;
        try {
            f.convertDateshowToSQL(txtdate.getText().trim());
            chkDate = true;
        } catch (Exception e) {
//            e.printStackTrace();
        }
        return chkDate;
    }

    private void ProcessSaveExcel() {
        dBrows_Excelcampaign frm = new dBrows_Excelcampaign(null, true, tbl_campaign);
        frm.setVisible(true);
    }

    private void ProcessPrint() {
        dBrows_Printcampaign frm = new dBrows_Printcampaign(null, true);
        frm.setVisible(true);
    }

    private boolean checkCampaignInStampPro() {
        boolean chk = false;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                String sql = "select sp_campaign from stamppromotion where sp_campaign='" + cvth.Unicode2ASCII(txt_sccode.getText().trim()) + "' ";
                pre = dbUtility.con.prepareStatement(sql);
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    chk = true;
                }
            } else {
                String sql = "select sp_campaign from stamppromotion where sp_campaign='" + txt_sccode.getText().trim() + "' ";
                pre = dbUtility.con.prepareStatement(sql);
                rs = pre.executeQuery();
                rs.first();
                if (rs.getRow() != 0) {
                    chk = true;
                }
            }
            pre.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }

        return chk;
    }

    private boolean checkCampaignInStampRedeem() {
        boolean chk = false;
        try {
            String sql = "select sr_campaign from stampredeem where sr_campaign='" + txt_sccode.getText().trim() + "' ";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                chk = true;
            }
            pre.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }

        return chk;
    }

    private void updateDateAtCampaignPromotion(String datestart, String dateend) {
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                String upd = "update stamppromotion set sp_startdate=?, sp_enddate=? where sp_campaign ='" + cvth.Unicode2ASCII(txt_sccode.getText().trim()) + "' ";
                preUp = dbUtility.con.prepareStatement(upd);
                preUp.setString(1, cvth.Unicode2ASCII(datestart));
                preUp.setString(2, cvth.Unicode2ASCII(dateend));
                preUp.executeUpdate();
            } else {
                String upd = "update stamppromotion set sp_startdate=?, sp_enddate=? where sp_campaign ='" + txt_sccode.getText().trim() + "' ";
                preUp = dbUtility.con.prepareStatement(upd);
                preUp.setString(1, datestart);
                preUp.setString(2, dateend);
                preUp.executeUpdate();
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private boolean CheckPointActive() {
        boolean isUpdate = false;
        try {
            String sql = "select * from stampbalance where stamp_campaign='" + txt_sccode.getText().trim() + "' and stamp_campaignactive='Y' ";
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                int confirm = msn.showMessageConfirm("Yes", "No", "มีบัตร E-Stamp ที่สะสมแต้มในแคมเปญนี้อยู่ กรุณาทำการ Clear Point ก่อน...");
                if (confirm != 0) {
                    isUpdate = false;
                } else {
                    isUpdate = true;
                }
            } else {
                isUpdate = true;
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }

        return isUpdate;
    }

    private void ProcessClearPoint() {
        String CampaignCode = txt_sccode.getText().trim();
        if (CampaignCode.equals("")) {
            msn.showMessageWarning("กรุณาเลือกรหัสแคมเปญที่ต้องการ Clear Points ...");
            txt_sccode.requestFocus();
            return;
        }

        int confirm = msn.showMessageConfirm("Yes", "No", "คุณต้องการ Clear Points ของแคมเปญ " + CampaignCode + " ใช่หรือไม่ ?");
        if (confirm != 0) {
            return;
        }

        try {
            String sql = "select * from stampbalance where stamp_campaign='" + CampaignCode + "' and stamp_campaignactive='N' ";
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                String o_campaign = "";
                int o_campaignlot = 0;
                String o_barcode = "";
                int o_balancepoint = 0;
                String o_dateStr = "";
                String o_dateEnd = "";
                do {
                    if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                        o_campaign = rs.getString("stamp_campaign");
                        o_campaignlot = rs.getInt("stamp_campaignlot");
                        o_barcode = rs.getString("stamp_barcode");
                        o_balancepoint = rs.getInt("stamp_balancepoint");
                        o_dateStr = rs.getString("stamp_dateStr");
                        o_dateEnd = rs.getString("stamp_dateEnd");
                    } else {
                        o_campaign = cvth.Unicode2ASCII(rs.getString("stamp_campaign"));
                        o_campaignlot = rs.getInt("stamp_campaignlot");
                        o_barcode = cvth.Unicode2ASCII(rs.getString("stamp_barcode"));
                        o_balancepoint = rs.getInt("stamp_balancepoint");
                        o_dateStr = cvth.Unicode2ASCII(rs.getString("stamp_dateStr"));
                        o_dateEnd = cvth.Unicode2ASCII(rs.getString("stamp_dateEnd"));
                    }

                    if (InsertToStampbalanceOld(o_campaign, o_campaignlot, o_barcode, o_balancepoint, o_dateStr, o_dateEnd)) {
                        // Update Campaign Lot
                        try {
                            String upd = "update stampcampaign set s_campaignlot=? where s_campaigncode='" + CampaignCode + "' ";
                            PreparedStatement preUp = db.con.prepareStatement(upd);
                            preUp.setInt(1, getCampaignlot(CampaignCode) + 1);
                            preUp.executeUpdate();
                            preUp.close();
                        } catch (Exception eu) {
                            eu.printStackTrace();
                            msn.showMessageError(eu.getMessage());
                        }

                        try {
                            String del = "delete from stampbalance where stamp_campaign='" + o_campaign + "' ";
                            PreparedStatement preDel = dbUtility.con.prepareStatement(del);
                            preDel.executeUpdate();
                            preDel.close();
                        } catch (Exception ex) {
                            ex.printStackTrace();
                            msn.showMessageError(ex.getMessage());
                        }
                    }
                } while (rs.next());
                msn.showMessageInformation("Clear Point เรียบร้อยแล้ว...");
            } else {
                msn.showMessageInformation("ไม่พบข้อมูลแต้มสะสมของบัตร E-Stamp ในแคมเปญที่ระบุ ...");
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private boolean InsertToStampbalanceOld(String o_campaign, int o_campaignlot, String o_barcode, int o_balancepoint, String o_dateStr,
            String o_dateEnd) {
        boolean isSave = false;

        try {
            String sql = "select * from stampbalanceOld where "
                    + "o_campaign='" + o_campaign + "' and o_campaignlot='" + o_campaignlot + "' and o_barcode='" + o_barcode + "' ";
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() == 0) {
                String inst = "insert into stampbalanceOld(o_campaign, o_campaignlot, o_barcode, o_balancepoint, o_dateStr, o_dateEnd,"
                        + "o_userclear, o_dateclear, o_timeclear)"
                        + "values(?,?,?,?,?,?,?,?,?)";
                PreparedStatement preUp = dbUtility.con.prepareStatement(inst);
                preUp.setString(1, o_campaign);
                preUp.setInt(2, o_campaignlot);
                preUp.setString(3, o_barcode);
                preUp.setInt(4, o_balancepoint);
                preUp.setString(5, o_dateStr);
                preUp.setString(6, o_dateEnd);
                preUp.setString(7, userlogin.getUserName());
                preUp.setString(8, Format.dateFmtSql.format(new java.util.Date()));
                preUp.setString(9, Format.timeFmt.format(new java.util.Date()));
                preUp.executeUpdate();
                preUp.close();
                isSave = true;
            }
            pre.close();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }

        return isSave;
    }

    private int getCampaignlot(String Campaigncode) {
        int lot = 0;
        try {
            String sql = "select * from stampcampaign where s_campaigncode='" + Campaigncode + "' ";
            PreparedStatement pre1 = dbUtility.con.prepareStatement(sql);
            ResultSet rs1 = pre1.executeQuery();
            rs1.first();
            if (rs1.getRow() != 0) {
                lot = rs1.getInt("s_campaignlot");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return lot;
    }

    private void checkuserconfig() {
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getMast25().equals("1")) {
            btnAdd.setEnabled(false);
            btnCancel.setEnabled(false);
            btnSave.setEnabled(false);
            btnDel.setEnabled(false);
            btnExcel.setEnabled(true);
            btnPrint.setEnabled(true);
            btnClearPoint.setEnabled(false);
            btnDate1.setEnabled(false);
            btnDate2.setEnabled(false);

            m1.setEnabled(false);
            m2.setEnabled(false);
            m3.setEnabled(false);
            m4.setEnabled(false);
        } else if (userrec.getMast25().equals("2")) {
            btnAdd.setEnabled(true);
            btnCancel.setEnabled(true);
            btnSave.setEnabled(true);
            btnDel.setEnabled(false);
            btnExcel.setEnabled(false);
            btnPrint.setEnabled(false);
            btnClearPoint.setEnabled(false);
            btnDate1.setEnabled(true);
            btnDate2.setEnabled(true);

            m1.setEnabled(true);
            m2.setEnabled(true);
            m3.setEnabled(true);
            m4.setEnabled(false);
        } else if (userrec.getMast25().equals("3")) {
            btnAdd.setEnabled(true);
            btnCancel.setEnabled(true);
            btnSave.setEnabled(true);
            btnDel.setEnabled(true);
            btnExcel.setEnabled(true);
            btnPrint.setEnabled(true);
            btnClearPoint.setEnabled(true);
            btnDate1.setEnabled(true);
            btnDate2.setEnabled(true);

            m1.setEnabled(true);
            m2.setEnabled(true);
            m3.setEnabled(true);
            m4.setEnabled(true);
        }
    }
}
