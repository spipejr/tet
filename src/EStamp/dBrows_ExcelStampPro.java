package EStamp;

import dbutility.dbUtility;
import java.awt.Rectangle;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.Export2Excel;
import utilititiesfunction.ThaiUtilities;

public class dBrows_ExcelStampPro extends javax.swing.JDialog {

    dbUtility db = new dbUtility();
    ThaiUtilities cvth = new ThaiUtilities();
    PreparedStatement pre = null;
    PreparedStatement preUp = null;
    ResultSet rs = null;

    formatStamp f = new formatStamp();
    showMessage msn = new showMessage();

    Export2Excel excel = new Export2Excel();
    DefaultTableModel modelExcel;
    DefaultTableModel modelFixBGroup;
    DefaultTableModel modelFixBranch;
    DefaultTableModel modelFixPLU;
    DefaultTableModel modelFixExpdate;

    JTable tblHead;
    JTable tblFixBranchGroup;
    JTable tblFixBranch;
    JTable tblFixPLU;
    JTable tblFixExpdate;

    String date = "";

    String strFrom = "";
    String strTo = "";
    String strPFrom = "";
    String strPTo = "";
    String strDate1 = "";
    String strDate2 = "";
//    String StampProname = "";

    public dBrows_ExcelStampPro(java.awt.Frame parent, boolean modal, JTable tblExcel) {
        super(parent, modal);
        initComponents();
        this.tblHead = tblExcel;
        clearForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtSFrom = new javax.swing.JTextField();
        btnBrows1 = new javax.swing.JButton();
        db_lblh2 = new javax.swing.JLabel();
        txtSTo = new javax.swing.JTextField();
        btnBrows2 = new javax.swing.JButton();
        db_lblh = new javax.swing.JLabel();
        db_lblh1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDateStr1 = new javax.swing.JTextField();
        btnDate1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtDateStr2 = new javax.swing.JTextField();
        btnDate2 = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        db_lblh3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        db_lblh4 = new javax.swing.JLabel();
        txtPTo = new javax.swing.JTextField();
        txtPFrom = new javax.swing.JTextField();
        db_lblh5 = new javax.swing.JLabel();
        btnPBrows1 = new javax.swing.JButton();
        btnPBrows2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export Excel File");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กำหนดเงื่อนไข", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtSFrom.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtSFrom.setText("txtSFrom");
        txtSFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSFromActionPerformed(evt);
            }
        });
        txtSFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSFromKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSFromKeyPressed(evt);
            }
        });
        jPanel1.add(txtSFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 62, 30));

        btnBrows1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnBrows1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrows1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnBrows1, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 40, 35, 30));

        db_lblh2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        db_lblh2.setText("ถึง");
        db_lblh2.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 75, 40, 30));

        txtSTo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtSTo.setText("txtSTo");
        txtSTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSToKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSToKeyPressed(evt);
            }
        });
        jPanel1.add(txtSTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 62, 30));

        btnBrows2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnBrows2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrows2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnBrows2, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 40, 35, 30));

        db_lblh.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh.setText("กำหนดรหัสแสตมป์แคมเปญ");
        db_lblh.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 40, 160, 30));

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh1.setText("จาก");
        db_lblh1.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh1, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 40, 28, 30));

        jLabel4.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("กำหนดรหัสแสตมป์โปรโมชั่น");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 75, 160, 30));

        txtDateStr1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtDateStr1.setText("txtDateStr1");
        txtDateStr1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateStr1FocusLost(evt);
            }
        });
        txtDateStr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateStr1ActionPerformed(evt);
            }
        });
        txtDateStr1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDateStr1KeyPressed(evt);
            }
        });
        jPanel1.add(txtDateStr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 115, 80, 30));

        btnDate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btnDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDate1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnDate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 115, 36, 30));

        jLabel3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ถึง");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 115, 40, 30));

        txtDateStr2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtDateStr2.setText("txtDateStr2");
        txtDateStr2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateStr2FocusLost(evt);
            }
        });
        txtDateStr2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateStr2ActionPerformed(evt);
            }
        });
        txtDateStr2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDateStr2KeyPressed(evt);
            }
        });
        jPanel1.add(txtDateStr2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 115, 80, 30));

        btnDate2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btnDate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDate2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 115, 36, 30));

        btnExit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit.setText("ออก (Exit)");
        btnExit.setIconTextGap(5);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel1.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 150, 40));

        btnExcel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        btnExcel.setText("Excel File");
        btnExcel.setIconTextGap(5);
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });
        jPanel1.add(btnExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 150, 40));

        db_lblh3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh3.setText("จาก");
        db_lblh3.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh3, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 115, 28, 30));

        jLabel5.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("วันที่เริ่มแสตมป์แคมเปญ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 115, 160, 30));

        db_lblh4.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblh4.setText("จาก");
        db_lblh4.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh4, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 75, 28, 30));

        txtPTo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPTo.setText("txtPTo");
        txtPTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPToKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPToKeyPressed(evt);
            }
        });
        jPanel1.add(txtPTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 75, 62, 30));

        txtPFrom.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtPFrom.setText("txtPFrom");
        txtPFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPFromKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPFromKeyPressed(evt);
            }
        });
        jPanel1.add(txtPFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 75, 62, 30));

        db_lblh5.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        db_lblh5.setText("ถึง");
        db_lblh5.setName("db_lblh"); // NOI18N
        jPanel1.add(db_lblh5, new org.netbeans.lib.awtextra.AbsoluteConstraints(339, 40, 40, 30));

        btnPBrows1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnPBrows1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPBrows1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnPBrows1, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 75, 35, 30));

        btnPBrows2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnPBrows2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPBrows2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnPBrows2, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 75, 35, 30));

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(583, 278));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSFromActionPerformed

    private void txtSFromKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSFromKeyTyped
        if (txtSFrom.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSFromKeyTyped

    private void txtSFromKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSFromKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtSTo.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txtSFrom.setText("");
        }
        if (evt.getKeyCode() == evt.VK_F1) {
            browsCampaign(txtSFrom);
        }
    }//GEN-LAST:event_txtSFromKeyPressed

    private void btnBrows1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrows1ActionPerformed
        browsCampaign(txtSFrom);
    }//GEN-LAST:event_btnBrows1ActionPerformed

    private void txtSToKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSToKeyTyped
        if (txtSTo.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSToKeyTyped

    private void txtSToKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSToKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtPFrom.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txtSTo.setText("");
        }
        if (evt.getKeyCode() == evt.VK_F1) {
            browsCampaign(txtSTo);
        }
    }//GEN-LAST:event_txtSToKeyPressed

    private void btnBrows2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrows2ActionPerformed
        browsCampaign(txtSTo);
    }//GEN-LAST:event_btnBrows2ActionPerformed

    private void txtDateStr1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateStr1FocusLost
        if (!checkDate(txtDateStr1)) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง...");
            txtDateStr1.requestFocus();
        }
    }//GEN-LAST:event_txtDateStr1FocusLost

    private void txtDateStr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateStr1ActionPerformed

    }//GEN-LAST:event_txtDateStr1ActionPerformed

    private void txtDateStr1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateStr1KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtDateStr2.requestFocus();
        }
    }//GEN-LAST:event_txtDateStr1KeyPressed

    private void btnDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDate1ActionPerformed
        DateUtil.showDateChooserDialog(txtDateStr1, btnDate1);
        txtDateStr1.requestFocus();
    }//GEN-LAST:event_btnDate1ActionPerformed

    private void txtDateStr2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateStr2FocusLost
        if (!checkDate(txtDateStr2)) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง...");
            txtDateStr2.requestFocus();
        }
    }//GEN-LAST:event_txtDateStr2FocusLost

    private void txtDateStr2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateStr2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateStr2ActionPerformed

    private void txtDateStr2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateStr2KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            btnExcel.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_F5) {
//            ProcessLoadDataSheet1(createNewTable(tblExcel));
        }
    }//GEN-LAST:event_txtDateStr2KeyPressed

    private void btnDate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDate2ActionPerformed
        DateUtil.showDateChooserDialog(txtDateStr2, btnDate2);
        txtDateStr2.requestFocus();
    }//GEN-LAST:event_btnDate2ActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        SaveExcel();
    }//GEN-LAST:event_btnExcelActionPerformed

    private void btnPBrows1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPBrows1ActionPerformed
        browsStampPro(txtPFrom);
    }//GEN-LAST:event_btnPBrows1ActionPerformed

    private void btnPBrows2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPBrows2ActionPerformed
        browsStampPro(txtPTo);
    }//GEN-LAST:event_btnPBrows2ActionPerformed

    private void txtPFromKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPFromKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtPTo.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txtSTo.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_F1) {
            browsStampPro(txtPFrom);
        }
    }//GEN-LAST:event_txtPFromKeyPressed

    private void txtPFromKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPFromKeyTyped
        if (txtPFrom.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPFromKeyTyped

    private void txtPToKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPToKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtDateStr1.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            txtPFrom.requestFocus();
        }
        if (evt.getKeyCode() == evt.VK_F1) {
            browsStampPro(txtPTo);
        }
    }//GEN-LAST:event_txtPToKeyPressed

    private void txtPToKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPToKeyTyped
        if (txtPTo.getText().length() >= 6) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPToKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dBrows_ExcelStampPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dBrows_ExcelStampPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dBrows_ExcelStampPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dBrows_ExcelStampPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dBrows_ExcelStampPro dialog = new dBrows_ExcelStampPro(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrows1;
    private javax.swing.JButton btnBrows2;
    private javax.swing.JButton btnDate1;
    private javax.swing.JButton btnDate2;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPBrows1;
    private javax.swing.JButton btnPBrows2;
    private javax.swing.JLabel db_lblh;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JLabel db_lblh2;
    private javax.swing.JLabel db_lblh3;
    private javax.swing.JLabel db_lblh4;
    private javax.swing.JLabel db_lblh5;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDateStr1;
    private javax.swing.JTextField txtDateStr2;
    private javax.swing.JTextField txtPFrom;
    private javax.swing.JTextField txtPTo;
    private javax.swing.JTextField txtSFrom;
    private javax.swing.JTextField txtSTo;
    // End of variables declaration//GEN-END:variables

    private void ProcessLoadDataSheet1() {
        modelExcel = (DefaultTableModel) tblHead.getModel();
        strFrom = txtSFrom.getText().trim();
        strTo = txtSTo.getText().trim();
        strPFrom = txtPFrom.getText().trim();
        strPTo = txtPTo.getText().trim();
        strDate1 = txtDateStr1.getText();
        strDate2 = txtDateStr2.getText();

        if (strTo.equals("")) {
            strTo = "ZZZ";
        }

        if (strPTo.equals("")) {
            strPTo = "ZZZ";
        }

        if (strDate1.equals("")) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง !!!");
            txtDateStr1.requestFocus();
        } else {
            strDate1 = f.convertDateshowToSQL(strDate1);
        }

        if (strDate2.equals("")) {
            msn.showMessageWarning("กรุณาระบุวันที่ให้ถูกต้อง !!!");
            txtDateStr2.requestFocus();
        } else {
            strDate2 = f.convertDateshowToSQL(strDate2);
        }

        try {
            String sql = "select * from stamppromotion sp "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + " where sp.sp_campaign >='" + strFrom + "' and sp.sp_campaign <='" + strTo + "' "
                    + "and sp.sp_code >='" + strPFrom + "' and sp.sp_code <='" + strPTo + "' "
                    + "and sp.sp_startdate >='" + strDate1 + "' and sp.sp_startdate <='" + strDate2 + "' "
                    + "order by sp.sp_campaign, sp.sp_code";
            pre = dbUtility.con.prepareStatement(sql);
            rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        ProcessLoadDataSheet2(rs.getString("sp.sp_campaign"), rs.getString("sp.sp_code")); //FixBranchGroup
                        ProcessLoadDataSheet3(rs.getString("sp.sp_campaign"), rs.getString("sp.sp_code"));  //FixBranch
                        ProcessLoadDataSheet4(rs.getString("sp.sp_campaign"), rs.getString("sp.sp_code"));  //FixPLU
                        ProcessLoadDataSheet5(rs.getString("sp.sp_campaign"), rs.getString("sp.sp_code"));  //FixExpDate

                        modelExcel.addRow(new Object[]{
                            cvth.ASCII2Unicode(rs.getString("sp.sp_code")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_name")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + " - " + cvth.ASCII2Unicode(rs.getString("s.s_campaignname")),
                            cvth.ASCII2Unicode(f.convertDatesqlToShow(rs.getString("sp.sp_startdate"))),
                            cvth.ASCII2Unicode(f.convertDatesqlToShow(rs.getString("sp.sp_enddate"))),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_day")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_saletype")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_saleitem")),
                            cvth.ASCII2Unicode(rs.getString("sp.sp_point"))
                        });
                    } while (rs.next());
                } else {
                    do {
                        ProcessLoadDataSheet2(rs.getString("sp.sp_campaign"), rs.getString("sp.sp_code")); //FixBranchGroup
                        ProcessLoadDataSheet3(rs.getString("sp.sp_campaign"), rs.getString("sp.sp_code"));  //FixBranch
                        ProcessLoadDataSheet4(rs.getString("sp.sp_campaign"), rs.getString("sp.sp_code"));  //FixPLU
                        ProcessLoadDataSheet5(rs.getString("sp.sp_campaign"), rs.getString("sp.sp_code"));  //FixExpDate

                        modelExcel.addRow(new Object[]{
                            rs.getString("sp.sp_code"),
                            rs.getString("sp.sp_name"),
                            rs.getString("sp.sp_campaign") + " - " + rs.getString("s.s_campaignname"),
                            f.convertDatesqlToShow(rs.getString("sp.sp_startdate")),
                            f.convertDatesqlToShow(rs.getString("sp.sp_enddate")),
                            rs.getString("sp.sp_day"),
                            rs.getString("sp.sp_saletype"),
                            rs.getString("sp.sp_saleitem"),
                            rs.getString("sp.sp_point")
                        });
                    } while (rs.next());
                }
            } else {
                msn.showMessageInformation("ไม่พบข้อมูลตามเงื่อนไขที่ระบุ ...");
            }
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private boolean checkDate(JTextField txtdate) {
        boolean chkDate = false;
        try {
            f.convertDateshowToSQL(txtdate.getText().trim());
            chkDate = true;
        } catch (Exception e) {
        }
        return chkDate;
    }

    private void browsCampaign(JTextField txtOutput) {
        try {
            dBrows_Campaign frm = new dBrows_Campaign(null, true);
            frm.setVisible(true);
            if (frm.getSccode().length() > 0) {
                txtOutput.setText(frm.getSccode());
                txtOutput.requestFocus();
            }
        } catch (Exception e) {
            msn.showMessageWarning(e.getMessage());
        }
    }

    private void browsStampPro(JTextField txtOutput) {
        try {
            dBrows_StampPro frm = new dBrows_StampPro(null, true);
            frm.setVisible(true);
            if (frm.getSpcode().length() > 0) {
                txtOutput.setText(frm.getSpcode());
                txtOutput.requestFocus();
            }
        } catch (Exception e) {
            msn.showMessageWarning(e.getMessage());
        }
    }

    public JTable createNewTable(JTable jtable) {
        DefaultTableCellRenderer d;
        TableColumnModel tcm = jtable.getColumnModel();

        int index = jtable.getColumnCount();
        ArrayList<String> columnNames = new ArrayList<String>();
        for (int i = 0; i < index; i++) {
            d = (DefaultTableCellRenderer) jtable.getCellRenderer(0, i);
            tcm.getColumn(i).setCellRenderer(d);
            Rectangle r = jtable.getTableHeader().getHeaderRect(i);
            columnNames.add(jtable.getColumnName(i));
        }

        DefaultTableModel model = new DefaultTableModel();
        for (int i = 0; i < columnNames.size(); i++) {
            model.addColumn(columnNames.get(i));
        }

        tblHead = new JTable(model);
        tcm = tblHead.getColumnModel();
        tblHead.setColumnModel(tcm);

        return tblHead;
    }

    private JTable createNewTableFixBranchGroup() {
        DefaultTableCellRenderer d;
        TableColumnModel tcm = new DefaultTableColumnModel();

        ArrayList<String> columnNames = new ArrayList<String>();
        columnNames.add("รหัสกลุ่มสาขา");
        columnNames.add("ชื่อกลุ่มสาขา");

        DefaultTableModel model = new DefaultTableModel();
        for (int i = 0; i < columnNames.size(); i++) {
            model.addColumn(columnNames.get(i));
        }

        tblFixBranchGroup = new JTable(model);
        tcm = tblFixBranchGroup.getColumnModel();
        tblFixBranchGroup.setColumnModel(tcm);

        return tblFixBranchGroup;
    }

    private JTable createNewTableFixBranch() {
        DefaultTableCellRenderer d;
        TableColumnModel tcm = new DefaultTableColumnModel();

        ArrayList<String> columnNames = new ArrayList<String>();
        columnNames.add("รหัสกลุ่มสาขา");
        columnNames.add("รหัสสาขา");
        columnNames.add("ชื่อสาขา");

        DefaultTableModel model = new DefaultTableModel();
        for (int i = 0; i < columnNames.size(); i++) {
            model.addColumn(columnNames.get(i));
        }

        tblFixBranch = new JTable(model);
        tcm = tblFixBranch.getColumnModel();
        tblFixBranch.setColumnModel(tcm);

        return tblFixBranch;
    }

    private JTable createNewTableFixPLU() {
        DefaultTableCellRenderer d;
        TableColumnModel tcm = new DefaultTableColumnModel();

        ArrayList<String> columnNames = new ArrayList<String>();
        columnNames.add("กลุ่ม");
        columnNames.add("รหัสสินค้า");
        columnNames.add("ชื่อสินค้า");

        DefaultTableModel model = new DefaultTableModel();
        for (int i = 0; i < columnNames.size(); i++) {
            model.addColumn(columnNames.get(i));
        }

        tblFixPLU = new JTable(model);
        tcm = tblFixPLU.getColumnModel();
        tblFixPLU.setColumnModel(tcm);

        return tblFixPLU;
    }

    private JTable createNewTableFixExpDate() {
        DefaultTableCellRenderer d;
        TableColumnModel tcm = new DefaultTableColumnModel();

        ArrayList<String> columnNames = new ArrayList<String>();
        columnNames.add("วันที่ไม่ร่วมรายการ");

        DefaultTableModel model = new DefaultTableModel();
        for (int i = 0; i < columnNames.size(); i++) {
            model.addColumn(columnNames.get(i));
        }

        tblFixExpdate = new JTable(model);
        tcm = tblFixExpdate.getColumnModel();
        tblFixExpdate.setColumnModel(tcm);

        return tblFixExpdate;
    }

    private void clearForm() {
        txtSFrom.setText("");
        txtSTo.setText("");
        txtPFrom.setText("");
        txtPTo.setText("");

        txtDateStr1.setText(f.First(date));
        txtDateStr2.setText(f.Last(date));
        txtSFrom.requestFocus();

        btnBrows1.setFocusable(false);
        btnBrows2.setFocusable(false);
        btnPBrows1.setFocusable(false);
        btnPBrows2.setFocusable(false);
        btnDate1.setFocusable(false);
        btnDate2.setFocusable(false);
        btnExcel.setFocusable(false);
        btnExit.setFocusable(false);
    }

    private void saveExcel(JTable tblExcel) {
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        File f;

        String condition = "รายงานแสตมป์แคมเปญ";
        String alert_save = "มีไฟล์ข้อมูลชื่อนี้อยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?";
        try {
            f = new File(new File("stampcampaign.xls").getCanonicalPath());
            chooser.setSelectedFile(f);
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm2 = chooser.showSaveDialog(this);
            if (confirm2 == JFileChooser.APPROVE_OPTION) {

                File curFile = chooser.getSelectedFile();

                if (curFile.exists()) {
                    int confirm = msn.showMessageConfirm("Yes", "No", alert_save);
                    if (confirm == 1) {
                        return;
                    } else {
                        try {
                            test.setOutputFile(curFile.toString());
                            test.writetableNoSum(tblExcel, tblExcel.getColumnModel(), condition);
                            msn.showMessageInformation("บันทึกข้อมูลเรียบร้อบแล้ว");
                        } catch (IOException ex) {
                        } catch (WriteException ex) {
                        }
                    }
                } else {
                    try {
                        test.setOutputFile(curFile.toString());
                        test.writetableNoSum(tblExcel, tblExcel.getColumnModel(), condition);
                        msn.showMessageInformation("บันทึกข้อมูลเรียบร้อบแล้ว");
                    } catch (IOException ex) {
                    } catch (WriteException ex) {
                    }
                }
            }
        } catch (IOException e) {
        }
    }

    private void ProcessLoadDataSheet2(String Campaign, String Promotion) {
        modelFixBGroup = (DefaultTableModel) tblFixBranchGroup.getModel();
        try {
            String sql = "select * from stamppro_linkbgroup sg "
                    + "left join branchgroup bg on sg.bgcode = bg.bgroupcode  "
                    + "left join stamppromotion sp on sg.sp_code = sp.sp_code and sg.s_code = sp.sp_campaign "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where sg.s_code  ='" + Campaign + "' and sg.sp_code ='" + Promotion + "' "
                    + "order by sg.s_code, sg.sp_code,sg.bgcode;";
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                String tmpCode = "", Code = "";
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        Code = cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + cvth.ASCII2Unicode(rs.getString("sp.sp_code"));
                        if (!tmpCode.equals(Code)) {
                            modelFixBGroup.addRow(new Object[]{
                                "แสตมป์แคมเปญ : " + cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + " - " + cvth.ASCII2Unicode(rs.getString("s.s_campaignname")) + "  แสตมป์โปรโมชั่น : "
                                + cvth.ASCII2Unicode(rs.getString("sp.sp_code")) + " - " + cvth.ASCII2Unicode(rs.getString("sp.sp_name"))
                            });
                        }
                        modelFixBGroup.addRow(new Object[]{
                            cvth.ASCII2Unicode(rs.getString("sg.bgcode")),
                            cvth.ASCII2Unicode(rs.getString("bg.bgroupname"))
                        });
                        tmpCode = cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + cvth.ASCII2Unicode(rs.getString("sp.sp_code"));
                    } while (rs.next());
                } else {
                    do {
                        Code = rs.getString("sp.sp_campaign") + rs.getString("sp.sp_code");
                        if (!tmpCode.equals(Code)) {
                            modelFixBGroup.addRow(new Object[]{
                                "แสตมป์แคมเปญ : " + rs.getString("sp.sp_campaign") + " - " + rs.getString("s.s_campaignname") + "  แสตมป์โปรโมชั่น : "
                                + rs.getString("sp.sp_code") + " - " + rs.getString("sp.sp_name")
                            });
                        }
                        modelFixBGroup.addRow(new Object[]{
                            rs.getString("sg.bgcode"),
                            rs.getString("bg.bgroupname")
                        });
                    } while (rs.next());
                }
            }
            pre.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void SaveExcel() {
        createNewTable(tblHead);
        createNewTableFixBranchGroup();
        createNewTableFixBranch();
        createNewTableFixPLU();
        createNewTableFixExpDate();

        ProcessLoadDataSheet1(); //Header

        JTable[] jTable = new JTable[]{
            tblHead, tblFixBranchGroup, tblFixBranch, tblFixPLU, tblFixExpdate
        };

        String[] strCondition = new String[]{
            "รายงานแสดงข้อมูลแสตมป์โปรโมชั่น", "ข้อมูลกลุ่มสาขาที่ร่วมรายการ", "ข้อมูลสาขาที่ร่วมการการ", "ข้อมูลสินค้าที่ร่วมรายการ", "ข้อมูลวันที่ยกเว้น"
        };

        String[] strSheetName = new String[]{
            "StampPromotion", "Fix Branchgroup", "Fix Branch", "Fix PLU", "Fix ExceptDate"
        };

        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();
        File f;

        String alert_save = "มีไฟล์ข้อมูลชื่อนี้อยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?";
        try {
            f = new File(new File("StamPromotion.xls").getCanonicalPath());
            chooser.setSelectedFile(f);
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm2 = chooser.showSaveDialog(this);
            if (confirm2 == JFileChooser.APPROVE_OPTION) {

                File curFile = chooser.getSelectedFile();

                if (curFile.exists()) {
                    int confirm = msn.showMessageConfirm("Yes", "No", alert_save);
                    if (confirm == 1) {
                        return;
                    } else {
                        try {
                            test.setOutputFile(curFile.toString());
                            test.writetableSheet(jTable, strCondition, strSheetName);
                            msn.showMessageInformation("บันทึกข้อมูลเรียบร้อบแล้ว");
                        } catch (IOException ex) {
                        } catch (WriteException ex) {
                        }
                    }
                } else {
                    try {
                        test.setOutputFile(curFile.toString());
                        test.writetableSheet(jTable, strCondition, strSheetName);
                        msn.showMessageInformation("บันทึกข้อมูลเรียบร้อบแล้ว");
                    } catch (IOException ex) {
                    } catch (WriteException ex) {
                    }
                }
            }
        } catch (IOException e) {
        }

    }

    private void ProcessLoadDataSheet3(String Campaign, String Promotion) {
        modelFixBranch = (DefaultTableModel) tblFixBranch.getModel();
        try {
            String sql = "select * from stamppro_linkbranch sb "
                    + "left join branfile b on sb.bcode = b.code "
                    + "left join stamppromotion sp on sb.sp_code = sp.sp_code and sb.s_code = sp.sp_campaign "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where sb.s_code  ='" + Campaign + "' and sb.sp_code ='" + Promotion + "' "
                    + "order by sb.s_code, sb.sp_code,sb.bcode ";
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                String tmpCode = "", Code = "";
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        Code = cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + cvth.ASCII2Unicode(rs.getString("sp.sp_code"));
                        if (!tmpCode.equals(Code)) {
                            modelFixBranch.addRow(new Object[]{
                                "แสตมป์แคมเปญ : " + cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + " - " + cvth.ASCII2Unicode(rs.getString("s.s_campaignname")) + "  แสตมป์โปรโมชั่น : "
                                + cvth.ASCII2Unicode(rs.getString("sp.sp_code")) + " - " + cvth.ASCII2Unicode(rs.getString("sp.sp_name"))
                            });
                        }
                        modelFixBranch.addRow(new Object[]{
                            cvth.ASCII2Unicode(rs.getString("b.bgroup")),
                            cvth.ASCII2Unicode(rs.getString("sb.bcode")),
                            cvth.ASCII2Unicode(rs.getString("b.name"))
                        });
                        tmpCode = cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + cvth.ASCII2Unicode(rs.getString("sp.sp_code"));
                    } while (rs.next());
                } else {
                    do {
                        Code = rs.getString("sp.sp_campaign") + rs.getString("sp.sp_code");
                        if (!tmpCode.equals(Code)) {
                            modelFixBranch.addRow(new Object[]{
                                "แสตมป์แคมเปญ : " + rs.getString("sp.sp_campaign") + " - " + rs.getString("s.s_campaignname") + "  แสตมป์โปรโมชั่น : "
                                + rs.getString("sp.sp_code") + " - " + rs.getString("sp.sp_name")
                            });
                        }
                        modelFixBranch.addRow(new Object[]{
                            rs.getString("b.bgroup"),
                            rs.getString("sb.bcode"),
                            rs.getString("b.name")
                        });
                    } while (rs.next());
                }
            }
            pre.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void ProcessLoadDataSheet4(String Campaign, String Promotion) {
        modelFixPLU = (DefaultTableModel) tblFixPLU.getModel();
        try {
            String sql = "select * from stamppro_linkplu lp "
                    + "left join product p on lp.pcode = p.pcode "
                    + "left join stamppromotion sp on lp.sp_code = sp.sp_code and lp.s_code = sp.sp_campaign "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where lp.s_code  ='" + Campaign + "' and lp.sp_code ='" + Promotion + "' "
                    + "order by lp.s_code, lp.sp_code, lp.pcode";
            System.out.println("ProcessLoadDataSheet4 :" + sql);
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                String tmpCode = "", Code = "";
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        Code = cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + cvth.ASCII2Unicode(rs.getString("sp.sp_code"));
                        if (!tmpCode.equals(Code)) {
                            modelFixPLU.addRow(new Object[]{
                                "แสตมป์แคมเปญ : " + cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + " - " + cvth.ASCII2Unicode(rs.getString("s.s_campaignname")) + "  แสตมป์โปรโมชั่น : "
                                + cvth.ASCII2Unicode(rs.getString("sp.sp_code")) + " - " + cvth.ASCII2Unicode(rs.getString("sp.sp_name"))
                            });
                        }
                        modelFixPLU.addRow(new Object[]{
                            cvth.ASCII2Unicode(rs.getString("p.pgroup")),
                            cvth.ASCII2Unicode(rs.getString("lp.pcode")),
                            cvth.ASCII2Unicode(rs.getString("p.pdesc"))
                        });
                        tmpCode = cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + cvth.ASCII2Unicode(rs.getString("sp.sp_code"));
                    } while (rs.next());
                } else {
                    do {
                        Code = rs.getString("sp.sp_campaign") + rs.getString("sp.sp_code");
                        if (!tmpCode.equals(Code)) {
                            modelFixPLU.addRow(new Object[]{
                                "แสตมป์แคมเปญ : " + rs.getString("sp.sp_campaign") + " - " + rs.getString("s.s_campaignname") + "  แสตมป์โปรโมชั่น : "
                                + rs.getString("sp.sp_code") + " - " + rs.getString("sp.sp_name")
                            });
                        }
                        modelFixPLU.addRow(new Object[]{
                            rs.getString("p.pgroup"),
                            rs.getString("lp.pcode"),
                            rs.getString("p.pdesc")
                        });
                    } while (rs.next());
                }
            }
            pre.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }

    private void ProcessLoadDataSheet5(String Campaign, String Promotion) {
        modelFixExpdate = (DefaultTableModel) tblFixExpdate.getModel();
        try {
            String sql = "select * from stamppro_exceptdate sd "
                    + "left join stamppromotion sp on sd.sp_code = sp.sp_code and sd.s_code = sp.sp_campaign "
                    + "left join stampcampaign s on sp.sp_campaign = s.s_campaigncode "
                    + "where sd.s_code  ='" + Campaign + "' and sd.sp_code ='" + Promotion + "' "
                    + "order by sd.s_code, sd.sp_code,sd.exp_date";
            PreparedStatement pre = dbUtility.con.prepareStatement(sql);
            ResultSet rs = pre.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                String tmpCode = "", Code = "";
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    do {
                        Code = cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + cvth.ASCII2Unicode(rs.getString("sp.sp_code"));
                        if (!tmpCode.equals(Code)) {
                            modelFixExpdate.addRow(new Object[]{
                                "แสตมป์แคมเปญ : " + cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + " - " + cvth.ASCII2Unicode(rs.getString("s.s_campaignname")) + "  แสตมป์โปรโมชั่น : "
                                + cvth.ASCII2Unicode(rs.getString("sp.sp_code")) + " - " + cvth.ASCII2Unicode(rs.getString("sp.sp_name"))
                            });
                        }
                        modelFixExpdate.addRow(new Object[]{
                            f.convertDatesqlToShow(cvth.ASCII2Unicode(rs.getString("sd.exp_date")))
                        });
                        tmpCode = cvth.ASCII2Unicode(rs.getString("sp.sp_campaign")) + cvth.ASCII2Unicode(rs.getString("sp.sp_code"));
                    } while (rs.next());
                } else {
                    do {
                        Code = rs.getString("sp.sp_campaign") + rs.getString("sp.sp_code");
                        if (!tmpCode.equals(Code)) {
                            modelFixExpdate.addRow(new Object[]{
                                "แสตมป์แคมเปญ : " + rs.getString("sp.sp_campaign") + " - " + rs.getString("s.s_campaignname") + "  แสตมป์โปรโมชั่น : "
                                + rs.getString("sp.sp_code") + " - " + rs.getString("sp.sp_name")
                            });
                        }
                        modelFixExpdate.addRow(new Object[]{
                            f.convertDatesqlToShow(rs.getString("sd.exp_date"))
                        });
                    } while (rs.next());
                }
            }
            pre.close();
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
            msn.showMessageError(e.getMessage());
        }
    }
}
