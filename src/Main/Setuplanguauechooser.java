/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import frmlist.*;
import java.awt.Point;
import utilititiesfunction.*;
import masterfile.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import masterfile.BankFile;
import masterfile.setUserGroup;
import masterfile.showBorUser;
import masterfile.showPosUser;
import org.jdesktop.swingx.renderer.StringValue;
import org.jdesktop.swingx.renderer.StringValues;
import reportfile.TempPLU;
import utilititiesfunction.NimbusFrame;
import utilititiesfunction.SetupLanguage;
import reportfile.*;
/**
 *
 * @author user
 */
public class Setuplanguauechooser extends javax.swing.JDialog {
    private String chkpath="";
    private String chkos;

    
    /**
     * Creates new form Setuplangauechooser
     */
    public Setuplanguauechooser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cblistform = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        listform = new javax.swing.JList();
        db_ok = new javax.swing.JButton();
        db_exit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Setup Langaue Form");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        cblistform.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        cblistform.setName("cbform");
        cblistform.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cblistformActionPerformed(evt);
            }
        });

        listform.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(listform);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cblistform, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cblistform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addContainerGap())
        );

        db_ok.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Ok.png"))); // NOI18N
        db_ok.setText("ตกลง (OK)");
        db_ok.setName("db_ok"); // NOI18N
        db_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_okActionPerformed(evt);
            }
        });

        db_exit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Log-Out-icon.png"))); // NOI18N
        db_exit.setText("ออก (Exit)");
        db_exit.setName("db_exit"); // NOI18N
        db_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_exitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Setup Langaue Form");
        jLabel1.setName("db_lbtitle");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(296, 296, 296)
                                .addComponent(db_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(db_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(db_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-602)/2, (screenSize.height-580)/2, 602, 580);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
                  
       /* chkos = System.getProperty("os.name").toString().toLowerCase();
           if (!chkos.equalsIgnoreCase("linux")) {
                chkpath="C:";
                        
             } else {
               chkpath ="";
             }
        String inFile = chkpath + "/spapplication/dbconfig/language/Formall.ini";
        String outFile = chkpath + "/spapplication/dbconfig/languageconvert/Formall.ini";
       
        String inCharset = "UTF-8";
        String outCharset = "TIS-620";
      
       String [] menuItem = new String [4];
       
        SetupLanguage su = new SetupLanguage(new NimbusFrame(), true);
       if (!chkos.equalsIgnoreCase("linux")) {
        su.ConverCharSet(inFile, inCharset, outFile, outCharset);
        } else {
            su.copyFile(inFile, outFile);
        }
        File fObject = new File(outFile);
        if (!fObject.canRead()) {
            JOptionPane.showMessageDialog(null, "กรุณากำหนด File font.ini");
            System.exit(0);
        } else {
            try {
                boolean eof = false;
                FileReader file = new FileReader(outFile);
                BufferedReader buff = new BufferedReader(file);
                while (!eof) {
                    String line = buff.readLine();
                    if (line == null) {
                        eof = true;
                    } else {
                        if (!line.equals("")) {
                            String TempStr = line;
                          String[] ArrayStr = TempStr.split(":");
                          if(ArrayStr[0].trim().equals("0")){
                              
                          }
                          else if(ArrayStr[0].trim().equalsIgnoreCase("menuitem")){
                              
                          }
                          else
                          cblistform.addItem(ArrayStr[0]);
                          for(int i = 0;i<A){
                              
                          }
                }
                
                buff.close();

            }}} catch (Exception e) {
                e.printStackTrace();
            }
        }*/
        String index = String.valueOf(cblistform.getSelectedItem());
         DefaultListModel model;

      chkos = System.getProperty("os.name").toString().toLowerCase();
        model = new DefaultListModel();
         listform.setModel(model);
        
        //System.out.print(index);
         String inFile = chkpath + "/spapplication/dbconfig/language/Formall.ini";
        String outFile = chkpath + "/spapplication/dbconfig/languageconvert/Formall.ini";
         String inCharset = "UTF-8";
        String outCharset = "TIS-620";
            getLanguage su = new getLanguage();
        if (!chkos.equalsIgnoreCase("linux")) {
        su.ConverCharSet(inFile, inCharset, outFile, outCharset);
        } else {
            su.copyFile(inFile, outFile);
        }
        File fObject = new File(outFile);
        if (!fObject.canRead()) {
            JOptionPane.showMessageDialog(null, "กรุณากำหนด File font.ini");
            System.exit(0);
        } else {
            try {
                String Temp="";
                String Curent = "";
                boolean eof = false;
                FileReader file = new FileReader(outFile);
                BufferedReader buff = new BufferedReader(file);
                while (!eof) {
                    String line = buff.readLine();
                    if (line == null) {
                        eof = true;
                    } else {
                        if (!line.equals("")) {
                            String TempStr = line;
                          String[] ArrayStr = TempStr.split(":");
                     if(ArrayStr[0].trim().equals("0")){
                            
                          }
                          else if(ArrayStr[0].trim().equalsIgnoreCase("menuitem")){
                              
                          }
                          else{
                              Curent = ArrayStr[0];
                              if(!Curent.equals(Temp))
                              {
                                  cblistform.addItem(Curent);
                              }
                              
                              Temp = Curent;
                            
                             /* int count = cblistform.getItemCount();
                              if(count==0){
                                 cblistform.addItem(ArrayStr[0]);  
                              }
                              else{
                                 
                                    for(int i =0;i<count;i++){
                             
                               if(cblistform.getItemAt(i).equals(ArrayStr[0])){
                                   
                               }
                               else{
                                   cblistform.addItem(ArrayStr[0]); 
                               }
                                 //cblistform.addItem(ArrayStr[0]);   
                           }
                              }*/
                                 
                            //  System.out.print(count);
                        
                         
                        //}
                             // System.out.print(menuItem[0].toString()+" ");
                              //cblistform.addItem(menuItem);
                             //  System.out.print(menuItem[1].toString()+" ");
                   
                   
                     }
                    
                      //System.out.print(menuItem[0]+"  "+menuItem[1]);
                        }
                    }
               
                   }
                
                buff.close();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

     String item = cblistform.getSelectedItem().toString();
     setListform(item);
    
         
    }//GEN-LAST:event_formWindowOpened

    private void cblistformActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cblistformActionPerformed
        String index = String.valueOf(cblistform.getSelectedItem());
        
     setListform(index);
    }//GEN-LAST:event_cblistformActionPerformed

    private void db_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_okActionPerformed
         String menuName=  listform.getSelectedValue().toString();
       chkos = System.getProperty("os.name").toString().toLowerCase();
           if (!chkos.equalsIgnoreCase("linux")) {
                chkpath="C:";
                        
             } else {
               chkpath ="";
             }
        String inFile = chkpath + "/spapplication/dbconfig/language/Formall.ini";
        String outFile = chkpath + "/spapplication/dbconfig/languageconvert/Formall.ini";
       
        String inCharset = "UTF-8";
        String outCharset = "TIS-620";
      
       String  formname = "";
     
        getLanguage gl = new getLanguage();
       if (!chkos.equalsIgnoreCase("linux")) {
        gl.ConverCharSet(inFile, inCharset, outFile, outCharset);
        } else {
            gl.copyFile(inFile, outFile);
        }
       String [] result = new String[5];
        File fObject = new File(outFile);
        if (!fObject.canRead()) {
         //  JOptionPane.showMessageDialog(null, "กรุณากำหนด File " + FormName + ".ini");
           // System.exit(0);
            //return result;
        } else {
            try {
                boolean eof = false;
                FileReader file = new FileReader(outFile);
                BufferedReader buff = new BufferedReader(file);
               
                while (!eof) {
                    String line = buff.readLine();
                    if (line == null) {
                        eof = true;
                    } else {
                        if (!line.equals("")) {
                            String TempStr = line;
                            String []ArrayStr = TempStr.split(":");
                            
                        
                                if (ArrayStr[1].equalsIgnoreCase(menuName)) {
                                    
                                  formname = ArrayStr[2].toString();
                             
                                }
                     
                                {
                            }
                        }
                    }
                }

                buff.close();

            } catch (Exception e) {
               JOptionPane.showMessageDialog(this, e);
            }
        }
         SetupLanguage su = new SetupLanguage(new NimbusFrame(),true);
       if(formname.equalsIgnoreCase("MainControl")){
           MainControl m = new MainControl(1);
         
             su.setText(formname,m);
             
              su.setVisible(true);
               
       }
       else if(formname.equalsIgnoreCase("Setuplanguauechooser")){
            su.setText(formname,this);
            su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("SetupLanguaue")){
            su.setText(formname,su);
            su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBankFile")){
              su.setText(formname,new BrowserBankFile(new NimbusFrame(),true));
              su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("setfontchoose")){
              su.setText(formname,new Setfontchoose(new NimbusFrame(),true));
              su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("setfonts")){
              su.setText(formname,new SetFonts(new NimbusFrame(),true));
              su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranch")){
              su.setText(formname,new BrowserBranch(new NimbusFrame(),true));
              su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranchArea")){
                 su.setText(formname,new BrowserBranchArea(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranchCrArea")){
            su.setText(formname,new BrowserBranchCrArea(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranchGroup")){
           su.setText(formname,new BrowserBranchGroup(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranchPlane")){
           su.setText(formname,new BrowserBranchPlane(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranchSize")){
           su.setText(formname,new BrowserBranchSize(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranchStore")){
           su.setText(formname,new BrowserBranchStore(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranchType")){
           su.setText(formname,new BrowserBranchType(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranchmult")){
           su.setText(formname,new BrowserBranchmult(null, true, "", new DefaultTableModel()));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBranchmult2")){
           su.setText(formname,new BrowserBranchmult2(null, true, ""));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserBrand")){
           su.setText(formname,new BrowserBrand(new NimbusFrame(),true));
                su.setVisible(true);
       } else if(formname.equalsIgnoreCase("BrowserBustype")){
           su.setText(formname,new BrowserBustype(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserCompany")){
           su.setText(formname,new BrowserCompany(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserCrAcc")){
           su.setText(formname,new BrowserCrAcc(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BrowserProduct")){
           su.setText(formname,new BrowserProduct(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("Browseringredent")){
           su.setText(formname,new Browseringredent(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ListBranch")){
           su.setText(formname,new ListBranch(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ListCreditCardSetup")){
           su.setText(formname,new ListCreditCardSetup(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ListIngredent")){
           su.setText(formname,new ListIngredent(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ListProduct")){
           su.setText(formname,new ListProduct(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ListProductOfIng")){
           su.setText(formname,new ListProductOfIng(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ListVender")){
           su.setText(formname,new ListVender(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfArea")){
           su.setText(formname,new ShowBranchOfArea(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfBGroup")){
           su.setText(formname,new ShowBranchOfBGroup(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfBrand")){
           su.setText(formname,new ShowBranchOfBrand(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfBtype")){
           su.setText(formname,new ShowBranchOfBtype(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfBusType")){
           su.setText(formname,new ShowBranchOfBusType(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfCompany")){
           su.setText(formname,new ShowBranchOfCompany(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfCrArea")){
           su.setText(formname,new ShowBranchOfCrArea(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfPlane")){
           su.setText(formname,new ShowBranchOfPlane(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfSize")){
           su.setText(formname,new ShowBranchOfSize(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowBranchOfStore")){
           su.setText(formname,new ShowBranchOfStore(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ShowCuProOfCampaign")){
           su.setText(formname,new ShowCuProOfCampaign(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("delbranch")){
           su.setText(formname,new delbranch(null, rootPaneCheckingEnabled, new Point(20,50), null));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("delfixbranch")){
           su.setText(formname,new delfixbranch(null, rootPaneCheckingEnabled, new Point(20,50), null));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("delplu")){
           su.setText(formname,new delplu(null, rootPaneCheckingEnabled, new Point(20,50), null));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listArea")){
           su.setText(formname,new listArea(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listBgroupOfEff")){
           su.setText(formname,new listBgroupOfEff(null, rootPaneCheckingEnabled, inFile));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listBranchGroup")){
           su.setText(formname,new frmlist.listBranchGroup(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listBranchGroup2")){
           su.setText(formname,new listBranchGroup2(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listBrand")){
           su.setText(formname,new listBrand(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listBtype")){
           su.setText(formname,new listBtype(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listBustype")){
           su.setText(formname,new listBustype(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listCampaign")){
           su.setText(formname,new listCampaign(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listCompany")){
           su.setText(formname,new listCompany(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listCoupon")){
           su.setText(formname,new listCoupon(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listCrAccNo")){
           su.setText(formname,new listCrAccNo(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listCrArea")){
           su.setText(formname,new listCrArea(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listGroupfile")){
           su.setText(formname,new listGroupfile(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listIngGroup")){
           su.setText(formname,new listIngGroup(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listPDept")){
           su.setText(formname,new listPDept(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listPOSConfig")){
           su.setText(formname,new listPOSConfig(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listPlane")){
           su.setText(formname,new listPlane(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listPromotion")){
           su.setText(formname,new frmlist.listPromotion(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("listSize")){
           su.setText(formname,new listSize(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("listStore")){
           su.setText(formname,new listStore(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("listTempPlu")){
           su.setText(formname,new listTempPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("BankFile")){
           su.setText(formname,new BankFile());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("Bplane")){
           su.setText(formname,new Bplane());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BranchArea")){
           su.setText(formname,new BranchArea());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BranchGroup")){
           su.setText(formname,new BranchGroup());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("BranchPerUser")){
           su.setText(formname,new BranchPerUser(new NimbusFrame(),true));
                su.setVisible(true);
       } else if(formname.equalsIgnoreCase("BranchSetting")){
           su.setText(formname,new BranchSetting(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("Branchtype")){
           su.setText(formname,new Branchtype());
                su.setVisible(true);
       } else if(formname.equalsIgnoreCase("Brandfile")){
           su.setText(formname,new Brandfile(new NimbusFrame(),true));
                su.setVisible(true);
       } else if(formname.equalsIgnoreCase("Bshopsize")){
           su.setText(formname,new Bshopsize());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("Businesstype")){
           su.setText(formname,new Businesstype(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("Campaignfile")){
           su.setText(formname,new Campaignfile(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("ChangePassword")){
           su.setText(formname,new ChangePassword(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("CompanySet")){
           su.setText(formname,new CompanySet());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("CrAccNo")){
           su.setText(formname,new CrAccNo());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("CrArea")){
           su.setText(formname,new CrArea());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("CreditCardSetup")){
           su.setText(formname,new CreditCardSetup());
                su.setVisible(true);
       } else if(formname.equalsIgnoreCase("Fastivalfile")){
           su.setText(formname,new Fastivalfile(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("GroupStore")){
           su.setText(formname,new GroupStore());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("Groupfile")){
           su.setText(formname,new Groupfile(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("IngGroup")){
           su.setText(formname,new IngGroup(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("POSConfigSetup")){
           su.setText(formname,new POSConfigSetup());
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("PathSetup")){
           su.setText(formname,new PathSetup(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("PostData")){
           su.setText(formname,new PostData());
                su.setVisible(true);
       } else if(formname.equalsIgnoreCase("PromotionSetup")){
           su.setText(formname,new PromotionSetup(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("SendLogoToBranch")){
           su.setText(formname,new SendLogoToBranch(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("SendMessageToBranch")){
           su.setText(formname,new SendMessageToBranch(new NimbusFrame(),true));
                su.setVisible(true);
       } else if(formname.equalsIgnoreCase("SetPingredent")){
           su.setText(formname,new SetPingredent(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("SpacialCouponSetup")){
           su.setText(formname,new SpacialCouponSetup(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("UnitType")){
           su.setText(formname,new UnitType(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("UpdateMaterial")){
           su.setText(formname,new UpdateMaterial(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("VenderFile")){
           su.setText(formname,new VenderFile(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("checkfile")){
           su.setText(formname,new checkfile());
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("frmSetSalePriceofBranchGroup")){
           su.setText(formname,new frmSetSalePriceofBranchGroup(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("listBranchGroup")){
           su.setText(formname,new masterfile.listBranchGroup(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("listPromotion")){
           su.setText(formname,new masterfile.listPromotion(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("logincontrol")){
           su.setText(formname,new logincontrol(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("menusetup")){
           su.setText(formname,new menusetup(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("productPLU")){
           su.setText(formname,new productPLU(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("senddatatobranch")){
           su.setText(formname,new senddatatobranch());
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("setBorMenuGroup")){
           su.setText(formname,new setBorMenuGroup(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("setBorUser")){
           su.setText(formname,new setBorUser(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("setEffective")){
           su.setText(formname,new setEffective(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("setMenuList")){
           su.setText(formname,new setMenuList(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("setPosUser")){
           su.setText(formname,new setPosUser(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("setUserGroup")){
           su.setText(formname,new setUserGroup(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("showBorUser")){
           su.setText(formname,new showBorUser(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("showPosUser")){
           su.setText(formname,new showPosUser(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("TempPLU")){
           su.setText(formname,new TempPLU(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaBudFast")){
           su.setText(formname,new criteriaBudFast(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaCash")){
           su.setText(formname,new criteriaCash(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaComPlu")){
           su.setText(formname,new criteriaComPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaCreditReport")){
           su.setText(formname,new criteriaCreditReport(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaCustAvg")){
           su.setText(formname,new criteriaCustAvg(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaEmpAvg")){
           su.setText(formname,new criteriaEmpAvg(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaHourly")){
           su.setText(formname,new criteriaHourly(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaLostDept")){
           su.setText(formname,new criteriaLostDept(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaPlaceAvg")){
           su.setText(formname,new criteriaPlaceAvg(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaPromotion")){
           su.setText(formname,new criteriaPromotion(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaRjfile")){
           su.setText(formname,new criteriaRjfile(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSaleOfDept")){
           su.setText(formname,new criteriaSaleOfDept(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSaleOfPlu")){
           su.setText(formname,new criteriaSaleOfPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaStockCake")){
           su.setText(formname,new criteriaStockCake(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumBud")){
           su.setText(formname,new criteriaSumBud(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumCupon")){
           su.setText(formname,new criteriaSumCupon(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaSumDeptCost")){
           su.setText(formname,new criteriaSumDeptCost(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaSumHourly")){
           su.setText(formname,new criteriaSumHourly(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumMonth")){
           su.setText(formname,new criteriaSumMonth(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumPluCost")){
           su.setText(formname,new criteriaSumPluCost(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumPluIng")){
           su.setText(formname,new criteriaSumPluIng(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaSumPluIngByPlu")){
           su.setText(formname,new criteriaSumPluIngByPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaSumRjfile")){
           su.setText(formname,new criteriaSumRjfile(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumSaleOfDate")){
           su.setText(formname,new criteriaSumSaleOfDate(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumSaleOfDept")){
           su.setText(formname,new criteriaSumSaleOfDept(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumSaleOfDeptByDate")){
           su.setText(formname,new criteriaSumSaleOfDeptByDate(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaSumSaleOfPlu")){
           su.setText(formname,new criteriaSumSaleOfPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaSumStockCake")){
           su.setText(formname,new criteriaSumStockCake(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumTerminal")){
           su.setText(formname,new criteriaSumTerminal(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaSumTerminalByDate")){
           su.setText(formname,new criteriaSumTerminalByDate(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaTerminal")){
           su.setText(formname,new criteriaTerminal(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaTopPluIngByAmt")){
           su.setText(formname,new criteriaTopPluIngByAmt(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaTopPluIngByQty")){
           su.setText(formname,new criteriaTopPluIngByQty(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaTopSaleByAmt")){
           su.setText(formname,new criteriaTopSaleByAmt(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("criteriaTopSaleByQty")){
           su.setText(formname,new criteriaTopSaleByQty(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaVat")){
           su.setText(formname,new criteriaVat(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptBudFast")){
          rptBudFast para = new rptBudFast();
          para.code="plugroup";
           su.setText(formname,new rptBudFast(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("criteriaWeeklyAvg")){
           su.setText(formname,new criteriaWeeklyAvg(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("rptCash")){
           rptCash para = new rptCash();
           para.code="buscode";
           su.setText(formname,new rptCash(new NimbusFrame(),true));
                su.setVisible(true);
       }  else if(formname.equalsIgnoreCase("rptChkpost")){
           su.setText(formname,new rptChkpost(new NimbusFrame(),true));
                su.setVisible(true);
       }
         else if(formname.equalsIgnoreCase("rptComPlu")){
           rptComPlu para = new rptComPlu();
           para.code="All";
             su.setText(formname,new rptComPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptCredit")){
           su.setText(formname,new rptCredit(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptCustAvg")){
           rptCustAvg para = new rptCustAvg();
           para.code="All";
           su.setText(formname,new rptCustAvg(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptEmpAvg")){
           rptEmpAvg para = new rptEmpAvg();
           para.code ="All";
           su.setText(formname,new rptEmpAvg(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptHourly")){
           su.setText(formname,new rptHourly(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptLostDept")){
          rptLostDept para = new rptLostDept();
          para.code="pgroup";
           su.setText(formname,new rptLostDept(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptPlaceAvg")){
           rptPlaceAvg para = new rptPlaceAvg();
           para.code = "brcode";
           su.setText(formname,new rptPlaceAvg(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptPromotion")){
           rptPromotion para = new rptPromotion();
           para.code="prtype";
           su.setText(formname,new rptPromotion(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptPromotionAll")){
           rptPromotionAll para = new rptPromotionAll();
           para.code = "prcode";
           su.setText(formname,new rptPromotionAll(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptRjfile")){
           su.setText(formname,new rptRjfile(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSaleOfDept")){
           su.setText(formname,new rptSaleOfDept(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSaleOfPlu")){
           su.setText(formname,new rptSaleOfPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptShowMenuSetup")){
           su.setText(formname,new rptShowMenuSetup(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptShowPLU")){
           su.setText(formname,new rptShowPLU(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptShowPluByType")){
           su.setText(formname,new rptShowPluByType(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptStockCake")){
           su.setText(formname,new rptStockCake(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumBud")){
           rptSumBud para = new rptSumBud();
           para.code = "rjno";
           su.setText(formname,new rptSumBud(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumCupon")){
           rptSumCupon para = new rptSumCupon();
           para.code ="cucode";
           su.setText(formname,new rptSumCupon(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumDeptCost")){
           rptSumDeptCost para = new rptSumDeptCost();
           para.code="pgroup";
           su.setText(formname,new rptSumDeptCost(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumHourly")){
           su.setText(formname,new rptSumHourly(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumMonth")){
           rptSumMonth para = new rptSumMonth();
           para.code="All";
           su.setText(formname,new rptSumMonth(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptSumPluCost")){
          rptSumPluCost para = new rptSumPluCost();
          para.code="pgroup";
           su.setText(formname,new rptSumPluCost(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptSumPluIng")){
           rptSumPluIng para = new rptSumPluIng();
           para.code="All";
           su.setText(formname,new rptSumPluIng(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptSumPluIngByPlu")){
           rptSumPluIngByPlu para = new rptSumPluIngByPlu();
           para.code="All";
           su.setText(formname,new rptSumPluIngByPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptSumRjfile")){
          rptSumRjfile para = new rptSumRjfile();
          para.code = "rjno";
           su.setText(formname,new rptSumRjfile(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptSumSaleOfDate")){
          rptSumSaleOfDate para = new rptSumSaleOfDate();
          para.code="s_date";
           su.setText(formname,new rptSumSaleOfDate(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumSaleOfDept")){
           rptSumSaleOfDept para = new rptSumSaleOfDept();
           para.code="pgroup";
           su.setText(formname,new rptSumSaleOfDept(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumSaleOfDeptByDate")){
           rptSumSaleOfDeptByDate para = new rptSumSaleOfDeptByDate();
           para.code="pgroup";
           su.setText(formname,new rptSumSaleOfDeptByDate(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumSaleOfPlu")){
           rptSumSaleOfPlu para = new rptSumSaleOfPlu();
           para.code = "s_date";
           su.setText(formname,new rptSumSaleOfPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumStockCake")){
           su.setText(formname,new rptSumStockCake(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumStockCakeAll")){
           su.setText(formname,new rptSumStockCakeAll(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumTerminal")){
           rptSumTerminal para = new rptSumTerminal();
           para.code="t_date";
           su.setText(formname,new rptSumTerminal(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptSumTerminalByDate")){
           rptSumTerminalByDate para = new rptSumTerminalByDate();
           para.code ="t_date";
           su.setText(formname,new rptSumTerminalByDate(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptTerminal")){
           su.setText(formname,new rptTerminal(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptTopPluIngByAmt")){
          rptTopPluIngByAmt para = new rptTopPluIngByAmt();
          para.code = "All";
           su.setText(formname,new rptTopPluIngByAmt(new NimbusFrame(),true));
                su.setVisible(true);
       }else if(formname.equalsIgnoreCase("rptTopPluIngByQty")){
          rptTopPluIngByQty para = new rptTopPluIngByQty();
          para.code ="All";
       // setParamiter();
           su.setText(formname,new rptTopPluIngByQty(new NimbusFrame(), true));
          //  setParamiter();
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptTopSaleByAmt")){
           rptTopSaleByAmt para = new rptTopSaleByAmt();
           para.code = "PGroupCode";
           su.setText(formname,new rptTopSaleByAmt(new NimbusFrame(),true));
                su.setVisible(true);
       }
       
       else if(formname.equalsIgnoreCase("rptTopSaleByQty")){
           rptTopSaleByQty para = new rptTopSaleByQty();
           para.code ="PGroupCode";
           su.setText(formname,new rptTopSaleByQty(new NimbusFrame(),true));
                su.setVisible(true);
       }
       
       else if(formname.equalsIgnoreCase("rptVat")){
           su.setText(formname,new rptVat(new NimbusFrame(),true));
                su.setVisible(true);
       }
       
       else if(formname.equalsIgnoreCase("rptWeeklyAvg")){
           su.setText(formname,new rptWeeklyAvg(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("setBudFastival")){
           su.setText(formname,new setBudFastival(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("setBudRjFile")){
           su.setText(formname,new setBudRjFile(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("criteriaDailyPlu")){
           su.setText(formname,new criteriaDailyPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("criteriaDailyPluSum")){
           su.setText(formname,new criteriaDailyPluSum(new NimbusFrame(),true));
                su.setVisible(true);
       }
       
        else if(formname.equalsIgnoreCase("criteriaFastival")){
           su.setText(formname,new criteriaFastival(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("criteriaRangDate")){
           su.setText(formname,new criteriaRangDate(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("criteriaRptMonth")){
           su.setText(formname,new criteriaRptMonth(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("criteriaSumSaleLost")){
           su.setText(formname,new criteriaSumSaleLost(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptDailyPlu")){
           su.setText(formname,new rptDailyPlu(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptDailyPlu2")){
           su.setText(formname,new rptDailyPlu2(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptDailyPluSum")){
           su.setText(formname,new rptDailyPluSum(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptDailyPluSum2")){
           su.setText(formname,new rptDailyPluSum2(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptFastival")){
           su.setText(formname,new rptFastival(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptMonth")){
           su.setText(formname,new rptMonth(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptRangDate")){
           su.setText(formname,new rptRangDate(new NimbusFrame(),true));
                su.setVisible(true);
       }
        else if(formname.equalsIgnoreCase("rptSumSaleLost")){
           su.setText(formname,new rptSumSaleLost(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("rptDailySale")){
           su.setText(formname,new rptDailySale(new NimbusFrame(),true));
                su.setVisible(true);
       }
       else if(formname.equalsIgnoreCase("criteriaDalilySale")){
           su.setText(formname,new criteriaDalilySale(new NimbusFrame(),true));
                su.setVisible(true);
       }
       

        // TODO add your handling code here:
    }//GEN-LAST:event_db_okActionPerformed

    private void db_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_exitActionPerformed
        //setChkk(0);
        this.dispose();
        // TODO add your handling code here:

    }//GEN-LAST:event_db_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Setuplanguauechooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Setuplanguauechooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Setuplanguauechooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Setuplanguauechooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Setuplanguauechooser dialog = new Setuplanguauechooser(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cblistform;
    private javax.swing.JButton db_exit;
    private javax.swing.JButton db_ok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listform;
    // End of variables declaration//GEN-END:variables
public void setListform(String index){
    DefaultListModel model;
      int i =0;
        model = new DefaultListModel();
         listform.setModel(model);
        
       
      chkos = System.getProperty("os.name").toString().toLowerCase();
           if (!chkos.equalsIgnoreCase("linux")) {
                chkpath="C:";
                        
             } else {
               chkpath ="";
             }
        String inFile = chkpath + "/spapplication/dbconfig/language/Formall.ini";
        String outFile = chkpath + "/spapplication/dbconfig/languageconvert/Formall.ini";
       
        String inCharset = "UTF-8";
        String outCharset = "TIS-620";
      
       
     
        getLanguage su = new getLanguage();
       if (!chkos.equalsIgnoreCase("linux")) {
        su.ConverCharSet(inFile, inCharset, outFile, outCharset);
        } else {
            su.copyFile(inFile, outFile);
        }
        File fObject = new File(outFile);
        if (!fObject.canRead()) {
            JOptionPane.showMessageDialog(null, "กรุณากำหนด File font.ini");
            System.exit(0);
        } else {
            try {
                boolean eof = false;
                FileReader file = new FileReader(outFile);
                BufferedReader buff = new BufferedReader(file);
                while (!eof) {
                    String line = buff.readLine();
                    if (line == null) {
                        eof = true;
                    } else {
                        if (!line.equals("")) {
                            String TempStr = line;
                          String[] ArrayStr = TempStr.split(":");
                     if (ArrayStr[0].equalsIgnoreCase(index))
                          {
                                 //menuItem[i]=ArrayStr[1].toString();
                                
                           //  for(int i = 0,ii=1;i<ArrayStr[0].length();i++){
                               String  menuItem=ArrayStr[1].toString();
                                 model.add(0, menuItem);
                  
                        //}
                             // System.out.print(menuItem[0].toString()+" ");
                              //cblistform.addItem(menuItem);
                             //  System.out.print(menuItem[1].toString()+" ");
                   
                   
                     }
                    
                      //System.out.print(menuItem[0]+"  "+menuItem[1]);
                        }
                    }
               
                   }
                
                buff.close();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
}
public void setParamiter()
    {
        try {
            rptTopPluIngByQty para = new rptTopPluIngByQty();
            
        
            para.date1 = "";
      
          
        
        
        
        
            para.dept1= "";
        
          
        
        
       
        
     
       
            para.branch1= "";
       
          
        
        
      
        
            para.btype1= "";
        
           
      
            para.barea1 = "";
       
            para.bsize1 = "";
        
      
            para.bplan1 = "";
        
        
     
        
            para.bstore1 = "";
        
        
       
            para.company1 = "";
        
        
      
            para.brand1 = "";
        
        
       
            para.bustype1 = "";
        
        
        
        
       
            para.date2="31/12/9999";
        
       
       
            para.dept2= "ZZZZ";
        
        
        
        
      
            para.branch2= "ZZZ";
        
        
    
            para.btype2= "ZZ";
        
        
      
            para.barea2= "ZZ";
        
       
            para.bsize2= "ZZ";
        
        
      
            para.bplan2= "ZZ";
        
        
      
            para.bstore2= "ZZ";
        
        
       
            para.company2= "ZZZ";
        
        
      
            para.brand2= "ZZZ";
        
        
      
            para.bustype2= "ZZZ";
        
        
       
            para.code = "All";
            para.name = "";
        
        
        para.top = 0;
   
        } catch (Exception e) {
        }
        
        
        
    }
}
