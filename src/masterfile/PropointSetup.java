/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SpacialCouponSetup.java
 *
 * Created on Sep 17, 2012, 3:08:14 PM
 */
package masterfile;

import Entity.BranchCodeName;
import dbutility.dbUtility;
import frmlist.*;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import utilities.DateChooser.DateUtil;
import utilititiesfunction.*;

/**
 *
 * @author natee
 */
public class PropointSetup extends javax.swing.JDialog {

    DefaultTableModel model;
    DefaultTableModel model2;
    DefaultTableModel model3;
    DefaultTableModel model4;
    DefaultTableModel model5;
    JTableHeader modelh1;
    JTableHeader modelh2;
    JTableHeader modelh5;
    dbUtility db = new dbUtility();
    private Statement stmt;
    ThaiUtilities cvth = new ThaiUtilities();
    String formname = "propointsetup";
    String SelectedCampain = "";
    String FixBranchError = "";
    String PluListError = "";
    boolean bsaveOK = false;

    /**
     * Creates new form SpacialCouponSetup
     */
    public PropointSetup(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        checkuserconfig();
        db.dbconnect();
        try {
            stmt = (Statement) dbUtility.con.createStatement();
        } catch (Exception e) {
        }
        tblCupon.setAutoCreateRowSorter(true);
        tblfixbranch.setAutoCreateRowSorter(true);
        tblplu.setAutoCreateRowSorter(true);
        showdataintb();
        clearForm();
        t_code.requestFocus();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        plu = new javax.swing.JPopupMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        branch = new javax.swing.JPopupMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        fixbranch = new javax.swing.JPopupMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        plu1 = new javax.swing.JPopupMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        tab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        strDay = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        c1 = new javax.swing.JCheckBox();
        c2 = new javax.swing.JCheckBox();
        c3 = new javax.swing.JCheckBox();
        c4 = new javax.swing.JCheckBox();
        c5 = new javax.swing.JCheckBox();
        c6 = new javax.swing.JCheckBox();
        c7 = new javax.swing.JCheckBox();
        strtype = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        te1 = new javax.swing.JCheckBox();
        tt1 = new javax.swing.JCheckBox();
        tw1 = new javax.swing.JCheckBox();
        tp1 = new javax.swing.JCheckBox();
        td1 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        t_sale1 = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        t_point1 = new javax.swing.JFormattedTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        t_sale2 = new javax.swing.JFormattedTextField();
        jLabel22 = new javax.swing.JLabel();
        t_point2 = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        t_date1 = new javax.swing.JFormattedTextField();
        btn_Calendar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        t_date2 = new javax.swing.JFormattedTextField();
        btn_Calendar1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        t_code = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        t_name = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        t_name1 = new javax.swing.JTextField();
        t_name2 = new javax.swing.JTextField();
        t_name3 = new javax.swing.JTextField();
        t_name4 = new javax.swing.JTextField();
        t_name5 = new javax.swing.JTextField();
        t_name6 = new javax.swing.JTextField();
        t_name7 = new javax.swing.JTextField();
        t_name8 = new javax.swing.JTextField();
        t_name9 = new javax.swing.JTextField();
        paneltable = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        rdactive1 = new javax.swing.JRadioButton();
        rdactive2 = new javax.swing.JRadioButton();
        jPanel19 = new javax.swing.JPanel();
        t_count1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCupon = new javax.swing.JTable();
        paneltab2 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        btn_plu = new javax.swing.JButton();
        t_plu = new javax.swing.JTextField();
        btnpluok = new javax.swing.JButton();
        t_pluname = new javax.swing.JTextField();
        btnbranchcancle2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblplu = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        t_gcode = new javax.swing.JTextField();
        btngroupok = new javax.swing.JButton();
        btn_group3 = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblbranch = new javax.swing.JTable();
        btnok5 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        t_bcode = new javax.swing.JTextField();
        btn_group = new javax.swing.JButton();
        t_bname = new javax.swing.JTextField();
        btnbranchcancle = new javax.swing.JButton();
        btnbranchok = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblfixbranch = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        btnbranchok1 = new javax.swing.JButton();
        t_fixbranch = new javax.swing.JTextField();
        btn_group2 = new javax.swing.JButton();
        t_fixname = new javax.swing.JTextField();
        btnbranchcancle1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        t_code2 = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        btn_plu1 = new javax.swing.JButton();
        t_plu1 = new javax.swing.JTextField();
        btnpluok1 = new javax.swing.JButton();
        t_pluname1 = new javax.swing.JTextField();
        btnbranchcancle3 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblplu1 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        t_gcode1 = new javax.swing.JTextField();
        btngroupok1 = new javax.swing.JButton();
        btn_group4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuNew = new javax.swing.JMenuItem();
        menuCancel = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        menuDelete = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuExit = new javax.swing.JMenuItem();

        plu.setName("popup"); // NOI18N

        jMenuItem7.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem7.setText("ลบรายการที่เลือก");
        jMenuItem7.setName("popup1"); // NOI18N
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        plu.add(jMenuItem7);

        jMenuItem6.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem6.setText("ลบทุกรายการ");
        jMenuItem6.setName("popup2"); // NOI18N
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        plu.add(jMenuItem6);

        branch.setName("popup"); // NOI18N

        jMenuItem8.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem8.setText("ลบรายการที่เลือก");
        jMenuItem8.setName("popup1"); // NOI18N
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        branch.add(jMenuItem8);

        jMenuItem9.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem9.setText("ลบทุกรายการ");
        jMenuItem9.setName("popup2"); // NOI18N
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        branch.add(jMenuItem9);

        fixbranch.setName("popup"); // NOI18N

        jMenuItem10.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem10.setText("ลบรายการที่เลือก");
        jMenuItem10.setName("popup1"); // NOI18N
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        fixbranch.add(jMenuItem10);

        jMenuItem11.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem11.setText("ลบทุกรายการ");
        jMenuItem11.setName("popup2"); // NOI18N
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        fixbranch.add(jMenuItem11);

        plu1.setName("popup"); // NOI18N

        jMenuItem12.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem12.setText("ลบรายการที่เลือก");
        jMenuItem12.setName("popup1"); // NOI18N
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        plu1.add(jMenuItem12);

        jMenuItem13.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem13.setText("ลบทุกรายการ");
        jMenuItem13.setName("popup2"); // NOI18N
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        plu1.add(jMenuItem13);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnNew.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Add-icon.png"))); // NOI18N
        btnNew.setText("เพิ่มรายการ");
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setName("DBbtnadd"); // NOI18N
        btnNew.setRequestFocusEnabled(false);
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Cancel-icon.png"))); // NOI18N
        btnCancel.setText("ยกเลิก");
        btnCancel.setFocusable(false);
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setName("DBbtncancle"); // NOI18N
        btnCancel.setRequestFocusEnabled(false);
        btnCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/save-icon.png"))); // NOI18N
        btnSave.setText("บันทึกข้อมูล");
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setName("DBbtnsave"); // NOI18N
        btnSave.setRequestFocusEnabled(false);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        btnDelete.setText("ลบข้อมูล");
        btnDelete.setFocusable(false);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setName("DBbtndel"); // NOI18N
        btnDelete.setRequestFocusEnabled(false);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        jButton6.setText("พิมพ์");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setName("DBbtnprint"); // NOI18N
        jButton6.setRequestFocusEnabled(false);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jButton7.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        jButton7.setText("ออก");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setName("DBbtnexit"); // NOI18N
        jButton7.setRequestFocusEnabled(false);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tab.setFocusable(false);
        tab.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tab.setPreferredSize(new java.awt.Dimension(1024, 697));
        tab.setRequestFocusEnabled(false);
        tab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabMousePressed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("ใช้ได้เฉพาะวัน (Day)"); // NOI18N
        jLabel6.setName("DBstrday"); // NOI18N

        strDay.setEditable(false);
        strDay.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        c1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        c1.setText("วันอาทิตย์");
        c1.setEnabled(false);
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        c2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        c2.setText("วันจันทร์");
        c2.setEnabled(false);
        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });

        c3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        c3.setText("วันอังคาร");
        c3.setEnabled(false);
        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });

        c4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        c4.setText("วันพุธ");
        c4.setEnabled(false);
        c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c4ActionPerformed(evt);
            }
        });

        c5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        c5.setText("วันพฤหัสฯ");
        c5.setEnabled(false);
        c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c5ActionPerformed(evt);
            }
        });

        c6.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        c6.setText("วันศุกร์");
        c6.setEnabled(false);
        c6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c6ActionPerformed(evt);
            }
        });

        c7.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        c7.setText("วันเสาร์");
        c7.setEnabled(false);
        c7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(c1)
                .addGap(0, 0, 0)
                .addComponent(c2)
                .addGap(0, 0, 0)
                .addComponent(c3)
                .addGap(0, 0, 0)
                .addComponent(c4)
                .addGap(0, 0, 0)
                .addComponent(c5)
                .addGap(0, 0, 0)
                .addComponent(c6)
                .addGap(0, 0, 0)
                .addComponent(c7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c1)
                    .addComponent(c2)
                    .addComponent(c3)
                    .addComponent(c4)
                    .addComponent(c5)
                    .addComponent(c6)
                    .addComponent(c7))
                .addContainerGap())
        );

        strtype.setEditable(false);

        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        te1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        te1.setText("Eat-In");
        te1.setEnabled(false);
        te1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                te1ActionPerformed(evt);
            }
        });

        tt1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tt1.setText("Take Away");
        tt1.setEnabled(false);
        tt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tt1ActionPerformed(evt);
            }
        });

        tw1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tw1.setText("Whole Sale");
        tw1.setEnabled(false);
        tw1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tw1ActionPerformed(evt);
            }
        });

        tp1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tp1.setText("Pinto");
        tp1.setEnabled(false);
        tp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tp1ActionPerformed(evt);
            }
        });

        td1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        td1.setText("Delivery");
        td1.setEnabled(false);
        td1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                td1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(te1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tt1)
                .addGap(6, 6, 6)
                .addComponent(td1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tp1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tw1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(te1)
                .addComponent(tt1)
                .addComponent(td1)
                .addComponent(tp1)
                .addComponent(tw1))
        );

        jLabel11.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Sale Type"); // NOI18N
        jLabel11.setName("DBsaletype"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(strDay, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(strtype, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(strDay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(strtype, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ลูกค้าทั่วไป", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        jLabel17.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel17.setText("จำนวนที่ซื้อ");
        jLabel17.setName("D_disper"); // NOI18N

        t_sale1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0"))));
        t_sale1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_sale1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_sale1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_sale1FocusGained(evt);
            }
        });
        t_sale1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_sale1KeyPressed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel21.setText("จำนวนสิทธฺ์ที่ได้รับ");
        jLabel21.setName("D_disper"); // NOI18N

        t_point1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0"))));
        t_point1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_point1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_point1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_point1FocusGained(evt);
            }
        });
        t_point1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_point1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(t_sale1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(t_point1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_sale1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_point1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ลูกค้าสมาชิก", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        jLabel18.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel18.setText("จำนวนที่ซื้อ");
        jLabel18.setName("D_disper"); // NOI18N

        t_sale2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0"))));
        t_sale2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_sale2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_sale2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_sale2FocusGained(evt);
            }
        });
        t_sale2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_sale2KeyPressed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel22.setText("จำนวนสิทธฺ์ที่ได้รับ");
        jLabel22.setName("D_disper"); // NOI18N

        t_point2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0"))));
        t_point2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_point2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_point2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_point2FocusGained(evt);
            }
        });
        t_point2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_point2KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(t_sale2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(t_point2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_sale2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_point2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("ช่วงวันที่ร่วมโปรโมชั่น");
        jLabel4.setName("D_datesale"); // NOI18N

        t_date1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        t_date1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_date1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_date1ActionPerformed(evt);
            }
        });
        t_date1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_date1KeyPressed(evt);
            }
        });

        btn_Calendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_Calendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CalendarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("ถึง");
        jLabel5.setName("D_to"); // NOI18N

        t_date2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        t_date2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_date2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_date2KeyPressed(evt);
            }
        });

        btn_Calendar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Date-and-Time-icon .png"))); // NOI18N
        btn_Calendar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Calendar1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("รหัสโปรโมชั่น");
        jLabel1.setName("D_code"); // NOI18N

        t_code.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_codeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_codeKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ชื่อโปรโมชั่น");
        jLabel2.setName("D_name"); // NOI18N

        t_name.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_nameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_nameKeyTyped(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel27.setText("Title Message(30 Char)");
        jLabel27.setName("D_disper"); // NOI18N

        jLabel28.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel28.setText("Header1 Message(50 Char)");
        jLabel28.setName("D_disper"); // NOI18N

        jLabel30.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel30.setText("Header2 Message(50 Char)");
        jLabel30.setName("D_disper"); // NOI18N

        jLabel31.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel31.setText("Quantity Message(35 Char)");
        jLabel31.setName("D_disper"); // NOI18N

        jLabel32.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel32.setText("Number Message(20 Char)");
        jLabel32.setName("D_disper"); // NOI18N

        jLabel33.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel33.setText("Footter1 Message(50 Char)");
        jLabel33.setName("D_disper"); // NOI18N

        jLabel34.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel34.setText("Footter2 Message(50 Char)");
        jLabel34.setName("D_disper"); // NOI18N

        jLabel35.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel35.setText("Footter3 Message(50 Char)");
        jLabel35.setName("D_disper"); // NOI18N

        jLabel36.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel36.setText("Footter4 Message(50 Char)");
        jLabel36.setName("D_disper"); // NOI18N

        t_name1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_name1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_name1KeyTyped(evt);
            }
        });

        t_name2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_name2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_name2KeyTyped(evt);
            }
        });

        t_name3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_name3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_name3KeyTyped(evt);
            }
        });

        t_name4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_name4KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_name4KeyTyped(evt);
            }
        });

        t_name5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_name5KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_name5KeyTyped(evt);
            }
        });

        t_name6.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_name6KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_name6KeyTyped(evt);
            }
        });

        t_name7.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_name7KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_name7KeyTyped(evt);
            }
        });

        t_name8.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_name8KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_name8KeyTyped(evt);
            }
        });

        t_name9.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_name9KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_name9KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel28)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_name1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_name2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_name3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_name4, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_name5, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_name6, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_name7, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_name8, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                    .addComponent(t_name9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t_name1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t_name2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t_name3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t_name4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t_name5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t_name6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t_name7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel35)
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_name8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t_name9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane5.setViewportView(jPanel11);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel22Layout.createSequentialGroup()
                                .addComponent(t_code, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(t_name)))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btn_Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(t_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Calendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_code, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(0, 0, 0)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(t_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(t_date2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Calendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        paneltable.setBorder(null);

        jPanel17.setBorder(null);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Condition Selected"));

        buttonGroup4.add(rdactive1);
        rdactive1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        rdactive1.setSelected(true);
        rdactive1.setText("แสดงรายการทั้งหมด");
        rdactive1.setName("D_showall"); // NOI18N
        rdactive1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdactive1ActionPerformed(evt);
            }
        });
        rdactive1.setBounds(60, 30, 140, 28);
        jLayeredPane1.add(rdactive1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup4.add(rdactive2);
        rdactive2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        rdactive2.setText("แสดงเฉพาะที่ Active");
        rdactive2.setName("D_showactive"); // NOI18N
        rdactive2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdactive2ActionPerformed(evt);
            }
        });
        rdactive2.setBounds(210, 30, 180, 28);
        jLayeredPane1.add(rdactive2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        t_count1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_count1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        t_count1.setText("จำนวนรายการ 0 รายการ");
        t_count1.setName("D_countlist"); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(t_count1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(t_count1))
        );

        tblCupon.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblCupon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัส", "ชื่อโปรโมชั่น", "วันที่เริ่มต้น - วันที่สิ้นสุด", "ใช้เฉพาะวัน", "SaleType"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCupon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCuponMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblCuponMouseReleased(evt);
            }
        });
        tblCupon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblCuponKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblCupon);
        tblCupon.getColumnModel().getColumn(0).setPreferredWidth(40);
        tblCupon.getColumnModel().getColumn(1).setPreferredWidth(160);
        tblCupon.getColumnModel().getColumn(2).setPreferredWidth(160);
        tblCupon.getColumnModel().getColumn(3).setPreferredWidth(140);
        tblCupon.getColumnModel().getColumn(4).setPreferredWidth(120);

        javax.swing.GroupLayout paneltableLayout = new javax.swing.GroupLayout(paneltable);
        paneltable.setLayout(paneltableLayout);
        paneltableLayout.setHorizontalGroup(
            paneltableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneltableLayout.createSequentialGroup()
                .addGroup(paneltableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE))
                .addContainerGap())
        );
        paneltableLayout.setVerticalGroup(
            paneltableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneltableLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(paneltable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paneltable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab.addTab("Setup Point", jPanel2);

        paneltab2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Setup PLU "));

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_plu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_plu.setFocusable(false);
        btn_plu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pluActionPerformed(evt);
            }
        });

        t_plu.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_plu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_pluKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_pluKeyTyped(evt);
            }
        });

        btnpluok.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnpluok.setText("ตกลง (OK)");
        btnpluok.setName("DBbtnok"); // NOI18N
        btnpluok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpluokActionPerformed(evt);
            }
        });
        btnpluok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnpluokKeyPressed(evt);
            }
        });

        t_pluname.setBackground(new java.awt.Color(249, 252, 186));
        t_pluname.setEditable(false);
        t_pluname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        btnbranchcancle2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnbranchcancle2.setText("ยกเลิก (Cancel)");
        btnbranchcancle2.setName("DBbtncancle"); // NOI18N
        btnbranchcancle2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbranchcancle2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(btn_plu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 111, Short.MAX_VALUE))
                    .addComponent(t_plu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(t_pluname, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(btnpluok, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnbranchcancle2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(t_plu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_plu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(t_pluname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnpluok, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbranchcancle2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        tblplu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "กลุ่ม", "รหัสสินค้า", "ชื่อสินค้า"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblplu.setComponentPopupMenu(plu);
        tblplu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblplu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblpluMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(tblplu);
        tblplu.getColumnModel().getColumn(0).setPreferredWidth(40);
        tblplu.getColumnModel().getColumn(1).setPreferredWidth(90);
        tblplu.getColumnModel().getColumn(2).setPreferredWidth(180);

        jLabel13.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel13.setText("รหัสกลุ่ม");
        jLabel13.setName("D_groupcode"); // NOI18N

        t_gcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_gcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_gcodeKeyPressed(evt);
            }
        });

        btngroupok.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btngroupok.setText("เลือกทั้งกลุ่ม");
        btngroupok.setName("DBbtnallgroup"); // NOI18N
        btngroupok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngroupokActionPerformed(evt);
            }
        });

        btn_group3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_group3.setFocusable(false);
        btn_group3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_group3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_gcode, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_group3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btngroupok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(t_gcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btngroupok, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_group3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Branch Group Setup"));

        tblbranch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "กลุ่มสาขา", "ชื่อกลุ่มสาชา"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblbranch.setComponentPopupMenu(branch);
        tblbranch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblbranchMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblbranch);
        tblbranch.getColumnModel().getColumn(0).setPreferredWidth(70);
        tblbranch.getColumnModel().getColumn(1).setPreferredWidth(160);

        btnok5.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnok5.setText("Link All Group");
        btnok5.setName("DBbtnok"); // NOI18N
        btnok5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnok5ActionPerformed(evt);
            }
        });

        jPanel15.setBorder(null);

        t_bcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_bcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_bcodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_bcodeKeyTyped(evt);
            }
        });

        btn_group.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_group.setFocusable(false);
        btn_group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_groupActionPerformed(evt);
            }
        });

        t_bname.setBackground(new java.awt.Color(249, 252, 186));
        t_bname.setEditable(false);
        t_bname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        btnbranchcancle.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnbranchcancle.setText("ยกเลิก(Cancel)");
        btnbranchcancle.setName("DBbtncancle"); // NOI18N
        btnbranchcancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbranchcancleActionPerformed(evt);
            }
        });

        btnbranchok.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnbranchok.setText("ตกลง (OK)");
        btnbranchok.setName("DBbtnok"); // NOI18N
        btnbranchok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbranchokActionPerformed(evt);
            }
        });
        btnbranchok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnbranchokKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(t_bcode, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_bname))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(btn_group, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnbranchok)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnbranchcancle, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_bcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_bname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_group, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnbranchok, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnbranchcancle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnok5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 3, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnok5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Fix Branch Setup"));

        tblfixbranch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "กลุ่มสาขา", "รหัสสาขา", "ชื่อสาขา"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblfixbranch.setComponentPopupMenu(fixbranch);
        tblfixbranch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblfixbranchMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(tblfixbranch);
        tblfixbranch.getColumnModel().getColumn(0).setPreferredWidth(70);
        tblfixbranch.getColumnModel().getColumn(1).setPreferredWidth(60);
        tblfixbranch.getColumnModel().getColumn(2).setPreferredWidth(160);

        jPanel21.setBorder(null);
        jPanel21.setOpaque(false);

        btnbranchok1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnbranchok1.setText("ตกลง (OK)");
        btnbranchok1.setName("DBbtnok"); // NOI18N
        btnbranchok1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbranchok1ActionPerformed(evt);
            }
        });
        btnbranchok1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnbranchok1KeyPressed(evt);
            }
        });

        t_fixbranch.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_fixbranch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_fixbranchKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_fixbranchKeyTyped(evt);
            }
        });

        btn_group2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_group2.setFocusable(false);
        btn_group2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_group2ActionPerformed(evt);
            }
        });

        t_fixname.setBackground(new java.awt.Color(249, 252, 186));
        t_fixname.setEditable(false);
        t_fixname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        btnbranchcancle1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnbranchcancle1.setText("ยกเลิก(Cancel)");
        btnbranchcancle1.setName("DBbtncancle"); // NOI18N
        btnbranchcancle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbranchcancle1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addComponent(t_fixbranch, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(t_fixname, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(btn_group2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnbranchok1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnbranchcancle1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_fixbranch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_fixname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnbranchok1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnbranchcancle1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_group2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        t_code2.setBackground(new java.awt.Color(254, 192, 165));
        t_code2.setEditable(false);
        t_code2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(t_code2, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(t_code2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout paneltab2Layout = new javax.swing.GroupLayout(paneltab2);
        paneltab2.setLayout(paneltab2Layout);
        paneltab2Layout.setHorizontalGroup(
            paneltab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneltab2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneltab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneltab2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(paneltab2Layout.createSequentialGroup()
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        paneltab2Layout.setVerticalGroup(
            paneltab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneltab2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneltab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        tab.addTab("BranchGroup & Product", paneltab2);

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder("Setup Except PLU "));

        jPanel26.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_plu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_plu1.setFocusable(false);
        btn_plu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_plu1ActionPerformed(evt);
            }
        });

        t_plu1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_plu1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_plu1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_plu1KeyTyped(evt);
            }
        });

        btnpluok1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnpluok1.setText("ตกลง (OK)");
        btnpluok1.setName("DBbtnok"); // NOI18N
        btnpluok1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpluok1ActionPerformed(evt);
            }
        });
        btnpluok1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnpluok1KeyPressed(evt);
            }
        });

        t_pluname1.setBackground(new java.awt.Color(249, 252, 186));
        t_pluname1.setEditable(false);
        t_pluname1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        btnbranchcancle3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnbranchcancle3.setText("ยกเลิก (Cancel)");
        btnbranchcancle3.setName("DBbtncancle"); // NOI18N
        btnbranchcancle3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbranchcancle3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(btn_plu1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(t_plu1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(t_pluname1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(btnpluok1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnbranchcancle3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(t_plu1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_plu1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(t_pluname1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnpluok1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbranchcancle3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        tblplu1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "กลุ่ม", "รหัสสินค้า", "ชื่อสินค้า"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblplu1.setComponentPopupMenu(plu1);
        tblplu1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblplu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblplu1MousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(tblplu1);
        tblplu1.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblplu1.getColumnModel().getColumn(1).setPreferredWidth(80);
        tblplu1.getColumnModel().getColumn(2).setPreferredWidth(250);

        jLabel20.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel20.setText("รหัสกลุ่ม");
        jLabel20.setName("D_groupcode"); // NOI18N

        t_gcode1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_gcode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_gcode1KeyPressed(evt);
            }
        });

        btngroupok1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btngroupok1.setText("เลือกทั้งกลุ่ม");
        btngroupok1.setName("DBbtnallgroup"); // NOI18N
        btngroupok1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngroupok1ActionPerformed(evt);
            }
        });

        btn_group4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_group4.setFocusable(false);
        btn_group4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_group4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_gcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_group4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btngroupok1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(t_gcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btngroupok1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_group4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(528, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        tab.addTab("Setup Except Plu", jPanel24);

        jMenu1.setText("ฟังก์ชั่น");
        jMenu1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jMenu1.setName("menufuc"); // NOI18N

        menuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuNew.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuNew.setText("เพิ่มรายการ");
        menuNew.setName("madd"); // NOI18N
        menuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewActionPerformed(evt);
            }
        });
        jMenu1.add(menuNew);

        menuCancel.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        menuCancel.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuCancel.setText("ยกเลิก");
        menuCancel.setName("mcancle"); // NOI18N
        menuCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCancelActionPerformed(evt);
            }
        });
        jMenu1.add(menuCancel);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSave.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuSave.setText("บันทึกข้อมูล");
        menuSave.setName("msave"); // NOI18N
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        jMenu1.add(menuSave);

        menuDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuDelete.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuDelete.setText("ลบข้อมูล");
        menuDelete.setName("mdel"); // NOI18N
        jMenu1.add(menuDelete);
        jMenu1.add(jSeparator1);

        menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuExit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuExit.setText("ออก");
        menuExit.setName("mexit"); // NOI18N
        jMenu1.add(menuExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1016, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1024)/2, (screenSize.height-790)/2, 1024, 790);
    }// </editor-fold>//GEN-END:initComponents

    
    private void checkuserconfig() {
        //MenuName = Mast1
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getMast19().equals("1")) {
            btnNew.setEnabled(false);
            btnSave.setEnabled(false);
            btnDelete.setEnabled(false);
            menuNew.setEnabled(false);
            menuSave.setEnabled(false);
            menuSave.setEnabled(false);
            btn_group.setEnabled(false);
            btnbranchok.setEnabled(false);
            btn_group2.setEnabled(false);
            btnbranchok1.setEnabled(false);
            btnpluok.setEnabled(false);
            btngroupok.setEnabled(false);
            plu.setEnabled(false);
            btnpluok1.setEnabled(false);
            btngroupok1.setEnabled(false);
            plu1.setEnabled(false);
        }
        if (userrec.getMast19().equals("2")) {
            btnNew.setEnabled(true);
            btnSave.setEnabled(true);
            btnDelete.setEnabled(false);
            menuNew.setEnabled(true);
            menuSave.setEnabled(true);
            menuSave.setEnabled(false);
            btn_group.setEnabled(true);
            btnbranchok.setEnabled(true);
            btn_group2.setEnabled(true);
            btnbranchok1.setEnabled(true);
            btnpluok.setEnabled(true);
            btngroupok.setEnabled(true);
            plu.setEnabled(false);
            btnpluok1.setEnabled(true);
            btngroupok1.setEnabled(true);
            plu1.setEnabled(false);
        }
        if (userrec.getMast19().equals("3")) {
            btnNew.setEnabled(true);
            btnSave.setEnabled(true);
            btnDelete.setEnabled(true);
            menuNew.setEnabled(true);
            menuSave.setEnabled(true);
            menuSave.setEnabled(true);
            btn_group.setEnabled(true);
            btnbranchok.setEnabled(true);
            btn_group2.setEnabled(true);
            btnbranchok1.setEnabled(true);
            btnpluok.setEnabled(true);
            btngroupok.setEnabled(true);
            plu.setEnabled(true);
            btnpluok1.setEnabled(true);
            btngroupok1.setEnabled(true);
            plu1.setEnabled(true);
        }
    }
    private void t_codeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_codeKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!t_code.getText().trim().equals("")) {
                if (chkdata(t_code.getText())) {
                    String Code = "";
                    Code = t_code.getText().trim();
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        GetData(cvth.Unicode2ASCII(Code));
                    } else {
                        GetData(Code);
                    }
                } else {
                    setActive();
                    t_code.setBackground(new java.awt.Color(255, 246, 143));
                    t_code.setEditable(false);

                }
                t_code.setEditable(false);
                t_name.requestFocus();
                tab.setEnabledAt(1, true);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_codeKeyPressed

    private void tblCuponMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCuponMouseReleased

        if (evt.getClickCount() == 2) {
            int index = tblCupon.getSelectedRow();
            String creditcode = tblCupon.getValueAt(index, 0).toString();
            if (t_code.getText().equals("")) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    GetData(cvth.Unicode2ASCII(creditcode));
                } else {
                    GetData(creditcode);
                }
            } else if (!t_code.getText().equals(creditcode)) {
                int confirm = JOptionPane.showConfirmDialog(this, "คุณมีการเพิ่มหรือแก้ไขข้อมูลอยู่ คุณต้องการยกเลิกการเพิ่มหรือแก้ไขข้อมูลนั้นหรือไม่", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
//                    GetData(creditcode);
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        GetData(cvth.Unicode2ASCII(creditcode));
                    } else {
                        GetData(creditcode);
                    }
                }
            }
            t_code.setBackground(new java.awt.Color(255, 246, 143));
            t_code.setEditable(false);
            t_name.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCuponMouseReleased

    private void rdactive2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdactive2ActionPerformed

        chkactive(Format.dateFmtSql.format(new java.util.Date()));
        // TODO add your handling code here:
    }//GEN-LAST:event_rdactive2ActionPerformed

    private void rdactive1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdactive1ActionPerformed

        showdataintb();
        // TODO add your handling code here:
    }//GEN-LAST:event_rdactive1ActionPerformed

    public boolean removePluCuponList(String code) {
        Statement stmt = null;
        boolean isRemove = false;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "delete from cuponlist Where pcode = '" + code + "';";
            int deleteRow = stmt.executeUpdate(sql);
            if (deleteRow > 0) {
                isRemove = true;
                System.out.print("remove cupon success ");
            }
        } catch (Exception e) {
            System.out.print("Error : remove menulist error ");
        }

        return isRemove;
    }

    public String[] addProductToCopon(String plu) {
        Statement stmt = null;
        ResultSet rs = null;
        String[] product = null;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT pcode,pdesc,pprice11 FROM product   where pcode = '" + plu + "';";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                product = new String[2];
                product[0] = rs.getString("pcode");
                product[1] = rs.getString("pdesc");
            }
        } catch (Exception e) {
        }
        return product;
    }

    public boolean insertCuponList(String cocode, String pcode) {
        Statement stmt = null;
        boolean isupdate = false;
        int rowInsert = 0;
        String sql = "";

        try {
            stmt = (Statement) dbUtility.con.createStatement();
            sql = "insert into propointlist values('" + cocode + "','" + pcode + "')";
            rowInsert = stmt.executeUpdate(sql);
            if (rowInsert > 0) {
                isupdate = true;
            }
        } catch (Exception e) {
        }
        return isupdate;
    }

    public void escplu() {
        t_plu.setText("");
        t_pluname.setText("");
        t_plu.requestFocus();
    }
    private void t_pluKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pluKeyPressed

        String get = t_plu.getText();
        String out = get.toUpperCase();
        t_plu.setText(out);

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                GetDataplu(cvth.Unicode2ASCII(t_plu.getText()));
            } else {
                GetDataplu(t_plu.getText());
            }

        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnplu();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            escplu();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pluKeyPressed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed

        genday();
        // TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed

        genday();
        // TODO add your handling code here:
    }//GEN-LAST:event_c2ActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed

        clearForm();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed

        clearForm();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed

        genday();
        // TODO add your handling code here:
    }//GEN-LAST:event_c3ActionPerformed

    private void c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c4ActionPerformed

        genday();
        // TODO add your handling code here:
    }//GEN-LAST:event_c4ActionPerformed

    private void c5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c5ActionPerformed

        genday();
        // TODO add your handling code here:
    }//GEN-LAST:event_c5ActionPerformed

    private void c6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c6ActionPerformed

        genday();
        // TODO add your handling code here:
    }//GEN-LAST:event_c6ActionPerformed

    private void c7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c7ActionPerformed

        genday();
        // TODO add your handling code here:
    }//GEN-LAST:event_c7ActionPerformed

    public void btndate1() {
        try {
            Point point = btn_Calendar.getLocation();
            point.setLocation(point.getX() + 1, point.getY() + 1);
            utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null, true, point);
            dcd.setVisible(true);
            t_date1.setText(Format.dateFmtShow.format(dcd.getSelectedDate().getTime()));
            t_date2.requestFocus();
        } catch (Exception e) {
            t_date2.requestFocus();
        }
    }

    private void btn_CalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CalendarActionPerformed
         DateUtil.showDateChooserDialog(t_date1, btn_Calendar);
         t_date1.requestFocus();     
        //btndate1();
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_CalendarActionPerformed

    public void btndate2() {
        try {
            Point point = btn_Calendar1.getLocation();
            point.setLocation(point.getX() + 1, point.getY() + 1);
            utilities.DateChooser.DateChooserDialog dcd = new utilities.DateChooser.DateChooserDialog(null, true, point);
            dcd.setVisible(true);
            t_date2.setText(Format.dateFmtShow.format(dcd.getSelectedDate().getTime()));
            t_sale1.requestFocus();
        } catch (Exception e) {
            t_sale1.requestFocus();
        }
    }

    public void expcouponback() {
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();

        try {
            File f = new File(new File("cupon.xls").getCanonicalPath());

            chooser.setSelectedFile(f);
        } catch (IOException e) {
        }
        chooser.showSaveDialog(this);

        File curFile = chooser.getSelectedFile();

        try {
            test.setOutputFile(curFile.toString());
            test.write(model, modelh1);
        } catch (IOException ex) {
        } catch (WriteException ex) {
        }
        // TODO add your handling code here:
    }

    public void exppluback() {
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();

        try {
            File f = new File(new File("plu.xls").getCanonicalPath());

            chooser.setSelectedFile(f);
        } catch (IOException e) {
        }
        chooser.showSaveDialog(this);

        File curFile = chooser.getSelectedFile();

        try {
            test.setOutputFile(curFile.toString());
            test.write(model2, modelh2);
        } catch (IOException ex) {
        } catch (WriteException ex) {
        }
        // TODO add your handling code here:
    }

    private void btn_Calendar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Calendar1ActionPerformed
        DateUtil.showDateChooserDialog(t_date2, btn_Calendar1);
        t_date2.requestFocus(); 
        //btndate2();
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Calendar1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (!t_code.getText().trim().equals("")) {
            btnsave();
            SaveFixBranch();
            if (bsaveOK) {
                clearForm();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed

    private void te1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_te1ActionPerformed

        gend();
        // TODO add your handling code here:
    }//GEN-LAST:event_te1ActionPerformed

    private void tt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tt1ActionPerformed

        gend();
        // TODO add your handling code here:
    }//GEN-LAST:event_tt1ActionPerformed

    private void td1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_td1ActionPerformed

        gend();
        // TODO add your handling code here:
    }//GEN-LAST:event_td1ActionPerformed

    private void tp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tp1ActionPerformed

        gend();
        // TODO add your handling code here:
    }//GEN-LAST:event_tp1ActionPerformed

    private void tw1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tw1ActionPerformed

        gend();
        // TODO add your handling code here:
    }//GEN-LAST:event_tw1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void t_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_nameKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_date1.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_nameKeyPressed

    private void btnbranchokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbranchokActionPerformed

        String get = t_bcode.getText();
        String out = get.toUpperCase();
        t_bcode.setText(out);
        if (!chkdatabranch(t_bcode.getText(), t_code.getText())) {
            if (chkdatabranchgroup(t_bcode.getText())) {
                btnsave();
                if (chkdata(t_code.getText())) {
                    btnsavebranch();
                    getBranchList(t_code.getText());
                }
            } else {
                JOptionPane.showMessageDialog(this, "ไม่มีข้อมูล BranchGroup นี้ในระบบ..");
            }
        } else {
            JOptionPane.showMessageDialog(this, "ข้อมูล BranchGroup นี้มีอยู่แล้ว..");
        }

        t_bcode.requestFocus();
    }//GEN-LAST:event_btnbranchokActionPerformed
    private void btnbranchcancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbranchcancleActionPerformed

        escbranch();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnbranchcancleActionPerformed

    public void btngroup() {
        Point point = btn_group.getLocation();
        point.setLocation(point.getX() + 1, point.getY() + 1);
        BrowserBranchGroup dialog = new BrowserBranchGroup(new NimbusFrame(), true, point);
        dialog.setVisible(true);

        try {
            if (!dialog.code.equals("")) {
                BranchCodeName hrb = dialog.getDataRecord();
                t_bcode.setText(dialog.code);
                GetDataBranch(dialog.code);
                btnbranchok.requestFocus();
            } else {
                t_bcode.requestFocus();
            }
        } catch (Exception e) {
            t_bcode.requestFocus();
        }
    }

    private void btn_groupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_groupActionPerformed

        btngroup();
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_groupActionPerformed

    public void escbranch() {
        t_bcode.setText("");
        t_bname.setText("");
        t_bcode.requestFocus();
    }

    private void t_bcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_bcodeKeyPressed

        String get = t_bcode.getText();
        String out = get.toUpperCase();
        t_bcode.setText(out);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String Code = "";
            Code = t_bcode.getText();
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                GetDataBranch(cvth.ASCII2Unicode(Code));
                btnbranchok.requestFocus();
            } else {
                GetDataBranch(Code);
                btnbranchok.requestFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btngroup();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            escbranch();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_t_bcodeKeyPressed

    public void saveallplu() {
        try {
            for (int i = 0; i < tblplu.getRowCount(); i++) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql2 = "insert into cuponlist (CuCode,PCode) values(?,?)";
                    PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
                    prm2.setString(1, cvth.Unicode2ASCII(t_code.getText()));
                    prm2.setString(2, cvth.Unicode2ASCII(tblplu.getValueAt(i, 1).toString()));
                    prm2.executeUpdate();
                    stmt.close();

                } else {
                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql2 = "insert into cuponlist (CuCode,PCode) values(?,?)";
                    PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
                    prm2.setString(1, cvth.Unicode2ASCII(t_code.getText()));
                    prm2.setString(2, tblplu.getValueAt(i, 1).toString());
                    prm2.executeUpdate();
                    stmt.close();
                }
            }

        } catch (Exception e) {
        }
    }

    private void btngroupokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngroupokActionPerformed

        if (!t_gcode.getText().trim().equals("")) {
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการเพิ่มข้อมูลกลุ่มสินค้า " + t_gcode.getText() + " ทั้งหมดใช่หรือไม่", "Confirm", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String code = t_gcode.getText().trim();
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    btnsave();
                    if (chkdata(t_code.getText())) {
                        getProductGroup(cvth.Unicode2ASCII(code));
                    }
                } else {
                    btnsave();
                    if (chkdata(t_code.getText())) {
                        getProductGroup(code);
                    }
                }
                t_gcode.setText("");
                t_plu.requestFocus();

            }
        }



    }//GEN-LAST:event_btngroupokActionPerformed

    public void btnplu() {
        Point point = btn_group.getLocation();
        point.setLocation(point.getX() + 1, point.getY() + 1);
        ListProduct dialog = new ListProduct(new NimbusFrame(), true);
        dialog.setVisible(true);

        try {
            if (!dialog.code.equals("")) {
                t_plu.setText(dialog.code);
                GetDataplu(dialog.code);
                btnpluok.requestFocus();
            } else {
                t_plu.requestFocus();
            }
        } catch (Exception e) {
            t_plu.requestFocus();
        }
    }

    private void btn_pluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pluActionPerformed

        //if (!rd2.isSelected()) {
            btnplu();
        //} else {
        //    JOptionPane.showMessageDialog(this, "คุณกำหนดประเภทการให้ส่วนลดเป็น B อยู่");
       // }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_pluActionPerformed

    private void menuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewActionPerformed

        clearForm();
        // TODO add your handling code here:
    }//GEN-LAST:event_menuNewActionPerformed

    private void menuCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCancelActionPerformed

        clearForm();
        // TODO add your handling code here:
    }//GEN-LAST:event_menuCancelActionPerformed

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed

        if (!t_code.getText().trim().equals("")) {
            btnsave();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_menuSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed


        if (!t_code.getText().trim().equals("")) {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                String Code = cvth.Unicode2ASCII(t_code.getText());
                delete(Code);
            } else {
                String Code = t_code.getText();
                delete(Code);
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    public void saveallbranch() {
        try {
            for (int i = 0; i < tblbranch.getRowCount(); i++) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql2 = "insert into propointlink (proCode,BGroup) values(?,?)";
                    PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
                    prm2.setString(1, cvth.Unicode2ASCII(t_code.getText()));
                    prm2.setString(2, cvth.Unicode2ASCII(tblbranch.getValueAt(i, 0).toString()));
                    prm2.executeUpdate();
                    stmt.close();

                } else {
                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql2 = "insert into propointlink (proCode,BGroup) values(?,?)";
                    PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
                    prm2.setString(1, t_code.getText());
                    prm2.setString(1, tblbranch.getValueAt(i, 0).toString());
                    prm2.executeUpdate();
                    stmt.close();
                }
            }

        } catch (Exception e) {
        }
    }

    private void btnok5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnok5ActionPerformed


        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql2 = "Delete from propointlink where procode = ?";
            PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
            prm2.setString(1, t_code.getText());
            prm2.executeUpdate();
            stmt.close();
            getBranchgroup();
            saveallbranch();


        } catch (Exception e) {
        }

    }//GEN-LAST:event_btnok5ActionPerformed

    public void escfixbranch() {
        t_fixbranch.setText("");
        t_fixname.setText("");
        t_fixbranch.requestFocus();
    }

    private void t_fixbranchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_fixbranchKeyPressed

        String get = t_fixbranch.getText();
        String out = get.toUpperCase();
        t_fixbranch.setText(out);

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String Code;
            Code = t_fixbranch.getText();
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                GetDataFixBranch(cvth.ASCII2Unicode(Code));
            } else {
                GetDataFixBranch(Code);
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnfixbranch();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            escfixbranch();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_fixbranchKeyPressed

    private void btnbranchok1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbranchok1ActionPerformed

        if (tblbranch.getRowCount() > 0) {
            if (chkdatafixbranchingroup(t_fixbranch.getText())) {
                if (!chkdatafixbranch(t_fixbranch.getText(), t_code.getText())) {
                    if (chkdatabranchfile(t_fixbranch.getText())) {
                        btnsave();
                        if (chkdata(t_code.getText())) {
                            btnsavefixbranch();
                            getFixBranchList(t_code.getText());
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "ไม่มีข้อมูลสาขานี้ในระบบ..");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "ข้อมูลสาขานี้มีอยู่แล้ว..");
                }
            } else {
                JOptionPane.showMessageDialog(this, "สาขานี้ไม่มีในกลุ่มที่กำหนด..");
            }
        } else {
            JOptionPane.showMessageDialog(this, "กรุณากำหนดกลุ่มสาขาก่อน...");
        }
        escfixbranch();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnbranchok1ActionPerformed

    public void btnfixbranch() {
        model3 = (DefaultTableModel) tblbranch.getModel();
        BrowserBranchmult4 list = new BrowserBranchmult4(new NimbusFrame(), true, t_code.getText(), model3);
        list.setVisible(true);
        clearModel4();
        getFixBranchList(t_code.getText());
    }

    private void btn_group2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_group2ActionPerformed


        if (tblbranch.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนดกลุ่มสาขาก่อน...");
        } else {
            btnfixbranch();
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_btn_group2ActionPerformed

    private void t_gcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_gcodeKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btngroupok.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_gcodeKeyPressed

    private void btnbranchcancle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbranchcancle1ActionPerformed

        escfixbranch();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbranchcancle1ActionPerformed

    private void tabMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabMousePressed


        if (tab.getSelectedIndex() == 1) {
            t_plu.requestFocus();

        }
        if (tab.getSelectedIndex() == 0) {
            t_name.requestFocus();

        }

    }//GEN-LAST:event_tabMousePressed

    private void btnpluokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpluokActionPerformed

        if (!t_code.getText().trim().equals("")) {

            String plu = t_plu.getText().trim();
            int tblPluSize = 0;
            if (model2 != null) {
                tblPluSize = model2.getRowCount();
            }
            boolean isFound = false;
            if (plu.length() > 0) {
                for (int i = 0; i < tblPluSize; i++) {
                    String search = (String) model2.getValueAt(i, 1);
                    if (plu.equals(search)) {
                        PUtility.ShowMsg("รายการสินค้านี้มีการกำหนดใว้แล้ว ...");
                        t_plu.setText("");
                        t_pluname.setText("");
                        isFound = true;
                        break;
                    }
                }


                if (!isFound) {
                    String[] product = addProductToCopon(plu);
                    if (product != null) {
                        if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                            if (chkdata(t_code.getText())) {
                                if (chkplu(t_code.getText(), t_plu.getText())) {
                                    btnsave();
                                    insertCuponList(cvth.ASCII2Unicode(t_code.getText()), cvth.ASCII2Unicode(plu));
                                } else {
                                    PUtility.ShowMsg("รหัสสินค้า" + t_plu.getText() + " ไม่อยู่ในกลุ่มสาขาที่สามารถ กำหนดได้ ..");
                                }
                            }
                        } else {
                            if (chkdata(t_code.getText())) {
                                if (chkplu(t_code.getText(), t_plu.getText())) {
                                    btnsave();
                                    insertCuponList(t_code.getText(), plu);
                                } else {
                                    PUtility.ShowMsg("รหัสสินค้า " + t_plu.getText() + " ไม่อยู่ในกลุ่มสาขาที่สามารถ กำหนดได้ ..");
                                }
                            }
                        }
                        getCuponList(t_code.getText());
                        t_plu.setText("");
                    } else {
                        JOptionPane.showMessageDialog(this, "ไม่พบรายการสินค้านี้");
                        t_plu.setText("");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "กรุณากำหนดรหัสสินค้า..");
        }
        escplu();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnpluokActionPerformed

    private void btn_group3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_group3ActionPerformed


        listGroupfile dialog = new listGroupfile(new NimbusFrame(), true);
        dialog.setVisible(true);

        try {
            if (!dialog.code.equals("")) {
                t_gcode.setText(dialog.code);
                btngroupok.requestFocus();
            } else {
                t_plu.requestFocus();
            }
        } catch (Exception e) {
            t_plu.requestFocus();
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_btn_group3ActionPerformed

    private void t_pluKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pluKeyTyped

        if (t_plu.getText().length() >= 13) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pluKeyTyped

    private void t_bcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_bcodeKeyTyped

        if (t_bcode.getText().length() >= 3) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_bcodeKeyTyped

    private void t_fixbranchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_fixbranchKeyTyped

        if (t_fixbranch.getText().length() >= 12) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_fixbranchKeyTyped

    private void tblpluMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblpluMousePressed
    }//GEN-LAST:event_tblpluMousePressed

    private void tblbranchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblbranchMousePressed
    }//GEN-LAST:event_tblbranchMousePressed

    private void tblfixbranchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblfixbranchMousePressed
    }//GEN-LAST:event_tblfixbranchMousePressed

    private void btnbranchcancle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbranchcancle2ActionPerformed

        escplu();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbranchcancle2ActionPerformed

    private void btnpluokKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnpluokKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            escplu();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnpluokKeyPressed

    private void btnbranchokKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnbranchokKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            escbranch();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbranchokKeyPressed

    private void btnbranchok1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnbranchok1KeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            escfixbranch();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnbranchok1KeyPressed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed


        try {
            int[] intArray = tblplu.getSelectedRows();

            for (int i = 0; i < intArray.length; i++) {
                String plu2 = tblplu.getValueAt(intArray[i], 1).toString();
                stmt = (Statement) dbUtility.con.createStatement();
                String sql2 = "Delete from propointlist where PCode ='" + plu2 + "' and proCode = '" + t_code.getText() + "'";
                stmt.executeUpdate(sql2);
                stmt.close();
            }
        } catch (Exception e) {
        }
        getCuponList(t_code.getText());

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed

        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql2 = "Delete from propointlist where proCode = ?";
            PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
            prm2.setString(1, t_code.getText());
            prm2.executeUpdate();
            stmt.close();
            getCuponList(t_code.getText());
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed

        try {
            if (tblbranch.getSelectedRowCount() > 0) {
                int[] intArray = tblbranch.getSelectedRows();
                for (int s = 0; s < intArray.length; s++) {
                    String Tempbgroup = tblbranch.getValueAt(intArray[s], 0).toString();
                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql2 = "delete from propointlink where bgroup = '" + Tempbgroup + "' and proCode = '" + t_code.getText() + "'";
                    stmt.executeUpdate(sql2);
                    stmt.close();
                }
            }
        } catch (Exception e) {
        }
        getBranchList(t_code.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed

        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql2 = "delete from propointlink where procode = '" + t_code.getText() + "'";
            stmt.executeUpdate(sql2);
            stmt.close();
        } catch (Exception e) {
        }
        getBranchList(t_code.getText());

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed

        try {

            int[] intArray = new int[tblfixbranch.getRowCount()];
            for (int i = 0; i < tblfixbranch.getRowCount(); i++) {
                intArray = tblfixbranch.getSelectedRows();

                stmt = (Statement) dbUtility.con.createStatement();
                String sql2 = "Delete from fixbranchpropoint where bcode = ? and proCode = '" + t_code.getText() + "'";
                PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
                prm2.setString(1, tblfixbranch.getValueAt(intArray[i], 1).toString());
                prm2.executeUpdate();
                stmt.close();

            }

        } catch (Exception e) {
        }

        getFixBranchList(t_code.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed

        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql2 = "Delete from fixbranchpropoint where proCode = ?";
            PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
            prm2.setString(1, t_code.getText());
            prm2.executeUpdate();
            stmt.close();
            getFixBranchList(t_code.getText());
        } catch (Exception e) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void t_codeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_codeKeyTyped

        if (t_code.getText().length() >= 3) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_codeKeyTyped

    private void t_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_nameKeyTyped

        if (t_name.getText().length() >= 50) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_nameKeyTyped

    private void t_date1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_date1KeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_date2.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
             DateUtil.showDateChooserDialog(t_date1, btn_Calendar);
         t_date1.requestFocus(); 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date1KeyPressed

    private void t_date2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_date2KeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_sale1.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
           DateUtil.showDateChooserDialog(t_date2, btn_Calendar1);
        t_date2.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date2KeyPressed

    private void tblCuponMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCuponMouseClicked
        // TODO add your handling code here:
        int indexrow = tblCupon.getSelectedRow();
        String TempCode = tblCupon.getValueAt(indexrow, 0).toString();
        
    }//GEN-LAST:event_tblCuponMouseClicked

    private void tblCuponKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCuponKeyPressed
        // TODO add your handling code here:
        if ((evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_DOWN)) {
            int indexrow = tblCupon.getSelectedRow();
            String TempCode = tblCupon.getValueAt(indexrow, 0).toString();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int indexrow = tblCupon.getSelectedRow();
            String TempCode = tblCupon.getValueAt(indexrow, 0).toString();
            t_code.setText(TempCode);
            if (!t_code.getText().trim().equals("")) {
                if (chkdata(t_code.getText())) {
                    String Code = "";
                    Code = t_code.getText().trim();
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        GetData(cvth.Unicode2ASCII(Code));
                    } else {
                        GetData(Code);
                    }
                } else {
                    setActive();
                    t_code.setBackground(new java.awt.Color(255, 246, 143));
                    t_code.setEditable(false);

                }
                tab.setEnabledAt(1, true);
            }
            t_name.requestFocus();

        }
    }//GEN-LAST:event_tblCuponKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        t_code.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void t_date1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_date1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_date1ActionPerformed

    private void btn_plu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_plu1ActionPerformed
        // TODO add your handling code here:
        btnplu1();
    }//GEN-LAST:event_btn_plu1ActionPerformed

    private void t_plu1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_plu1KeyPressed
        // TODO add your handling code here:
        String get = t_plu1.getText();
        String out = get.toUpperCase();
        t_plu1.setText(out);

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                GetDataplu1(cvth.Unicode2ASCII(t_plu1.getText()));
            } else {
                GetDataplu1(t_plu1.getText());
            }

        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnplu1();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            escplu1();
        }
    }//GEN-LAST:event_t_plu1KeyPressed

    private void t_plu1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_plu1KeyTyped
        // TODO add your handling code here:
        if (t_plu1.getText().length() >= 13) {
            evt.consume();
        }
    }//GEN-LAST:event_t_plu1KeyTyped

    private void btnpluok1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpluok1ActionPerformed
        // TODO add your handling code here:
        if (!t_code.getText().trim().equals("")) {

            String plu = t_plu1.getText().trim();
            int tblPluSize = 0;
            if (model5 != null) {
                tblPluSize = model5.getRowCount();
            }
            boolean isFound = false;
            if (plu.length() > 0) {
                for (int i = 0; i < tblPluSize; i++) {
                    String search = (String) model5.getValueAt(i, 1);
                    if (plu.equals(search)) {
                        PUtility.ShowMsg("รายการสินค้านี้มีการกำหนดใว้แล้ว ...");
                        t_plu1.setText("");
                        t_pluname1.setText("");
                        isFound = true;
                        break;
                    }
                }

                if (!isFound) {
                    String[] product = addProductToCopon(plu);
                    if (product != null) {
                        if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                            if (chkdata(t_code.getText())) {
                                if (chkplu(t_code.getText(), t_plu1.getText())) {
                                    btnsave();
                                    insertCuponList1(cvth.ASCII2Unicode(t_code.getText()), cvth.ASCII2Unicode(plu));
                                } else {
                                    PUtility.ShowMsg("รหัสสินค้า" + t_plu1.getText() + " ไม่อยู่ในกลุ่มสาขาที่สามารถ กำหนดได้ ..");
                                }
                            }
                        } else {
                            if (chkdata(t_code.getText())) {
                                if (chkplu(t_code.getText(), t_plu1.getText())) {
                                    btnsave();
                                    insertCuponList1(t_code.getText(), plu);
                                } else {
                                    PUtility.ShowMsg("รหัสสินค้า " + t_plu1.getText() + " ไม่อยู่ในกลุ่มสาขาที่สามารถ กำหนดได้ ..");
                                }
                            }
                        }
                        getCuponUnList(t_code.getText());
                        t_plu1.setText("");
                    } else {
                        JOptionPane.showMessageDialog(this, "ไม่พบรายการสินค้านี้");
                        t_plu1.setText("");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "กรุณากำหนดรหัสสินค้า..");
        }
        escplu1();
    }//GEN-LAST:event_btnpluok1ActionPerformed

    private void btnpluok1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnpluok1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnpluok1KeyPressed

    private void btnbranchcancle3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbranchcancle3ActionPerformed
        // TODO add your handling code here:
        escplu1();
    }//GEN-LAST:event_btnbranchcancle3ActionPerformed

    private void tblplu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblplu1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblplu1MousePressed

    private void t_gcode1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_gcode1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btngroupok1.requestFocus();
        }
    }//GEN-LAST:event_t_gcode1KeyPressed

    private void btngroupok1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngroupok1ActionPerformed
        // TODO add your handling code here:
        if (!t_gcode1.getText().trim().equals("")) {
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการเพิ่มข้อมูลกลุ่มสินค้า " + t_gcode1.getText() + " ทั้งหมดใช่หรือไม่", "Confirm", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String code = t_gcode1.getText().trim();
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    btnsave();
                    if (chkdata(t_code.getText())) {
                        getProductGroup1(cvth.Unicode2ASCII(code));
                    }
                } else {
                    btnsave();
                    if (chkdata(t_code.getText())) {
                        getProductGroup1(code);
                    }
                }
                t_gcode1.setText("");
                t_plu1.requestFocus();

            }
            getCuponUnList(t_code.getText());
        }
    }//GEN-LAST:event_btngroupok1ActionPerformed

    private void btn_group4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_group4ActionPerformed
        // TODO add your handling code here:
        listGroupfile dialog = new listGroupfile(new NimbusFrame(), true);
        dialog.setVisible(true);

        try {
            if (!dialog.code.equals("")) {
                t_gcode1.setText(dialog.code);
                btngroupok1.requestFocus();
            } else {
                t_plu1.requestFocus();
            }
        } catch (Exception e) {
            t_plu1.requestFocus();
        }
    }//GEN-LAST:event_btn_group4ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        try {
            int[] intArray = tblplu1.getSelectedRows();

            for (int i = 0; i < intArray.length; i++) {
                String plu2 = tblplu1.getValueAt(intArray[i], 1).toString();
                stmt = (Statement) dbUtility.con.createStatement();
                String sql2 = "Delete from propointunlist where PCode ='" + plu2 + "' and proCode = '" + t_code.getText() + "'";
                stmt.executeUpdate(sql2);
                stmt.close();
            }
        } catch (Exception e) {
        }
        getCuponUnList(t_code.getText());
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql2 = "Delete from propointunlist where proCode = ?";
            PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
            prm2.setString(1, t_code.getText());
            prm2.executeUpdate();
            stmt.close();
            getCuponUnList(t_code.getText());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void t_sale1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_sale1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_t_sale1FocusGained

    private void t_sale1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_sale1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_point1.requestFocus();
        }
    }//GEN-LAST:event_t_sale1KeyPressed

    private void t_point1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_point1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_t_point1FocusGained

    private void t_point1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_point1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_sale2.requestFocus();
        }
    }//GEN-LAST:event_t_point1KeyPressed

    private void t_sale2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_sale2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_t_sale2FocusGained

    private void t_sale2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_sale2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_point2.requestFocus();
        }
    }//GEN-LAST:event_t_sale2KeyPressed

    private void t_point2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_point2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_t_point2FocusGained

    private void t_point2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_point2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name1.requestFocus();
        }
    }//GEN-LAST:event_t_point2KeyPressed

    private void t_name1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name2.requestFocus();
        }
    }//GEN-LAST:event_t_name1KeyPressed

    private void t_name1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name1KeyTyped
        // TODO add your handling code here:
        if (t_name1.getText().length() >= 30) {
            evt.consume();
        }
    }//GEN-LAST:event_t_name1KeyTyped

    private void t_name2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name3.requestFocus();
        }
    }//GEN-LAST:event_t_name2KeyPressed

    private void t_name2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name2KeyTyped
        // TODO add your handling code here:
        if (t_name2.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_t_name2KeyTyped

    private void t_name3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name3KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name4.requestFocus();
        }
    }//GEN-LAST:event_t_name3KeyPressed

    private void t_name3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name3KeyTyped
        // TODO add your handling code here:
        if (t_name3.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_t_name3KeyTyped

    private void t_name4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name4KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name5.requestFocus();
        }
    }//GEN-LAST:event_t_name4KeyPressed

    private void t_name4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name4KeyTyped
        // TODO add your handling code here:
        if (t_name4.getText().length() >= 35) {
            evt.consume();
        }
    }//GEN-LAST:event_t_name4KeyTyped

    private void t_name5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name5KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name6.requestFocus();
        }
    }//GEN-LAST:event_t_name5KeyPressed

    private void t_name5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name5KeyTyped
        // TODO add your handling code here:
        if (t_name5.getText().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_t_name5KeyTyped

    private void t_name6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name6KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name7.requestFocus();
        }
    }//GEN-LAST:event_t_name6KeyPressed

    private void t_name6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name6KeyTyped
        // TODO add your handling code here:
        if (t_name6.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_t_name6KeyTyped

    private void t_name7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name7KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name8.requestFocus();
        }
    }//GEN-LAST:event_t_name7KeyPressed

    private void t_name7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name7KeyTyped
        // TODO add your handling code here:
        if (t_name7.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_t_name7KeyTyped

    private void t_name8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name8KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name9.requestFocus();
        }
    }//GEN-LAST:event_t_name8KeyPressed

    private void t_name8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name8KeyTyped
        // TODO add your handling code here:
        if (t_name8.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_t_name8KeyTyped

    private void t_name9KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name9KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_name1.requestFocus();
        }
    }//GEN-LAST:event_t_name9KeyPressed

    private void t_name9KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_name9KeyTyped
        // TODO add your handling code here:
        if (t_name9.getText().length() >= 50) {
            evt.consume();
        }
        
    }//GEN-LAST:event_t_name9KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;




                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PropointSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PropointSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PropointSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PropointSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                PropointSetup dialog = new PropointSetup(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu branch;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btn_Calendar;
    private javax.swing.JButton btn_Calendar1;
    private javax.swing.JButton btn_group;
    private javax.swing.JButton btn_group2;
    private javax.swing.JButton btn_group3;
    private javax.swing.JButton btn_group4;
    private javax.swing.JButton btn_plu;
    private javax.swing.JButton btn_plu1;
    private javax.swing.JButton btnbranchcancle;
    private javax.swing.JButton btnbranchcancle1;
    private javax.swing.JButton btnbranchcancle2;
    private javax.swing.JButton btnbranchcancle3;
    private javax.swing.JButton btnbranchok;
    private javax.swing.JButton btnbranchok1;
    private javax.swing.JButton btngroupok;
    private javax.swing.JButton btngroupok1;
    private javax.swing.JButton btnok5;
    private javax.swing.JButton btnpluok;
    private javax.swing.JButton btnpluok1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.JCheckBox c1;
    private javax.swing.JCheckBox c2;
    private javax.swing.JCheckBox c3;
    private javax.swing.JCheckBox c4;
    private javax.swing.JCheckBox c5;
    private javax.swing.JCheckBox c6;
    private javax.swing.JCheckBox c7;
    private javax.swing.JPopupMenu fixbranch;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem menuCancel;
    private javax.swing.JMenuItem menuDelete;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenuItem menuNew;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JPanel paneltab2;
    private javax.swing.JPanel paneltable;
    private javax.swing.JPopupMenu plu;
    private javax.swing.JPopupMenu plu1;
    private javax.swing.JRadioButton rdactive1;
    private javax.swing.JRadioButton rdactive2;
    private javax.swing.JTextField strDay;
    private javax.swing.JTextField strtype;
    private javax.swing.JTextField t_bcode;
    private javax.swing.JTextField t_bname;
    private javax.swing.JTextField t_code;
    private javax.swing.JTextField t_code2;
    private javax.swing.JLabel t_count1;
    private javax.swing.JFormattedTextField t_date1;
    private javax.swing.JFormattedTextField t_date2;
    private javax.swing.JTextField t_fixbranch;
    private javax.swing.JTextField t_fixname;
    private javax.swing.JTextField t_gcode;
    private javax.swing.JTextField t_gcode1;
    private javax.swing.JTextField t_name;
    private javax.swing.JTextField t_name1;
    private javax.swing.JTextField t_name2;
    private javax.swing.JTextField t_name3;
    private javax.swing.JTextField t_name4;
    private javax.swing.JTextField t_name5;
    private javax.swing.JTextField t_name6;
    private javax.swing.JTextField t_name7;
    private javax.swing.JTextField t_name8;
    private javax.swing.JTextField t_name9;
    private javax.swing.JTextField t_plu;
    private javax.swing.JTextField t_plu1;
    private javax.swing.JTextField t_pluname;
    private javax.swing.JTextField t_pluname1;
    private javax.swing.JFormattedTextField t_point1;
    private javax.swing.JFormattedTextField t_point2;
    private javax.swing.JFormattedTextField t_sale1;
    private javax.swing.JFormattedTextField t_sale2;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTable tblCupon;
    private javax.swing.JTable tblbranch;
    private javax.swing.JTable tblfixbranch;
    private javax.swing.JTable tblplu;
    private javax.swing.JTable tblplu1;
    private javax.swing.JCheckBox td1;
    private javax.swing.JCheckBox te1;
    private javax.swing.JCheckBox tp1;
    private javax.swing.JCheckBox tt1;
    private javax.swing.JCheckBox tw1;
    // End of variables declaration//GEN-END:variables

    public void showdataintb() {
        tblCupon.setShowGrid(true);
        tblCupon.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblCupon.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblCupon.setRowSelectionAllowed(true);
        tblCupon.setBackground(java.awt.Color.WHITE);
        tblCupon.setGridColor(java.awt.Color.gray);

        TableColumnModel tcm = tblCupon.getColumnModel();
        DefaultTableCellRenderer d;
        JTableHeader header = tblCupon.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblCupon.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblCupon.setRowHeight(25);

        stmt = null;
        ResultSet rs = null;
        model = (DefaultTableModel) tblCupon.getModel();
        int cnt = model.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                model.removeRow(0);
            }
        }
        // Check Selected campain
        String TempStr = "";
        
        try {
            String sql = "";
            stmt = (Statement) dbUtility.con.createStatement();
            if (SelectedCampain.equals("ALL")) {
                sql = "SELECT * FROM propoint order by procode";
            } else {
                sql = "SELECT * FROM propoint order by procode";
            }
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        model.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("procode")),
                                    cvth.ASCII2Unicode(rs.getString("proname")),
                                    cvth.ASCII2Unicode(Format.dateFmtShow.format(rs.getDate("probegin"))) + " - " + (Format.dateFmtShow.format(rs.getDate("proend"))),
                                    cvth.ASCII2Unicode(rs.getString("prostrday")),
                                    cvth.ASCII2Unicode(rs.getString("prosaletype"))
                                    });

                    } else {
                        model.addRow(new Object[]{rs.getString("procode"),
                                    rs.getString("proname"),
                                    rs.getDate("probegin").toString()+" - "+rs.getDate("proend").toString(),
                                    rs.getString("prostrday"),
                                    rs.getString("prosaletype")
                                    });
                    }
                }
            }
            t_count1.setText(tblCupon.getRowCount() + " รายการ");
        } catch (Exception e) {
        }
    }

    public void GetData(String Code) {

        if (CheckValidEnter()) {
            try {
                String sql = "select * from propoint where procode='" + Code + "'";

                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        t_code.setText(cvth.ASCII2Unicode(rs.getString("procode")));
                        t_name.setText(cvth.ASCII2Unicode(rs.getString("proname")));

                        t_code2.setText(cvth.ASCII2Unicode(rs.getString("procode")) + " - " + cvth.ASCII2Unicode(rs.getString("proname")));

                        t_date1.setText(Format.dateFmtShow.format(rs.getDate("probegin")));
                        t_date2.setText(Format.dateFmtShow.format(rs.getDate("proend")));
                        strDay.setText(cvth.ASCII2Unicode(rs.getString("prostrday")));

                        c1.setSelected(false);
                        c2.setSelected(false);
                        c3.setSelected(false);
                        c4.setSelected(false);
                        c5.setSelected(false);
                        c6.setSelected(false);
                        c7.setSelected(false);

                        String cu_str = strDay.getText();
                        String[] out = cu_str.split(",");
                        for (int i = 0; i < out.length; i++) {
                            if (out[i].equals("Sun")) {
                                c1.setSelected(true);
                            }
                            if (out[i].equals("Mon")) {
                                c2.setSelected(true);
                            }
                            if (out[i].equals("Tue")) {
                                c3.setSelected(true);
                            }
                            if (out[i].equals("Wed")) {
                                c4.setSelected(true);
                            }
                            if (out[i].equals("Thu")) {
                                c5.setSelected(true);
                            }
                            if (out[i].equals("Fri")) {
                                c6.setSelected(true);
                            }
                            if (out[i].equals("Sat")) {
                                c7.setSelected(true);
                            }
                        }

                        strtype.setText(cvth.ASCII2Unicode(rs.getString("prosaletype")));

                        te1.setSelected(false);
                        tt1.setSelected(false);
                        td1.setSelected(false);
                        tp1.setSelected(false);
                        tw1.setSelected(false);

                        String sale_str = strtype.getText();
                        String[] out2 = sale_str.split(",");
                        for (int i = 0; i < out2.length; i++) {
                            if (out2[i].equals("E")) {
                                te1.setSelected(true);
                            }
                            if (out2[i].equals("T")) {
                                tt1.setSelected(true);
                            }
                            if (out2[i].equals("D")) {
                                td1.setSelected(true);
                            }
                            if (out2[i].equals("P")) {
                                tp1.setSelected(true);
                            }
                            if (out2[i].equals("W")) {
                                tw1.setSelected(true);
                            }
                        }
                        t_sale1.setText(cvth.ASCII2Unicode(Format.integerFmt.format(rs.getInt("prosale1"))));
                        t_sale2.setText(cvth.ASCII2Unicode(Format.integerFmt.format(rs.getInt("prosale2"))));       
                        t_point1.setText(cvth.ASCII2Unicode(Format.integerFmt.format(rs.getInt("propoint1"))));
                        t_point2.setText(cvth.ASCII2Unicode(Format.integerFmt.format(rs.getInt("propoint2"))));
                        
                        t_name1.setText(cvth.ASCII2Unicode(rs.getString("protitle")));
                        t_name2.setText(cvth.ASCII2Unicode(rs.getString("proheader1")));
                        t_name3.setText(cvth.ASCII2Unicode(rs.getString("proheader2")));
                        t_name4.setText(cvth.ASCII2Unicode(rs.getString("proheader3")));
                        t_name5.setText(cvth.ASCII2Unicode(rs.getString("pronumber")));
                        t_name6.setText(cvth.ASCII2Unicode(rs.getString("profootter1")));
                        t_name7.setText(cvth.ASCII2Unicode(rs.getString("profootter2")));
                        t_name8.setText(cvth.ASCII2Unicode(rs.getString("profootter3")));
                        t_name9.setText(cvth.ASCII2Unicode(rs.getString("profootter4")));
                        
                        t_code.setBackground(new java.awt.Color(255, 246, 143));
                        t_code.setEditable(false);

                        getCuponList(cvth.Unicode2ASCII(t_code.getText()));
                        getCuponUnList(cvth.Unicode2ASCII(t_code.getText()));
                        getBranchList(cvth.Unicode2ASCII(t_code.getText()));
                        getFixBranchList(cvth.Unicode2ASCII(t_code.getText()));
                        


                    } else {
                        t_code.setText(rs.getString("procode"));
                        t_name.setText(rs.getString("proname"));

                        t_code2.setText(rs.getString("procode") + " - " + rs.getString("proname"));

                        t_date1.setText(Format.dateFmtShow.format(rs.getDate("probegin")));
                        t_date2.setText(Format.dateFmtShow.format(rs.getDate("proend")));
                        strDay.setText(rs.getString("prostrday"));

                        c1.setSelected(false);
                        c2.setSelected(false);
                        c3.setSelected(false);
                        c4.setSelected(false);
                        c5.setSelected(false);
                        c6.setSelected(false);
                        c7.setSelected(false);

                        String cu_str = strDay.getText();
                        String[] out = cu_str.split(",");
                        for (int i = 0; i < out.length; i++) {
                            if (out[i].equals("Sun")) {
                                c1.setSelected(true);
                            }
                            if (out[i].equals("Mon")) {
                                c2.setSelected(true);
                            }
                            if (out[i].equals("Tue")) {
                                c3.setSelected(true);
                            }
                            if (out[i].equals("Wed")) {
                                c4.setSelected(true);
                            }
                            if (out[i].equals("Thu")) {
                                c5.setSelected(true);
                            }
                            if (out[i].equals("Fri")) {
                                c6.setSelected(true);
                            }
                            if (out[i].equals("Sat")) {
                                c7.setSelected(true);
                            }
                        }

                        strtype.setText(rs.getString("prosaletype"));

                        te1.setSelected(false);
                        tt1.setSelected(false);
                        td1.setSelected(false);
                        tp1.setSelected(false);
                        tw1.setSelected(false);

                        String sale_str = strtype.getText();
                        String[] out2 = sale_str.split(",");
                        for (int i = 0; i < out2.length; i++) {
                            if (out2[i].equals("E")) {
                                te1.setSelected(true);
                            }
                            if (out2[i].equals("T")) {
                                tt1.setSelected(true);
                            }
                            if (out2[i].equals("D")) {
                                td1.setSelected(true);
                            }
                            if (out2[i].equals("P")) {
                                tp1.setSelected(true);
                            }
                            if (out2[i].equals("W")) {
                                tw1.setSelected(true);
                            }
                        }
                        t_sale1.setText(Format.integerFmt.format(rs.getInt("prosale1")));
                        t_sale2.setText(Format.integerFmt.format(rs.getInt("prosale2")));       
                        t_point1.setText(Format.integerFmt.format(rs.getInt("propoint1")));
                        t_point2.setText(Format.integerFmt.format(rs.getInt("propoint2")));
                        
                        t_name1.setText(rs.getString("protitle"));
                        t_name2.setText(rs.getString("proheader1"));
                        t_name3.setText(rs.getString("proheader2"));
                        t_name4.setText(rs.getString("proheader3"));
                        t_name5.setText(rs.getString("pronumber"));
                        t_name6.setText(rs.getString("profootter1"));
                        t_name7.setText(rs.getString("profootter2"));
                        t_name8.setText(rs.getString("profootter3"));
                        t_name9.setText(rs.getString("profootter4"));
                        
                        t_code.setBackground(new java.awt.Color(255, 246, 143));
                        t_code.setEditable(false);

                        getCuponList(t_code.getText());
                        getCuponUnList(t_code.getText());
                        getBranchList(t_code.getText());
                        getFixBranchList(t_code.getText());
                    }
                }
                rs.close();
                stmt.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
        setActive();
    }

    public void GetDataBranch(String Code) {

        if (CheckValidEnterBranch()) {
            try {
                String sql = "select * from branchgroup where BGroupCode='" + Code + "'";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        t_bcode.setText(cvth.ASCII2Unicode(rs.getString("BGroupCode")));
                        t_bname.setText(cvth.ASCII2Unicode(rs.getString("BGroupName")));

                    } else {
                        t_bcode.setText(rs.getString("BGroupCode"));
                        t_bname.setText(rs.getString("BGroupName"));
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "ไม่พบข้อมูลกลุ่มสาขา");
                    t_bcode.requestFocus();
                }
                rs.close();
                stmt.close();
                setActive();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }

    public void GetDataplu(String Code) {

        if (CheckValidEnterBranch()) {
            try {
                String sql = "select * from product where PCode='" + Code + "'";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        t_plu.setText(cvth.ASCII2Unicode(rs.getString("PCode")));
                        t_pluname.setText(cvth.ASCII2Unicode(rs.getString("PDesc")));
                    } else {
                        t_plu.setText(rs.getString("PCode"));
                        t_pluname.setText(rs.getString("PDesc"));
                    }
                    btnpluok.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "ไม่พบข้อมูลสินค้า");
                    t_plu.requestFocus();
                }
                rs.close();
                stmt.close();
                setActive();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }

    public void GetDataFixBranch(String Code) {

        if (CheckValidEnterBranch()) {
            try {
                String sql = "select * from branfile where Code='" + Code + "'";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        t_fixbranch.setText(cvth.ASCII2Unicode(rs.getString("Code")));
                        t_fixname.setText(cvth.ASCII2Unicode(rs.getString("Name")));

                    } else {
                        t_fixbranch.setText(rs.getString("Code"));
                        t_fixname.setText(rs.getString("Name"));
                    }
                    btnbranchok1.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "ไม่พบข้อมูลกลุ่มสาขา");
                    t_fixbranch.requestFocus();
                }
                rs.close();
                stmt.close();
                setActive();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }

    public void btnsavebranch() {

        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "Insert into propointlink (BGroup,proCode) values(?,?)";
                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                prm.setString(1, cvth.Unicode2ASCII(t_bcode.getText().trim()));
                prm.setString(2, cvth.Unicode2ASCII(t_code.getText()));
                prm.executeUpdate();
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "Insert into propointlink (BGroup,proCode) values(?,?)";
                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                prm.setString(1, t_bcode.getText().trim());
                prm.setString(2, t_code.getText());
                prm.executeUpdate();
            }
            t_bcode.setText("");
            t_bname.setText("");
            stmt.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Insert Branch Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void btnsavefixbranch() {

        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "Insert into fixbranchpropoint (bcode,procode) values(?,?)";
                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                prm.setString(1, cvth.Unicode2ASCII(t_fixbranch.getText().trim()));
                prm.setString(2, cvth.Unicode2ASCII(t_code.getText()));
                prm.executeUpdate();
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "Insert into fixbranchpropoint (bcode,procode) values(?,?)";
                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                prm.setString(1, t_fixbranch.getText().trim());
                prm.setString(2, t_code.getText());
                prm.executeUpdate();
            }
            stmt.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Insert FixBranch Error", JOptionPane.ERROR_MESSAGE);
        }


    }

    public void getCuponList(String cupon) {

        tblplu.setShowGrid(true);
        tblplu.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblplu.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblplu.setRowSelectionAllowed(true);
        tblplu.setBackground(java.awt.Color.WHITE);
        tblplu.setGridColor(java.awt.Color.gray);

        JTableHeader header = tblplu.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblplu.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblplu.setRowHeight(25);

        stmt = null;
        ResultSet rs = null;
        model2 = (DefaultTableModel) tblplu.getModel();
        modelh2 = (JTableHeader) tblplu.getTableHeader();
        int cnt = model2.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                model2.removeRow(0);
            }
        }
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT product.pcode,pdesc,pgroup "
                    + "FROM product INNER JOIN propointlist ON product.pcode = propointlist.pcode  "
                    + "where procode = '" + cupon + "' order by pgroup,product.pcode;";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        model2.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("pgroup")),
                                    cvth.ASCII2Unicode(rs.getString("product.pcode")),
                                    cvth.ASCII2Unicode(rs.getString("pdesc"))});


                    } else {
                        model2.addRow(new Object[]{rs.getString("pgroup"),
                                    rs.getString("product.pcode"),
                                    rs.getString("pdesc")});
                    }
                }
            }
        } catch (Exception e) {
        }
    }

    public void getProductGroup(String group) {
        if (chkdata(t_code.getText())) {
            btnsave();
        }
        ResultSet rs;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                group = cvth.Unicode2ASCII(group);
            }
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT product.pcode,pdesc,pgroup FROM product "
                    + "left join blink on blink.pcode=product.pcode "
                    + "left join propointlink on propointlink.bgroup=blink.bgroup "
                    + "where pgroup = '" + group + "' and procode='" + t_code.getText() + "' "
                    + " order by pgroup,product.pcode";
            rs = stmt.executeQuery(sql);

            while (rs.next()) {
                String plu = rs.getString("pcode");
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    if (chkdata(t_code.getText())) {
                        if (chkplu(t_code.getText(), plu) & (!chkculist(t_code.getText(), plu))) {
                            insertCuponList(cvth.ASCII2Unicode(t_code.getText()), cvth.ASCII2Unicode(plu));
                        }
                    }
                } else {
                    if (chkdata(t_code.getText())) {
                        if (chkplu(t_code.getText(), plu) & (!chkculist(t_code.getText(), plu))) {
                            insertCuponList(t_code.getText(), plu);
                        }
                    }
                }
                getCuponList(t_code.getText());

            }
        } catch (Exception e) {
            PUtility.ShowMsg(e.getMessage());
        }
    }

    public void getBranchgroup() {

        stmt = null;
        ResultSet rs = null;
        model3 = (DefaultTableModel) tblbranch.getModel();
        int cnt = model3.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                model3.removeRow(0);
            }
        }
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT * FROM branchgroup order by bgroupcode;";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        model3.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("bgroupcode")),
                                    cvth.ASCII2Unicode(rs.getString("bgroupname"))});

                    } else {
                        model3.addRow(new Object[]{rs.getString("bgroupcode"),
                                    rs.getString("bgroupname")});
                    }
                }
            }
        } catch (Exception e) {
        }
    }

    public boolean chkdatabranchgroup(String pk) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + cvth.Unicode2ASCII(pk) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public void getBranchList(String cupon) {

        tblbranch.setShowGrid(true);
        tblbranch.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblbranch.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblbranch.setRowSelectionAllowed(true);
        tblbranch.setBackground(java.awt.Color.WHITE);
        tblbranch.setGridColor(java.awt.Color.gray);

        JTableHeader header = tblbranch.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblbranch.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblbranch.setRowHeight(25);

        stmt = null;
        ResultSet rs = null;
        model3 = (DefaultTableModel) tblbranch.getModel();
        int cnt = model3.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                model3.removeRow(0);
            }
        }
        try {

            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                cupon = cvth.Unicode2ASCII(cupon);
            }
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT propointlink.procode,propointlink.BGroup,branchgroup.BGroupName  "
                    + "FROM propointlink INNER JOIN propoint ON propointlink.procode = propoint.procode "
                    + "JOIN branchgroup ON branchgroup.BGroupCode = propointlink.BGroup "
                    + "where propointlink.procode = '" + cupon + "' order by propointlink.BGroup;";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        model3.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("propointlink.BGroup")),
                                    cvth.ASCII2Unicode(rs.getString("branchgroup.BGroupName"))});




                    } else {
                        model3.addRow(new Object[]{rs.getString("propointlink.BGroup"),
                                    rs.getString("branchgroup.BGroupName")});
                    }
                }
            }
        } catch (Exception e) {
        }
    }

    public void getFixBranchList(String cupon) {

        tblfixbranch.setShowGrid(true);
        tblfixbranch.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblfixbranch.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblfixbranch.setRowSelectionAllowed(true);
        tblfixbranch.setBackground(java.awt.Color.WHITE);
        tblfixbranch.setGridColor(java.awt.Color.gray);

        JTableHeader header = tblfixbranch.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblfixbranch.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblfixbranch.setRowHeight(25);

        stmt = null;
        ResultSet rs = null;
        model4 = (DefaultTableModel) tblfixbranch.getModel();
        int cnt = model4.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                model4.removeRow(0);
            }
        }
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                cupon = cvth.Unicode2ASCII(cupon);
            }
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT fixbranchpropoint.procode,fixbranchpropoint.bcode,branfile.Name,branfile.bgroup  "
                    + "FROM fixbranchpropoint INNER JOIN propoint ON fixbranchpropoint.procode = propoint.procode "
                    + "JOIN branfile ON branfile.Code = fixbranchpropoint.bcode "
                    + "where fixbranchpropoint.procode = '" + cupon + "' order by branfile.bgroup,branfile.code";
            rs = stmt.executeQuery(sql);

            while (rs.next()) {
                {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        model4.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("branfile.bgroup")),
                                    cvth.ASCII2Unicode(rs.getString("fixbranchpropoint.bcode")),
                                    cvth.ASCII2Unicode(rs.getString("branfile.Name"))});




                    } else {
                        model4.addRow(new Object[]{rs.getString("fixbranchpropoint.bcode"),
                                    rs.getString("branfile.Name")});
                    }
                }
            }
        } catch (Exception e) {
        }
    }

    public boolean CheckValidEnter() {
        boolean RetVal2 = true;

        if (t_code.getText().length() > 3) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรดมชั่นไม่ถูกต้อง...(ตัองมีขนาดไม่เกิน 3 ตัวอักษร)");
            RetVal2 = false;
            t_code.requestFocus();
        }
        return RetVal2;
    }

    public boolean CheckValidEnterBranch() {
        boolean RetVal2 = true;

        if (t_bcode.getText().length() > 3) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสกลุ่มสาขาไม่ถูกต้อง...(ตัองมีขนาดไม่เกิน 3 ตัวอักษร)");
            RetVal2 = false;
            t_bcode.requestFocus();
        }
        return RetVal2;
    }

    private void clearModel1() {
        int size = tblCupon.getRowCount();
        for (int i = 0; i < size; i++) {
            model.removeRow(0);
        }
    }

    private void clearModel2() {
        int size = tblplu.getRowCount();
        for (int i = 0; i < size; i++) {
            model2.removeRow(0);
        }
    }

    private void clearModel3() {
        int size = tblbranch.getRowCount();
        for (int i = 0; i < size; i++) {
            model3.removeRow(0);
        }
    }

    private void clearModel4() {
        int size = tblfixbranch.getRowCount();
        for (int i = 0; i < size; i++) {
            model4.removeRow(0);
        }
    }

    public void chkactive(String date) {
        clearModel1();
        // Check Selected campain
        String TempStr = "";
        
        try {
            String sql = "";
            sql = "select * "
                + "from propoint "
                + "where ('" + date + "' >= probegin and '" + date + "' <= proend ) order by procode";
            stmt = (Statement) dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        model.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("procode")),
                                    cvth.ASCII2Unicode(rs.getString("proname")),
                                    cvth.ASCII2Unicode(Format.dateFmtShow.format(rs.getDate("probegin"))) + " - " + (Format.dateFmtShow.format(rs.getDate("proend"))),
                                    cvth.ASCII2Unicode(rs.getString("prostrday")),
                                    cvth.ASCII2Unicode(rs.getString("prosaletype"))
                                    });

                    } else {
                        model.addRow(new Object[]{rs.getString("procode"),
                                    rs.getString("proname"),
                                    rs.getDate("probegin").toString()+" - "+  rs.getDate("proend").toString(),
                                    rs.getString("prostrday"),
                                    rs.getString("prosaletype")
                                    });
                    }
               
            }
            rs.close();
            stmt.close();
            t_count1.setText(tblCupon.getRowCount() + " รายการ");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public String getFixBranch() {
        String TFix = "";
        try {
            String sql = "select *from fixbranch where (cucode='" + t_code.getText() + "')  order by bcode ";
            stmt = (Statement) dbUtility.con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            int currec = 0;
            while (rs.next()) {
                currec++;
                if (currec <= 60) {
                    TFix = TFix + "," + rs.getString("bcode");
                }
            }
            rs.close();
            stmt.close();
            t_count1.setText(tblCupon.getRowCount() + " รายการ");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return TFix;
    }

    public void SaveFixBranch() {
        String FixBranch = getFixBranch();
        try {

            stmt = (Statement) dbUtility.con.createStatement();
            String sql2 = "update culink  set fixbranch = '"+FixBranch+"' where CuCode = '" + t_code.getText() + "'";
            stmt.executeUpdate(sql2);
            stmt.close();


        } catch (Exception e) {
        }

    }

    public void btnsave() {
        java.util.Date time1;
        java.util.Date time2;
        String date1 = "";
        String date2 = "";
        try {
            time1 = Format.dateFmtShow.parse(t_date1.getText());
            date1 = Format.dateFmtSql.format(time1);
            time2 = Format.dateFmtShow.parse(t_date2.getText());
            date2 = Format.dateFmtSql.format(time2);
        } catch (Exception ex) {
            date1 = "1900-01-01";
            date2 = "1900-01-01";
        }
        if (CheckValidSave()) {
            if (chkdata(t_code.getText())) {
                try {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (Statement) dbUtility.con.createStatement();
                        String sql = "Update propoint set proname=?,probegin=?,proend=?"
                                + ",prostrday=?,prosaletype=?"
                                + ",prosale1=?,prosale2=?,propoint1=?,propoint2=? "
                                + ",protitle=?,proheader1=?,proheader2=?,proheader3=?,pronumber=?"
                                + ",profootter1=?,profootter2=?,profootter3=?,profootter4=? " 
                                + " where procode = ?";
                        PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(t_name.getText()));
                        prm.setString(2, cvth.Unicode2ASCII(date1));
                        prm.setString(3, cvth.Unicode2ASCII(date2));
                        prm.setString(4, cvth.Unicode2ASCII(strDay.getText()));
                        prm.setString(5, cvth.Unicode2ASCII(strtype.getText()));
                        
                        prm.setInt(6, Integer.parseInt(t_sale1.getText()));
                        prm.setInt(7, Integer.parseInt(t_sale2.getText())) ;
                        prm.setInt(8, Integer.parseInt(t_point1.getText()));
                        prm.setInt(9, Integer.parseInt(t_point2.getText()));
                        
                        prm.setString(10, cvth.Unicode2ASCII(t_name1.getText().trim()));
                        prm.setString(11, cvth.Unicode2ASCII(t_name2.getText().trim()));
                        prm.setString(12, cvth.Unicode2ASCII(t_name3.getText().trim()));
                        prm.setString(13, cvth.Unicode2ASCII(t_name4.getText().trim()));
                        prm.setString(14, cvth.Unicode2ASCII(t_name5.getText().trim()));
                        prm.setString(15, cvth.Unicode2ASCII(t_name6.getText().trim()));
                        prm.setString(16, cvth.Unicode2ASCII(t_name7.getText().trim()));
                        prm.setString(17, cvth.Unicode2ASCII(t_name8.getText().trim()));
                        prm.setString(18, cvth.Unicode2ASCII(t_name9.getText().trim()));
                        prm.setString(19, cvth.Unicode2ASCII(t_code.getText().trim()));
                        

                        prm.executeUpdate();
                    } else {
                        stmt = (Statement) dbUtility.con.createStatement();
                        String sql = "Update propoint set proname=?,probegin=?,proend=?"
                                + ",prostrday=?,prosaletype=?"
                                + ",prosale1=?,prosale2=?,propoint1=?,propoint2=? "
                                + ",protitle=?,proheader1=?,proheader2=?,proheader3=?,pronumber=?"
                                + ",profootter1=?,profootter2=?,profootter3=?,profootter4=? " 
                                + " where procode = ?";
                        PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, t_name.getText());
                        prm.setString(2, date1);
                        prm.setString(3, date2);
                        prm.setString(4, strDay.getText());
                        prm.setString(5, strtype.getText());
                        
                        prm.setInt(6, Integer.parseInt(t_sale1.getText()));
                        prm.setInt(7, Integer.parseInt(t_sale2.getText())) ;
                        prm.setInt(8, Integer.parseInt(t_point1.getText()));
                        prm.setInt(9, Integer.parseInt(t_point2.getText()));
                        
                        prm.setString(10, t_name1.getText().trim());
                        prm.setString(11, t_name2.getText().trim());
                        prm.setString(12, t_name3.getText().trim());
                        prm.setString(13, t_name4.getText().trim());
                        prm.setString(14, t_name5.getText().trim());
                        prm.setString(15, t_name6.getText().trim());
                        prm.setString(16, t_name7.getText().trim());
                        prm.setString(17, t_name8.getText().trim());
                        prm.setString(18, t_name9.getText().trim());
                        prm.setString(19, t_code.getText().trim());
                        prm.executeUpdate();
                    }
                    stmt.close();
                } catch (SQLException e) {
                    //JOptionPane.showMessageDialog(this, e.getMessage(), "Save Error...", JOptionPane.ERROR_MESSAGE);
                    PUtility.ShowMsg(e.getMessage().toString());
                }
            } else {
                try {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (Statement) dbUtility.con.createStatement();
                        String sql = "insert into  propoint (procode,proname,probegin,proend"
                                + ",prostrday,prosaletype,prosale1,prosale2,propoint1,propoint2"
                                + ",protitle,proheader1,proheader2,proheader3,pronumber"
                                + ",profootter1,profootter2,profootter3,profootter4) " 
                                + " values (?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(t_code.getText().trim()));
                        prm.setString(2, cvth.Unicode2ASCII(t_name.getText()));
                        prm.setString(3, cvth.Unicode2ASCII(date1));
                        prm.setString(4, cvth.Unicode2ASCII(date2));
                        prm.setString(5, cvth.Unicode2ASCII(strDay.getText()));
                        prm.setString(6, cvth.Unicode2ASCII(strtype.getText()));
                        
                        prm.setInt(7, Integer.parseInt(t_sale1.getText()));
                        prm.setInt(8, Integer.parseInt(t_sale2.getText())) ;
                        prm.setInt(9, Integer.parseInt(t_point1.getText()));
                        prm.setInt(10, Integer.parseInt(t_point2.getText()));
                        
                        prm.setString(11, cvth.Unicode2ASCII(t_name1.getText().trim()));
                        prm.setString(12, cvth.Unicode2ASCII(t_name2.getText().trim()));
                        prm.setString(13, cvth.Unicode2ASCII(t_name3.getText().trim()));
                        prm.setString(14, cvth.Unicode2ASCII(t_name4.getText().trim()));
                        prm.setString(15, cvth.Unicode2ASCII(t_name5.getText().trim()));
                        prm.setString(16, cvth.Unicode2ASCII(t_name6.getText().trim()));
                        prm.setString(17, cvth.Unicode2ASCII(t_name7.getText().trim()));
                        prm.setString(18, cvth.Unicode2ASCII(t_name8.getText().trim()));
                        prm.setString(19, cvth.Unicode2ASCII(t_name9.getText().trim()));
                        
                        prm.executeUpdate();
                        
                       
                    } else {
                        
                        stmt = (Statement) dbUtility.con.createStatement();
                        String sql = "insert into  propoint (procode,proname,probegin,proend"
                                + ",prostrday,prosaletype,prosale1,prosale2,propoint1,propoint2"
                                + ",protitle,proheader1,proheader2,proheader3,pronumber"
                                + ",profootter1,profootter2,profootter3,profootter4) " 
                                + " values (?,?,?,?,?,?,?,?,?,? ,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, t_code.getText().trim());
                        prm.setString(2, t_name.getText());
                        prm.setString(3, date1);
                        prm.setString(4, date2);
                        prm.setString(5, strDay.getText());
                        prm.setString(6, strtype.getText());
                        
                        prm.setInt(7, Integer.parseInt(t_sale1.getText()));
                        prm.setInt(8, Integer.parseInt(t_sale2.getText())) ;
                        prm.setInt(9, Integer.parseInt(t_point1.getText()));
                        prm.setInt(10, Integer.parseInt(t_point2.getText()));
                        
                        prm.setString(11, t_name1.getText().trim());
                        prm.setString(12, t_name2.getText().trim());
                        prm.setString(13, t_name3.getText().trim());
                        prm.setString(14, t_name4.getText().trim());
                        prm.setString(15, t_name5.getText().trim());
                        prm.setString(16, t_name6.getText().trim());
                        prm.setString(17, t_name7.getText().trim());
                        prm.setString(18, t_name8.getText().trim());
                        prm.setString(19, t_name9.getText().trim());
                        
                        prm.executeUpdate();
                        
                    }
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage().toString(), "Save Error...", JOptionPane.ERROR_MESSAGE);
                }
            }
            showdataintb();
            bsaveOK = true;
        }
    }
    public boolean CheckValidSave() {
        boolean chk = true;
        if (t_code.getText().length() > 3) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 3 ตัวอักษร)");
            chk = false;
            t_code.requestFocus();
        } else if (t_name.getText().length() > 50) {
            JOptionPane.showMessageDialog(this, "กำหนด รายละเอียด/ชื่อโปรโมชั่นไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 30 ตัวอักษร)");
            chk = false;
            t_name.requestFocus();
        }
        //Check Fix Branch
        if (!ChkFixBranch()) {
            JOptionPane.showMessageDialog(this, "กรุณาตรวจสอบการกำหนดการใช้งานเฉพาะสาขา โดยไม่กำหนด กลุ่มสาขาที่ใช้งานได้" + "\n" + FixBranchError);
            chk = false;
        }
        return chk;
    }

    public boolean ChkFixBranch() {
        boolean ret = true;
        ResultSet rs = null;
        FixBranchError = "";
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select bcode,bgroup from fixbranchpropoint "
                    + "left join branfile on code=bcode "
                    + "where procode='" + t_code.getText() + "' ";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String Tempbcode = rs.getString("bcode");
                String Tempbgroup = rs.getString("bgroup");
                if (!chkinbgroup(Tempbgroup)) {
                    ret = false;
                    FixBranchError = FixBranchError + "," + Tempbcode;
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(PropointSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ret;
    }

    public boolean ChkPluList() {
        boolean ret = true;
        ResultSet rs = null;
        FixBranchError = "";
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select *from cuponlist "
                    + "where cucode='" + t_code.getText() + "' ";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String Tempcode = rs.getString("pcode");
                String Tempcucode = rs.getString("cucode");
                if (!chkinlist(Tempcucode, Tempcode)) {
                    ret = false;
                    FixBranchError = FixBranchError + "," + Tempcode;
                }
            }

        } catch (SQLException ex) {
            Logger.getLogger(PropointSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ret;
    }

    public boolean chkinbgroup(String bgroup) {
        boolean ret = false;
        ResultSet rs = null;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select *from culink "
                    + "where cucode='" + t_code.getText() + "' ";
            rs = stmt.executeQuery(sql);
            if (rs.getRow() == 0) {
                while (rs.next()) {
                    if (rs.getString("bgroup").equals(bgroup)) {
                        ret = true;
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(PropointSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ret;
    }

    public boolean chkinlist(String cucode, String pcode) {
        boolean ret = false;
        ResultSet rs = null;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select pcode from blink "
                    + "left join culink on blink.bgroup=culink.bgroup "
                    + "where cucode='" + cucode + "' ";
            rs = stmt.executeQuery(sql);
            if (rs.getRow() == 0) {
                while (rs.next()) {
                    if (rs.getString("pcode").equals(pcode)) {
                        ret = true;
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(PropointSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ret;
    }

    public boolean chkdata(String pk) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from propoint where procode ='" + cvth.Unicode2ASCII(pk) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from propoint where procode ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public boolean chkplu(String cucode, String plu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select product.pcode from product "
                    + "left join blink on blink.pcode=product.pcode "
                    + "left join propointlink on blink.bgroup=propointlink.bgroup "
                    + "where proCode ='" + cucode + "' and product.pcode='" + plu + "' ";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                chk = true;
            } else {
                chk = false;
            }
        } catch (Exception e) {
        }
        return chk;
    }
    

    public boolean chkculist(String cucode, String plu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select *from propointlist "
                    + "where proCode ='" + cucode + "' and pcode='" + plu + "' ";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                chk = true;
            } else {
                chk = false;
            }
        } catch (Exception e) {
        }
        return chk;
    }
    
    public boolean chkcuunlist(String cucode, String plu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select *from propointunlist "
                    + "where proCode ='" + cucode + "' and pcode='" + plu + "' ";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                chk = true;
            } else {
                chk = false;
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean chkdatafixbranch(String pk) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from fixbranch where bcode ='" + cvth.Unicode2ASCII(pk) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from culink where BGroup ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean chkdatafixbranch(String pk, String code) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from fixbranchpropoint where bcode ='" + cvth.Unicode2ASCII(pk) + "'"
                        + " and procode = '" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from propointlink where BGroup ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean chkdatafixbranchingroup(String code) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();

                String where = "";
                for (int i = 0; i < model3.getRowCount(); i++) {
                    if (i == 0) {
                        where = "and ( branfile.bgroup = '" + model3.getValueAt(i, 0) + "'";
                    } else {
                        if (i == model3.getRowCount() - 1) {
                            where += " or branfile.bgroup = '" + model3.getValueAt(i, 0) + "' ";
                        } else if (i < 1 | i < model3.getRowCount()) {
                            where += " or branfile.bgroup = '" + model3.getValueAt(i, 0) + "'";
                        }
                    }
                }

//            String sql3 = "select bgroup,name,code "
//                    + "from branfile where " + where + " order by bgroup ";
//                
//                
//                String sql4 = "SELECT culink.CuCode,culink.BGroup,culink.FixBranch,branchgroup.BGroupName  "
//                    + "FROM culink INNER JOIN cupon ON culink.CuCode = cupon.CuCode "
//                    + "JOIN branchgroup ON branchgroup.BGroupCode = culink.BGroup "
//                    + "where culink.CuCode = '" + cupon + "' order by culink.BGroup;";

                String sql = "select branfile.code,branfile.bgroup "
                        + "from branfile  "
                        + "where branfile.code = '" + cvth.Unicode2ASCII(code) + "'  " + where + " )";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();

                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean chkdatabranchinfixbranch(String code) {
        boolean chk = false;
        ResultSet rs = null;
        try {

            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();

                String where = "";
                if (model4.getRowCount() == 1) {
                    where = "and ( branfile.code = '" + model4.getValueAt(0, 1) + "')";
                } else {

                    for (int i = 0; i < model4.getRowCount(); i++) {
                        if (i == 0) {
                            where = "and ( branfile.code = '" + model4.getValueAt(i, 1) + "'";
                        } else {
                            if (i == model4.getRowCount() - 1) {
                                where += " or branfile.code = '" + model4.getValueAt(i, 1) + "' )";
                            } else if (i < 1 | i < model4.getRowCount()) {
                                where += " or branfile.code = '" + model4.getValueAt(i, 1) + "'";
                            }
                        }
                    }
                }

                String sql = "select branfile.code,branfile.bgroup "
                        + "from branfile  "
                        + "where bgroup = '" + cvth.Unicode2ASCII(code) + "' " + where + " ";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();

                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean chkdatabranchfile(String pk) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from branfile where Code ='" + cvth.Unicode2ASCII(pk) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from branfile where Code ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean chkdatabranch(String pk) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from culink where BGroup ='" + cvth.Unicode2ASCII(pk) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from culink where BGroup ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean chkdatabranch(String pk, String code) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from propointlink where BGroup ='" + cvth.Unicode2ASCII(pk) + "'"
                        + " and procode = '" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from propointlink where BGroup ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public void genday() {
        String coCode = t_code.getText().trim();
        if (coCode.length() > 0 && !t_code.isEditable()) {
            String day = "";
            if (c1.isSelected()) {
                day += ",Sun";
            }
            if (c2.isSelected()) {
                day += ",Mon";
            }
            if (c3.isSelected()) {
                day += ",Tue";
            }
            if (c4.isSelected()) {
                day += ",Wed";
            }
            if (c5.isSelected()) {
                day += ",Thu";
            }
            if (c6.isSelected()) {
                day += ",Fri";
            }
            if (c7.isSelected()) {
                day += ",Sat";
            }
            strDay.setText(day);
        } else {
            t_code.requestFocus();
        }
    }

    public void gend() {
        String proType = "";
        if (te1.isSelected()) {
            proType += ",E";
        }
        if (tt1.isSelected()) {
            proType += ",T";
        }
        if (td1.isSelected()) {
            proType += ",D";
        }
        if (tp1.isSelected()) {
            proType += ",P";
        }
        if (tw1.isSelected()) {
            proType += ",W";
        }
        strtype.setText(proType);
    }

    private void setActive() {
        setActive(true);
    }

    private void setUnActive() {
        setActive(false);
    }

    private void setActive(boolean active) {
        tab.setEnabledAt(1, active);
        tab.setEnabledAt(2, active);
        t_name.setFocusable(active);
        t_date1.setFocusable(active);
        t_date2.setFocusable(active);

        t_sale1.setFocusable(active);
        t_sale2.setFocusable(active);
        t_point1.setFocusable(active);
        t_point2.setFocusable(active);
        t_name1.setFocusable(active);
        t_name2.setFocusable(active);
        t_name3.setFocusable(active);
        t_name4.setFocusable(active);
        t_name5.setFocusable(active);
        t_name6.setFocusable(active);
        t_name7.setFocusable(active);
        t_name8.setFocusable(active);
        t_name9.setFocusable(active);

        btn_Calendar.setEnabled(active);
        btn_Calendar1.setEnabled(active);
        c1.setEnabled(active);
        c2.setEnabled(active);
        c3.setEnabled(active);
        c4.setEnabled(active);
        c5.setEnabled(active);
        c6.setEnabled(active);
        c7.setEnabled(active);
        te1.setEnabled(active);
        tt1.setEnabled(active);
        td1.setEnabled(active);
        tp1.setEnabled(active);
        tw1.setEnabled(active);
        //tab2
        t_plu.setFocusable(active);
        t_gcode.setFocusable(active);
        t_bcode.setFocusable(active);
        t_fixbranch.setFocusable(active);
    }

    public void clearForm() {
        bsaveOK = false;
        FixBranchError = "";
        PluListError = "";
        tab.setSelectedIndex(0);
        t_code.setText("");
        t_code.setEditable(true);
        t_code.setBackground(java.awt.Color.white);

        t_name.setText("");
        
        rdactive1.setSelected(true);
        t_date1.setText(Format.dateFmtShow.format(new java.util.Date()));
        t_date2.setText(Format.dateFmtShow.format(new java.util.Date()));
        strDay.setText("");
        
        c1.setSelected(false);
        c2.setSelected(false);
        c3.setSelected(false);
        c4.setSelected(false);
        c5.setSelected(false);
        c6.setSelected(false);
        c7.setSelected(false);
        te1.setSelected(false);
        tt1.setSelected(false);
        td1.setSelected(false);
        tp1.setSelected(false);
        tw1.setSelected(false);
        strtype.setText("");

        t_plu.setText("");
        t_sale1.setText("0");
        t_sale1.setText("0");
        t_point1.setText("0");
        t_point1.setText("0");
        t_name1.setText("");
        t_name2.setText("");
        t_name3.setText("");
        t_name4.setText("");
        t_name5.setText("");
        t_name6.setText("");
        t_name7.setText("");
        t_name8.setText("");
        t_name9.setText("");


        //tab2
        t_code2.setText("");
        t_plu.setText("");
        t_pluname.setText("");
        t_gcode.setText("");
        t_bcode.setText("");
        t_bname.setText("");
        t_fixbranch.setText("");
        t_fixname.setText("");
        clearModel2();
        clearModel3();
        clearModel4();

        setUnActive();
        t_code.requestFocus();
        showdataintb();
    }

    public void delete(String code) {
        try {
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {


                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "Delete from cupon where CuCode = ?";
                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                prm.setString(1, cvth.Unicode2ASCII(t_code.getText()));
                prm.executeUpdate();
                stmt.close();

                stmt = (Statement) dbUtility.con.createStatement();
                String sql2 = "Delete from cuponlist where CuCode = ?";
                PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
                prm2.setString(1, cvth.Unicode2ASCII(t_code.getText()));
                prm2.executeUpdate();
                stmt.close();

                stmt = (Statement) dbUtility.con.createStatement();
                String sql3 = "Delete from culink where CuCode = ?";
                PreparedStatement prm3 = (PreparedStatement) dbUtility.con.prepareStatement(sql3);
                prm3.setString(1, cvth.Unicode2ASCII(t_code.getText()));
                prm3.executeUpdate();
                stmt.close();

                stmt = (Statement) dbUtility.con.createStatement();
                String sql4 = "Delete from fixbranch where CuCode = ?";
                PreparedStatement prm4 = (PreparedStatement) dbUtility.con.prepareStatement(sql4);
                prm4.setString(1, cvth.Unicode2ASCII(t_code.getText()));
                prm4.executeUpdate();
                stmt.close();


                clearForm();
                showdataintb();
            }

        } catch (Exception e) {
        }
    }

    public void saveplu() {
        try {
            for (int i = 0; i < tblplu.getRowCount(); i++) {

                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql = "Insert into cuponlist (CuCode,PCode) "
                            + " values(?,?)";
                    PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                    prm2.setString(1, cvth.Unicode2ASCII(t_code.getText().trim()));
                    prm2.setString(2, cvth.Unicode2ASCII(tblplu.getValueAt(i, 1).toString()));
                    prm2.executeUpdate();
                    stmt.close();
                } else {
                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql = "Insert into cuponlist (CuCode,PCode) "
                            + " values(?,?)";
                    PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                    prm2.setString(1, t_code.getText().trim());
                    prm2.setString(2, tblplu.getValueAt(i, 1).toString());
                    prm2.executeUpdate();
                    stmt.close();
                }

            }

        } catch (Exception e) {
        }
    }

    public void deleteplu() {
        String code = t_code.getText();
        try {
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลสินค้าทั้งหมดหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {

                for (int i = 0; i < tblplu.getRowCount(); i++) {

                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql2 = "Delete from cuponlist where CuCode = '" + code + "'";
                    PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
//                        prm2.setString(1, cvth.Unicode2ASCII(tblplu.getValueAt(i, 1).toString()));
                    prm2.executeUpdate();
                    stmt.close();

                }
                clearModel2();
            }

        } catch (Exception e) {
        }
    }

    public void deletebranch(String code) {
        try {
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลกลุ่มสาขาทั้งหมดหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {

                for (int i = 0; i < tblbranch.getRowCount(); i++) {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                        stmt = (Statement) dbUtility.con.createStatement();
                        String sql2 = "Delete from culink where BGroup = ? and cucode = '" + code + "'";
                        PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
                        prm2.setString(1, cvth.Unicode2ASCII(tblbranch.getValueAt(i, 0).toString()));
                        prm2.executeUpdate();
                        stmt.close();

                    } else {
                        stmt = (Statement) dbUtility.con.createStatement();
                        String sql2 = "Delete from culink where BGroup = ?";
                        PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
                        prm2.setString(1, tblbranch.getValueAt(i, 0).toString());
                        prm2.executeUpdate();
                        stmt.close();
                    }
                }
                clearModel3();
            }

        } catch (Exception e) {
        }
    }
    public void btnplu1() {
        Point point = btn_group.getLocation();
        point.setLocation(point.getX() + 1, point.getY() + 1);
        ListProduct dialog = new ListProduct(new NimbusFrame(), true);
        dialog.setVisible(true);

        try {
            if (!dialog.code.equals("")) {
                t_plu1.setText(dialog.code);
                GetDataplu(dialog.code);
                btnpluok1.requestFocus();
            } else {
                t_plu1.requestFocus();
            }
        } catch (Exception e) {
            t_plu1.requestFocus();
        }
    }
    public void GetDataplu1(String Code) {

        if (CheckValidEnterBranch()) {
            try {
                String sql = "select * from product where PCode='" + Code + "'";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        t_plu1.setText(cvth.ASCII2Unicode(rs.getString("PCode")));
                        t_pluname1.setText(cvth.ASCII2Unicode(rs.getString("PDesc")));
                    } else {
                        t_plu1.setText(rs.getString("PCode"));
                        t_pluname1.setText(rs.getString("PDesc"));
                    }
                    btnpluok1.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "ไม่พบข้อมูลสินค้า");
                    t_plu1.requestFocus();
                }
                rs.close();
                stmt.close();
                setActive();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }
    public boolean insertCuponList1(String cocode, String pcode) {
        Statement stmt = null;
        boolean isupdate = false;
        int rowInsert = 0;
        String sql = "";

        try {
            stmt = (Statement) dbUtility.con.createStatement();
            sql = "insert into propointunlist values('" + cocode + "','" + pcode + "')";
            rowInsert = stmt.executeUpdate(sql);
            if (rowInsert > 0) {
                isupdate = true;
            }
        } catch (Exception e) {
        }
        return isupdate;
    }
    public void escplu1() {
        t_plu1.setText("");
        t_pluname1.setText("");
        t_plu1.requestFocus();
    }
    public void getProductGroup1(String group) {
        if (chkdata(t_code.getText())) {
            btnsave();
        }
        ResultSet rs;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                group = cvth.Unicode2ASCII(group);
            }
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT product.pcode,pdesc,pgroup FROM product "
                    + "left join blink on blink.pcode=product.pcode "
                    + "left join propointlink on propointlink.bgroup=blink.bgroup "
                    + "where pgroup = '" + group + "' and procode='" + t_code.getText() + "' and pactive='Y' "
                    + " order by pgroup,product.pcode";
            rs = stmt.executeQuery(sql);

            while (rs.next()) {
                String plu = rs.getString("pcode");
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    if (chkdata(t_code.getText())) {
                        if (chkplu(t_code.getText(), plu) & (!chkcuunlist(t_code.getText(), plu))) {
                            insertCuponList1(cvth.ASCII2Unicode(t_code.getText()), cvth.ASCII2Unicode(plu));
                        }
                    }
                } else {
                    if (chkdata(t_code.getText())) {
                        if (chkplu(t_code.getText(), plu) & (!chkcuunlist(t_code.getText(), plu))) {
                            insertCuponList1(t_code.getText(), plu);
                        }
                    }
                }

            }
        } catch (Exception e) {
            PUtility.ShowMsg(e.getMessage());
        }
        getCuponUnList(t_code.getText());
    }
    public void getCuponUnList(String cupon) {

        tblplu1.setShowGrid(true);
        tblplu1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblplu1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblplu1.setRowSelectionAllowed(true);
        tblplu1.setBackground(java.awt.Color.WHITE);
        tblplu1.setGridColor(java.awt.Color.gray);

        JTableHeader header = tblplu1.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblplu1.setFont(new java.awt.Font("Norasi", java.awt.Font.PLAIN, 14));
        tblplu1.setRowHeight(25);

        stmt = null;
        ResultSet rs = null;
        model5 = (DefaultTableModel) tblplu1.getModel();
        modelh5 = (JTableHeader) tblplu1.getTableHeader();
        int cnt = model5.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                model5.removeRow(0);
            }
        }
        try {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "SELECT product.pcode,pdesc,pgroup "
                    + "FROM product INNER JOIN propointunlist ON product.pcode = propointunlist.pcode  "
                    + "where procode = '" + cupon + "' order by pgroup,product.pcode";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        model5.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("pgroup")),
                                    cvth.ASCII2Unicode(rs.getString("product.pcode")),
                                    cvth.ASCII2Unicode(rs.getString("pdesc"))});


                    } else {
                        model5.addRow(new Object[]{rs.getString("pgroup"),
                                    rs.getString("product.pcode"),
                                    rs.getString("pdesc")});
                    }
                }
            }
        } catch (Exception e) {
        }
    }
//    public void deletebranch(String code) {
//        try {
//            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลกลุ่มสาขาทั้งหมดหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
//            if (confirm == JOptionPane.YES_OPTION) {
//
//                for (int i = 0; i < tblbranch.getRowCount(); i++) {
//                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
//
//                        stmt = (Statement) dbUtility.con.createStatement();
//                        String sql2 = "Delete from culink where BGroup = ?";
//                        PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
//                        prm2.setString(1, cvth.Unicode2ASCII(tblbranch.getValueAt(tblbranch.getSelectedRow(), 0).toString()));
//                        prm2.executeUpdate();
//                        stmt.close();
//
//                    } else {
//                        stmt = (Statement) dbUtility.con.createStatement();
//                        String sql2 = "Delete from culink where BGroup = ?";
//                        PreparedStatement prm2 = (PreparedStatement) dbUtility.con.prepareStatement(sql2);
//                        prm2.setString(1, tblbranch.getValueAt(i, 0).toString());
//                        prm2.executeUpdate();
//                        stmt.close();
//                    }
//                }
//                clearModel3();
//            }
//
//        } catch (Exception e) {
//        }
//    }
}
