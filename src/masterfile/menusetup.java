/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * pingredent.java
 *
 * Created on Sep 5, 2012, 10:28:04 AM
 */
package masterfile;

import Entity.BranchCodeName;
import borfunction.calculateLCostPLU;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import dbutility.dbUtility;
import frmlist.Browseringredent;
import frmlist.ListIngredent;
import frmlist.ListProduct;
import frmlist.ListProductOfIng;
import java.awt.Color;
import java.awt.Font;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import utilititiesfunction.*;

/**
 *
 * @author natee
 */
public class menusetup extends javax.swing.JDialog {

    dbUtility db = new dbUtility();
    private Statement stmt;
    DefaultTableModel tbmodel;
    int indextbl = -1;
    String formname = "menusetup";
    DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
    DecimalFormat DoubleFmt3dot = new DecimalFormat("##,###,##0.000");
    private Color colorEnable = new Color(255, 246, 143);
    private Color colorDisable2 = new Color(216, 215, 214);
    ThaiUtilities cvth = new ThaiUtilities();

    /** Creates new form pingredent */
    public menusetup(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        checkuserconfig() ;
        db.dbconnect();
        tbltable.setShowGrid(true);
        tbltable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbltable.setRowSelectionAllowed(true);
        tbltable.setBackground(java.awt.Color.WHITE);
        tbltable.setGridColor(java.awt.Color.gray);
        tbltable.setRowHeight(24);
        tbltable.setFont(new Font("Norasi", Font.PLAIN, 14));
        JTableHeader tHeader = tbltable.getTableHeader();
        tHeader.setFont(new Font("Norasi", Font.BOLD, 14));
        
        initable();
        try {
            stmt = (Statement) dbUtility.con.createStatement();
        } catch (Exception e) {
        }
        getLanguage Language = new getLanguage();
        Language.setText(formname, this, Language.getChklang());
        clear();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        d_lblh1 = new javax.swing.JLabel();
        t_code = new javax.swing.JTextField();
        btncode = new javax.swing.JButton();
        t_name = new javax.swing.JTextField();
        btnok = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        d_lblincode = new javax.swing.JLabel();
        t_incode = new javax.swing.JTextField();
        btningredent = new javax.swing.JButton();
        d_lblinname = new javax.swing.JLabel();
        t_inname = new javax.swing.JTextField();
        d_lblqty = new javax.swing.JLabel();
        t_qty = new javax.swing.JFormattedTextField();
        d_lblunit = new javax.swing.JLabel();
        t_unit = new javax.swing.JFormattedTextField();
        d_lblcost = new javax.swing.JLabel();
        t_cost = new javax.swing.JFormattedTextField();
        btnok2 = new javax.swing.JButton();
        db_btndelete2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        db_lblcount1 = new javax.swing.JLabel();
        db_lblcost1 = new javax.swing.JLabel();
        count = new javax.swing.JLabel();
        t_sum = new javax.swing.JLabel();
        db_lblcount2 = new javax.swing.JLabel();
        db_lblcost2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuDelete = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Add-icon.png"))); // NOI18N
        jButton1.setText("เพิ่มรายการ");
        jButton1.setAlignmentY(2.5F);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setIconTextGap(0);
        jButton1.setName("DBbtnadd"); // NOI18N
        jButton1.setRequestFocusEnabled(false);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Cancel-icon.png"))); // NOI18N
        jButton2.setText("ยกเลิก");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setIconTextGap(0);
        jButton2.setName("DBbtncancle"); // NOI18N
        jButton2.setRequestFocusEnabled(false);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        btnDelete.setText("ลบข้อมูล");
        btnDelete.setFocusable(false);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setIconTextGap(0);
        btnDelete.setName("DBbtndel"); // NOI18N
        btnDelete.setRequestFocusEnabled(false);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        jButton7.setText("ออก");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setIconTextGap(0);
        jButton7.setName("DBbtnexit"); // NOI18N
        jButton7.setRequestFocusEnabled(false);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        d_lblh1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh1.setText("รายการอาหาร Menu");
        d_lblh1.setName("d_lblh1");

        t_code.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_codeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_codeKeyTyped(evt);
            }
        });

        btncode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btncode.setFocusable(false);
        btncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncodeActionPerformed(evt);
            }
        });

        t_name.setBackground(new java.awt.Color(249, 252, 186));
        t_name.setEditable(false);
        t_name.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_name.setFocusable(false);

        btnok.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Ok.png"))); // NOI18N
        btnok.setText("ตกลง (OK)");
        btnok.setName("DBbtnok"); // NOI18N
        btnok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnokActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(d_lblh1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_code, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btncode, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_name, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnok, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btncode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(d_lblh1)
                        .addComponent(t_code, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(t_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnok, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        d_lblincode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblincode.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        d_lblincode.setText("รหัสวัตถุดิบ");
        d_lblincode.setName("d_lblincode");

        t_incode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_incode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_incodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                t_incodeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_incodeKeyTyped(evt);
            }
        });

        btningredent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btningredent.setFocusable(false);
        btningredent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btningredentActionPerformed(evt);
            }
        });

        d_lblinname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblinname.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        d_lblinname.setText("ชื่อวัตถุดิบ/รายการ");
        d_lblinname.setName("d_lblinname");

        t_inname.setBackground(new java.awt.Color(249, 252, 186));
        t_inname.setEditable(false);
        t_inname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_inname.setFocusable(false);

        d_lblqty.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblqty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblqty.setText("ปริมาณส่วนผสม");
        d_lblqty.setName("d_lblqty");

        t_qty.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        t_qty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_qty.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_qty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_qtyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_qtyFocusLost(evt);
            }
        });
        t_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_qtyKeyPressed(evt);
            }
        });

        d_lblunit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblunit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblunit.setText("หน่วยนับ");
        d_lblunit.setName("d_lblunit");

        t_unit.setBackground(new java.awt.Color(249, 252, 186));
        t_unit.setEditable(false);
        t_unit.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        t_unit.setFocusable(false);
        t_unit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        d_lblcost.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblcost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblcost.setText("มูลค่า (Cost)");
        d_lblcost.setName("d_lblcost");

        t_cost.setBackground(new java.awt.Color(249, 252, 186));
        t_cost.setEditable(false);
        t_cost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_cost.setFocusable(false);
        t_cost.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        btnok2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnok2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Actions-document-save-icon1.png"))); // NOI18N
        btnok2.setText("บันทึก");
        btnok2.setName("DBbtnok2"); // NOI18N
        btnok2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnok2ActionPerformed(evt);
            }
        });

        db_btndelete2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btndelete2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        db_btndelete2.setText("ลบข้อมูล");
        db_btndelete2.setName("db_btndelete2");
        db_btndelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btndelete2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_incode, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblincode, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btningredent, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d_lblinname, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_inname, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(t_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblqty))
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(t_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblunit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(d_lblcost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(t_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnok2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btndelete2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(d_lblincode, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(d_lblqty)
                                    .addComponent(d_lblinname))
                                .addComponent(d_lblunit)
                                .addComponent(d_lblcost)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(t_inname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_incode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btningredent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnok2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_btndelete2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        tbltable.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tbltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสวัตถุดิบ", "ชื่อวัตถุดิบ/รายการ", "ปริมาณ", "หน่วยนับ", "มูลค่า(Cost)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbltable.setName("tbltable");
        tbltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbltableMouseReleased(evt);
            }
        });
        tbltable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbltableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbltable);
        tbltable.getColumnModel().getColumn(1).setPreferredWidth(300);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        db_lblcount1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        db_lblcount1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblcount1.setText("จำนวนรายการ ");
        db_lblcount1.setName("db_lblcount1");

        db_lblcost1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        db_lblcost1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblcost1.setText("ต้นทุน/Menu(Cost)");
        db_lblcost1.setName("db_lblcost1");

        count.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        count.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        count.setText("00");

        t_sum.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_sum.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        t_sum.setText("00");

        db_lblcount2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        db_lblcount2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblcount2.setText("รายการ");
        db_lblcount2.setName("db_lblcount2");

        db_lblcost2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        db_lblcost2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblcost2.setText("บาท");
        db_lblcost2.setName("db_lblcost2");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(db_lblcount1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(count)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(db_lblcount2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db_lblcost1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_sum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_lblcost2)
                .addGap(58, 58, 58))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(db_lblcount1)
                    .addComponent(db_lblcost1)
                    .addComponent(count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(t_sum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(db_lblcount2)
                    .addComponent(db_lblcost2))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("ฟังก์ชั่น");
        jMenu1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jMenu1.setName("menufuc"); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem1.setText("เพิ่มรายการ");
        jMenuItem1.setName("madd"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem2.setText("ยกเลิก");
        jMenuItem2.setName("mcancle"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        menuDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuDelete.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuDelete.setText("ลบข้อมูล");
        menuDelete.setName("mdel"); // NOI18N
        menuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteActionPerformed(evt);
            }
        });
        jMenu1.add(menuDelete);
        jMenu1.add(jSeparator1);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jMenuItem5.setText("ออก");
        jMenuItem5.setName("mexit"); // NOI18N
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-896)/2, (screenSize.height-738)/2, 896, 738);
    }// </editor-fold>//GEN-END:initComponents
private void checkuserconfig() {
        //MenuName = Mast1
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getPlu11().equals("1")) {
            btnDelete.setEnabled(false);
            db_btndelete2.setEnabled(false);
            btnok2.setEnabled(false);
            menuDelete.setEnabled(false);
        }
        if (userrec.getPlu11().equals("2")) {
            btnDelete.setEnabled(false);
            db_btndelete2.setEnabled(false);
            btnok2.setEnabled(true);
            menuDelete.setEnabled(false);    
        }
        if (userrec.getPlu11().equals("3")) {
            btnDelete.setEnabled(true);
            db_btndelete2.setEnabled(true);
            btnok2.setEnabled(true);
            menuDelete.setEnabled(true);
        }
    }
    private void t_incodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_incodeKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!t_incode.getText().trim().equals("") & chkdata(t_incode.getText())) {
                String Code = "";
                Code = t_incode.getText().trim();
                
                   
                    GetDataIngredent(Code);
                    t_qty.requestFocus();
                
            } else {
                JOptionPane.showMessageDialog(this, "ไม่พบรหัสวัตถุดิบ...กรุณากำหนดรหัสวัตถุดิบให้ถูกต้อง");
                t_incode.setText("");
                t_inname.setText("");
                t_incode.requestFocus();
            }

        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btningredent();
        }
        
    }//GEN-LAST:event_t_incodeKeyPressed

    private void t_codeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_codeKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!t_code.getText().trim().equals("")) {
            String Code = "";
            Code = t_code.getText().trim();
            GetDataProduct(Code);
        }
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            
        btnfindPLU();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_codeKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void t_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_qtyKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnok2.requestFocus();
        }

    }//GEN-LAST:event_t_qtyKeyPressed

    private void t_qtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_qtyFocusLost

        if(!t_incode.getText().equals(""))
        {
        t_cost.setText(Format.doubleFmt.format(cal(t_incode.getText())));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_qtyFocusLost

    private void t_qtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_qtyFocusGained

        t_qty.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_qtyFocusGained

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        if (!t_code.getText().trim().equals("")&&t_incode.isFocusable()&&tbltable.getRowCount()>0) {
            delete();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btningredentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btningredentActionPerformed
        
        btningredent();
        // TODO add your handling code here:
    }//GEN-LAST:event_btningredentActionPerformed

    private void btnokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnokActionPerformed

        if (!t_code.getText().trim().equals("")) {
            String Code = "";
            Code = t_code.getText().trim();
            if(chkdataplu(t_code.getText()))
            {
            GetDataProduct(Code);
            
            showdataintb(t_code.getText());
            setActive();
            t_incode.requestFocus();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                t_code.requestFocus();
                t_code.setText("");
                t_name.setText("");
                setUnActive();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnokActionPerformed

    private void btnok2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnok2ActionPerformed

        if (!t_incode.getText().trim().equals("")) {
            if(btnsave())
            {
            
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnok2ActionPerformed

    private void btncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncodeActionPerformed
        btnfindPLU();
        // TODO add your handling code here:
    }//GEN-LAST:event_btncodeActionPerformed

    private void db_btndelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btndelete2ActionPerformed
        deletegredent();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btndelete2ActionPerformed

    private void t_incodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_incodeKeyReleased
        if(!GetDataIngredent(t_incode.getText()))
        {
        t_inname.setText("");
        t_qty.setText("1.00");
        t_unit.setText("");
        t_cost.setText("0.00");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_incodeKeyReleased

    private void tbltableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltableMouseReleased
        if (evt.getClickCount() == 2) {
            int rowSelect = tbltable.getSelectedRow();
            String incode = tbltable.getValueAt(rowSelect, 0).toString();
            String inname = tbltable.getValueAt(rowSelect, 1).toString();
            double qty = Double.parseDouble(tbltable.getValueAt(rowSelect, 2).toString());
            String unit = tbltable.getValueAt(rowSelect, 3).toString();
            double cost = Double.parseDouble(tbltable.getValueAt(rowSelect, 4).toString());
            t_incode.setText(incode);
            t_inname.setText(inname);
            t_qty.setText(Format.doubleFmt.format(qty));
            t_unit.setText(unit);
            t_cost.setText(Format.doubleFmt.format(cost));
             
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tbltableMouseReleased

    private void tbltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltableMouseClicked
        indextbl = tbltable.getSelectedRow();
        // TODO add your handling code here:
    }//GEN-LAST:event_tbltableMouseClicked

    private void tbltableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbltableKeyReleased
        indextbl = tbltable.getSelectedRow();
        // TODO add your handling code here:
    }//GEN-LAST:event_tbltableKeyReleased

    private void t_codeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_codeKeyTyped
        if(t_code.getText().length()>=13)
        {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_codeKeyTyped

    private void t_incodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_incodeKeyTyped
        if(t_incode.getText().length()>=13)
        {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_incodeKeyTyped

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jButton1ActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jButton2ActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void menuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteActionPerformed
        //jButton4ActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_menuDeleteActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        jButton7ActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menusetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menusetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menusetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menusetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                menusetup dialog = new menusetup(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btncode;
    private javax.swing.JButton btningredent;
    private javax.swing.JButton btnok;
    private javax.swing.JButton btnok2;
    private javax.swing.JLabel count;
    private javax.swing.JLabel d_lblcost;
    private javax.swing.JLabel d_lblh1;
    private javax.swing.JLabel d_lblincode;
    private javax.swing.JLabel d_lblinname;
    private javax.swing.JLabel d_lblqty;
    private javax.swing.JLabel d_lblunit;
    private javax.swing.JButton db_btndelete2;
    private javax.swing.JLabel db_lblcost1;
    private javax.swing.JLabel db_lblcost2;
    private javax.swing.JLabel db_lblcount1;
    private javax.swing.JLabel db_lblcount2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem menuDelete;
    private javax.swing.JTextField t_code;
    private javax.swing.JFormattedTextField t_cost;
    private javax.swing.JTextField t_incode;
    private javax.swing.JTextField t_inname;
    private javax.swing.JTextField t_name;
    private javax.swing.JFormattedTextField t_qty;
    private javax.swing.JLabel t_sum;
    private javax.swing.JFormattedTextField t_unit;
    private javax.swing.JTable tbltable;
    // End of variables declaration//GEN-END:variables

    public void clear() {
        setUnActive();
        resetTableModel();
        t_code.setEditable(true);
        t_code.setText("");
        t_code.setBackground(java.awt.Color.white);
        t_name.setText("");
        t_incode.setText("");
        t_inname.setText("");
        t_qty.setText("1.00");
        t_unit.setText("");
        t_cost.setText("0.00");
        btnok.requestFocus();
        t_code.requestFocus();
        count.setText("0");
        t_sum.setText("0.000");
    }
    public void clear2(){
        t_incode.setText("");
        t_inname.setText("");
        t_qty.setText("1.00");
        t_unit.setText("");
        t_cost.setText("0.00");
    }
    
    private void resetTableModel() {
        int rowCount = tbltable.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            tbmodel.removeRow(0);
        }
    }

    private void setActive() {
        setActive(true, colorEnable);
    }

    private void setUnActive() {
        setActive(false, colorDisable2);
    }

    private void setActive(boolean active, Color color) {
        //t_name.setFocusable(active);
        t_incode.setFocusable(active);
        //t_inname.setFocusable(active);
        //t_unit.setFocusable(active);
        //At_cost.setFocusable(active);
        t_qty.setFocusable(active);
//        btnok.setEnabled(active);
        btnok2.setEnabled(active);
        db_btndelete2.setEnabled(active);
        btningredent.setEnabled(active);
        
        if(active==false)
        {
        t_code.setFocusable(true);
        btncode.setEnabled(true);
        t_code.setBackground(Color.WHITE);
        
        }
        else
        {
        t_code.setFocusable(false);
        btncode.setEnabled(false);
        t_code.setBackground(new java.awt.Color(249,252,186));
        
        }
        
    }

    public boolean btnsave() {
        boolean chk = false;
        if (CheckValidSave()) {
            if (chkdataplu(t_code.getText())) {
                    if (chkdatamenu(t_code.getText(),t_incode.getText())) {
                        try {
                            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                                stmt = (Statement) dbUtility.con.createStatement();
                                String sql = "Update menusetup set InQty=? where InCode=? and menuCode=?";
                                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                                prm.setString(3, cvth.Unicode2ASCII(t_code.getText()));
                                prm.setString(2, cvth.Unicode2ASCII(t_incode.getText()));
                                prm.setDouble(1, Double.parseDouble(PUtility.ConvertReal(t_qty.getText())));
                                prm.executeUpdate();
                                chk=true;
                            } else {
                                stmt = (Statement) dbUtility.con.createStatement();
                                String sql = "Update menusetup set  InQty=? where InCode=? and menuCode=?";
                                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                                prm.setString(3, t_code.getText());
                                prm.setString(2, t_incode.getText());
                                prm.setDouble(1, Double.parseDouble(PUtility.ConvertReal(t_qty.getText())));
                                prm.executeUpdate();
                                chk=true;
                            }
                            stmt.close();
                            
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, e.getMessage(), "Update Material Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        try {
                            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                                stmt = (Statement) dbUtility.con.createStatement();
                                String sql = "Insert into menusetup (menuCode,InCode,InQty) values(?,?,?)";
                                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                                prm.setString(1, cvth.Unicode2ASCII(t_code.getText()));
                                prm.setString(2, cvth.Unicode2ASCII(t_incode.getText()));
                                prm.setDouble(3, Double.parseDouble(PUtility.ConvertReal(t_qty.getText())));
                                prm.executeUpdate();
                                chk=true;
                            } else {
                                stmt = (Statement) dbUtility.con.createStatement();
                                String sql = "Insert into menusetup (menuCode,InCode,InQty) values(?,?,?)";
                                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                                prm.setString(1, t_code.getText());
                                prm.setString(2, t_incode.getText());
                                prm.setDouble(3, Double.parseDouble(PUtility.ConvertReal(t_qty.getText())));
                                prm.executeUpdate();
                                chk=true;
                            }
                            stmt.close();

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, e.getMessage(), "Insert Material Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
             
           showdataintb(t_code.getText());
           UpdatePLU();
            clear2();
            t_incode.requestFocus();
                
                   
                
                
            }
        }
        return chk;
    }

    public boolean chkdata(String pk) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from ingredent where InCode ='" + cvth.Unicode2ASCII(pk) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from ingredent where InCode ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public boolean chkdataplu(String pk) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from product where PCode ='" + cvth.Unicode2ASCII(pk) + "' and pabtype = 'R'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from product where PCode ='" + pk + "' and pabtype = 'R'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public boolean chkdatamenu(String plucode,String incode) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menusetup where menuCode ='" + cvth.Unicode2ASCII(plucode) + "' and incode = '"+cvth.Unicode2ASCII(incode)+"'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menusetup where menuCode ='" + plucode + "' and incode = '"+incode+"'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public boolean chkdatamenu2(String pk) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menusetup where InCode ='" + cvth.Unicode2ASCII(pk) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menusetup where InCode ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public boolean CheckValidSave() {
        boolean chk = true;

        
        if (t_code.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดรายการอาหารไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 13 ตัวอักษร)");
            chk = false;
            t_code.requestFocus();
        } else if (t_incode.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสวิตถุดิบไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 13 ตัวอักษร)");
            chk = false;
            t_incode.requestFocus();
        } else if (!chkdata(t_incode.getText())) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสวิตถุดิบไม่ถูกต้อง...");
            chk = false;
            t_incode.setText("");
            t_incode.requestFocus();
        } else if (t_incode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนดกลุ่มวัตถุดิบ");
            chk = false;
            t_incode.requestFocus();
            t_incode.setEditable(true);
        }
        else if (t_incode.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสวิตถุดิบไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 13 ตัวอักษร)");
            chk = false;
            t_incode.requestFocus();
        }
        else if (t_qty.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดปริมาณส่วนผสมไม่ถูกต้อง...");
            chk = false;
            t_qty.requestFocus();
        }
        else if (t_qty.getText().length()>12) {
            JOptionPane.showMessageDialog(this, "กำหนดปริมาณส่วนผสมไม่ถูกต้อง...(ต้องมีจำนวนไม่เกิน 9,999,999.99)");
            chk = false;
            t_qty.requestFocus();
        }
        return chk;
    }

    public void GetData(String Code) {

        if (CheckValidEnterProduct()) {
            try {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                String sql = "select * from menusetup where menuCode='" + cvth.Unicode2ASCII(Code) + "'";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    
                        t_code.setText(cvth.ASCII2Unicode(rs.getString("menuCode")));
                        GetDataProduct(t_code.getText());
                   
                } else {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                t_code.requestFocus();
                t_code.setText("");
                t_name.setText("");

                }
                rs.close();
                stmt.close();
                }
                else
                {
                String sql = "select * from menusetup where menuCode='" + Code + "'";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    
                        t_code.setText(rs.getString("menuCode"));
                        GetDataProduct(t_code.getText());
                   
                } else {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                t_code.requestFocus();
                t_code.setText("");
                t_name.setText("");

                }
                rs.close();
                stmt.close();
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }

    public void GetDataProduct(String Code) {
        removetbl();
        clear2();
        setUnActive();
        if (CheckValidEnterProduct()) {
            try {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                String sql = "select * from product where PCode='" + cvth.Unicode2ASCII(Code) + "' and pabtype = 'R'";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                        t_code.setText(cvth.ASCII2Unicode(rs.getString("PCode")));
                        t_name.setText(cvth.ASCII2Unicode(rs.getString("PDesc")));
                        btnok.requestFocus();
                } else {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                t_code.requestFocus();
                t_code.setText("");
                t_name.setText("");
                }
                rs.close();
                stmt.close();
                }
                else
                {
                String sql = "select * from product where PCode='" + Code + "' and pabtype = 'R'";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                        t_code.setText(rs.getString("PCode"));
                        t_name.setText(rs.getString("PDesc"));
                        btnok.requestFocus();
                } else {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                t_code.requestFocus();
                t_code.setText("");
                t_name.setText("");
                }
                rs.close();
                stmt.close();
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }

    public boolean GetDataIngredent(String Code) {
        t_inname.setText("");
        t_qty.setText("1.00");
        t_unit.setText("");
        t_cost.setText("0.00");
        boolean chk = false;
        if (CheckValidEnterIngredent()) {
            try {
               if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                if(chkdatamenu(t_code.getText(), t_incode.getText()))
                {
                String sql = "select * from menusetup inner join ingredent on menusetup.incode = ingredent.incode where menusetup.InCode='" + cvth.Unicode2ASCII(Code) + "' and menucode ='"+cvth.Unicode2ASCII(t_code.getText())+"'";

                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                        t_inname.setText(cvth.ASCII2Unicode(rs.getString("InName")));
                        t_unit.setText(cvth.ASCII2Unicode(rs.getString("InsubUnit")));
                        t_qty.setText(Format.doubleFmt.format(rs.getDouble("Inqty")));
                        t_cost.setText(Format.doubleFmt.format(cal(Code)));
                        chk = true;
                }
                rs.close();
                stmt.close();
                }
                else
                {
                String sql = "select * from ingredent where InCode='" + cvth.Unicode2ASCII(Code) + "'";

                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                        t_incode.setText(cvth.ASCII2Unicode(rs.getString("InCode")));
                        t_inname.setText(cvth.ASCII2Unicode(rs.getString("InName")));
                        t_unit.setText(cvth.ASCII2Unicode(rs.getString("InsubUnit")));
                        t_cost.setText(Format.doubleFmt.format(cal(Code)));
                        chk = true;
                }
                rs.close();
                stmt.close();
                }
                 }
                 else
                 {
                if(chkdatamenu(t_code.getText(), t_incode.getText()))
                {
                String sql = "select * from menusetup inner join ingredent on menusetup.incode = ingredent.incode where menusetup.InCode='" + Code + "' and menucode ='"+t_code.getText()+"'";

                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                        t_inname.setText(rs.getString("InName"));
                        t_unit.setText(rs.getString("InsubUnit"));
                        t_qty.setText(Format.doubleFmt.format(rs.getDouble("Inqty")));
                        t_cost.setText(Format.doubleFmt.format(cal(Code)));
                        chk = true;
                }
                rs.close();
                stmt.close();
                }
                else
                {
                String sql = "select * from ingredent where InCode='" + Code + "'";

                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                        t_incode.setText(rs.getString("InCode"));
                        t_inname.setText(rs.getString("InName"));
                        t_unit.setText(cvth.ASCII2Unicode(rs.getString("InsubUnit")));
                        t_cost.setText(Format.doubleFmt.format(cal(Code)));
                        chk = true;
                }
                rs.close();
                stmt.close();
                }
                 }
                 
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
            
        }
        return chk;
    }

    public boolean CheckValidEnterProduct() {
        boolean RetVal2 = true;

        if (t_code.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสินค้าไม่ถูกต้อง...(ตัองมีขนาดไม่เกิน 13 ตัวอักษร)");
            RetVal2 = false;
            t_code.requestFocus();
        }

        return RetVal2;
    }

    public boolean CheckValidEnterIngredent() {
        boolean RetVal2 = true;

        if (t_incode.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสวัตถุดิบไม่ถูกต้อง...(ตัองมีขนาดไม่เกิน 13 ตัวอักษร)");
            RetVal2 = false;
            t_incode.requestFocus();
        }

        return RetVal2;
    }
    public void removetbl()
    {
    tbmodel = (DefaultTableModel) tbltable.getModel();
        int cnt = tbmodel.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                tbmodel.removeRow(0);
            }
    }
    }
    public void showdataintb(String Code) {
        stmt = null;
        ResultSet rs = null;
//        int Cost ;
//        int Pack ;

        tbmodel = (DefaultTableModel) tbltable.getModel();
        int cnt = tbmodel.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                tbmodel.removeRow(0);
            }
        }
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
            stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select * from menusetup AS m  "
                    + "left JOIN ingredent AS i ON m.InCode = i.InCode "
                    + "where m.menuCode = '" + cvth.Unicode2ASCII(Code) + "' ";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                double ans = 0;
                {
                  
                        double Cost = Double.valueOf(cvth.ASCII2Unicode(rs.getString("i.InCost")));
                        double Pack = Double.valueOf(cvth.ASCII2Unicode(rs.getString("i.InPack")));
                        double Qty = Double.valueOf(cvth.ASCII2Unicode(rs.getString("m.InQty")));
                        ans = (Qty*Cost) / Pack;

                        tbmodel.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("i.InCode")),
                                    cvth.ASCII2Unicode(rs.getString("i.InName")),
                                    rs.getDouble("m.InQty"),
                                    cvth.ASCII2Unicode(rs.getString("i.InsubUnit")),
                                    ans});
                    
                }
            }
            }
            else
            {
                stmt = (Statement) dbUtility.con.createStatement();
            String sql = "select * from menusetup AS m  "
                    + "left JOIN ingredent AS i ON m.InCode = i.InCode "
                    + "where m.menuCode = '" + Code + "' ";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                double ans = 0;
                {
                    
                        double Cost = Double.valueOf(rs.getString("i.InCost"));
                        double Pack = Double.valueOf(rs.getString("i.InPack"));
                        double Qty = Double.valueOf(rs.getString("m.InQty"));
                        ans = (Qty*Cost) / Pack;

                        tbmodel.addRow(new Object[]{rs.getString("i.InCode"),
                                    rs.getString("i.InName"),
                                    rs.getDouble("m.InQty"),
                                    rs.getString("i.InsubUnit"),
                                    ans});
                    
                }
            }
            }
            count.setText(tbmodel.getRowCount()+"");
            t_sum.setText(Format.double3Fmt.format(calculateLCostPLU.calculatecost(t_code.getText())));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public double cal(String Code) {

        double Cost = 0;
        double Pack = 0;
        double ans = 0;
        double Qty=0;
try {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                String sql = "select * from ingredent where InCode='" + cvth.Unicode2ASCII(Code) + "'";

                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                       
                        Cost = Double.valueOf(cvth.ASCII2Unicode(rs.getString("InCost")));
//                        Format.integerFmt.format(rs.getFloat("Model4"))
                        Pack = Double.valueOf(cvth.ASCII2Unicode(rs.getString("InPack")));
                        if(!t_qty.getText().equals(""))
                        {
                            Qty = Double.valueOf(PUtility.ConvertReal(t_qty.getText()));
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                            t_qty.requestFocus();
                        }
                        
                       ans = (Cost*Qty)/Pack;
                       
                } 
                rs.close();
                stmt.close();
                
                 }
                 else
                 {
                String sql = "select * from ingredent where InCode='" + Code + "'";

                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                       
                        Cost = Double.valueOf(rs.getString("InCost"));
                        Pack = Double.valueOf(rs.getString("InPack"));
                        if(!t_qty.getText().equals(""))
                        {
                            Qty = Double.valueOf(PUtility.ConvertReal(t_qty.getText()));
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                            t_qty.requestFocus();
                        }
                        
                       ans = (Cost*Qty)/Pack;
                       
                } 
                rs.close();
                stmt.close();
                 }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
       return ans;
    }

    public void delete() {
        try {
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql = "Delete from menusetup where menuCode = ?";
                    PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                    prm.setString(1, cvth.Unicode2ASCII(t_code.getText()));
                    prm.executeUpdate();
                } else {
                    stmt = (Statement) dbUtility.con.createStatement();
                    String sql = "Delete from menusetup where menuCode = ?";
                    PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sql);
                    prm.setString(1, t_code.getText());
                    prm.executeUpdate();
                    stmt.close();
                }
                UpdatePLU2();
                clear();
                
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public void btningredent() {
        
        ListIngredent f = new ListIngredent(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            
                t_incode.setText(f.code);
                GetDataIngredent(t_incode.getText());
                t_incode.requestFocus();
        }
    }

    private void btnfindPLU() {
        ListProductOfIng f = new ListProductOfIng(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            
                t_code.setText(f.code);
                GetDataProduct(t_code.getText());
        }
    }
    private void deletegredent() {
       if(indextbl!=-1 && !t_code.getText().equals(""))
    {
        if(chkdataplu(t_code.getText()))
        {
        
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการที่เลือกหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
            try {
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
               stmt = (Statement) db.con.createStatement();
               String sql = "delete from menusetup where menucode = ? and incode = ?";
               PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
               prm.setString(1, cvth.Unicode2ASCII(t_code.getText()));
               prm.setString(2, cvth.Unicode2ASCII(tbltable.getValueAt(indextbl, 0).toString()));
               
               prm.executeUpdate();
            }
            else
            {
                stmt = (Statement) db.con.createStatement();
               String sql = "delete from pset where pcode = ? and psubcode = ?";
               PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                prm.setString(1, t_code.getText());
               prm.setString(2, tbltable.getValueAt(indextbl, 0).toString());
               
               prm.executeUpdate();
                   
            }
               stmt.close();
               clear2();
               indextbl = -1;
               
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Delete Error", JOptionPane.ERROR_MESSAGE);
            }
                }
            else{indextbl = -1;}
        }
        showdataintb(t_code.getText());
        UpdatePLU();
        }
}
    private void initable() {
        
        TableTestFormatRenderer t;
        t = new TableTestFormatRenderer(DoubleFmt);
        t.setHorizontalAlignment(SwingConstants.RIGHT);
        TableTestFormatRenderer d;
        d = new TableTestFormatRenderer(DoubleFmt3dot);
        d.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer r;
        r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c;
        c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer l;
        l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);

        TableColumnModel tcm = tbltable.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(t);
        tcm.getColumn(3).setCellRenderer(l);
        tcm.getColumn(4).setCellRenderer(d);
        
    }
    private void UpdatePLU()
    {
        calculateLCostPLU.updatecostPLU(t_code.getText(), Double.parseDouble(PUtility.ConvertReal(t_sum.getText())));
            
    }
    private void UpdatePLU2()
    {
        calculateLCostPLU.updatecostPLU(t_code.getText(), 0);
            
    }
}
