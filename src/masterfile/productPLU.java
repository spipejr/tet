/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package masterfile;

import borfunction.calculateLCostPLU;
import dbutility.dbUtility;
import frmlist.*;
import ingredent_bom.setup_posbom;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import ping.interfaceSAP.browseMasterSAP.browse_sap_article;
import ping.interfaceSAP.entity.article;
import ping.interfaceSAP.utilitySAP;
import utilititiesfunction.*;

/**
 *
 * @author s386
 */
public class productPLU extends javax.swing.JDialog {

    /**
     * Creates new form productPLU
     */
    String sap_article, sap_article_name, sap_article_barcode, sap_article_unit, sap_article_jde, sap_article_active;
    article _article = new article();
    utilitySAP us = new utilitySAP();
    //==========================================
    dbUtility db = new dbUtility();
    DefaultTableModel tbPset;
    DefaultTableModel tbBgroup;
    Statement stmt;
    Statement stmt2;
    int indexbgrouptbl = -1;
    int indexpsettbl = -1;
    String frmName = "productPLU";
    ThaiUtilities cvth = new ThaiUtilities();
    DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
    DecimalFormat DoubleFmt2 = new DecimalFormat("##,###,##0.0000");
    SimpleDateFormat dateFmtSave = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
    SimpleDateFormat dateFmtShow = new SimpleDateFormat("dd-MM-yyyy", Locale.ENGLISH);

    public productPLU(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        checkuserconfig();
        initable();
        initablepcourse();
        db.dbconnect();
        loadcombounit();
        setclearfrm();
        getLanguage lang = new getLanguage();
        //lang.setText(frmName, this, lang.getChklang());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        buttonGroup11 = new javax.swing.ButtonGroup();
        buttonGroup12 = new javax.swing.ButtonGroup();
        buttonGroup13 = new javax.swing.ButtonGroup();
        buttonGroup_sap = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnShow = new javax.swing.JButton();
        btn_bom = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        db_lblpcode = new javax.swing.JLabel();
        db_lblbarcode = new javax.swing.JLabel();
        db_lblpname = new javax.swing.JLabel();
        txtfPcode = new javax.swing.JTextField();
        txtbarcode = new javax.swing.JTextField();
        txtfPdesc = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        d_lblpcat = new javax.swing.JLabel();
        txtfpgroup = new javax.swing.JTextField();
        txtparea = new javax.swing.JTextField();
        d_lblunit = new javax.swing.JLabel();
        combo_unit = new javax.swing.JComboBox();
        d_lblstock = new javax.swing.JLabel();
        txtfpgroupname = new javax.swing.JTextField();
        d_lblpref = new javax.swing.JLabel();
        btn_F1_unit = new javax.swing.JButton();
        txtrefcode = new javax.swing.JTextField();
        btnsearchplu1 = new javax.swing.JButton();
        btn_F1_unit1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PShortDesc = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        d_rdoactiveYes = new javax.swing.JRadioButton();
        d_rdoactiveNo = new javax.swing.JRadioButton();
        jPanel16 = new javax.swing.JPanel();
        d_rdoGoods = new javax.swing.JRadioButton();
        d_rdoHaveMaterial = new javax.swing.JRadioButton();
        jPanel17 = new javax.swing.JPanel();
        txtfmEatIn = new javax.swing.JFormattedTextField();
        txtfmTakeAway = new javax.swing.JFormattedTextField();
        txtfmDelivery = new javax.swing.JFormattedTextField();
        txtfmPinto = new javax.swing.JFormattedTextField();
        txtfmWhole = new javax.swing.JFormattedTextField();
        d_lbleatin = new javax.swing.JLabel();
        d_lblTake = new javax.swing.JLabel();
        d_lblDelivery = new javax.swing.JLabel();
        d_lblPinto = new javax.swing.JLabel();
        d_lblWhole = new javax.swing.JLabel();
        db_lblprice = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        d_lblcost2 = new javax.swing.JLabel();
        txtfmscost = new javax.swing.JFormattedTextField();
        d_lblcost3 = new javax.swing.JLabel();
        txtfmlcost = new javax.swing.JFormattedTextField();
        d_lblcost4 = new javax.swing.JLabel();
        txtfmacost = new javax.swing.JFormattedTextField();
        d_lblcost = new javax.swing.JLabel();
        d_lblcost5 = new javax.swing.JLabel();
        db_lblpersent = new javax.swing.JLabel();
        txtfmtcost = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        d_rdoAuto = new javax.swing.JRadioButton();
        d_rdoCustom = new javax.swing.JRadioButton();
        d_lblpsale = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        d_rdostockYes = new javax.swing.JRadioButton();
        d_rdostockNo = new javax.swing.JRadioButton();
        d_lbldostrock = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        d_rdovatYes = new javax.swing.JRadioButton();
        d_rdovatNo = new javax.swing.JRadioButton();
        d_lblvat = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        d_rdostatus1 = new javax.swing.JRadioButton();
        d_rdostatus2 = new javax.swing.JRadioButton();
        d_rdostatus3 = new javax.swing.JRadioButton();
        d_lblpstatus = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        d_rdofood = new javax.swing.JRadioButton();
        d_rdodrink = new javax.swing.JRadioButton();
        d_rdoproduct = new javax.swing.JRadioButton();
        d_lblptype = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        d_lblcharge = new javax.swing.JLabel();
        d_chkchart1 = new javax.swing.JCheckBox();
        d_chkchart2 = new javax.swing.JCheckBox();
        d_chkchart3 = new javax.swing.JCheckBox();
        jPanel14 = new javax.swing.JPanel();
        d_lblvendor = new javax.swing.JLabel();
        txtvendor = new javax.swing.JTextField();
        d_lblunit2 = new javax.swing.JLabel();
        combo_unit1 = new javax.swing.JComboBox();
        d_lblunitscale = new javax.swing.JLabel();
        txtvendorname = new javax.swing.JTextField();
        d_lbldeacc = new javax.swing.JLabel();
        btn_F1_unit4 = new javax.swing.JButton();
        txtpabdept = new javax.swing.JTextField();
        btnsearchplu3 = new javax.swing.JButton();
        btn_F1_unit5 = new javax.swing.JButton();
        d_lblpset = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        d_rdoNomal = new javax.swing.JRadioButton();
        d_rdoSet = new javax.swing.JRadioButton();
        d_rdocouse = new javax.swing.JRadioButton();
        txtfmbpack = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        d_rdoserviceYes = new javax.swing.JRadioButton();
        d_rdoserviceNo = new javax.swing.JRadioButton();
        d_lblpservice = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        d_rdoDiscountYes = new javax.swing.JRadioButton();
        d_rdoDiscountNo = new javax.swing.JRadioButton();
        d_lbldis = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        d_lblprint2 = new javax.swing.JLabel();
        kic = new javax.swing.JComboBox();
        d_lblprint = new javax.swing.JLabel();
        jPanel36 = new javax.swing.JPanel();
        d_lblprosequence = new javax.swing.JLabel();
        d_rdoporder1 = new javax.swing.JRadioButton();
        d_rdoporder2 = new javax.swing.JRadioButton();
        d_rdoporder4 = new javax.swing.JRadioButton();
        d_rdoporder3 = new javax.swing.JRadioButton();
        jPanel39 = new javax.swing.JPanel();
        d_lblprosequence3 = new javax.swing.JLabel();
        t_pcooktime = new javax.swing.JFormattedTextField();
        jPanel38 = new javax.swing.JPanel();
        d_lblprosequence2 = new javax.swing.JLabel();
        txtfOption = new javax.swing.JTextField();
        btnsearchplu8 = new javax.swing.JButton();
        btnsearchplu9 = new javax.swing.JButton();
        jPanel37 = new javax.swing.JPanel();
        d_lblprosequence1 = new javax.swing.JLabel();
        txtfkitname = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        txtfpsetcode = new javax.swing.JTextField();
        txtfpsetname = new javax.swing.JTextField();
        d_lblpset1 = new javax.swing.JLabel();
        d_lblpset2 = new javax.swing.JLabel();
        d_lblpset4 = new javax.swing.JLabel();
        d_lblpset5 = new javax.swing.JLabel();
        btnsearchplu = new javax.swing.JButton();
        txtfpsetunit = new javax.swing.JTextField();
        txtfpsetqty = new javax.swing.JFormattedTextField();
        d_lblpset6 = new javax.swing.JLabel();
        d_lblpset3 = new javax.swing.JLabel();
        txtfpsetgroup = new javax.swing.JFormattedTextField();
        txtfpsetsetgroup = new javax.swing.JFormattedTextField();
        d_lblpset7 = new javax.swing.JLabel();
        txtfpsetgroupqty = new javax.swing.JFormattedTextField();
        psetselecty = new javax.swing.JRadioButton();
        psetselectn = new javax.swing.JRadioButton();
        jPanel35 = new javax.swing.JPanel();
        db_btnsavepset = new javax.swing.JButton();
        db_btncancel = new javax.swing.JButton();
        db_btndel = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPset = new javax.swing.JTable();
        jPanel34 = new javax.swing.JPanel();
        db_lblCount3 = new javax.swing.JLabel();
        xb_lblCountpset1 = new javax.swing.JLabel();
        xb_lblCountpset2 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        txtfBgroup1 = new javax.swing.JTextField();
        txtfBranchName = new javax.swing.JTextField();
        btnsearchplu4 = new javax.swing.JButton();
        d_lblb1 = new javax.swing.JLabel();
        db_btnOK = new javax.swing.JButton();
        db_btnCancel = new javax.swing.JButton();
        jPanel27 = new javax.swing.JPanel();
        txtfmEatIn1 = new javax.swing.JFormattedTextField();
        txtfmTakeAway1 = new javax.swing.JFormattedTextField();
        txtfmDelivery1 = new javax.swing.JFormattedTextField();
        txtfmPinto1 = new javax.swing.JFormattedTextField();
        txtfmWhole1 = new javax.swing.JFormattedTextField();
        d_lbleatin1 = new javax.swing.JLabel();
        d_lblTake1 = new javax.swing.JLabel();
        d_lblDelivery1 = new javax.swing.JLabel();
        d_lblPinto1 = new javax.swing.JLabel();
        d_lblWhole1 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        txtfPro1 = new javax.swing.JTextField();
        btnsearchplu5 = new javax.swing.JButton();
        txtfproname1 = new javax.swing.JTextField();
        txtfproname2 = new javax.swing.JTextField();
        btnsearchplu6 = new javax.swing.JButton();
        txtfPro2 = new javax.swing.JTextField();
        txtfproname3 = new javax.swing.JTextField();
        btnsearchplu7 = new javax.swing.JButton();
        txtfPro3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBgroup = new javax.swing.JTable();
        jPanel29 = new javax.swing.JPanel();
        db_lblCount = new javax.swing.JLabel();
        db_lblCount1 = new javax.swing.JLabel();
        db_lblCount2 = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        db_btnDelete = new javax.swing.JButton();
        db_btnDeleteAll = new javax.swing.JButton();
        db_btnInsert = new javax.swing.JButton();
        btnuppriceall = new javax.swing.JButton();
        btnuppromotionall = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        t_pcourse = new javax.swing.JTextField();
        d_lblh1 = new javax.swing.JLabel();
        d_lblh3 = new javax.swing.JLabel();
        t_no = new javax.swing.JFormattedTextField();
        btnsearchc = new javax.swing.JButton();
        t_pcoursename = new javax.swing.JTextField();
        d_lblh4 = new javax.swing.JLabel();
        t_qty1 = new javax.swing.JFormattedTextField();
        d_lblunit3 = new javax.swing.JLabel();
        t_pkic = new javax.swing.JFormattedTextField();
        d_lblunit4 = new javax.swing.JLabel();
        t_peat = new javax.swing.JFormattedTextField();
        d_lblunit5 = new javax.swing.JLabel();
        t_pserve = new javax.swing.JFormattedTextField();
        d_lblunit6 = new javax.swing.JLabel();
        t_pcook = new javax.swing.JFormattedTextField();
        d_lblunit7 = new javax.swing.JLabel();
        db_btnOKc = new javax.swing.JButton();
        db_btnCancelc = new javax.swing.JButton();
        jPanel41 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblcourse = new javax.swing.JTable();
        db_btndeletec = new javax.swing.JButton();
        db_btndeletecall = new javax.swing.JButton();
        jPanel42 = new javax.swing.JPanel();
        jPanel43 = new javax.swing.JPanel();
        sap_code = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sap_name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sap_barcode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        sap_jde = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        sap_unit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        rad_sap_active = new javax.swing.JRadioButton();
        rad_sap_noneactive = new javax.swing.JRadioButton();
        btn_article = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        menuFunc = new javax.swing.JMenu();
        menuNew = new javax.swing.JMenuItem();
        menuCancel = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        menuDelete = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnCancel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Cancel-icon.png"))); // NOI18N
        btnCancel.setText("ยกเลิก");
        btnCancel.setFocusable(false);
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setIconTextGap(0);
        btnCancel.setName("db_btnCancel"); // NOI18N
        btnCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/save-icon.png"))); // NOI18N
        btnSave.setText("บันทึกข้อมูล");
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setIconTextGap(0);
        btnSave.setName("db_btnSave"); // NOI18N
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        btnDelete.setText("ลบข้อมูล");
        btnDelete.setFocusable(false);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setIconTextGap(0);
        btnDelete.setName("db_btnDetete"); // NOI18N
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/LogOut-icon.png"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.setFocusable(false);
        btnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit.setIconTextGap(0);
        btnExit.setName("db_btnExit"); // NOI18N
        btnExit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnNew.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Add-icon.png"))); // NOI18N
        btnNew.setText("เพิ่มรายการ");
        btnNew.setFocusable(false);
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.setIconTextGap(0);
        btnNew.setName("db_btnNew"); // NOI18N
        btnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnShow.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btnShow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/list-icon.png"))); // NOI18N
        btnShow.setText("แสดงรายการ");
        btnShow.setFocusable(false);
        btnShow.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnShow.setIconTextGap(0);
        btnShow.setName("db_btnShow"); // NOI18N
        btnShow.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        btn_bom.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        btn_bom.setText("BOM");
        btn_bom.setFocusable(false);
        btn_bom.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_bom.setIconTextGap(0);
        btn_bom.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_bom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                .addComponent(btn_bom, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btn_bom, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel3.setBackground(new java.awt.Color(205, 254, 177));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        db_lblpcode.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblpcode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblpcode.setText("รหัสสินค้า (Item Number)");
        db_lblpcode.setName("db_lblpcode"); // NOI18N

        db_lblbarcode.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblbarcode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblbarcode.setText("Barcode");
        db_lblbarcode.setName("db_lblbarcode"); // NOI18N

        db_lblpname.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblpname.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lblpname.setText("ชื่อสินค้า (Description)");
        db_lblpname.setName("db_lblpname"); // NOI18N

        txtfPcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfPcode.setName("txtfPcode"); // NOI18N
        txtfPcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfPcodeKeyPressed(evt);
            }
        });

        txtbarcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtbarcode.setName("txtbarcode"); // NOI18N
        txtbarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbarcodeKeyPressed(evt);
            }
        });

        txtfPdesc.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfPdesc.setName("txtfPdesc"); // NOI18N
        txtfPdesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfPdescActionPerformed(evt);
            }
        });
        txtfPdesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfPdescKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(db_lblpcode, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(db_lblpname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtfPcode, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_lblbarcode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtbarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtfPdesc))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(db_lblpcode)
                    .addComponent(db_lblbarcode)
                    .addComponent(txtfPcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtbarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 1, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(db_lblpname)
                    .addComponent(txtfPdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(205, 254, 177));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTabbedPane1.setBackground(new java.awt.Color(205, 254, 177));
        jTabbedPane1.setBorder(null);
        jTabbedPane1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTabbedPane1FocusLost(evt);
            }
        });
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel5.setPreferredSize(new java.awt.Dimension(98, 478));

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        d_lblpcat.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpcat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblpcat.setText("DEPT สินค้า"); // NOI18N
        d_lblpcat.setName("d_lblpcat"); // NOI18N

        txtfpgroup.setEditable(false);
        txtfpgroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfpgroup.setName("txtfpgroup"); // NOI18N
        txtfpgroup.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfpgroupFocusLost(evt);
            }
        });
        txtfpgroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfpgroupKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfpgroupKeyReleased(evt);
            }
        });

        txtparea.setEditable(false);
        txtparea.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtparea.setName("txtparea"); // NOI18N
        txtparea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpareaActionPerformed(evt);
            }
        });
        txtparea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpareaKeyPressed(evt);
            }
        });

        d_lblunit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblunit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblunit.setText("หน่วยนับหลัก"); // NOI18N
        d_lblunit.setName("d_lblunit"); // NOI18N

        combo_unit.setEditable(true);
        combo_unit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        combo_unit.setEnabled(false);
        combo_unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_unitActionPerformed(evt);
            }
        });
        combo_unit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_unitKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                combo_unitKeyReleased(evt);
            }
        });

        d_lblstock.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblstock.setText("สถานที่เก็บสินค้า"); // NOI18N
        d_lblstock.setName("d_lblstock"); // NOI18N

        txtfpgroupname.setEditable(false);
        txtfpgroupname.setBackground(new java.awt.Color(255, 246, 143));
        txtfpgroupname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfpgroupname.setName("txtfpgroupname"); // NOI18N

        d_lblpref.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpref.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblpref.setText("Referent Code"); // NOI18N
        d_lblpref.setName("d_lblpref"); // NOI18N

        btn_F1_unit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Folder-Open-icon .png"))); // NOI18N
        btn_F1_unit.setHideActionText(true);
        btn_F1_unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_F1_unitActionPerformed(evt);
            }
        });

        txtrefcode.setEditable(false);
        txtrefcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtrefcode.setName("txtrefcode"); // NOI18N
        txtrefcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrefcodeActionPerformed(evt);
            }
        });
        txtrefcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtrefcodeKeyPressed(evt);
            }
        });

        btnsearchplu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu1.setFocusable(false);
        btnsearchplu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchplu1ActionPerformed(evt);
            }
        });

        btn_F1_unit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Folder-Open-icon .png"))); // NOI18N
        btn_F1_unit1.setHideActionText(true);
        btn_F1_unit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_F1_unit1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel1.setText("ชื่อแสดงในใบเสร็จ");

        PShortDesc.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        PShortDesc.setText("jTextField1");
        PShortDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PShortDescKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PShortDescKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(d_lblpref, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d_lblpcat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d_lblunit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtrefcode)
                    .addComponent(txtfpgroup)
                    .addComponent(combo_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(btnsearchplu1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfpgroupname, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_F1_unit1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(btn_F1_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d_lblstock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtparea))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PShortDesc)))
                .addGap(79, 79, 79))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(d_lblpcat)
                    .addComponent(txtfpgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfpgroupname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsearchplu1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_F1_unit1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(combo_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblunit)
                    .addComponent(btn_F1_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblstock)
                    .addComponent(txtparea, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(d_lblpref)
                            .addComponent(txtrefcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(PShortDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup6.add(d_rdoactiveYes);
        d_rdoactiveYes.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoactiveYes.setSelected(true);
        d_rdoactiveYes.setText("Active PLU"); // NOI18N
        d_rdoactiveYes.setEnabled(false);
        d_rdoactiveYes.setName("d_rdoactiveYes"); // NOI18N

        buttonGroup6.add(d_rdoactiveNo);
        d_rdoactiveNo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoactiveNo.setText("Non Active PLU"); // NOI18N
        d_rdoactiveNo.setEnabled(false);
        d_rdoactiveNo.setName("d_rdoactiveNo"); // NOI18N
        d_rdoactiveNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_rdoactiveNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d_rdoactiveNo)
                    .addComponent(d_rdoactiveYes))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(d_rdoactiveYes, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(d_rdoactiveNo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup5.add(d_rdoGoods);
        d_rdoGoods.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoGoods.setSelected(true);
        d_rdoGoods.setText("สินค้าสำเร็จรูป"); // NOI18N
        d_rdoGoods.setEnabled(false);
        d_rdoGoods.setName("d_rdoGoods"); // NOI18N
        d_rdoGoods.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d_rdoGoodsMouseClicked(evt);
            }
        });
        d_rdoGoods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_rdoGoodsActionPerformed(evt);
            }
        });

        buttonGroup5.add(d_rdoHaveMaterial);
        d_rdoHaveMaterial.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoHaveMaterial.setText("สินค้าที่มีส่วนประกอบ"); // NOI18N
        d_rdoHaveMaterial.setEnabled(false);
        d_rdoHaveMaterial.setName("d_rdoHaveMaterial"); // NOI18N
        d_rdoHaveMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_rdoHaveMaterialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(d_rdoGoods)
                        .addGap(293, 293, 293))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(d_rdoHaveMaterial)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d_rdoGoods, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(d_rdoHaveMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtfmEatIn.setEditable(false);
        txtfmEatIn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmEatIn.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmEatIn.setText("0.00");
        txtfmEatIn.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmEatIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmEatInFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfmEatInFocusLost(evt);
            }
        });
        txtfmEatIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmEatInKeyPressed(evt);
            }
        });

        txtfmTakeAway.setEditable(false);
        txtfmTakeAway.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmTakeAway.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmTakeAway.setText("0.00");
        txtfmTakeAway.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmTakeAway.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmTakeAwayFocusGained(evt);
            }
        });
        txtfmTakeAway.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmTakeAwayKeyPressed(evt);
            }
        });

        txtfmDelivery.setEditable(false);
        txtfmDelivery.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmDelivery.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmDelivery.setText("0.00");
        txtfmDelivery.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmDelivery.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmDeliveryFocusGained(evt);
            }
        });
        txtfmDelivery.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmDeliveryKeyPressed(evt);
            }
        });

        txtfmPinto.setEditable(false);
        txtfmPinto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmPinto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmPinto.setText("0.00");
        txtfmPinto.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmPinto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmPintoFocusGained(evt);
            }
        });
        txtfmPinto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmPintoKeyPressed(evt);
            }
        });

        txtfmWhole.setEditable(false);
        txtfmWhole.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmWhole.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmWhole.setText("0.00");
        txtfmWhole.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmWhole.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmWholeFocusGained(evt);
            }
        });
        txtfmWhole.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmWholeKeyPressed(evt);
            }
        });

        d_lbleatin.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lbleatin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lbleatin.setText("Eat In");
        d_lbleatin.setName("d_lbleatin"); // NOI18N

        d_lblTake.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblTake.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblTake.setText("Take Away");
        d_lblTake.setName("d_lblTake"); // NOI18N

        d_lblDelivery.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblDelivery.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblDelivery.setText("Delivery");
        d_lblDelivery.setName("d_lblDelivery"); // NOI18N

        d_lblPinto.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblPinto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblPinto.setText("Pinto");
        d_lblPinto.setName("d_lblPinto"); // NOI18N

        d_lblWhole.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblWhole.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblWhole.setText("Whole Sale");
        d_lblWhole.setName("d_lblWhole"); // NOI18N

        db_lblprice.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        db_lblprice.setText("ราคาขาย");
        db_lblprice.setName("db_lblprice"); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(d_lbleatin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(txtfmEatIn, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfmTakeAway)
                    .addComponent(d_lblTake, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfmDelivery)
                    .addComponent(d_lblDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfmPinto)
                    .addComponent(d_lblPinto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfmWhole)
                    .addComponent(d_lblWhole, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(db_lblprice, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addComponent(db_lblprice)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_lbleatin)
                    .addComponent(d_lblTake)
                    .addComponent(d_lblDelivery)
                    .addComponent(d_lblPinto)
                    .addComponent(d_lblWhole))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfmEatIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfmWhole, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfmPinto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfmDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfmTakeAway, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        d_lblcost2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblcost2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblcost2.setText("ต้นทุนสินค้าสำเร็จรูป"); // NOI18N
        d_lblcost2.setName("d_lblcost2"); // NOI18N

        txtfmscost.setEditable(false);
        txtfmscost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.0000"))));
        txtfmscost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmscost.setText("0.0000"); // NOI18N
        txtfmscost.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmscost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfmscostFocusLost(evt);
            }
        });
        txtfmscost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmscostKeyPressed(evt);
            }
        });

        d_lblcost3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblcost3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblcost3.setText("ต้นทุนสินค้ามีส่วนประกอบ"); // NOI18N
        d_lblcost3.setName("d_lblcost3"); // NOI18N

        txtfmlcost.setEditable(false);
        txtfmlcost.setBackground(new java.awt.Color(249, 252, 186));
        txtfmlcost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.0000"))));
        txtfmlcost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmlcost.setText("0.0000"); // NOI18N
        txtfmlcost.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmlcost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfmlcostFocusLost(evt);
            }
        });
        txtfmlcost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmlcostKeyPressed(evt);
            }
        });

        d_lblcost4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblcost4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblcost4.setText("ต้นทุนเฉลี่ย"); // NOI18N
        d_lblcost4.setName("d_lblcost4"); // NOI18N

        txtfmacost.setEditable(false);
        txtfmacost.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.0000"))));
        txtfmacost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmacost.setText("0.0000"); // NOI18N
        txtfmacost.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmacost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfmacostFocusLost(evt);
            }
        });
        txtfmacost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmacostKeyPressed(evt);
            }
        });

        d_lblcost.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblcost.setText("(ต้นทุนสินค้า)"); // NOI18N
        d_lblcost.setName("d_lblcost"); // NOI18N

        d_lblcost5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblcost5.setText("ต้นทุน/ราคาขาย"); // NOI18N
        d_lblcost5.setName("d_lblcost5"); // NOI18N

        db_lblpersent.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        db_lblpersent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        db_lblpersent.setText("(%)"); // NOI18N

        txtfmtcost.setEditable(false);
        txtfmtcost.setBackground(new java.awt.Color(249, 252, 186));
        txtfmtcost.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmtcost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmtcost.setText("0.00%");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(d_lblcost2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel22Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(d_lblcost3))
                            .addComponent(d_lblcost4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtfmacost)
                            .addComponent(txtfmlcost)
                            .addComponent(txtfmscost, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(d_lblcost5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtfmtcost)
                            .addComponent(db_lblpersent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(d_lblcost)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                .addComponent(d_lblcost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfmscost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblcost2)
                    .addComponent(d_lblcost5))
                .addGap(2, 2, 2)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_lblcost3)
                    .addComponent(txtfmlcost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_lblpersent))
                .addGap(2, 2, 2)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfmacost, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblcost4)
                    .addComponent(txtfmtcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup7.add(d_rdoAuto);
        d_rdoAuto.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoAuto.setSelected(true);
        d_rdoAuto.setText("อัติโนมัติ (PLU)"); // NOI18N
        d_rdoAuto.setEnabled(false);
        d_rdoAuto.setName("d_rdoAuto"); // NOI18N

        buttonGroup7.add(d_rdoCustom);
        d_rdoCustom.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoCustom.setText("กำหนดเองตามป้าย (SDP)"); // NOI18N
        d_rdoCustom.setEnabled(false);
        d_rdoCustom.setName("d_rdoCustom"); // NOI18N
        d_rdoCustom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_rdoCustomActionPerformed(evt);
            }
        });

        d_lblpsale.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpsale.setText("การคิดราคาขาย"); // NOI18N
        d_lblpsale.setName("d_lblpsale"); // NOI18N

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(d_lblpsale)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(d_rdoAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(d_rdoCustom)
                        .addGap(43, 43, 43))))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addComponent(d_lblpsale)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_rdoAuto, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_rdoCustom, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel10.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        buttonGroup3.add(d_rdostockYes);
        d_rdostockYes.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdostockYes.setSelected(true);
        d_rdostockYes.setText("จัดทำสต็อกสินค้า"); // NOI18N
        d_rdostockYes.setEnabled(false);
        d_rdostockYes.setName("d_rdostockYes"); // NOI18N

        buttonGroup3.add(d_rdostockNo);
        d_rdostockNo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdostockNo.setText("ไม่จัดทำสต็อกสินค้า"); // NOI18N
        d_rdostockNo.setEnabled(false);
        d_rdostockNo.setName("d_rdostockNo"); // NOI18N

        d_lbldostrock.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lbldostrock.setText("การจัดทำสต็อกสินค้า"); // NOI18N
        d_lbldostrock.setName("d_lbldostrock"); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d_lbldostrock)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(d_rdostockNo, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(d_rdostockYes)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addComponent(d_lbldostrock)
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(d_rdostockYes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d_rdostockNo)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel11.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        buttonGroup4.add(d_rdovatYes);
        d_rdovatYes.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdovatYes.setSelected(true);
        d_rdovatYes.setText("คิดภาษีมูลค่าเพิ่ม"); // NOI18N
        d_rdovatYes.setEnabled(false);
        d_rdovatYes.setName("d_rdovatYes"); // NOI18N

        buttonGroup4.add(d_rdovatNo);
        d_rdovatNo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdovatNo.setText("ไม่คิดภาษีมูลค่าเพิ่ม"); // NOI18N
        d_rdovatNo.setEnabled(false);
        d_rdovatNo.setName("d_rdovatNo"); // NOI18N

        d_lblvat.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblvat.setText("การคิดภาษี"); // NOI18N
        d_lblvat.setName("d_lblvat"); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d_rdovatYes)
                    .addComponent(d_lblvat)
                    .addComponent(d_rdovatNo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(d_lblvat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(d_rdovatYes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d_rdovatNo)
                .addGap(24, 24, 24))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        buttonGroup2.add(d_rdostatus1);
        d_rdostatus1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdostatus1.setSelected(true);
        d_rdostatus1.setText("Normal"); // NOI18N
        d_rdostatus1.setEnabled(false);
        d_rdostatus1.setName("d_rdostatus1"); // NOI18N

        buttonGroup2.add(d_rdostatus2);
        d_rdostatus2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdostatus2.setText("Consign"); // NOI18N
        d_rdostatus2.setEnabled(false);
        d_rdostatus2.setName("d_rdostatus2"); // NOI18N

        buttonGroup2.add(d_rdostatus3);
        d_rdostatus3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdostatus3.setText("Spacial"); // NOI18N
        d_rdostatus3.setEnabled(false);
        d_rdostatus3.setName("d_rdostatus3"); // NOI18N

        d_lblpstatus.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpstatus.setText("สถานะสินค้า"); // NOI18N
        d_lblpstatus.setName("d_lblpstatus"); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d_rdostatus1)
                    .addComponent(d_rdostatus2)
                    .addComponent(d_rdostatus3)
                    .addComponent(d_lblpstatus))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(d_lblpstatus)
                .addGap(1, 1, 1)
                .addComponent(d_rdostatus1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d_rdostatus2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d_rdostatus3))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel9.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        buttonGroup1.add(d_rdofood);
        d_rdofood.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdofood.setText("อาหาร (Food)"); // NOI18N
        d_rdofood.setEnabled(false);
        d_rdofood.setName("d_rdofood"); // NOI18N

        buttonGroup1.add(d_rdodrink);
        d_rdodrink.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdodrink.setText("เครื่องดื่ม (Drink)"); // NOI18N
        d_rdodrink.setEnabled(false);
        d_rdodrink.setName("d_rdodrink"); // NOI18N

        buttonGroup1.add(d_rdoproduct);
        d_rdoproduct.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoproduct.setSelected(true);
        d_rdoproduct.setText("สินค้า (Product)"); // NOI18N
        d_rdoproduct.setEnabled(false);
        d_rdoproduct.setName("d_rdoproduct"); // NOI18N

        d_lblptype.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblptype.setText("ประเภทสินค้า"); // NOI18N
        d_lblptype.setName("d_lblptype"); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d_lblptype)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(d_rdodrink)
                            .addComponent(d_rdofood)
                            .addComponent(d_rdoproduct))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addComponent(d_lblptype)
                .addGap(1, 1, 1)
                .addComponent(d_rdofood)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d_rdodrink)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d_rdoproduct))
        );

        jPanel26.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        d_lblcharge.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblcharge.setText("กำหนดข้อมูลการใช้ชาร์จ"); // NOI18N
        d_lblcharge.setName("d_lblcharge"); // NOI18N

        d_chkchart1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_chkchart1.setSelected(true);
        d_chkchart1.setText("ใช้ได้กับชาร์จหน่วยงาน");
        d_chkchart1.setEnabled(false);
        d_chkchart1.setName("d_chkchart1"); // NOI18N

        d_chkchart2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_chkchart2.setSelected(true);
        d_chkchart2.setText("ใช้ได้กับชาร์จบุคคล");
        d_chkchart2.setEnabled(false);
        d_chkchart2.setFocusable(false);
        d_chkchart2.setName("d_chkchart2"); // NOI18N

        d_chkchart3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_chkchart3.setSelected(true);
        d_chkchart3.setText("ใช้ได้กับชาร์จแบบพิเศษ");
        d_chkchart3.setEnabled(false);
        d_chkchart3.setName("d_chkchart3"); // NOI18N

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(d_lblcharge)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(d_chkchart3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(d_chkchart1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d_chkchart2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addComponent(d_lblcharge)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_chkchart1)
                    .addComponent(d_chkchart2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(d_chkchart3)
                .addContainerGap())
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        d_lblvendor.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblvendor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblvendor.setText("ผู้จัดจำหน่าย"); // NOI18N
        d_lblvendor.setName("d_lblvendor"); // NOI18N

        txtvendor.setEditable(false);
        txtvendor.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtvendor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtvendorFocusLost(evt);
            }
        });
        txtvendor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtvendorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtvendorKeyReleased(evt);
            }
        });

        d_lblunit2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblunit2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblunit2.setText("หน่วยซื้อ"); // NOI18N
        d_lblunit2.setName("d_lblunit2"); // NOI18N

        combo_unit1.setEditable(true);
        combo_unit1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        combo_unit1.setEnabled(false);
        combo_unit1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_unit1KeyPressed(evt);
            }
        });

        d_lblunitscale.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblunitscale.setText("มาตราส่วนต่อหน่วยนัับหลัก"); // NOI18N
        d_lblunitscale.setName("d_lblunitscale"); // NOI18N

        txtvendorname.setEditable(false);
        txtvendorname.setBackground(new java.awt.Color(249, 252, 186));
        txtvendorname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtvendorname.setName("txtvendorname"); // NOI18N

        d_lbldeacc.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lbldeacc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lbldeacc.setText("แผนกทางบัญชี"); // NOI18N
        d_lbldeacc.setName("d_lbldeacc"); // NOI18N

        btn_F1_unit4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Folder-Open-icon .png"))); // NOI18N
        btn_F1_unit4.setHideActionText(true);
        btn_F1_unit4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_F1_unit4ActionPerformed(evt);
            }
        });

        txtpabdept.setEditable(false);
        txtpabdept.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtpabdept.setName("txtpabdept"); // NOI18N
        txtpabdept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpabdeptActionPerformed(evt);
            }
        });
        txtpabdept.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpabdeptKeyPressed(evt);
            }
        });

        btnsearchplu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu3.setFocusable(false);
        btnsearchplu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchplu3ActionPerformed(evt);
            }
        });

        btn_F1_unit5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Folder-Open-icon .png"))); // NOI18N
        btn_F1_unit5.setHideActionText(true);
        btn_F1_unit5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_F1_unit5ActionPerformed(evt);
            }
        });

        d_lblpset.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpset.setText("เป็นสินค้าชุดหรือสินค้าที่มีส่วนประกอบหรือไม่ (Yes/No)"); // NOI18N
        d_lblpset.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        d_lblpset.setName("d_lblpset"); // NOI18N

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup11.add(d_rdoNomal);
        d_rdoNomal.setSelected(true);
        d_rdoNomal.setText("Normal");
        d_rdoNomal.setEnabled(false);
        d_rdoNomal.setName("d_rdoNomal"); // NOI18N
        d_rdoNomal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_rdoNomalActionPerformed(evt);
            }
        });

        buttonGroup11.add(d_rdoSet);
        d_rdoSet.setText("Set");
        d_rdoSet.setEnabled(false);
        d_rdoSet.setName("d_rdoSet"); // NOI18N
        d_rdoSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_rdoSetActionPerformed(evt);
            }
        });

        buttonGroup11.add(d_rdocouse);
        d_rdocouse.setText("Couse");
        d_rdocouse.setEnabled(false);
        d_rdocouse.setName("d_rdosetNo"); // NOI18N
        d_rdocouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_rdocouseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addComponent(d_rdoSet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d_rdoNomal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d_rdocouse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_rdoNomal)
                    .addComponent(d_rdoSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d_rdocouse))
                .addContainerGap())
        );

        txtfmbpack.setEditable(false);
        txtfmbpack.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.0000"))));
        txtfmbpack.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmbpack.setText("0.0000"); // NOI18N
        txtfmbpack.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmbpack.setName("txtfmbpack"); // NOI18N
        txtfmbpack.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfmbpackFocusLost(evt);
            }
        });
        txtfmbpack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmbpackKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtfmbpack, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(d_lbldeacc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(d_lblunit2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(d_lblvendor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtpabdept)
                                    .addComponent(txtvendor)
                                    .addComponent(combo_unit1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(btn_F1_unit4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(d_lblunitscale))
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(btnsearchplu3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtvendorname, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_F1_unit5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(d_lblpset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(79, 79, 79))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(d_lblvendor)
                    .addComponent(txtvendor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtvendorname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsearchplu3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_F1_unit5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(combo_unit1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblunit2)
                    .addComponent(btn_F1_unit4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblunitscale)
                    .addComponent(txtfmbpack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(d_lbldeacc)
                            .addComponent(txtpabdept, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d_lblpset))
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(227, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("ข้อมูลทั่วไป (Generial)", jPanel5);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        buttonGroup8.add(d_rdoserviceYes);
        d_rdoserviceYes.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoserviceYes.setSelected(true);
        d_rdoserviceYes.setText("คิดค่าบริการ"); // NOI18N
        d_rdoserviceYes.setEnabled(false);
        d_rdoserviceYes.setName("d_rdoserviceYes"); // NOI18N

        buttonGroup8.add(d_rdoserviceNo);
        d_rdoserviceNo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoserviceNo.setText("ไม่คิดค่าบริการ"); // NOI18N
        d_rdoserviceNo.setEnabled(false);
        d_rdoserviceNo.setName("d_rdoserviceNo"); // NOI18N

        d_lblpservice.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpservice.setText("การคิดค่าบริการ (Service Charge)"); // NOI18N
        d_lblpservice.setName("d_lblpservice"); // NOI18N

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(d_lblpservice)
                .addGap(35, 35, 35)
                .addComponent(d_rdoserviceYes, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(d_rdoserviceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(d_lblpservice)
            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(d_rdoserviceYes)
                .addComponent(d_rdoserviceNo))
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        buttonGroup9.add(d_rdoDiscountYes);
        d_rdoDiscountYes.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoDiscountYes.setText("สามารถลดได้"); // NOI18N
        d_rdoDiscountYes.setEnabled(false);
        d_rdoDiscountYes.setName("d_rdoDiscountYes"); // NOI18N

        buttonGroup9.add(d_rdoDiscountNo);
        d_rdoDiscountNo.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoDiscountNo.setText("ไม่สามารถลดได้"); // NOI18N
        d_rdoDiscountNo.setEnabled(false);
        d_rdoDiscountNo.setName("d_rdoDiscountNo"); // NOI18N

        d_lbldis.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lbldis.setText("การให้ส่วนลด (Discount)"); // NOI18N
        d_lbldis.setName("d_lbldis"); // NOI18N

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(d_lbldis)
                .addGap(79, 79, 79)
                .addComponent(d_rdoDiscountYes, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(d_rdoDiscountNo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(d_rdoDiscountYes)
                .addComponent(d_rdoDiscountNo))
            .addComponent(d_lbldis)
        );

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        d_lblprint2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblprint2.setText("พิมพ์ส่งข้อมูล (สำหรับ POS)"); // NOI18N
        d_lblprint2.setName("d_lblprint2"); // NOI18N

        kic.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        kic.setEnabled(false);

        d_lblprint.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblprint.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        d_lblprint.setText("การพิมพ์ข้อมูลออกครัว"); // NOI18N
        d_lblprint.setName("d_lblprint"); // NOI18N

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(d_lblprint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d_lblprint2)
                .addGap(28, 28, 28)
                .addComponent(kic, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(d_lblprint)
                .addComponent(d_lblprint2)
                .addComponent(kic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel36.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        d_lblprosequence.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblprosequence.setText("Product Sequence"); // NOI18N
        d_lblprosequence.setName("d_lblprosequence"); // NOI18N

        buttonGroup12.add(d_rdoporder1);
        d_rdoporder1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoporder1.setSelected(true);
        d_rdoporder1.setText("Drink"); // NOI18N
        d_rdoporder1.setEnabled(false);
        d_rdoporder1.setName("d_rdoporder1"); // NOI18N

        buttonGroup12.add(d_rdoporder2);
        d_rdoporder2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoporder2.setText("First Course"); // NOI18N
        d_rdoporder2.setEnabled(false);
        d_rdoporder2.setName("d_rdoporder2"); // NOI18N

        buttonGroup12.add(d_rdoporder4);
        d_rdoporder4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoporder4.setText("Third Course"); // NOI18N
        d_rdoporder4.setEnabled(false);
        d_rdoporder4.setName("d_rdoporder4"); // NOI18N

        buttonGroup12.add(d_rdoporder3);
        d_rdoporder3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_rdoporder3.setText("Second Course"); // NOI18N
        d_rdoporder3.setEnabled(false);
        d_rdoporder3.setName("d_rdoporder3"); // NOI18N

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(d_lblprosequence)
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(d_rdoporder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(d_rdoporder3, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(d_rdoporder4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(d_rdoporder2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                .addComponent(d_lblprosequence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_rdoporder1)
                    .addComponent(d_rdoporder2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_rdoporder3)
                    .addComponent(d_rdoporder4))
                .addContainerGap())
        );

        jPanel39.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        d_lblprosequence3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblprosequence3.setText("เวลาที่ปรุง"); // NOI18N
        d_lblprosequence3.setName("d_lblprosequence"); // NOI18N

        t_pcooktime.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t_pcooktime.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_pcooktime.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pcooktime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_pcooktimeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d_lblprosequence3, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_pcooktime, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(298, 298, 298))
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_lblprosequence3)
                    .addComponent(t_pcooktime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel38.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        d_lblprosequence2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblprosequence2.setText("รายการ Option"); // NOI18N
        d_lblprosequence2.setName("d_lblprosequence"); // NOI18N

        txtfOption.setEditable(false);
        txtfOption.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfOption.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfOptionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfOptionFocusLost(evt);
            }
        });
        txtfOption.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfOptionKeyPressed(evt);
            }
        });

        btnsearchplu8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu8.setFocusable(false);
        btnsearchplu8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchplu8ActionPerformed(evt);
            }
        });

        btnsearchplu9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Folder-Open-icon .png"))); // NOI18N
        btnsearchplu9.setFocusable(false);
        btnsearchplu9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchplu9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d_lblprosequence2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfOption, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsearchplu8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsearchplu9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnsearchplu9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsearchplu8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtfOption, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(d_lblprosequence2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel37.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        d_lblprosequence1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblprosequence1.setText("ชื่อรายการที่ออกครัว"); // NOI18N
        d_lblprosequence1.setName("d_lblprosequence"); // NOI18N

        txtfkitname.setEditable(false);
        txtfkitname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfkitname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfkitnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfkitnameFocusLost(evt);
            }
        });
        txtfkitname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfkitnameKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d_lblprosequence1)
                .addGap(4, 4, 4)
                .addComponent(txtfkitname)
                .addContainerGap())
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_lblprosequence1)
                    .addComponent(txtfkitname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(468, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("ข้อมูลสำหรับเครื่อง POS", jPanel6);

        jPanel31.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPanel31FocusLost(evt);
            }
        });

        jPanel33.setBackground(new java.awt.Color(229, 201, 252));
        jPanel33.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtfpsetcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfpsetcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfpsetcodeFocusLost(evt);
            }
        });
        txtfpsetcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfpsetcodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfpsetcodeKeyReleased(evt);
            }
        });

        txtfpsetname.setEditable(false);
        txtfpsetname.setBackground(new java.awt.Color(249, 252, 186));
        txtfpsetname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfpsetname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfpsetnameKeyPressed(evt);
            }
        });

        d_lblpset1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpset1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        d_lblpset1.setText("รหัสสินค้า (PLU Code)");
        d_lblpset1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        d_lblpset1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        d_lblpset1.setName("d_lblpset1"); // NOI18N

        d_lblpset2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpset2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblpset2.setText("ชื่อสินค้า (Description)");
        d_lblpset2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        d_lblpset2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        d_lblpset2.setName("d_lblpset2"); // NOI18N

        d_lblpset4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpset4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblpset4.setText("จำนวน (Qty)");
        d_lblpset4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        d_lblpset4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        d_lblpset4.setName("d_lblpset4"); // NOI18N

        d_lblpset5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpset5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblpset5.setText("หน่วยนับ");
        d_lblpset5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        d_lblpset5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        d_lblpset5.setName("d_lblpset5"); // NOI18N

        btnsearchplu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu.setFocusable(false);
        btnsearchplu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchpluActionPerformed(evt);
            }
        });

        txtfpsetunit.setEditable(false);
        txtfpsetunit.setBackground(new java.awt.Color(249, 252, 186));
        txtfpsetunit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfpsetunit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfpsetunitKeyPressed(evt);
            }
        });

        txtfpsetqty.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtfpsetqty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfpsetqty.setText("1");
        txtfpsetqty.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfpsetqty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfpsetqtyFocusGained(evt);
            }
        });
        txtfpsetqty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfpsetqtyKeyPressed(evt);
            }
        });

        d_lblpset6.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpset6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblpset6.setText("จำนวนกลุ่มที่เลือกได้");
        d_lblpset6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        d_lblpset6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        d_lblpset6.setName("d_lblpset6"); // NOI18N

        d_lblpset3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpset3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblpset3.setText("กลุ่มสำหรับการเลือก");
        d_lblpset3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        d_lblpset3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        d_lblpset3.setName("d_lblpsetgroup"); // NOI18N

        txtfpsetgroup.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtfpsetgroup.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfpsetgroup.setText("1");
        txtfpsetgroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfpsetgroup.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfpsetgroupFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfpsetgroupFocusLost(evt);
            }
        });
        txtfpsetgroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfpsetgroupKeyPressed(evt);
            }
        });

        txtfpsetsetgroup.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtfpsetsetgroup.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfpsetsetgroup.setText("1");
        txtfpsetsetgroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfpsetsetgroup.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfpsetsetgroupFocusGained(evt);
            }
        });
        txtfpsetsetgroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfpsetsetgroupKeyPressed(evt);
            }
        });

        d_lblpset7.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblpset7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblpset7.setText("จำนวนที่เลือกในกลุ่ม");
        d_lblpset7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        d_lblpset7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        d_lblpset7.setName("d_lblpsetqty"); // NOI18N

        txtfpsetgroupqty.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtfpsetgroupqty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfpsetgroupqty.setText("1");
        txtfpsetgroupqty.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfpsetgroupqty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfpsetgroupqtyFocusGained(evt);
            }
        });
        txtfpsetgroupqty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfpsetgroupqtyKeyPressed(evt);
            }
        });

        buttonGroup13.add(psetselecty);
        psetselecty.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        psetselecty.setText("เลือกรายการได้");
        psetselecty.setName("d_rad"); // NOI18N

        buttonGroup13.add(psetselectn);
        psetselectn.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        psetselectn.setText("เลือกรายการไม่ได้");
        psetselectn.setName("d_rad1"); // NOI18N

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addComponent(txtfpsetcode, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnsearchplu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(d_lblpset1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d_lblpset2)
                    .addComponent(txtfpsetname, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addComponent(psetselecty)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(psetselectn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(d_lblpset6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfpsetsetgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(d_lblpset3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtfpsetgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel33Layout.createSequentialGroup()
                                .addComponent(d_lblpset7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtfpsetgroupqty, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtfpsetqty, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d_lblpset4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(d_lblpset5, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(txtfpsetunit))))
                .addGap(45, 45, 45))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(psetselecty)
                        .addComponent(psetselectn))
                    .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(d_lblpset6)
                        .addComponent(txtfpsetsetgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(d_lblpset1)
                                .addComponent(d_lblpset2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtfpsetcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtfpsetname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnsearchplu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(txtfpsetgroup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(d_lblpset3)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(d_lblpset4)
                            .addComponent(d_lblpset7)
                            .addComponent(d_lblpset5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfpsetqty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfpsetunit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfpsetgroupqty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel35.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        db_btnsavepset.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        db_btnsavepset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Actions-document-save-icon1.png"))); // NOI18N
        db_btnsavepset.setText("บันทึก"); // NOI18N
        db_btnsavepset.setName("db_btnsavepset"); // NOI18N
        db_btnsavepset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnsavepsetActionPerformed(evt);
            }
        });

        db_btncancel.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        db_btncancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Close-2-icon.png"))); // NOI18N
        db_btncancel.setText("ยกเลิก"); // NOI18N
        db_btncancel.setName("db_btncancel1"); // NOI18N
        db_btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btncancelActionPerformed(evt);
            }
        });

        db_btndel.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        db_btndel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        db_btndel.setText("ลบข้อมูล"); // NOI18N
        db_btndel.setName("db_btndel"); // NOI18N
        db_btndel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btndelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnsavepset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(db_btncancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(db_btndel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db_btnsavepset, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(db_btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(db_btndel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tblPset.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tblPset.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสสินค้า ", "ชื่อสินค้า (Description)", "กลุ่มการเลือก", "จำนวนที่เลือกได้ในกลุ่ม", "จำนวนชิ้น", "หน่วยนับ "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPset.setName("tblPset"); // NOI18N
        tblPset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPsetMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblPsetMouseReleased(evt);
            }
        });
        tblPset.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblPsetKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblPsetKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tblPset);
        if (tblPset.getColumnModel().getColumnCount() > 0) {
            tblPset.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblPset.getColumnModel().getColumn(1).setPreferredWidth(250);
            tblPset.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblPset.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblPset.getColumnModel().getColumn(4).setPreferredWidth(80);
            tblPset.getColumnModel().getColumn(5).setPreferredWidth(80);
        }

        jPanel34.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        db_lblCount3.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        db_lblCount3.setText("0");

        xb_lblCountpset1.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        xb_lblCountpset1.setText("จำนวนทั้งหมด");
        xb_lblCountpset1.setName("xb_lblCountpset1"); // NOI18N

        xb_lblCountpset2.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        xb_lblCountpset2.setText("รายการ");
        xb_lblCountpset2.setName("xb_lblCountpset2"); // NOI18N

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(xb_lblCountpset1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_lblCount3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xb_lblCountpset2)
                .addGap(89, 89, 89))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(db_lblCount3)
                .addComponent(xb_lblCountpset1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(xb_lblCountpset2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 237, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("รายละเอียดชุดสินค้า (Product Set)", jPanel31);

        jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtfBgroup1.setEditable(false);
        txtfBgroup1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfBgroup1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfBgroup1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfBgroup1FocusLost(evt);
            }
        });
        txtfBgroup1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyTyped(evt);
            }
        });

        txtfBranchName.setEditable(false);
        txtfBranchName.setBackground(new java.awt.Color(255, 246, 143));
        txtfBranchName.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        btnsearchplu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu4.setFocusable(false);
        btnsearchplu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchplu4ActionPerformed(evt);
            }
        });

        d_lblb1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblb1.setText("รหัสกลุ่มสาขา (Branch Group)");
        d_lblb1.setName("d_lblb1"); // NOI18N

        db_btnOK.setText("OK");
        db_btnOK.setName("db_btnOK"); // NOI18N
        db_btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnOKActionPerformed(evt);
            }
        });

        db_btnCancel.setText("Cancel");
        db_btnCancel.setName("db_btnCancel2"); // NOI18N
        db_btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel19Layout.createSequentialGroup()
                                .addComponent(txtfBgroup1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnsearchplu4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(d_lblb1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(db_btnOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(db_btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtfBranchName)))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(d_lblb1)))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(db_btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtfBgroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnsearchplu4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfBranchName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder("กำหนดราคาขาย"));

        txtfmEatIn1.setEditable(false);
        txtfmEatIn1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmEatIn1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmEatIn1.setText("0.00");
        txtfmEatIn1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmEatIn1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmEatIn1FocusGained(evt);
            }
        });
        txtfmEatIn1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmEatIn1KeyPressed(evt);
            }
        });

        txtfmTakeAway1.setEditable(false);
        txtfmTakeAway1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmTakeAway1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmTakeAway1.setText("0.00");
        txtfmTakeAway1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmTakeAway1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmTakeAway1FocusGained(evt);
            }
        });
        txtfmTakeAway1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmTakeAway1KeyPressed(evt);
            }
        });

        txtfmDelivery1.setEditable(false);
        txtfmDelivery1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmDelivery1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmDelivery1.setText("0.00");
        txtfmDelivery1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmDelivery1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmDelivery1FocusGained(evt);
            }
        });
        txtfmDelivery1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmDelivery1KeyPressed(evt);
            }
        });

        txtfmPinto1.setEditable(false);
        txtfmPinto1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmPinto1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmPinto1.setText("0.00");
        txtfmPinto1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmPinto1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmPinto1FocusGained(evt);
            }
        });
        txtfmPinto1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmPinto1KeyPressed(evt);
            }
        });

        txtfmWhole1.setEditable(false);
        txtfmWhole1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtfmWhole1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfmWhole1.setText("0.00");
        txtfmWhole1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txtfmWhole1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfmWhole1FocusGained(evt);
            }
        });
        txtfmWhole1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfmWhole1KeyPressed(evt);
            }
        });

        d_lbleatin1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lbleatin1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lbleatin1.setText("Eat In");
        d_lbleatin1.setName("d_lbleatin1"); // NOI18N

        d_lblTake1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblTake1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblTake1.setText("Take Away");
        d_lblTake1.setName("d_lblTake1"); // NOI18N

        d_lblDelivery1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblDelivery1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblDelivery1.setText("Delivery");
        d_lblDelivery1.setName("d_lblDelivery1"); // NOI18N

        d_lblPinto1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblPinto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblPinto1.setText("Pinto");
        d_lblPinto1.setName("d_lblPinto1"); // NOI18N

        d_lblWhole1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblWhole1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblWhole1.setText("Whole Sale");
        d_lblWhole1.setName("d_lblWhole1"); // NOI18N

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(d_lbleatin1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(txtfmEatIn1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfmTakeAway1)
                    .addComponent(d_lblTake1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfmDelivery1)
                    .addComponent(d_lblDelivery1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfmPinto1)
                    .addComponent(d_lblPinto1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtfmWhole1)
                    .addComponent(d_lblWhole1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d_lbleatin1)
                    .addComponent(d_lblTake1)
                    .addComponent(d_lblDelivery1)
                    .addComponent(d_lblPinto1)
                    .addComponent(d_lblWhole1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfmEatIn1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfmWhole1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfmPinto1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfmDelivery1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfmTakeAway1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder("กำหนดโปรโมชั่น (Promotion)"));

        txtfPro1.setEditable(false);
        txtfPro1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfPro1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfPro1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfPro1FocusLost(evt);
            }
        });
        txtfPro1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfPro1KeyPressed(evt);
            }
        });

        btnsearchplu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu5.setFocusable(false);
        btnsearchplu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchplu5ActionPerformed(evt);
            }
        });

        txtfproname1.setEditable(false);
        txtfproname1.setBackground(new java.awt.Color(255, 246, 143));
        txtfproname1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfproname1.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        txtfproname2.setEditable(false);
        txtfproname2.setBackground(new java.awt.Color(255, 246, 143));
        txtfproname2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfproname2.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        btnsearchplu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu6.setFocusable(false);
        btnsearchplu6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchplu6ActionPerformed(evt);
            }
        });

        txtfPro2.setEditable(false);
        txtfPro2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfPro2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfPro2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfPro2FocusLost(evt);
            }
        });
        txtfPro2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfPro2KeyPressed(evt);
            }
        });

        txtfproname3.setEditable(false);
        txtfproname3.setBackground(new java.awt.Color(255, 246, 143));
        txtfproname3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfproname3.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        btnsearchplu7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu7.setFocusable(false);
        btnsearchplu7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchplu7ActionPerformed(evt);
            }
        });

        txtfPro3.setEditable(false);
        txtfPro3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfPro3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfPro3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfPro3FocusLost(evt);
            }
        });
        txtfPro3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfPro3KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addComponent(txtfPro1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(btnsearchplu5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(txtfproname1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addComponent(txtfPro2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(btnsearchplu6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(txtfproname2))
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addComponent(txtfPro3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(btnsearchplu7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(txtfproname3))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtfproname1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfPro1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsearchplu5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtfproname2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfPro2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsearchplu6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtfproname3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfPro3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsearchplu7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        tblBgroup.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tblBgroup.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PDept", "รหัสกลุ่มสาขา", "ชื่อกลุ่มสาขา", "Eat IN", "Take Away", "Delivery", "Pinto", "Whole Sale", "โปรโมชั่น(1)", "โปรโมชั่น(2)", "โปรโมชั่น(3)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBgroup.setName("tblBgroup"); // NOI18N
        tblBgroup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBgroupMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblBgroupMouseReleased(evt);
            }
        });
        tblBgroup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblBgroupKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblBgroup);
        if (tblBgroup.getColumnModel().getColumnCount() > 0) {
            tblBgroup.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblBgroup.getColumnModel().getColumn(2).setPreferredWidth(170);
        }

        jPanel29.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        db_lblCount.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        db_lblCount.setText("0");

        db_lblCount1.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        db_lblCount1.setText("จำนวนทั้งหมด");
        db_lblCount1.setName("xb_lblCount1"); // NOI18N

        db_lblCount2.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        db_lblCount2.setText("รายการ");
        db_lblCount2.setName("xb_lblCount2"); // NOI18N

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db_lblCount1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_lblCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_lblCount2)
                .addGap(89, 89, 89))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(db_lblCount)
                .addComponent(db_lblCount1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db_lblCount2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        db_btnDelete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnDelete.setText("ลบเฉพาะรายการที่เลือก");
        db_btnDelete.setName("db_btnDelete1"); // NOI18N
        db_btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnDeleteActionPerformed(evt);
            }
        });

        db_btnDeleteAll.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnDeleteAll.setText("ลบทุกรายการ");
        db_btnDeleteAll.setName("db_btnDeleteAll"); // NOI18N
        db_btnDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnDeleteAllActionPerformed(evt);
            }
        });

        db_btnInsert.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnInsert.setText("เพิ่มทุกกลุ่มสาขา");
        db_btnInsert.setName("db_btnInsert"); // NOI18N
        db_btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnInsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db_btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_btnDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(db_btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(db_btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addComponent(db_btnDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnuppriceall.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnuppriceall.setForeground(new java.awt.Color(231, 38, 2));
        btnuppriceall.setText("ปรับราคาทุก Branch Group");
        btnuppriceall.setName("d_btncon1"); // NOI18N
        btnuppriceall.setOpaque(true);
        btnuppriceall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnuppriceallActionPerformed(evt);
            }
        });

        btnuppromotionall.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        btnuppromotionall.setForeground(new java.awt.Color(246, 17, 17));
        btnuppromotionall.setText("ปรับโปรโมชั่นทุก Branch Group");
        btnuppromotionall.setName("d_btncon2"); // NOI18N
        btnuppromotionall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnuppromotionallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(btnuppriceall, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnuppromotionall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnuppriceall)
                            .addComponent(btnuppromotionall)))
                    .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 196, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("กำหนดราคาขาย/โปรโมชั่นแต่ละ Branch Group", jPanel12);

        jPanel40.setBackground(new java.awt.Color(190, 253, 245));
        jPanel40.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        t_pcourse.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pcourse.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_pcourseFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_pcourseFocusLost(evt);
            }
        });
        t_pcourse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_pcourseKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_pcourseKeyTyped(evt);
            }
        });

        d_lblh1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh1.setText("PLU Code");
        d_lblh1.setName("d_lblh1"); // NOI18N

        d_lblh3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh3.setText("ลำดับ");
        d_lblh3.setName("d_lblh1"); // NOI18N

        t_no.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t_no.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        t_no.setText("1");
        t_no.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        t_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_noFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_noFocusLost(evt);
            }
        });
        t_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_noKeyPressed(evt);
            }
        });

        btnsearchc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchcActionPerformed(evt);
            }
        });

        t_pcoursename.setBackground(new java.awt.Color(249, 252, 186));
        t_pcoursename.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pcoursename.setFocusable(false);
        t_pcoursename.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_pcoursenameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_pcoursenameFocusLost(evt);
            }
        });
        t_pcoursename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_pcoursenameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_pcoursenameKeyTyped(evt);
            }
        });

        d_lblh4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh4.setText("รายละเอียด");
        d_lblh4.setName("d_lblh1"); // NOI18N

        t_qty1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t_qty1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_qty1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_qty1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_qty1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_qty1FocusLost(evt);
            }
        });
        t_qty1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_qty1KeyPressed(evt);
            }
        });

        d_lblunit3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblunit3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblunit3.setText("จำนวน");
        d_lblunit3.setName("d_lblunit"); // NOI18N

        t_pkic.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t_pkic.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_pkic.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pkic.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_pkicFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_pkicFocusLost(evt);
            }
        });
        t_pkic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_pkicKeyPressed(evt);
            }
        });

        d_lblunit4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblunit4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblunit4.setText("เวลาPrint");
        d_lblunit4.setName("d_lblunit"); // NOI18N

        t_peat.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t_peat.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_peat.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_peat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_peatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_peatFocusLost(evt);
            }
        });
        t_peat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_peatKeyPressed(evt);
            }
        });

        d_lblunit5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblunit5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblunit5.setText("เวลาทาน");
        d_lblunit5.setName("d_lblunit"); // NOI18N

        t_pserve.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t_pserve.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_pserve.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pserve.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_pserveFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_pserveFocusLost(evt);
            }
        });
        t_pserve.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_pserveKeyPressed(evt);
            }
        });

        d_lblunit6.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblunit6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblunit6.setText("เวลาเสริฟ");
        d_lblunit6.setName("d_lblunit"); // NOI18N

        t_pcook.setBackground(new java.awt.Color(249, 252, 186));
        t_pcook.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t_pcook.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_pcook.setFocusable(false);
        t_pcook.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pcook.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_pcookKeyPressed(evt);
            }
        });

        d_lblunit7.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblunit7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblunit7.setText("เวลาปรุง");
        d_lblunit7.setName("d_lblunit"); // NOI18N

        db_btnOKc.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnOKc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Actions-document-save-icon1.png"))); // NOI18N
        db_btnOKc.setText("บันทึก");
        db_btnOKc.setName("db_btnOKc"); // NOI18N
        db_btnOKc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnOKcActionPerformed(evt);
            }
        });

        db_btnCancelc.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnCancelc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Close-2-icon.png"))); // NOI18N
        db_btnCancelc.setText("ยกเลิก");
        db_btnCancelc.setName("db_btnCancelc"); // NOI18N
        db_btnCancelc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnCancelcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addComponent(d_lblh3)
                        .addGap(18, 18, 18)
                        .addComponent(d_lblh1))
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addComponent(t_no, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_pcourse, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnsearchc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t_pcoursename, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d_lblh4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(t_qty1)
                            .addComponent(d_lblunit3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(d_lblunit4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t_pkic, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(d_lblunit6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t_pserve, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(d_lblunit5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t_peat, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(d_lblunit7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t_pcook, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnOKc, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnCancelc, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addComponent(db_btnOKc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(db_btnCancelc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addComponent(d_lblunit7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_pcook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel40Layout.createSequentialGroup()
                            .addComponent(d_lblunit6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(t_pserve, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel40Layout.createSequentialGroup()
                            .addComponent(d_lblunit5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(t_peat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(d_lblunit4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_pkic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(d_lblh3)
                                    .addComponent(d_lblh1)
                                    .addComponent(d_lblh4)
                                    .addComponent(d_lblunit3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(t_qty1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t_pcoursename, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnsearchc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t_pcourse, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t_no, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );

        jPanel41.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblcourse.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tblcourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ลำดับที่", "Plu Code", "รายละเอียด", "จำนวน", "เวลา Print", "เวลาเสริฟ", "เวลาทาน", "เวลาปรุง"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblcourse.setName("tblcourse"); // NOI18N
        tblcourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblcourseMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblcourseMouseReleased(evt);
            }
        });
        tblcourse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblcourseKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblcourse);
        if (tblcourse.getColumnModel().getColumnCount() > 0) {
            tblcourse.getColumnModel().getColumn(2).setPreferredWidth(200);
        }

        db_btndeletec.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btndeletec.setText("Delete");
        db_btndeletec.setName("db_btnOK"); // NOI18N
        db_btndeletec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btndeletecActionPerformed(evt);
            }
        });

        db_btndeletecall.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btndeletecall.setText("Delete All");
        db_btndeletecall.setName("db_btnOK"); // NOI18N
        db_btndeletecall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btndeletecallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db_btndeletec, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_btndeletecall, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane2)
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(db_btndeletec, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btndeletecall, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(154, 154, 154))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(242, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("รายละเอียดสินค้า Course", jPanel23);

        jPanel43.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "ข้อมูลเกี่ยวกับ Article", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Norasi", 0, 14))); // NOI18N

        sap_code.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        sap_code.setText("sap_code");
        sap_code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sap_codeKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel2.setText("Article Code");

        jLabel3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel3.setText("Article Name");

        sap_name.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        sap_name.setText("sap_name");

        jLabel4.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel4.setText("Article Barcode");

        sap_barcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        sap_barcode.setText("sap_barcode");

        jLabel5.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel5.setText("Article JDE");

        sap_jde.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        sap_jde.setText("sap_jde");

        jLabel6.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel6.setText("Article Unit");

        sap_unit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        sap_unit.setText("sap_unit");

        jLabel7.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jLabel7.setText("Article Active");

        buttonGroup_sap.add(rad_sap_active);
        rad_sap_active.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        rad_sap_active.setText("Active");

        buttonGroup_sap.add(rad_sap_noneactive);
        rad_sap_noneactive.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        rad_sap_noneactive.setText("None Active");

        btn_article.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btn_article.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_articleActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Close-2-icon.png"))); // NOI18N
        jButton1.setText("Clear Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sap_code, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_article, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sap_name, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sap_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sap_jde, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sap_unit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rad_sap_active, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rad_sap_noneactive, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(sap_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_article, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sap_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sap_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(sap_jde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(sap_unit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(rad_sap_active)
                    .addComponent(rad_sap_noneactive))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(216, Short.MAX_VALUE))
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(405, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SAP", jPanel42);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuFunc.setText("ฟังก์ชั่น");
        menuFunc.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        menuFunc.setName("menuFunc"); // NOI18N
        menuFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFuncActionPerformed(evt);
            }
        });

        menuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuNew.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuNew.setText("เพิ่มรายการ");
        menuNew.setName("menuNew"); // NOI18N
        menuFunc.add(menuNew);

        menuCancel.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        menuCancel.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuCancel.setText("ยกเลิก");
        menuCancel.setName("menuCancel"); // NOI18N
        menuCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCancelActionPerformed(evt);
            }
        });
        menuFunc.add(menuCancel);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSave.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuSave.setText("บันทึกข้อมูล");
        menuSave.setName("menuSave"); // NOI18N
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        menuFunc.add(menuSave);

        menuDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuDelete.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuDelete.setText("ลบข้อมูล");
        menuDelete.setName("menuDelete"); // NOI18N
        menuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteActionPerformed(evt);
            }
        });
        menuFunc.add(menuDelete);

        jSeparator1.setName("jSpeparator1"); // NOI18N
        menuFunc.add(jSeparator1);

        menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuExit.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        menuExit.setText("Exit");
        menuExit.setName("menuExit"); // NOI18N
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        menuFunc.add(menuExit);

        jMenuBar2.add(menuFunc);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1024, 793));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void checkuserconfig() {
        //MenuName = Mast1
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getPlu3().equals("1")) {
            btnNew.setEnabled(false);
            btnSave.setEnabled(false);
            btnDelete.setEnabled(false);
            menuSave.setEnabled(false);
            menuDelete.setEnabled(false);
            menuNew.setEnabled(false);
            db_btnsavepset.setEnabled(false);
            db_btndel.setEnabled(false);

            db_btnOK.setEnabled(false);
            db_btnInsert.setEnabled(false);
            db_btnDelete.setEnabled(false);
            db_btnDeleteAll.setEnabled(false);
            btnuppriceall.setEnabled(false);
            btnuppromotionall.setEnabled(false);
        }
        if (userrec.getPlu3().equals("2")) {
            btnNew.setEnabled(true);
            btnSave.setEnabled(true);
            btnDelete.setEnabled(false);
            menuSave.setEnabled(true);
            menuDelete.setEnabled(false);
            menuNew.setEnabled(true);
            db_btnsavepset.setEnabled(true);
            db_btndel.setEnabled(false);
            db_btnOK.setEnabled(true);
            db_btnInsert.setEnabled(true);
            db_btnDelete.setEnabled(false);
            db_btnDeleteAll.setEnabled(false);
            btnuppriceall.setEnabled(true);
            btnuppromotionall.setEnabled(true);
        }
        if (userrec.getPlu3().equals("3")) {
            btnNew.setEnabled(true);
            btnSave.setEnabled(true);
            btnDelete.setEnabled(true);
            menuSave.setEnabled(true);
            menuDelete.setEnabled(true);
            menuNew.setEnabled(true);
            db_btnsavepset.setEnabled(true);
            db_btndel.setEnabled(true);
            db_btnOK.setEnabled(true);
            db_btnInsert.setEnabled(true);
            db_btnDelete.setEnabled(true);
            db_btnDeleteAll.setEnabled(true);
            btnuppriceall.setEnabled(true);
            btnuppromotionall.setEnabled(true);
        }
    }
    private void menuCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCancelActionPerformed
        btnCancelActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_menuCancelActionPerformed

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed
        btnSaveActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_menuSaveActionPerformed

    private void menuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteActionPerformed
        //btnDeteteActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_menuDeleteActionPerformed

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        btnExitActionPerformed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_menuExitActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        setclearfrm();
        txtfPcode.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (!txtfPcode.getText().trim().equals("")) {
            if (save()) {
                article _art = new article(
                        txtfPcode.getText().trim(),
                        sap_code.getText().trim(),
                        sap_name.getText(),
                        sap_barcode.getText().trim(),
                        sap_unit.getText(),
                        sap_jde.getText().trim(),
                        (rad_sap_active.isSelected() ? "Y" : "N"));
                if (_art.execute()) {

                }
                setclearfrm();
                txtfPcode.requestFocus();
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        setclearfrm();
        txtfPcode.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        if (chkqtybalance(txtfPcode.getText())) {
            btnSearchProduct();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnShowActionPerformed

    private void d_rdoCustomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_rdoCustomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d_rdoCustomActionPerformed

    private void txtfmacostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmacostFocusLost
        try {
            Float ch = Float.parseFloat(txtfmacost.getValue().toString());
            if (ch > 0) {
                try {
                    Float ser = Float.parseFloat(txtfmacost.getText());
                    if (ser <= 0) {
                        txtfmacost.setText("0.00");
                    }
                } catch (Exception e) {
                }
            }

        } catch (Exception e) {
            txtfmacost.setText("0.00");
        }
    }//GEN-LAST:event_txtfmacostFocusLost

    private void txtfmlcostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmlcostFocusLost
        try {
            Float ch = Float.parseFloat(txtfmlcost.getValue().toString());
            if (ch > 0) {
                try {
                    Float ser = Float.parseFloat(txtfmlcost.getText());
                    if (ser <= 0) {
                        txtfmlcost.setText("0.00");
                    }
                } catch (Exception e) {
                }
            }

        } catch (Exception e) {
            txtfmlcost.setText("0.00");
        }
    }//GEN-LAST:event_txtfmlcostFocusLost

    private void txtfmscostFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmscostFocusLost
        try {
            Float ch = Float.parseFloat(txtfmscost.getValue().toString());
            if (ch > 0) {
                try {
                    Float ser = Float.parseFloat(txtfmscost.getText());
                    if (ser <= 0) {
                        txtfmscost.setText("0.00");
                    }
                } catch (Exception e) {
                }
            }

        } catch (Exception e) {
            txtfmscost.setText("0.00");
        }
        calpercost();
    }//GEN-LAST:event_txtfmscostFocusLost

    private void txtfmWholeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmWholeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfmscost.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmWholeKeyPressed

    private void txtfmWholeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmWholeFocusGained
        txtfmWhole.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmWholeFocusGained

    private void txtfmPintoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmPintoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfmWhole.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmPintoKeyPressed

    private void txtfmPintoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmPintoFocusGained
        txtfmPinto.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmPintoFocusGained

    private void txtfmDeliveryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmDeliveryKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfmPinto.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmDeliveryKeyPressed

    private void txtfmDeliveryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmDeliveryFocusGained
        txtfmDelivery.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmDeliveryFocusGained

    private void txtfmTakeAwayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmTakeAwayKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfmDelivery.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmTakeAwayKeyPressed

    private void txtfmTakeAwayFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmTakeAwayFocusGained
        txtfmTakeAway.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmTakeAwayFocusGained

    private void txtfmEatInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmEatInKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtfmTakeAway.requestFocus();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmEatInKeyPressed

    private void txtfmEatInFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmEatInFocusGained

        txtfmEatIn.selectAll();
    }//GEN-LAST:event_txtfmEatInFocusGained

    private void d_rdoHaveMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_rdoHaveMaterialActionPerformed
        chkPLUtype();
        // TODO add your handling code here:
    }//GEN-LAST:event_d_rdoHaveMaterialActionPerformed

    private void d_rdoactiveNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_rdoactiveNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d_rdoactiveNoActionPerformed

    private void btn_F1_unit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_F1_unit1ActionPerformed
        try {
            if (txtfpgroup.isEditable()) {
                Groupfile dialog = new Groupfile(new NimbusFrame(), true);
                dialog.setVisible(true);

            }
        } catch (Exception e) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_F1_unit1ActionPerformed

    private void btnsearchplu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchplu1ActionPerformed
        if (txtfpgroup.isEditable()) {
            btnSearchgroupfile();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchplu1ActionPerformed

    private void txtrefcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrefcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrefcodeActionPerformed

    private void btn_F1_unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_F1_unitActionPerformed

        try {
            if (combo_unit.isEnabled()) {

                UnitType dialog = new UnitType(new NimbusFrame(), true);
                dialog.setVisible(true);

                loadcombounit();
            }
        } catch (Exception e) {
        }
        // TODO add your handling code here:


    }//GEN-LAST:event_btn_F1_unitActionPerformed

    private void txtpareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpareaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpareaActionPerformed

    private void txtfpgroupKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpgroupKeyReleased
// TODO add your handling code here:
    }//GEN-LAST:event_txtfpgroupKeyReleased

    private void txtvendorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtvendorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtvendorKeyReleased

    private void btn_F1_unit4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_F1_unit4ActionPerformed
        try {
            if (combo_unit.isEnabled()) {
                UnitType dialog = new UnitType(new NimbusFrame(), true);
                dialog.setVisible(true);

                loadcombounit();
            }
        } catch (Exception e) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_F1_unit4ActionPerformed

    private void txtpabdeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpabdeptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpabdeptActionPerformed

    private void btnsearchplu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchplu3ActionPerformed
        if (txtvendor.isEditable()) {
            btnSearchvender();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchplu3ActionPerformed

    private void btn_F1_unit5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_F1_unit5ActionPerformed
        try {
            if (txtvendor.isEditable()) {
                VenderFile dialog = new VenderFile(new NimbusFrame(), true);
                dialog.setVisible(true);

            }
        } catch (Exception e) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_F1_unit5ActionPerformed

    private void txtfmbpackFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmbpackFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmbpackFocusLost

    private void txtfBgroup1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfBgroup1FocusGained
        txtfBgroup1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1FocusGained

    private void txtfBgroup1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfBgroup1FocusLost
        if (!txtfBgroup1.getText().trim().equals("")) {
            if (!setbgroup(txtfBgroup1.getText())) {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                txtfBgroup1.requestFocus();
                cleartxtbgroup();
            }
        }

        //showplu();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1FocusLost

    private void txtfBgroup1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtfmEatIn1.requestFocus();

        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnfindbgroup();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1KeyPressed

    private void btnsearchplu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchplu4ActionPerformed
        btnfindbgroup();
        txtfBgroup1.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchplu4ActionPerformed

    private void db_btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnOKActionPerformed
        if (savebgroup()) {
            txtfBgroup1.requestFocus();
        } else {
            txtfBgroup1.requestFocus();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnOKActionPerformed

    private void db_btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnCancelActionPerformed
        cleartxtbgroup();
        txtfBgroup1.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnCancelActionPerformed

    private void txtfmEatIn1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmEatIn1FocusGained

        txtfmEatIn1.selectAll();
    }//GEN-LAST:event_txtfmEatIn1FocusGained

    private void txtfmEatIn1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmEatIn1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtfmTakeAway1.requestFocus();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmEatIn1KeyPressed

    private void txtfmTakeAway1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmTakeAway1FocusGained
        txtfmTakeAway1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmTakeAway1FocusGained

    private void txtfmTakeAway1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmTakeAway1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfmDelivery1.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmTakeAway1KeyPressed

    private void txtfmDelivery1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmDelivery1FocusGained
        txtfmDelivery1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmDelivery1FocusGained

    private void txtfmDelivery1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmDelivery1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfmPinto1.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmDelivery1KeyPressed

    private void txtfmPinto1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmPinto1FocusGained
        txtfmPinto1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmPinto1FocusGained

    private void txtfmPinto1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmPinto1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfmWhole1.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmPinto1KeyPressed

    private void txtfmWhole1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmWhole1FocusGained
        txtfmWhole1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmWhole1FocusGained

    private void txtfmWhole1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmWhole1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfPro1.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmWhole1KeyPressed

    private void txtfPro1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfPro1FocusGained
        txtfPro1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPro1FocusGained

    private void txtfPro1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfPro1FocusLost
        if (txtfPro1.getText().equals("")) {
            txtfproname1.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPro1FocusLost

    private void txtfPro1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfPro1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtfPro1.setText("");
            txtfPro1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //if (!txtfBgroup1.getText().equals("") && !txtfPcode.getText().equals("") && !txtfBranchName.getText().equals("") && !txtfPdesc.getText().equals("")) {
            if (EnterPromotion(1)) {
                txtfPro2.requestFocus();
            }
            //} else {
            //    txtfPro2.requestFocus();
            // }

        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            //if (!txtfBgroup1.getText().equals("") && !txtfPcode.getText().equals("") && !txtfBranchName.getText().equals("")) {
            btnSearchPromotionSettext(1);
            //}

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPro1KeyPressed

    private void btnsearchplu5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchplu5ActionPerformed
        //if (!txtfBgroup1.getText().equals("") && !txtfPcode.getText().equals("") && !txtfBranchName.getText().equals("")) {
        btnSearchPromotionSettext(1);
        //}

        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchplu5ActionPerformed

    private void btnsearchplu6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchplu6ActionPerformed
        //if (!txtfBgroup1.getText().equals("") && !txtfPcode.getText().equals("") && !txtfBranchName.getText().equals("")) {
        btnSearchPromotionSettext(2);
        //}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchplu6ActionPerformed

    private void txtfPro2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfPro2FocusGained
        txtfPro2.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPro2FocusGained

    private void txtfPro2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfPro2FocusLost
        if (txtfPro2.getText().equals("")) {
            txtfproname2.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPro2FocusLost

    private void txtfPro2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfPro2KeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtfPro2.setText("");
            txtfPro2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //if (!txtfBgroup1.getText().equals("") && !txtfPcode.getText().equals("") && !txtfBranchName.getText().equals("") && !txtfPdesc.getText().equals("")) {
            if (EnterPromotion(2)) {
                txtfPro3.requestFocus();
            }
            //} else {
            //    txtfPro3.requestFocus();
            //}

        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            //if (!txtfBgroup1.getText().equals("") && !txtfPcode.getText().equals("") && !txtfBranchName.getText().equals("")) {
            btnSearchPromotionSettext(2);
            //}
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPro2KeyPressed

    private void btnsearchplu7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchplu7ActionPerformed
        //if (!txtfBgroup1.getText().equals("") && !txtfPcode.getText().equals("") && !txtfBranchName.getText().equals("")) {
        btnSearchPromotionSettext(3);
        //}
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchplu7ActionPerformed

    private void txtfPro3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfPro3FocusGained
        txtfPro3.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPro3FocusGained

    private void txtfPro3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfPro3FocusLost
        if (txtfPro3.getText().equals("")) {
            txtfproname3.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPro3FocusLost

    private void txtfPro3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfPro3KeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtfPro3.setText("");
            txtfPro3.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            //if (!txtfBgroup1.getText().equals("") && !txtfPcode.getText().equals("") && !txtfBranchName.getText().equals("") && !txtfPdesc.getText().equals("")) {
            if (EnterPromotion(3)) {

                db_btnOK.requestFocus();
            }
            //} else {

            //    db_btnOK.requestFocus();
            //}
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            //if (!txtfBgroup1.getText().equals("") && !txtfPcode.getText().equals("") && !txtfBranchName.getText().equals("")) {
            btnSearchPromotionSettext(3);
            //}

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPro3KeyPressed

    private void tblBgroupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBgroupMouseClicked
        indexbgrouptbl = tblBgroup.getSelectedRow();
        // TODO add your handling code here:
    }//GEN-LAST:event_tblBgroupMouseClicked

    private void tblBgroupMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBgroupMouseReleased
        if (evt.getClickCount() == 2) {
            int rowSelect = tblBgroup.getSelectedRow();
            String pcode = tblBgroup.getValueAt(rowSelect, 1).toString();
            String pname = tblBgroup.getValueAt(rowSelect, 2).toString();
            Double eatin = Double.parseDouble(tblBgroup.getValueAt(rowSelect, 3).toString());
            Double takeaway = Double.parseDouble(tblBgroup.getValueAt(rowSelect, 4).toString());
            Double delivery = Double.parseDouble(tblBgroup.getValueAt(rowSelect, 5).toString());
            Double pinto = Double.parseDouble(tblBgroup.getValueAt(rowSelect, 6).toString());
            Double whole = Double.parseDouble(tblBgroup.getValueAt(rowSelect, 7).toString());
            String pro1 = tblBgroup.getValueAt(rowSelect, 8).toString();
            String pro2 = tblBgroup.getValueAt(rowSelect, 9).toString();
            String pro3 = tblBgroup.getValueAt(rowSelect, 10).toString();
            txtfBgroup1.setText(pcode);
            txtfBranchName.setText(pname);

            txtfmEatIn1.setText(DoubleFmt.format(eatin));
            txtfmTakeAway1.setText(DoubleFmt.format(takeaway));
            txtfmDelivery1.setText(DoubleFmt.format(delivery));
            txtfmPinto1.setText(DoubleFmt.format(pinto));
            txtfmWhole1.setText(DoubleFmt.format(whole));
            txtfPro1.setText(pro1);
            txtfPro2.setText(pro2);
            txtfPro3.setText(pro3);
            settxtproname();

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tblBgroupMouseReleased

    private void tblBgroupKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblBgroupKeyReleased
        indexbgrouptbl = tblBgroup.getSelectedRow();

        // TODO add your handling code here:
    }//GEN-LAST:event_tblBgroupKeyReleased

    private void db_btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnDeleteActionPerformed
        deletebgroup();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnDeleteActionPerformed

    private void db_btnDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnDeleteAllActionPerformed
        deletebgroupall();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnDeleteAllActionPerformed

    private void txtfPdescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfPdescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPdescActionPerformed

    private void txtfPdescKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfPdescKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!txtfPcode.getText().trim().equals("")) {
                startfrm();
                txtfpgroup.requestFocus();
            } else {
                txtfPcode.requestFocus();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPdescKeyPressed

    private void txtfpsetcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpsetcodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!setPsetUnit()) {
                JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                txtfpsetcode.requestFocus();
                cleartxtfPset();
            } else {
                txtfpsetgroup.requestFocus();
            }

        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchProductinPset();
        }

    }//GEN-LAST:event_txtfpsetcodeKeyPressed

    private void txtfpsetnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpsetnameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfpsetqty.requestFocus();
        }
    }//GEN-LAST:event_txtfpsetnameKeyPressed

    private void btnsearchpluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchpluActionPerformed
        btnSearchProductinPset();

    }//GEN-LAST:event_btnsearchpluActionPerformed

    private void txtfpsetunitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpsetunitKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            db_btnsavepset.requestFocus();
        }
    }//GEN-LAST:event_txtfpsetunitKeyPressed

    private void txtfpsetqtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfpsetqtyFocusGained
        txtfpsetqty.requestFocus();
        txtfpsetqty.selectAll();

            }//GEN-LAST:event_txtfpsetqtyFocusGained

    private void txtfpsetqtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpsetqtyKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            db_btnsavepset.requestFocus();
        }
    }//GEN-LAST:event_txtfpsetqtyKeyPressed

    private void tblPsetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPsetMouseClicked
        indexpsettbl = tblPset.getSelectedRow();

    }//GEN-LAST:event_tblPsetMouseClicked

    private void db_btnsavepsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnsavepsetActionPerformed

        if (savePset()) {
            txtfpsetcode.requestFocus();
        }

    }//GEN-LAST:event_db_btnsavepsetActionPerformed

    private void db_btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btncancelActionPerformed

        cleartxtfPset();
        txtfpsetcode.requestFocus();
    }//GEN-LAST:event_db_btncancelActionPerformed

    private void db_btndelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btndelActionPerformed
        deletepset();


    }//GEN-LAST:event_db_btndelActionPerformed

    private void txtfpgroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpgroupKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtparea.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
                if (txtfpgroup.isEditable()) {
                    btnSearchgroupfile();
                }
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpgroupKeyPressed

    private void txtfpgroupFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfpgroupFocusLost
        if (!txtfpgroup.getText().trim().equals("")) {
            if (!getGroupName(txtfpgroup.getText()).equals("")) {
                txtfpgroupname.setText(getGroupName(txtfpgroup.getText()));
                txtparea.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this, "ระบุหมวดสินค้าไม่ถูกต้อง กรุณาระบุให้ถูกต้อง");
                txtfpgroupname.setText("");
                txtfpgroup.setText("");
                txtfpgroup.requestFocus();
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpgroupFocusLost

    private void txtfPcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfPcodeKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                if (chkrawmate(txtfPcode.getText())) {
                    setclearfrm();
                    txtfPcode.requestFocus();
                } else {
                    enterprocode();
                    showdatblbgroup(txtfPcode.getText());
                    txtbarcode.requestFocus();
                }
            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
                btnSearchProduct();
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfPcodeKeyPressed

    private void txtbarcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbarcodeKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtfPdesc.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbarcodeKeyPressed

    private void combo_unitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_unitKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtparea.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_unitKeyPressed

    private void txtpareaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpareaKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtrefcode.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpareaKeyPressed

    private void txtrefcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrefcodeKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtvendor.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrefcodeKeyPressed

    private void txtvendorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtvendorFocusLost
        if (!txtvendor.getText().trim().equals("")) {
            if (!getVenderName(txtvendor.getText()).equals("")) {
                txtvendorname.setText(getVenderName(txtvendor.getText()));
                txtfmbpack.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this, "ระบุรหัสผู้จำหน่ายไม่ถูกต้อง กรุณาระบุให้ถูกต้อง");
                txtvendorname.setText("");
                txtvendor.setText("");
                txtvendor.requestFocus();
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtvendorFocusLost

    private void txtvendorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtvendorKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtfmbpack.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
                if (txtvendor.isEditable()) {
                    btnSearchvender();
                }

            }
        } catch (Exception ex) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtvendorKeyPressed

    private void combo_unit1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_unit1KeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtfmbpack.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_unit1KeyPressed

    private void txtfmbpackKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmbpackKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtpabdept.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmbpackKeyPressed

    private void txtpabdeptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpabdeptKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtfmEatIn.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpabdeptKeyPressed

    private void txtfmscostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmscostKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtfmacost.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmscostKeyPressed

    private void txtfmlcostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmlcostKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtfmacost.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmlcostKeyPressed

    private void txtfmacostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfmacostKeyPressed

        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtfpgroup.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            }
        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmacostKeyPressed

    private void combo_unitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_unitKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtparea.requestFocus();

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_unitKeyReleased

    private void combo_unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_unitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_unitActionPerformed

    private void d_rdoSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_rdoSetActionPerformed

        chkTabPsetOpen();
        // TODO add your handling code here:
    }//GEN-LAST:event_d_rdoSetActionPerformed

    private void d_rdoNomalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_rdoNomalActionPerformed

        chkTabPsetOpen();
        // TODO add your handling code here:
    }//GEN-LAST:event_d_rdoNomalActionPerformed

    private void tblPsetMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPsetMouseReleased
        if (evt.getClickCount() == 2) {
            int rowSelect = tblPset.getSelectedRow();
            String pcode = tblPset.getValueAt(rowSelect, 0).toString();
            String pname = tblPset.getValueAt(rowSelect, 1).toString();
            String psetgroup = tblPset.getValueAt(rowSelect, 2).toString();
            String psetgroupqty = tblPset.getValueAt(rowSelect, 3).toString();
            String qty = tblPset.getValueAt(rowSelect, 4).toString();
            String unit = tblPset.getValueAt(rowSelect, 5).toString();

            txtfpsetcode.setText(pcode);
            txtfpsetname.setText(pname);
            txtfpsetgroup.setText(psetgroup);
            txtfpsetgroupqty.setText(psetgroupqty);
            txtfpsetqty.setText(qty);
            txtfpsetunit.setText(unit);

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPsetMouseReleased

    private void txtfpsetcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfpsetcodeFocusLost
//        if(!txtfpsetcode.getText().trim().equals(""))
//            {
//                if(setPsetUnit())
//                {
//                    txtfpsetqty.requestFocus();
//                }
//                else
//                {
//                    JOptionPane.showMessageDialog(this, "ระบุรหัสสินค้าไม่ถูกต้อง กรุณาระบุให้ถูกต้อง");
//                    cleartxtfPset();
//                    txtfpsetcode.requestFocus();
//                }
//                
//            }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpsetcodeFocusLost

    private void tblPsetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPsetKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPsetKeyPressed

    private void tblPsetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPsetKeyReleased
        indexpsettbl = tblPset.getSelectedRow();
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPsetKeyReleased

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        if (chkqtybalance(txtfPcode.getText())) {
            if (jTabbedPane1.isEnabledAt(2) == true) {
                if (!txtfPcode.getText().equals("")) {
                    txtfpsetcode.requestFocus();
                } else {
                    txtfPcode.requestFocus();
                }
            } else if (jTabbedPane1.isEnabledAt(0) == true) {
                if (!txtfPcode.getText().equals("")) {
                    txtfpgroup.requestFocus();
                } else {
                    txtfPcode.requestFocus();
                }

            } else if (jTabbedPane1.isEnabledAt(5) == true) {
                if (!sap_code.getText().equals("")) {
                    sap_code.requestFocus();
                } else {
                    sap_code.requestFocus();
                }

            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void txtfpsetcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpsetcodeKeyReleased
        if (!setPsetUnit()) {
            txtfpsetname.setText("");
            txtfpsetqty.setText("1");
            txtfpsetgroup.setText("1");
            txtfpsetgroupqty.setText("1");
            txtfpsetunit.setText("");
            txtfpsetcode.setEditable(true);
        } else {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpsetcodeKeyReleased

    private void d_rdoGoodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_rdoGoodsActionPerformed
        chkPLUtype();
        // TODO add your handling code here:
    }//GEN-LAST:event_d_rdoGoodsActionPerformed

    private void d_rdoGoodsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d_rdoGoodsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_d_rdoGoodsMouseClicked

    private void txtfmEatInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfmEatInFocusLost
        calpercost();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfmEatInFocusLost

    private void txtfpsetgroupFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfpsetgroupFocusGained
        txtfpsetgroup.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpsetgroupFocusGained

    private void txtfpsetgroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpsetgroupKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfpsetgroupqty.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpsetgroupKeyPressed

    private void txtfpsetsetgroupFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfpsetsetgroupFocusGained
        txtfpsetsetgroup.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpsetsetgroupFocusGained

    private void txtfpsetsetgroupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpsetsetgroupKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtfpsetcode.requestFocus();

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpsetsetgroupKeyPressed

    private void txtfpsetgroupFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfpsetgroupFocusLost
        setgrouppset(txtfPcode.getText(), txtfpsetgroup.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpsetgroupFocusLost

    private void jTabbedPane1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1FocusLost

    private void jPanel31FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel31FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel31FocusLost

    private void txtfBgroup1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyReleased
        txtfBgroup1.setText(txtfBgroup1.getText().toUpperCase());
        if (!setbgroup(txtfBgroup1.getText())) {
            txtfBranchName.setText("");
            txtfmEatIn1.setText("0.00");
            txtfmTakeAway1.setText("0.00");
            txtfmDelivery1.setText("0.00");
            txtfmPinto1.setText("0.00");
            txtfmWhole1.setText("0.00");
            txtfPro1.setText("");
            txtfPro2.setText("");
            txtfPro3.setText("");
            txtfproname1.setText("");
            txtfproname2.setText("");
            txtfproname3.setText("");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1KeyReleased

    private void db_btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnInsertActionPerformed
        savebgroupall();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnInsertActionPerformed

    private void txtfBgroup1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyTyped
        if (txtfBgroup1.getText().length() >= 3) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1KeyTyped

    private void menuFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFuncActionPerformed
        btnNewActionPerformed(evt);

        // TODO add your handling code here:
    }//GEN-LAST:event_menuFuncActionPerformed

    private void txtfpsetgroupqtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfpsetgroupqtyFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfpsetgroupqtyFocusGained

    private void txtfpsetgroupqtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfpsetgroupqtyKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtfpsetqty.requestFocus();
        }
    }//GEN-LAST:event_txtfpsetgroupqtyKeyPressed

    private void btnuppriceallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnuppriceallActionPerformed
        // TODO add your handling code here:

        if (txtfPcode.getText().equals("")) {
            return;
        }
        if (!PUtility.ShowConfirmMsg("ยืนยันการปรับราคาสินค้า สำหรับทุก Branch Group ?...")) {
            return;
        }
        double Eatin = Double.parseDouble(PUtility.ConvertReal(txtfmEatIn1.getText()));
        double TakeAway = Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway1.getText()));
        double Delivery = Double.parseDouble(PUtility.ConvertReal(txtfmDelivery1.getText()));
        double Pinto = Double.parseDouble(PUtility.ConvertReal(txtfmPinto1.getText()));
        double Whole = Double.parseDouble(PUtility.ConvertReal(txtfmWhole1.getText()));
        double TotPrice = Eatin + TakeAway + Delivery + Pinto + Whole;
        if (TotPrice == 0) {
            PUtility.ShowMsg("กรุณากำหนด ราคาขายสินค้า ก่อน ทำรายการนี้...");
        } else {
            try {
                stmt = (Statement) db.con.createStatement();
                String sql = "Update blink set price1=?,price2 = ?,price3 = ?,price4 = ?,price5 = ?,lastup = ? where pcode = ? ";
                PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                prm.setDouble(1, Eatin);
                prm.setDouble(2, TakeAway);
                prm.setDouble(3, Delivery);
                prm.setDouble(4, Pinto);
                prm.setDouble(5, Whole);
                prm.setString(6, cvth.Unicode2ASCII(dateFmtSave.format(new java.util.Date())));
                prm.setString(7, cvth.Unicode2ASCII(txtfPcode.getText()));
                prm.executeUpdate();
                stmt.close();
                cleartxtbgroup();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Update Error", JOptionPane.ERROR_MESSAGE);
            }
            showdatblbgroup(txtfPcode.getText());
            cleartxtbgroup();
        }

    }//GEN-LAST:event_btnuppriceallActionPerformed

    private void btnuppromotionallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnuppromotionallActionPerformed
        // TODO add your handling code here:
        if (txtfPcode.getText().equals("")) {
            return;
        }
        if (!PUtility.ShowConfirmMsg("ยืนยันการปรับโปรโมชั่นสินค้า สำหรับทุก Branch Group ?...")) {
            return;
        }

        try {
            stmt = (Statement) db.con.createStatement();
            String sql = "Update blink set promotion1=?,promotion2 = ?,promotion3 = ?,lastup = ? where pcode = ? ";
            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
            prm.setString(1, txtfPro1.getText());
            prm.setString(2, txtfPro2.getText());
            prm.setString(3, txtfPro3.getText());
            prm.setString(4, cvth.Unicode2ASCII(dateFmtSave.format(new java.util.Date())));
            prm.setString(5, cvth.Unicode2ASCII(txtfPcode.getText()));
            prm.executeUpdate();
            stmt.close();
            cleartxtbgroup();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Update Error", JOptionPane.ERROR_MESSAGE);
        }
        showdatblbgroup(txtfPcode.getText());
        cleartxtbgroup();


    }//GEN-LAST:event_btnuppromotionallActionPerformed

    private void t_pcooktimeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcooktimeKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtfkitname.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
                btnFindOption();
            }

        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcooktimeKeyPressed

    private void txtfOptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfOptionFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfOptionFocusGained

    private void txtfOptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfOptionFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfOptionFocusLost

    private void txtfOptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfOptionKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                t_pcooktime.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
                btnFindOption();
            }

        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfOptionKeyPressed

    private void btnsearchplu8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchplu8ActionPerformed

        btnFindOption();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchplu8ActionPerformed

    private void btnsearchplu9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchplu9ActionPerformed
        btnSetOption();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchplu9ActionPerformed

    private void txtfkitnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfkitnameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfkitnameFocusGained

    private void txtfkitnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfkitnameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfkitnameFocusLost

    private void txtfkitnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfkitnameKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
            } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                txtfOption.requestFocus();

            } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
                // btnFindOption();
            }

        } catch (Exception ex) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfkitnameKeyPressed

    private void d_rdocouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_rdocouseActionPerformed
        chkTabPsetOpen();
        // TODO add your handling code here:
    }//GEN-LAST:event_d_rdocouseActionPerformed

    private void t_pcourseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pcourseFocusGained
        t_pcourse.setText(t_pcourse.getText());
        t_pcourse.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcourseFocusGained

    private void t_pcourseFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pcourseFocusLost
        if (!t_pcourse.getText().trim().equals("")) {
            if (setcourseName(t_pcourse.getText())) {
                t_qty1.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this, "ระบุรหัสสินค้าไม่ถูกต้อง กรุณาระบุให้ถูกต้อง");
                cleartxtpcourse();
                t_pcourse.requestFocus();
            }

        }
        t_pcourse.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcourseFocusLost

    private void t_pcourseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcourseKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!t_pcourse.getText().equals("")) {
                t_qty1.requestFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchPcourse();
        }
    }//GEN-LAST:event_t_pcourseKeyPressed

    private void t_pcourseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcourseKeyTyped
        if (t_pcourse.getText().length() >= 13) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcourseKeyTyped

    private void t_noFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_noFocusGained

        t_no.setText(t_no.getText());
        t_no.selectAll();
    }//GEN-LAST:event_t_noFocusGained

    private void t_noFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_noFocusLost
        cleartxtpcourse();
        setDataTotxt(txtfPcode.getText(), t_no.getText());
        t_no.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_noFocusLost

    private void t_noKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_noKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            t_pcourse.requestFocus();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_t_noKeyPressed

    private void btnsearchcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchcActionPerformed
        btnSearchPcourse();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchcActionPerformed

    private void t_pcoursenameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pcoursenameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcoursenameFocusGained

    private void t_pcoursenameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pcoursenameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcoursenameFocusLost

    private void t_pcoursenameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcoursenameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcoursenameKeyPressed

    private void t_pcoursenameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcoursenameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcoursenameKeyTyped

    private void t_qty1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_qty1FocusGained
        t_qty1.setText(t_qty1.getText());
        t_qty1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_qty1FocusGained

    private void t_qty1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_qty1FocusLost
        t_qty1.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_qty1FocusLost

    private void t_qty1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_qty1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_pkic.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_qty1KeyPressed

    private void t_pkicFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pkicFocusGained
        t_pkic.setText(t_pkic.getText());
        t_pkic.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pkicFocusGained

    private void t_pkicFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pkicFocusLost
        t_pkic.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pkicFocusLost

    private void t_pkicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pkicKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_pserve.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pkicKeyPressed

    private void t_peatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_peatFocusGained
        t_peat.setText(t_peat.getText());
        t_peat.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_peatFocusGained

    private void t_peatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_peatFocusLost
        t_peat.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_peatFocusLost

    private void t_peatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_peatKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            db_btnOKc.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_peatKeyPressed

    private void t_pserveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pserveFocusGained
        t_pserve.setText(t_pserve.getText());
        t_pserve.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pserveFocusGained

    private void t_pserveFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pserveFocusLost
        t_pserve.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pserveFocusLost

    private void t_pserveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pserveKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            t_peat.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pserveKeyPressed

    private void t_pcookKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcookKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            db_btnOKc.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcookKeyPressed

    private void db_btnOKcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnOKcActionPerformed
        setCourseYes();
        if (txtfPcode.getText().equals(t_pcourse.getText())) {
            JOptionPane.showMessageDialog(null, "กรุณกำหนดรหัสสินค้าให้ถูกต้อง...");
            return;
        }
        if (!chkproduct(txtfPcode.getText())) {
            int confirm = JOptionPane.showConfirmDialog(this, "รายการสินค้านี้ยังไม่ได้มีการบันทึกข้อมูล คุณต้องการบันทึกข้อมูลก่อนหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if (save()) {
                    savepcourse();
                    txtfPcode.setBackground(new java.awt.Color(255, 246, 143));
                    txtfPcode.setEditable(false);
                }
            }
        } else {
            savepcourse();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnOKcActionPerformed

    private void db_btnCancelcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnCancelcActionPerformed
//        clearplutxt();
        //clearDisplay();
        cleartxt();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnCancelcActionPerformed

    private void tblcourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblcourseMouseClicked
        //indextbl = tbltable.getSelectedRow();
        // TODO add your handling code here:
    }//GEN-LAST:event_tblcourseMouseClicked

    private void tblcourseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblcourseMouseReleased
        if (evt.getClickCount() == 2) {
            int rowSelect = tblcourse.getSelectedRow();
            String nocode = tblcourse.getValueAt(rowSelect, 0).toString();
            setDataTotxt(txtfPcode.getText(), nocode);

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tblcourseMouseReleased

    private void tblcourseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblcourseKeyReleased
        // TODO add your handling code here:
   }//GEN-LAST:event_tblcourseKeyReleased

    private void db_btndeletecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btndeletecActionPerformed
        deletepcourse();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btndeletecActionPerformed

    private void db_btndeletecallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btndeletecallActionPerformed
        String mcode = txtfPcode.getText();

        if (chkpcourse(mcode)) {
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลทั้งหมดของหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                deletepcourseall();
            }
        }
        //deleteintbl3All();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btndeletecallActionPerformed

    private void PShortDescKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PShortDescKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtvendor.requestFocus();
        }
    }//GEN-LAST:event_PShortDescKeyPressed

    private void PShortDescKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PShortDescKeyTyped
        // TODO add your handling code here:
        if (PShortDesc.getText().length() >= 20) {
            evt.consume();
        }
    }//GEN-LAST:event_PShortDescKeyTyped

    private void btn_bomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bomActionPerformed
        String pcode = txtfPcode.getText().trim();
        if (pcode.length() <= 0) {
            return;
        }
        setup_posbom frm = new setup_posbom(null, true, pcode);
        frm.setVisible(true);
    }//GEN-LAST:event_btn_bomActionPerformed

    private void btn_articleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_articleActionPerformed
        browse_sap_article frm = new browse_sap_article(null, true);
        frm.setVisible(true);
        if (frm.getArticle().isArticle()) {
            sap_code.setText(frm.getArticle().getSap_article());
            sap_name.setText(frm.getArticle().getSap_article_name());
            sap_barcode.setText(frm.getArticle().getSap_article_barcode());
            sap_jde.setText(frm.getArticle().getSap_article_jde());
            sap_unit.setText(frm.getArticle().getSap_article_unit());

            if (frm.getArticle().getSap_article_active().equals("Y")) {
                rad_sap_active.setSelected(true);
            } else {
                rad_sap_noneactive.setSelected(true);
            }
        }
        sap_code.requestFocus();
    }//GEN-LAST:event_btn_articleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        us.openTextFiled(sap_code, true, true);
        us.closeTextFiled(sap_name, true);
        us.closeTextFiled(sap_barcode, true);
        us.closeTextFiled(sap_jde, true);
        us.closeTextFiled(sap_unit, true);
        rad_sap_active.setSelected(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sap_codeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sap_codeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (sap_code.getText().trim().length() > 0) {
                _article = _article.seekArticleMaster(sap_code.getText().trim());
                if (_article.isArticle()) {
                    sap_code.setText(_article.getSap_article());
                    sap_name.setText(_article.getSap_article_name());
                    sap_barcode.setText(_article.getSap_article_barcode());
                    sap_jde.setText(_article.getSap_article_jde());
                    sap_unit.setText(_article.getSap_article_unit());
                }
                us.openTextFiled(sap_code, false, true);
            }
        } else if (evt.getKeyCode() == evt.VK_F1) {
            btn_articleActionPerformed(null);
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            if (sap_code.getText().trim().length() > 0) {
                jButton1ActionPerformed(null);
            } else {
                jTabbedPane1.setSelectedIndex(0);
                txtfpgroup.requestFocus();
            }
        }
    }//GEN-LAST:event_sap_codeKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(productPLU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(productPLU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(productPLU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(productPLU.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                productPLU dialog = new productPLU(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PShortDesc;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btn_F1_unit;
    private javax.swing.JButton btn_F1_unit1;
    private javax.swing.JButton btn_F1_unit4;
    private javax.swing.JButton btn_F1_unit5;
    private javax.swing.JButton btn_article;
    private javax.swing.JButton btn_bom;
    private javax.swing.JButton btnsearchc;
    private javax.swing.JButton btnsearchplu;
    private javax.swing.JButton btnsearchplu1;
    private javax.swing.JButton btnsearchplu3;
    private javax.swing.JButton btnsearchplu4;
    private javax.swing.JButton btnsearchplu5;
    private javax.swing.JButton btnsearchplu6;
    private javax.swing.JButton btnsearchplu7;
    private javax.swing.JButton btnsearchplu8;
    private javax.swing.JButton btnsearchplu9;
    private javax.swing.JButton btnuppriceall;
    private javax.swing.JButton btnuppromotionall;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.ButtonGroup buttonGroup12;
    private javax.swing.ButtonGroup buttonGroup13;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.ButtonGroup buttonGroup_sap;
    private javax.swing.JComboBox combo_unit;
    private javax.swing.JComboBox combo_unit1;
    private javax.swing.JCheckBox d_chkchart1;
    private javax.swing.JCheckBox d_chkchart2;
    private javax.swing.JCheckBox d_chkchart3;
    private javax.swing.JLabel d_lblDelivery;
    private javax.swing.JLabel d_lblDelivery1;
    private javax.swing.JLabel d_lblPinto;
    private javax.swing.JLabel d_lblPinto1;
    private javax.swing.JLabel d_lblTake;
    private javax.swing.JLabel d_lblTake1;
    private javax.swing.JLabel d_lblWhole;
    private javax.swing.JLabel d_lblWhole1;
    private javax.swing.JLabel d_lblb1;
    private javax.swing.JLabel d_lblcharge;
    private javax.swing.JLabel d_lblcost;
    private javax.swing.JLabel d_lblcost2;
    private javax.swing.JLabel d_lblcost3;
    private javax.swing.JLabel d_lblcost4;
    private javax.swing.JLabel d_lblcost5;
    private javax.swing.JLabel d_lbldeacc;
    private javax.swing.JLabel d_lbldis;
    private javax.swing.JLabel d_lbldostrock;
    private javax.swing.JLabel d_lbleatin;
    private javax.swing.JLabel d_lbleatin1;
    private javax.swing.JLabel d_lblh1;
    private javax.swing.JLabel d_lblh3;
    private javax.swing.JLabel d_lblh4;
    private javax.swing.JLabel d_lblpcat;
    private javax.swing.JLabel d_lblpref;
    private javax.swing.JLabel d_lblprint;
    private javax.swing.JLabel d_lblprint2;
    private javax.swing.JLabel d_lblprosequence;
    private javax.swing.JLabel d_lblprosequence1;
    private javax.swing.JLabel d_lblprosequence2;
    private javax.swing.JLabel d_lblprosequence3;
    private javax.swing.JLabel d_lblpsale;
    private javax.swing.JLabel d_lblpservice;
    private javax.swing.JLabel d_lblpset;
    private javax.swing.JLabel d_lblpset1;
    private javax.swing.JLabel d_lblpset2;
    private javax.swing.JLabel d_lblpset3;
    private javax.swing.JLabel d_lblpset4;
    private javax.swing.JLabel d_lblpset5;
    private javax.swing.JLabel d_lblpset6;
    private javax.swing.JLabel d_lblpset7;
    private javax.swing.JLabel d_lblpstatus;
    private javax.swing.JLabel d_lblptype;
    private javax.swing.JLabel d_lblstock;
    private javax.swing.JLabel d_lblunit;
    private javax.swing.JLabel d_lblunit2;
    private javax.swing.JLabel d_lblunit3;
    private javax.swing.JLabel d_lblunit4;
    private javax.swing.JLabel d_lblunit5;
    private javax.swing.JLabel d_lblunit6;
    private javax.swing.JLabel d_lblunit7;
    private javax.swing.JLabel d_lblunitscale;
    private javax.swing.JLabel d_lblvat;
    private javax.swing.JLabel d_lblvendor;
    private javax.swing.JRadioButton d_rdoAuto;
    private javax.swing.JRadioButton d_rdoCustom;
    private javax.swing.JRadioButton d_rdoDiscountNo;
    private javax.swing.JRadioButton d_rdoDiscountYes;
    private javax.swing.JRadioButton d_rdoGoods;
    private javax.swing.JRadioButton d_rdoHaveMaterial;
    private javax.swing.JRadioButton d_rdoNomal;
    private javax.swing.JRadioButton d_rdoSet;
    private javax.swing.JRadioButton d_rdoactiveNo;
    private javax.swing.JRadioButton d_rdoactiveYes;
    private javax.swing.JRadioButton d_rdocouse;
    private javax.swing.JRadioButton d_rdodrink;
    private javax.swing.JRadioButton d_rdofood;
    private javax.swing.JRadioButton d_rdoporder1;
    private javax.swing.JRadioButton d_rdoporder2;
    private javax.swing.JRadioButton d_rdoporder3;
    private javax.swing.JRadioButton d_rdoporder4;
    private javax.swing.JRadioButton d_rdoproduct;
    private javax.swing.JRadioButton d_rdoserviceNo;
    private javax.swing.JRadioButton d_rdoserviceYes;
    private javax.swing.JRadioButton d_rdostatus1;
    private javax.swing.JRadioButton d_rdostatus2;
    private javax.swing.JRadioButton d_rdostatus3;
    private javax.swing.JRadioButton d_rdostockNo;
    private javax.swing.JRadioButton d_rdostockYes;
    private javax.swing.JRadioButton d_rdovatNo;
    private javax.swing.JRadioButton d_rdovatYes;
    private javax.swing.JButton db_btnCancel;
    private javax.swing.JButton db_btnCancelc;
    private javax.swing.JButton db_btnDelete;
    private javax.swing.JButton db_btnDeleteAll;
    private javax.swing.JButton db_btnInsert;
    private javax.swing.JButton db_btnOK;
    private javax.swing.JButton db_btnOKc;
    private javax.swing.JButton db_btncancel;
    private javax.swing.JButton db_btndel;
    private javax.swing.JButton db_btndeletec;
    private javax.swing.JButton db_btndeletecall;
    private javax.swing.JButton db_btnsavepset;
    private javax.swing.JLabel db_lblCount;
    private javax.swing.JLabel db_lblCount1;
    private javax.swing.JLabel db_lblCount2;
    private javax.swing.JLabel db_lblCount3;
    private javax.swing.JLabel db_lblbarcode;
    private javax.swing.JLabel db_lblpcode;
    private javax.swing.JLabel db_lblpersent;
    private javax.swing.JLabel db_lblpname;
    private javax.swing.JLabel db_lblprice;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox kic;
    private javax.swing.JMenuItem menuCancel;
    private javax.swing.JMenuItem menuDelete;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenu menuFunc;
    private javax.swing.JMenuItem menuNew;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JRadioButton psetselectn;
    private javax.swing.JRadioButton psetselecty;
    private javax.swing.JRadioButton rad_sap_active;
    private javax.swing.JRadioButton rad_sap_noneactive;
    private javax.swing.JTextField sap_barcode;
    private javax.swing.JTextField sap_code;
    private javax.swing.JTextField sap_jde;
    private javax.swing.JTextField sap_name;
    private javax.swing.JTextField sap_unit;
    private javax.swing.JFormattedTextField t_no;
    private javax.swing.JFormattedTextField t_pcook;
    private javax.swing.JFormattedTextField t_pcooktime;
    private javax.swing.JTextField t_pcourse;
    private javax.swing.JTextField t_pcoursename;
    private javax.swing.JFormattedTextField t_peat;
    private javax.swing.JFormattedTextField t_pkic;
    private javax.swing.JFormattedTextField t_pserve;
    private javax.swing.JFormattedTextField t_qty1;
    private javax.swing.JTable tblBgroup;
    private javax.swing.JTable tblPset;
    private javax.swing.JTable tblcourse;
    private javax.swing.JTextField txtbarcode;
    private javax.swing.JTextField txtfBgroup1;
    private javax.swing.JTextField txtfBranchName;
    private javax.swing.JTextField txtfOption;
    private javax.swing.JTextField txtfPcode;
    private javax.swing.JTextField txtfPdesc;
    private javax.swing.JTextField txtfPro1;
    private javax.swing.JTextField txtfPro2;
    private javax.swing.JTextField txtfPro3;
    private javax.swing.JTextField txtfkitname;
    private javax.swing.JFormattedTextField txtfmDelivery;
    private javax.swing.JFormattedTextField txtfmDelivery1;
    private javax.swing.JFormattedTextField txtfmEatIn;
    private javax.swing.JFormattedTextField txtfmEatIn1;
    private javax.swing.JFormattedTextField txtfmPinto;
    private javax.swing.JFormattedTextField txtfmPinto1;
    private javax.swing.JFormattedTextField txtfmTakeAway;
    private javax.swing.JFormattedTextField txtfmTakeAway1;
    private javax.swing.JFormattedTextField txtfmWhole;
    private javax.swing.JFormattedTextField txtfmWhole1;
    private javax.swing.JFormattedTextField txtfmacost;
    private javax.swing.JFormattedTextField txtfmbpack;
    private javax.swing.JFormattedTextField txtfmlcost;
    private javax.swing.JFormattedTextField txtfmscost;
    private javax.swing.JTextField txtfmtcost;
    private javax.swing.JTextField txtfpgroup;
    private javax.swing.JTextField txtfpgroupname;
    private javax.swing.JTextField txtfproname1;
    private javax.swing.JTextField txtfproname2;
    private javax.swing.JTextField txtfproname3;
    private javax.swing.JTextField txtfpsetcode;
    private javax.swing.JFormattedTextField txtfpsetgroup;
    private javax.swing.JFormattedTextField txtfpsetgroupqty;
    private javax.swing.JTextField txtfpsetname;
    private javax.swing.JFormattedTextField txtfpsetqty;
    private javax.swing.JFormattedTextField txtfpsetsetgroup;
    private javax.swing.JTextField txtfpsetunit;
    private javax.swing.JTextField txtpabdept;
    private javax.swing.JTextField txtparea;
    private javax.swing.JTextField txtrefcode;
    private javax.swing.JTextField txtvendor;
    private javax.swing.JTextField txtvendorname;
    private javax.swing.JLabel xb_lblCountpset1;
    private javax.swing.JLabel xb_lblCountpset2;
    // End of variables declaration//GEN-END:variables

    private void initable() {
        tbBgroup = (DefaultTableModel) tblBgroup.getModel();
        tblBgroup.setShowGrid(true);
        //tblPLU.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblBgroup.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblBgroup.setRowSelectionAllowed(true);
        tblBgroup.setBackground(java.awt.Color.WHITE);
        tblBgroup.setGridColor(java.awt.Color.gray);
        JTableHeader header = tblBgroup.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        //tblBtype.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tblBgroup.setRowHeight(25);
        tblBgroup.setAutoCreateRowSorter(true);
        TableTestFormatRenderer t;
        t = new TableTestFormatRenderer(DoubleFmt);
        t.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer r;
        r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c;
        c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer l;
        l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);

        TableColumnModel tcm = tblBgroup.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(l);
        tcm.getColumn(3).setCellRenderer(t);
        tcm.getColumn(4).setCellRenderer(t);
        tcm.getColumn(5).setCellRenderer(t);
        tcm.getColumn(6).setCellRenderer(t);
        tcm.getColumn(7).setCellRenderer(t);
        tcm.getColumn(8).setCellRenderer(l);
        tcm.getColumn(9).setCellRenderer(l);
        tcm.getColumn(10).setCellRenderer(l);

        //tblPset
        tbPset = (DefaultTableModel) tblPset.getModel();
        tblPset.setShowGrid(true);
        //tblPset.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblPset.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblPset.setRowSelectionAllowed(true);
        tblPset.setBackground(java.awt.Color.WHITE);
        tblPset.setGridColor(java.awt.Color.gray);
        JTableHeader headerc = tblPset.getTableHeader();
        headerc.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tblPset.setRowHeight(25);
        tblPset.setAutoCreateRowSorter(true);

        TableColumnModel tcmc = tblPset.getColumnModel();
        tcmc.getColumn(0).setCellRenderer(l);
        tcmc.getColumn(1).setCellRenderer(l);
        tcmc.getColumn(2).setCellRenderer(c);
        tcmc.getColumn(3).setCellRenderer(c);
        tcmc.getColumn(4).setCellRenderer(c);
        tcmc.getColumn(5).setCellRenderer(l);

    }

    public String getpromotionname(String code) {
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from protab where procode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    return cvth.ASCII2Unicode(rs.getString("prodesc"));
                } else {
                    return "Null";
                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from protab where procode ='" + code + "";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    return rs.getString("prodesc");

                } else {
                    return "Null";
                }

            }
        } catch (Exception e) {
        }
        return "";
    }

    public void settxtproname() {
        txtfproname1.setText("");
        txtfproname2.setText("");
        txtfproname3.setText("");
        if (!txtfPro1.getText().equals("")) {
            txtfproname1.setText(getpromotionname(txtfPro1.getText()));
        }
        if (!txtfPro2.getText().equals("")) {
            txtfproname2.setText(getpromotionname(txtfPro2.getText()));
        }
        if (!txtfPro3.getText().equals("")) {
            txtfproname3.setText(getpromotionname(txtfPro3.getText()));
        }
    }

    public void btnSearchPromotionSettext(int txtfno) {
        listPromotion f = new listPromotion(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.bcode.equals("")) {
            if (txtfno == 1) {
                txtfPro1.setText(f.bcode);
                if (!getpromotionname(txtfPro1.getText()).equals("Null") && !getpromotionname(txtfPro1.getText()).equals("")) {
                    txtfproname1.setText(getpromotionname(txtfPro1.getText()));
                    txtfPro1.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง");
                    txtfPro1.requestFocus();
                }

            } else if (txtfno == 2) {
                txtfPro2.setText(f.bcode);
                if (!getpromotionname(txtfPro2.getText()).equals("Null") && !getpromotionname(txtfPro2.getText()).equals("")) {
                    txtfproname2.setText(getpromotionname(txtfPro2.getText()));
                    txtfPro2.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง");
                    txtfPro2.requestFocus();
                }

            } else if (txtfno == 3) {
                txtfPro3.setText(f.bcode);
                if (!getpromotionname(txtfPro3.getText()).equals("Null") && !getpromotionname(txtfPro3.getText()).equals("")) {
                    txtfproname3.setText(getpromotionname(txtfPro3.getText()));
                    txtfPro3.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง");
                    txtfPro3.requestFocus();
                }
            }

        }
    }

    public boolean EnterPromotion(int txtfno) {
        boolean chk = true;

        if (txtfno == 1) {
            if (!txtfPro1.getText().equals("")) {
                if (!getpromotionname(txtfPro1.getText()).equals("Null")) {

                    txtfproname1.setText(getpromotionname(txtfPro1.getText()));
                    chk = true;
                } else if (getpromotionname(txtfPro1.getText()).equals("Null")) {
                    JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง");
                    txtfPro1.requestFocus();
                    txtfproname1.setText("");
                    chk = false;
                }
            }
        } else if (txtfno == 2) {
            if (!txtfPro2.getText().equals("")) {
                if (!getpromotionname(txtfPro2.getText()).equals("Null")) {
                    txtfproname2.setText(getpromotionname(txtfPro2.getText()));
                    chk = true;
                } else if (getpromotionname(txtfPro2.getText()).equals("Null")) {
                    JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง");
                    txtfPro2.requestFocus();
                    txtfproname2.setText("");
                    chk = false;
                }
            }
        } else if (txtfno == 3) {
            if (!txtfPro3.getText().equals("")) {
                if (!getpromotionname(txtfPro3.getText()).equals("Null")) {
                    txtfproname3.setText(getpromotionname(txtfPro3.getText()));
                    chk = true;
                } else if (getpromotionname(txtfPro3.getText()).equals("Null")) {
                    JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง");
                    txtfPro3.requestFocus();
                    txtfproname3.setText("");
                    chk = false;
                }
            }
        }

        return chk;
    }

    public void startfrm() {
        sap_code.setEnabled(true);
        rad_sap_active.setEnabled(false);
        rad_sap_noneactive.setEnabled(false);
        btn_article.setEnabled(true);
        //===============================
        txtfpgroup.setEditable(true);
        txtrefcode.setEditable(true);
        txtparea.setEditable(true);
        PShortDesc.setEditable(true);
        txtvendor.setEditable(true);

        txtpabdept.setEditable(true);
        txtfmbpack.setEditable(true);
        txtfmEatIn1.setEditable(true);
        txtfmTakeAway1.setEditable(true);
        txtfmDelivery1.setEditable(true);
        txtfmPinto1.setEditable(true);
        txtfmWhole1.setEditable(true);
        txtfmEatIn.setEditable(true);
        txtfmTakeAway.setEditable(true);
        txtfmDelivery.setEditable(true);
        txtfmPinto.setEditable(true);
        txtfmWhole.setEditable(true);
        txtfmscost.setEditable(true);
        //txtfmlcost.setEditable(true);
        txtfmacost.setEditable(true);
        //txtfmtcost.setEditable(true);
        txtfBgroup1.setEditable(true);
        txtfPro1.setEditable(true);
        txtfPro2.setEditable(true);
        txtfPro3.setEditable(true);
        combo_unit.setEnabled(true);
        d_rdofood.setEnabled(true);
        d_rdodrink.setEnabled(true);
        d_rdoproduct.setEnabled(true);
        d_rdostatus1.setEnabled(true);
        d_rdostatus2.setEnabled(true);
        d_rdostatus3.setEnabled(true);
        d_rdostockYes.setEnabled(true);
        d_rdostockNo.setEnabled(true);
        d_rdovatYes.setEnabled(true);
        d_rdovatNo.setEnabled(true);
        combo_unit1.setEnabled(true);
        d_rdoSet.setEnabled(true);
        d_rdoNomal.setEnabled(true);
        d_rdocouse.setEnabled(true);
        d_rdoGoods.setEnabled(true);
        d_rdoHaveMaterial.setEnabled(true);
        d_rdoactiveYes.setEnabled(true);
        d_rdoactiveNo.setEnabled(true);
        d_rdoAuto.setEnabled(true);
        d_rdoCustom.setEnabled(true);
        d_chkchart1.setEnabled(true);
        d_chkchart2.setEnabled(true);
        d_chkchart3.setEnabled(true);
        d_rdoserviceYes.setEnabled(true);
        d_rdoserviceNo.setEnabled(true);
        d_rdoDiscountYes.setEnabled(true);
        d_rdoDiscountNo.setEnabled(true);
        d_rdoporder1.setEnabled(true);
        d_rdoporder2.setEnabled(true);
        d_rdoporder3.setEnabled(true);
        d_rdoporder4.setEnabled(true);
        t_pcooktime.setEditable(true);
        //txtfOption.setEditable(true);
        txtfkitname.setEditable(true);
        txtfpsetsetgroup.setEditable(true);
        kic.setEnabled(true);
        chkTabPsetOpen();
        chkPLUtype();
    }

    public void setclearfrm() {
        sap_article = "";
        sap_article_name = "";
        sap_article_barcode = "";
        sap_article_unit = "";
        sap_article_jde = "";
        sap_article_active = "";

        sap_code.setText("");
        sap_name.setText("");
        sap_barcode.setText("");
        sap_jde.setText("");
        sap_unit.setText("");
        rad_sap_active.setSelected(true);

        sap_code.setEnabled(false);
        rad_sap_active.setEnabled(false);
        rad_sap_noneactive.setEnabled(false);
        btn_article.setEnabled(false);
        us.closeTextFiled(sap_name, true);
        us.closeTextFiled(sap_barcode, true);
        us.closeTextFiled(sap_jde, true);
        us.closeTextFiled(sap_unit, true);
        //================================
        jTabbedPane1.setSelectedIndex(0);
        //settext
        txtfPcode.setText("");
        txtfpgroup.setText("");
        txtrefcode.setText("");
        txtparea.setText("");
        PShortDesc.setText("");
        txtvendor.setText("");
        txtvendorname.setText("");
        txtpabdept.setText("");
        txtfmbpack.setText("0.0000");
        txtfmEatIn1.setText("0.00");
        txtfmTakeAway1.setText("0.00");
        txtfmDelivery1.setText("0.00");
        txtfmPinto1.setText("0.00");
        txtfmWhole1.setText("0.00");
        txtfmEatIn.setText("0.00");
        txtfmTakeAway.setText("0.00");
        txtfmDelivery.setText("0.00");
        txtfmPinto.setText("0.00");
        txtfmWhole.setText("0.00");
        txtfmscost.setText("0.0000");
        txtfmlcost.setText("0.0000");
        txtfmacost.setText("0.0000");
        txtfmtcost.setText("0.00%");
        txtfBgroup1.setText("");
        txtfPro1.setText("");
        txtfPro2.setText("");
        txtfPro3.setText("");
        txtfPcode.setText("");
        txtfPdesc.setText("");
        txtbarcode.setText("");
        txtfpgroupname.setText("");
        txtvendorname.setText("");

        t_pcooktime.setText("1");
        txtfOption.setText("");
        txtfkitname.setText("");
        txtfpsetsetgroup.setText("0");
        //setfild
        txtfPcode.setEditable(true);
        txtfpgroup.setEditable(false);
        txtrefcode.setEditable(false);
        txtparea.setEditable(false);
        PShortDesc.setEditable(false);
        txtvendor.setEditable(false);
        txtvendorname.setEditable(false);
        txtpabdept.setEditable(false);
        txtfmbpack.setEditable(false);
        txtfmEatIn1.setEditable(false);
        txtfmTakeAway1.setEditable(false);
        txtfmDelivery1.setEditable(false);
        txtfmPinto1.setEditable(false);
        txtfmWhole1.setEditable(false);
        txtfmEatIn.setEditable(false);
        txtfmTakeAway.setEditable(false);
        txtfmDelivery.setEditable(false);
        txtfmPinto.setEditable(false);
        txtfmWhole.setEditable(false);
        txtfmscost.setEditable(false);
        txtfmlcost.setEditable(false);
        txtfmacost.setEditable(false);
        t_pcooktime.setEditable(false);
        //txtfOption.setEditable(false);
        txtfkitname.setEditable(false);
        txtfpsetsetgroup.setEditable(false);
        //txtfmtcost.setEditable(false);
        txtfBgroup1.setEditable(false);
        txtfPro1.setEditable(false);
        txtfPro2.setEditable(false);
        txtfPro3.setEditable(false);
        //setcbo
        combo_unit.setEnabled(false);
        d_rdofood.setEnabled(false);
        d_rdodrink.setEnabled(false);
        d_rdoproduct.setEnabled(false);
        d_rdostatus1.setEnabled(false);
        d_rdostatus2.setEnabled(false);
        d_rdostatus3.setEnabled(false);
        d_rdostockYes.setEnabled(false);
        d_rdostockNo.setEnabled(false);
        d_rdovatYes.setEnabled(false);
        d_rdovatNo.setEnabled(false);
        combo_unit1.setEnabled(false);
        d_rdoSet.setEnabled(false);
        d_rdoNomal.setEnabled(false);
        d_rdocouse.setEnabled(false);
        d_rdoGoods.setEnabled(false);
        d_rdoHaveMaterial.setEnabled(false);
        d_rdoactiveYes.setEnabled(false);
        d_rdoactiveNo.setEnabled(false);
        d_rdoAuto.setEnabled(false);
        d_rdoCustom.setEnabled(false);
        d_chkchart1.setEnabled(false);
        d_chkchart2.setEnabled(false);
        d_chkchart3.setEnabled(false);
        d_rdoserviceYes.setEnabled(false);
        d_rdoserviceNo.setEnabled(false);
        d_rdoDiscountYes.setEnabled(false);
        d_rdoDiscountNo.setEnabled(false);
        d_rdoporder1.setEnabled(false);
        d_rdoporder2.setEnabled(false);
        d_rdoporder3.setEnabled(false);
        d_rdoporder4.setEnabled(false);
        kic.setEnabled(false);
        //setdefualtcbo
        d_chkchart1.setSelected(true);
        d_chkchart2.setSelected(true);
        d_chkchart3.setSelected(true);
        d_rdoNomal.setSelected(true);
        d_rdoproduct.setSelected(true);
        d_rdostatus1.setSelected(true);
        d_rdostockYes.setSelected(true);
        d_rdovatYes.setSelected(true);
        d_rdoGoods.setSelected(true);
        d_rdoactiveYes.setSelected(true);
        d_rdoAuto.setSelected(true);
        d_rdoserviceYes.setSelected(true);
        d_rdoDiscountYes.setSelected(true);
        d_rdoporder1.setSelected(true);
        kic.setSelectedIndex(0);
        combo_unit.setSelectedIndex(0);
        combo_unit1.setSelectedIndex(0);
        psetselectn.setSelected(true);
        cleartblbgroup();
        cleartblPset();
        cleartxtfPset();
        cleartxtbgroup();
        cleartxtpcourse();
        removedataintble(tblcourse);
        getTextNo();
        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(4, false);

        txtfPcode.setBackground(new java.awt.Color(246, 246, 245));
        txtfmscost.setBackground(java.awt.Color.white);
    }

    private void loadcombounit() {
        combo_unit.removeAllItems();
        combo_unit1.removeAllItems();
        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
            try {
                String sql = "select *from unitfile order by unitname";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    combo_unit.addItem(cvth.ASCII2Unicode(rs.getString("unitname")));
                    combo_unit1.addItem(cvth.ASCII2Unicode(rs.getString("unitname")));
                }
            } catch (SQLException ex) {
            }
        } else {
            try {
                String sql = "select *from unitfile order by unitname";
                stmt = (Statement) dbUtility.con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    combo_unit.addItem(rs.getString("unitname"));
                    combo_unit1.addItem(rs.getString("unitname"));
                }
            } catch (SQLException ex) {
            }
        }

    }

    private boolean save() {
        //save product
        boolean chk = false;
        if (validateSave()) {
            if (chkproduct(txtfPcode.getText())) {
                try {
                    if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                        setcboTovariable();
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Update product set pbarcode=?,pdesc=?,pgroup=?,punit1=?,parea=?,preferent=?,ptype=?,"
                                + "pnormal=?,pvat=?,pstock=?,pset=?,pabdept=?,pvender=?,pbunit=?,pbpack=?,pabtype=?,pactive=?,"
                                + "pprice11=?,pprice12=?,pprice13=?,pprice14=?,pprice15=?,pstatus=?,pservice=?,pdiscount=?,"
                                + "pscost=?,plcost=?,pacost=?,pmax=?,pmin=?,pkic=?,charge1=?,charge2=?,charge3=?,plastupdate=?,"
                                + "porder=?,psetselect=?"
                                + " "
                                + ",pkicdesc = ?"
                                + ",poption = ?"
                                + ",pcooktime = ? "
                                + ",psetselectqty = ? ,pshortdesc = ? "
                                + "where pcode = ?";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(txtbarcode.getText()));
                        prm.setString(2, cvth.Unicode2ASCII(txtfPdesc.getText()));
                        prm.setString(3, cvth.Unicode2ASCII(txtfpgroup.getText()));
                        prm.setString(4, cvth.Unicode2ASCII(combo_unit.getSelectedItem().toString()));
                        prm.setString(5, cvth.Unicode2ASCII(txtparea.getText()));
                        prm.setString(6, cvth.Unicode2ASCII(txtrefcode.getText()));
                        prm.setString(7, cvth.Unicode2ASCII(ptype));
                        prm.setString(8, cvth.Unicode2ASCII(pnormal));
                        prm.setString(9, cvth.Unicode2ASCII(pvat));
                        prm.setString(10, cvth.Unicode2ASCII(pstock));
                        prm.setString(11, cvth.Unicode2ASCII(pset));
                        prm.setString(12, cvth.Unicode2ASCII(txtpabdept.getText()));
                        prm.setString(13, cvth.Unicode2ASCII(txtvendor.getText()));
                        prm.setString(14, cvth.Unicode2ASCII(combo_unit1.getSelectedItem().toString()));
                        prm.setDouble(15, Double.parseDouble(PUtility.ConvertReal(txtfmbpack.getText())));
                        prm.setString(16, cvth.Unicode2ASCII(pabtype));
                        prm.setString(17, cvth.Unicode2ASCII(pactive));
                        prm.setDouble(18, Double.parseDouble(PUtility.ConvertReal(txtfmEatIn.getText())));
                        prm.setDouble(19, Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway.getText())));
                        prm.setDouble(20, Double.parseDouble(PUtility.ConvertReal(txtfmDelivery.getText())));
                        prm.setDouble(21, Double.parseDouble(PUtility.ConvertReal(txtfmPinto.getText())));
                        prm.setDouble(22, Double.parseDouble(PUtility.ConvertReal(txtfmWhole.getText())));
                        prm.setString(23, cvth.Unicode2ASCII(pstatus));
                        prm.setString(24, cvth.Unicode2ASCII(pservice));
                        prm.setString(25, cvth.Unicode2ASCII(pdiscont));
                        prm.setDouble(26, Double.parseDouble(PUtility.ConvertReal(txtfmscost.getText())));
                        prm.setDouble(27, Double.parseDouble(PUtility.ConvertReal(txtfmlcost.getText())));
                        prm.setDouble(28, Double.parseDouble(PUtility.ConvertReal(txtfmacost.getText())));
                        prm.setDouble(29, 0);
                        prm.setDouble(30, 0);
                        prm.setString(31, cvth.Unicode2ASCII(kic.getSelectedItem().toString()));
                        prm.setString(32, cvth.Unicode2ASCII(pcharge1));
                        prm.setString(33, cvth.Unicode2ASCII(pcharge2));
                        prm.setString(34, cvth.Unicode2ASCII(pcharge3));
                        prm.setString(35, dateFmtSave.format(new java.util.Date()));
                        prm.setString(36, porder);
                        if (psetselecty.isSelected()) {
                            prm.setString(37, cvth.Unicode2ASCII("Y"));
                        } else {
                            prm.setString(37, cvth.Unicode2ASCII("N"));
                        }
                        prm.setString(38, cvth.Unicode2ASCII(txtfkitname.getText()));
                        prm.setString(39, cvth.Unicode2ASCII(txtfOption.getText()));
                        prm.setString(40, cvth.Unicode2ASCII(t_pcooktime.getText()));
                        prm.setInt(41, Integer.parseInt(PUtility.ConvertReal(txtfpsetsetgroup.getText())));
                        prm.setString(42, cvth.Unicode2ASCII(PShortDesc.getText()));
                        prm.setString(43, cvth.Unicode2ASCII(txtfPcode.getText()));

                        prm.executeUpdate();
                        chk = true;
                    } else {
                        setcboTovariable();
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Update product set pbarcode=?,pdesc=?,pgroup=?,punit1=?,parea=?,preferent=?,ptype=?,"
                                + "pnormal=?,pvat=?,pstock=?,pset=?,pabdept=?,pvender=?,pbunit=?,pbpack=?,pabtype=?,pactive=?,"
                                + "pprice11=?,pprice12=?,pprice13=?,pprice14=?,pprice15=?,pstatus=?,pservice=?,pdiscount=?,"
                                + "pscost=?,plcost=?,pacost=?,pmax=?,pmin=?,pkic=?,charge1=?,charge2=?,charge3=?,plastupdate=?,"
                                + "porder=?,psetselect=?"
                                + " "
                                + ",pkicdesc = ?"
                                + ",poption = ?"
                                + ",pcooktime = ? "
                                + ",psetselectqty = ? ,pshortdesc = ? "
                                + "where pcode = ?";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, txtbarcode.getText());
                        prm.setString(2, txtfPdesc.getText());
                        prm.setString(3, txtfpgroup.getText());
                        prm.setString(4, combo_unit.getSelectedItem().toString());
                        prm.setString(5, txtparea.getText());
                        prm.setString(6, txtrefcode.getText());
                        prm.setString(7, ptype);
                        prm.setString(8, pnormal);
                        prm.setString(9, pvat);
                        prm.setString(10, pstock);
                        prm.setString(11, pset);
                        prm.setString(12, txtpabdept.getText());
                        prm.setString(13, txtvendor.getText());
                        prm.setString(14, combo_unit1.getSelectedItem().toString());
                        prm.setDouble(15, Double.parseDouble(PUtility.ConvertReal(txtfmbpack.getText())));
                        prm.setString(16, pabtype);
                        prm.setString(17, pactive);
                        prm.setDouble(18, Double.parseDouble(PUtility.ConvertReal(txtfmEatIn.getText())));
                        prm.setDouble(19, Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway.getText())));
                        prm.setDouble(20, Double.parseDouble(PUtility.ConvertReal(txtfmDelivery.getText())));
                        prm.setDouble(21, Double.parseDouble(PUtility.ConvertReal(txtfmPinto.getText())));
                        prm.setDouble(22, Double.parseDouble(PUtility.ConvertReal(txtfmWhole.getText())));
                        prm.setString(23, pstatus);
                        prm.setString(24, pservice);
                        prm.setString(25, pdiscont);
                        prm.setDouble(26, Double.parseDouble(PUtility.ConvertReal(txtfmscost.getText())));
                        prm.setDouble(27, Double.parseDouble(PUtility.ConvertReal(txtfmlcost.getText())));
                        prm.setDouble(28, Double.parseDouble(PUtility.ConvertReal(txtfmacost.getText())));
                        prm.setDouble(29, 0);
                        prm.setDouble(30, 0);
                        prm.setString(31, kic.getSelectedItem().toString());
                        prm.setString(32, pcharge1);
                        prm.setString(33, pcharge2);
                        prm.setString(34, pcharge3);
                        prm.setString(35, dateFmtSave.format(new java.util.Date()));
                        prm.setString(36, porder);
                        if (psetselecty.isSelected()) {
                            prm.setString(37, "Y");
                        } else {
                            prm.setString(37, "N");
                        }
                        prm.setString(38, txtfkitname.getText());
                        prm.setString(39, txtfOption.getText());
                        prm.setString(40, t_pcooktime.getText());
                        prm.setInt(41, Integer.parseInt(PUtility.ConvertReal(txtfpsetsetgroup.getText())));
                        prm.setString(42, PShortDesc.getText());
                        prm.setString(43, txtfPcode.getText());
                        prm.executeUpdate();
                        chk = true;

                    }
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "Update Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                try {
                    if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                        setcboTovariable();
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Insert into product (pbarcode,pdesc,pgroup,punit1,parea,preferent,ptype,"
                                + "pnormal,pvat,pstock,pset,pabdept,pvender,pbunit,pbpack,pabtype,pactive,"
                                + "pprice11,pprice12,pprice13,pprice14,pprice15,pstatus,pservice,pdiscount,"
                                + "pscost,plcost,pacost,pmax,pmin,pkic,charge1,charge2,charge3,pcode,plastupdate,"
                                + "porder,psetselect,pkicdesc,poption,pcooktime,psetselectqty,pshortdesc ) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(txtbarcode.getText()));
                        prm.setString(2, cvth.Unicode2ASCII(txtfPdesc.getText()));
                        prm.setString(3, cvth.Unicode2ASCII(txtfpgroup.getText()));
                        prm.setString(4, cvth.Unicode2ASCII(combo_unit.getSelectedItem().toString()));
                        prm.setString(5, cvth.Unicode2ASCII(txtparea.getText()));
                        prm.setString(6, cvth.Unicode2ASCII(txtrefcode.getText()));
                        prm.setString(7, cvth.Unicode2ASCII(ptype));
                        prm.setString(8, cvth.Unicode2ASCII(pnormal));
                        prm.setString(9, cvth.Unicode2ASCII(pvat));
                        prm.setString(10, cvth.Unicode2ASCII(pstock));
                        prm.setString(11, cvth.Unicode2ASCII(pset));
                        prm.setString(12, cvth.Unicode2ASCII(txtpabdept.getText()));
                        prm.setString(13, cvth.Unicode2ASCII(txtvendor.getText()));
                        prm.setString(14, cvth.Unicode2ASCII(combo_unit1.getSelectedItem().toString()));
                        prm.setDouble(15, Double.parseDouble(PUtility.ConvertReal(txtfmbpack.getText())));
                        prm.setString(16, cvth.Unicode2ASCII(pabtype));
                        prm.setString(17, cvth.Unicode2ASCII(pactive));
                        prm.setDouble(18, Double.parseDouble(PUtility.ConvertReal(txtfmEatIn.getText())));
                        prm.setDouble(19, Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway.getText())));
                        prm.setDouble(20, Double.parseDouble(PUtility.ConvertReal(txtfmDelivery.getText())));
                        prm.setDouble(21, Double.parseDouble(PUtility.ConvertReal(txtfmPinto.getText())));
                        prm.setDouble(22, Double.parseDouble(PUtility.ConvertReal(txtfmWhole.getText())));
                        prm.setString(23, cvth.Unicode2ASCII(pstatus));
                        prm.setString(24, cvth.Unicode2ASCII(pservice));
                        prm.setString(25, cvth.Unicode2ASCII(pdiscont));
                        prm.setDouble(26, Double.parseDouble(PUtility.ConvertReal(txtfmscost.getText())));
                        prm.setDouble(27, Double.parseDouble(PUtility.ConvertReal(txtfmlcost.getText())));
                        prm.setDouble(28, Double.parseDouble(PUtility.ConvertReal(txtfmacost.getText())));
                        prm.setDouble(29, 0);
                        prm.setDouble(30, 0);
                        prm.setString(31, cvth.Unicode2ASCII(kic.getSelectedItem().toString()));
                        prm.setString(32, cvth.Unicode2ASCII(pcharge1));
                        prm.setString(33, cvth.Unicode2ASCII(pcharge2));
                        prm.setString(34, cvth.Unicode2ASCII(pcharge3));
                        prm.setString(35, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.setString(36, dateFmtSave.format(new java.util.Date()));
                        prm.setString(37, porder);
                        if (psetselecty.isSelected()) {
                            prm.setString(38, cvth.Unicode2ASCII("Y"));
                        } else {
                            prm.setString(38, cvth.Unicode2ASCII("N"));
                        }
                        prm.setString(39, cvth.Unicode2ASCII(txtfkitname.getText()));
                        prm.setString(40, cvth.Unicode2ASCII(txtfOption.getText()));
                        prm.setString(41, cvth.Unicode2ASCII(t_pcooktime.getText()));
                        prm.setInt(42, Integer.parseInt(PUtility.ConvertReal(txtfpsetsetgroup.getText())));
                        prm.setString(43, cvth.Unicode2ASCII(PShortDesc.getText()));
                        prm.executeUpdate();
                        chk = true;
                    } else {
                        setcboTovariable();
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Insert into product (pbarcode,pdesc,pgroup,punit1,parea,preferent,ptype,"
                                + "pnormal,pvat,pstock,pset,pabdept,pvender,pbunit,pbpack,pabtype,pactive,"
                                + "pprice11,pprice12,pprice13,pprice14,pprice15,pstatus,pservice,pdiscount,"
                                + "pscost,plcost,pacost,pmax,pmin,pkic,charge1,charge2,charge3,pcode,plastupdate,"
                                + "porder,psetselect,pkicdesc,poption,pcooktime,psetselectqty,pshortdesc) "
                                + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, txtbarcode.getText());
                        prm.setString(2, txtfPdesc.getText());
                        prm.setString(3, txtfpgroup.getText());
                        prm.setString(4, combo_unit.getSelectedItem().toString());
                        prm.setString(5, txtparea.getText());
                        prm.setString(6, txtrefcode.getText());
                        prm.setString(7, ptype);
                        prm.setString(8, pnormal);
                        prm.setString(9, pvat);
                        prm.setString(10, pstock);
                        prm.setString(11, pset);
                        prm.setString(12, txtpabdept.getText());
                        prm.setString(13, txtvendor.getText());
                        prm.setString(14, combo_unit1.getSelectedItem().toString());
                        prm.setDouble(15, Double.parseDouble(PUtility.ConvertReal(txtfmbpack.getText())));
                        prm.setString(16, pabtype);
                        prm.setString(17, pactive);
                        prm.setDouble(18, Double.parseDouble(PUtility.ConvertReal(txtfmEatIn.getText())));
                        prm.setDouble(19, Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway.getText())));
                        prm.setDouble(20, Double.parseDouble(PUtility.ConvertReal(txtfmDelivery.getText())));
                        prm.setDouble(21, Double.parseDouble(PUtility.ConvertReal(txtfmPinto.getText())));
                        prm.setDouble(22, Double.parseDouble(PUtility.ConvertReal(txtfmWhole.getText())));
                        prm.setString(23, pstatus);
                        prm.setString(24, pservice);
                        prm.setString(25, pdiscont);
                        prm.setDouble(26, Double.parseDouble(PUtility.ConvertReal(txtfmscost.getText())));
                        prm.setDouble(27, Double.parseDouble(PUtility.ConvertReal(txtfmlcost.getText())));
                        prm.setDouble(28, Double.parseDouble(PUtility.ConvertReal(txtfmacost.getText())));
                        prm.setDouble(29, 0);
                        prm.setDouble(30, 0);
                        prm.setString(31, kic.getSelectedItem().toString());
                        prm.setString(32, pcharge1);
                        prm.setString(33, pcharge2);
                        prm.setString(34, pcharge3);
                        prm.setString(35, txtfPcode.getText());
                        prm.setString(36, dateFmtSave.format(new java.util.Date()));
                        prm.setString(37, porder);
                        if (psetselecty.isSelected()) {
                            prm.setString(38, cvth.Unicode2ASCII("Y"));
                        } else {
                            prm.setString(38, cvth.Unicode2ASCII("N"));
                        }
                        prm.setString(39, txtfkitname.getText());
                        prm.setString(40, txtfOption.getText());
                        prm.setString(41, t_pcooktime.getText());
                        prm.setInt(42, Integer.parseInt(PUtility.ConvertReal(txtfpsetsetgroup.getText())));
                        prm.setString(43, PShortDesc.getText());
                        prm.executeUpdate();

                        chk = true;
                    }
                    stmt.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "Insert Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        return chk;
    }

    public boolean chkproduct(String code) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from product where pcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                } else {
                    chk = false;
                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from product where pcode ='" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                } else {
                    chk = false;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public boolean chkrawmate(String code) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from product where pcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (rs.getString("fix").equals("L")) {
                        JOptionPane.showMessageDialog(null, "รหัสสินค้านี้เป็นรหัสวัตถุดิบ...ไม่สามารถเรียกในรายการนี้ได้");
                        setclearfrm();
                        txtfPcode.requestFocus();
                        chk = true;
                    }
                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from product where pcode ='" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (rs.getString("fix").equals("L")) {
                        JOptionPane.showMessageDialog(null, "รหัสสินค้านี้เป็นรหัสวัตถุดิบ...ไม่สามารถเรียกในรายการนี้ได้");
                        setclearfrm();
                        txtfPcode.requestFocus();
                        chk = true;
                    }
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }
    String ptype, pnormal, pstock, pvat, pset, pabtype, pactive, pstatus, pservice, pdiscont, pcharge1, pcharge2, pcharge3, porder;

    public void setcboTovariable() {
        if (d_rdofood.isSelected()) {
            ptype = "1";
        } else if (d_rdodrink.isSelected()) {
            ptype = "2";
        } else {
            ptype = "3";
        }

        if (d_rdostatus1.isSelected()) {
            pnormal = "N";
        } else if (d_rdostatus2.isSelected()) {
            pnormal = "C";
        } else {
            pnormal = "S";
        }

        if (d_rdostockYes.isSelected()) {
            pstock = "Y";
        } else {
            pstock = "N";
        }

        if (d_rdovatYes.isSelected()) {
            pvat = "V";
        } else {
            pvat = "N";
        }

        if (d_rdoSet.isSelected()) {
            pset = "Y";
        } else if (d_rdocouse.isSelected()) {
            pset = "C";
        } else {
            pset = "N";
        }

        if (d_rdoGoods.isSelected()) {
            pabtype = "F";
        } else {
            pabtype = "R";
        }

        if (d_rdoactiveYes.isSelected()) {
            pactive = "Y";
        } else {
            pactive = "N";
        }

        if (d_rdoAuto.isSelected()) {
            pstatus = "P";
        } else {
            pstatus = "S";
        }

        if (d_rdoserviceYes.isSelected()) {
            pservice = "Y";
        } else {
            pservice = "N";
        }

        if (d_rdoDiscountYes.isSelected()) {
            pdiscont = "Y";
        } else {
            pdiscont = "N";
        }

        if (d_chkchart1.isSelected()) {
            pcharge1 = "Y";
        } else {
            pcharge1 = "N";
        }

        if (d_chkchart2.isSelected()) {
            pcharge2 = "Y";
        } else {
            pcharge2 = "N";
        }

        if (d_chkchart3.isSelected()) {
            pcharge3 = "Y";
        } else {
            pcharge3 = "N";
        }

        if (d_rdoporder1.isSelected()) {
            porder = "0";
        } else if (d_rdoporder2.isSelected()) {
            porder = "1";
        } else if (d_rdoporder3.isSelected()) {
            porder = "2";
        } else {
            porder = "3";
        }
    }

    public void btnSearchgroupfile() {
        listGroupfile f = new listGroupfile(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txtfpgroup.setText(f.code);
            txtfpgroupname.setText(getGroupName(f.code));
        }

    }

    public void btnSearchProduct() {
        ListProduct f = new ListProduct(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txtfPcode.setText(f.code);
            enterprocode();
        }

    }

    public void btnSearchProductinPset() {
        ListProduct f = new ListProduct(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txtfpsetcode.setText(f.code);
            setPsetUnit();
        }

    }

    public String getGroupName(String code) {
        String name = "";
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from groupfile where groupcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    name = cvth.ASCII2Unicode(rs.getString("groupname"));
                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from groupfile where groupcode ='" + code + "";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    name = rs.getString("groupname");

                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return name;
    }

    public void btnSearchvender() {
        ListVender f = new ListVender(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            txtvendor.setText(f.code);
            txtvendorname.setText(getVenderName(f.code));
        }

    }

    public String getVenderName(String code) {
        String name = "";
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from vender where vcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    name = cvth.ASCII2Unicode(rs.getString("vname"));
                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from vender where vcode ='" + code + "";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    name = rs.getString("vname");

                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return name;
    }

    public boolean validateSave() {
        //tab1-2
        boolean chk = true;

        if (txtfPcode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสินค้าไม่ถูกต้อง... ");
            chk = false;
            txtfPcode.requestFocus();
        } else if (txtfPcode.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสินค้าไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 13 ตัวอักษร)");
            chk = false;
            txtfPcode.requestFocus();
        } //        else if(txtbarcode.getText().trim().equals(""))
        //        {
        //            JOptionPane.showMessageDialog(this, "กำหนดรหัสบาร์โค้ดไม่ถูกต้อง... ");
        //            chk = false;
        //            txtbarcode.requestFocus();
        //        }
        else if (txtbarcode.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสบาร์โค้ดค้าไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 13 ตัวอักษร");
            chk = false;
            txtbarcode.requestFocus();
        } else if (txtfPdesc.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดชื่อสินค้าไม่ถูกต้อง... ");
            chk = false;
            txtfPdesc.requestFocus();
        } else if (txtfPdesc.getText().length() > 50) {
            JOptionPane.showMessageDialog(this, "กำหนดชื่อสินค้าไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 50 ตัวอักษร");
            chk = false;
            txtfPdesc.requestFocus();
        } else if (txtfpgroup.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดหมวดสินค้าไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfpgroup.requestFocus();
        } else if (getGroupName(txtfpgroup.getText()).equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดหมวดสินค้าไม่ถูกต้อง... ");
            jTabbedPane1.setSelectedIndex(0);
            chk = false;
            txtfpgroup.requestFocus();
        } else if (txtfpgroup.getText().length() > 4) {
            JOptionPane.showMessageDialog(this, "กำหนดหมวดสินค้าไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 4 ตัวอักษร");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfpgroup.requestFocus();
        } else if (txtparea.getText().length() > 15) {
            JOptionPane.showMessageDialog(this, "กำหนดสถานที่เก็บสินค้าไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 15 ตัวอักษร");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtparea.requestFocus();
        } else if (txtrefcode.getText().length() > 15) {
            JOptionPane.showMessageDialog(this, "กำหนดReferent Codeไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 15 ตัวอักษร");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtrefcode.requestFocus();
        } else if (txtvendor.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดผู้จัดจำหน่ายไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtvendor.requestFocus();
        } else if (getVenderName(txtvendor.getText()).equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดผู้จัดจำหน่ายไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtvendor.requestFocus();
        } else if (txtvendor.getText().length() > 4) {
            JOptionPane.showMessageDialog(this, "กำหนดผู้จัดจำหน่ายไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 4 ตัวอักษร");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtvendor.requestFocus();
        } else if (txtpabdept.getText().length() > 4) {
            JOptionPane.showMessageDialog(this, "กำหนดแผนกทางบัญชีไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 4 ตัวอักษร");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtpabdept.requestFocus();
        } else if (combo_unit.getSelectedItem().toString().length() > 10) {
            JOptionPane.showMessageDialog(this, "กำหนดหน่วยนับไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 10 ตัวอักษร");
            chk = false;
            combo_unit.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (combo_unit1.getSelectedItem().toString().length() > 10) {
            JOptionPane.showMessageDialog(this, "กำหนดหน่วยนับไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 10 ตัวอักษร");
            chk = false;
            combo_unit1.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (txtfmbpack.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfmbpack.requestFocus();
            return chk;
        } else if (txtfmEatIn.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfmEatIn.requestFocus();
            return chk;
        } else if (txtfmDelivery.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfmDelivery.requestFocus();
            return chk;
        } else if (txtfmPinto.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfmPinto.requestFocus();
            return chk;
        } else if (txtfmTakeAway.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfmTakeAway.requestFocus();
            return chk;
        } else if (txtfmWhole.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfmWhole.requestFocus();
            return chk;
        } else if (txtfmscost.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfmscost.requestFocus();
            return chk;
        } else if (txtfmlcost.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfmlcost.requestFocus();
            return chk;
        } else if (txtfmacost.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            jTabbedPane1.setSelectedIndex(0);
            txtfmacost.requestFocus();
            return chk;
        } else if (d_rdoSet.isSelected()) {

            if (!chkpset2()) {
                JOptionPane.showMessageDialog(this, "ไม่สามารถบันทึกข้อมูลได้เนื่องจาก จำนวนกลุ่มที่เลือกได้ น้อยกว่า กลุ่มสำหรับการเลือก... ");
                chk = false;
                jTabbedPane1.setSelectedIndex(2);
                txtfpsetsetgroup.requestFocus();
                return chk;
            }

            if (tblPset.getRowCount() == 0) {
                int confirm = JOptionPane.showConfirmDialog(this, "คุณยังไม่มีการเพิ่มข้อมูลสินค้าชุด คุณต้องการบันทึกข้อมูลหรือไม่. . .?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    chk = true;
                } else {
                    jTabbedPane1.setSelectedIndex(2);
                    txtfpsetcode.requestFocus();
                    chk = false;
                    return chk;
                }
            } else if (!chkpset()) {
                int confirm = JOptionPane.showConfirmDialog(this, "กลุ่มสำหรับการเลือกสินค้าชุด มีน้อยกว่าจำนวนกลุ่มที่เลือกได้ คุณต้องการบันทึกข้อมูลหรือไม่. . .?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    chk = true;
                } else {
                    jTabbedPane1.setSelectedIndex(2);
                    txtfpsetsetgroup.requestFocus();
                    chk = false;
                    return chk;
                }
            }
        }
        Double eatin = Double.parseDouble(PUtility.ConvertReal(txtfmEatIn.getText()));
        Double delivery = Double.parseDouble(PUtility.ConvertReal(txtfmDelivery.getText()));
        Double pinto = Double.parseDouble(PUtility.ConvertReal(txtfmPinto.getText()));
        Double take = Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway.getText()));
        Double whole = Double.parseDouble(PUtility.ConvertReal(txtfmWhole.getText()));
        Double pbpack = Double.parseDouble(PUtility.ConvertReal(txtfmbpack.getText()));
        Double scost = Double.parseDouble(PUtility.ConvertReal(txtfmscost.getText()));
        Double lcost = Double.parseDouble(PUtility.ConvertReal(txtfmlcost.getText()));
        Double mcost = Double.parseDouble(PUtility.ConvertReal(txtfmacost.getText()));
//        Double max = Double.parseDouble(PUtility.ConvertReal(txtfmmaxstock.getText()));
//        Double min = Double.parseDouble(PUtility.ConvertReal(txtfmminstock.getText()));
        if (pbpack < 0 || pbpack > 99999999.9999) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.9999 ล้านบาท");
            chk = false;
            txtfmbpack.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (eatin < 0 || eatin > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmEatIn.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (delivery < 0 || delivery > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmDelivery.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (pinto < 0 || pinto > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmPinto.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (take < 0 || take > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmTakeAway.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (whole < 0 || whole > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmWhole.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (scost < 0 || scost > 99999999.9999) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.9999 ล้านบาท");
            chk = false;
            txtfmscost.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (lcost < 0 || lcost > 99999999.9999) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.9999 ล้านบาท");
            chk = false;
            txtfmlcost.requestFocus();
            jTabbedPane1.setSelectedIndex(0);
        } else if (mcost < 0 || mcost > 99999999.9999) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.9999 ล้านบาท");
            chk = false;
            txtfmacost.requestFocus();
        }
//        else if (max < 0 || max > 99999999.9999) {
//            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.9999 ล้านบาท");
//            chk = false;
//            txtfmmaxstock.requestFocus();
//            jTabbedPane1.setSelectedIndex(0);
//        }
//        else if (min < 0 || min > 99999999.9999) {
//            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.9999 ล้านบาท");
//            chk = false;
//            txtfmminstock.requestFocus();
//            jTabbedPane1.setSelectedIndex(0);
//        }

        return chk;
    }

    public void enterprocode() {
        if (chkproduct(txtfPcode.getText())) {
            ResultSet rs = null;
            try {
                if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                    stmt = (Statement) db.con.createStatement();
                    String sql = "select * from product where pcode ='" + cvth.Unicode2ASCII(txtfPcode.getText()) + "'";
                    rs = stmt.executeQuery(sql);
                    if (rs.next()) {
                        String psetselect = cvth.ASCII2Unicode(rs.getString("psetselect"));
                        if (psetselect.equals("Y")) {
                            psetselecty.setSelected(true);
                        } else {
                            psetselectn.setSelected(true);
                        }
                        txtbarcode.setText(cvth.ASCII2Unicode(rs.getString("pbarcode")));
                        txtfPdesc.setText(cvth.ASCII2Unicode(rs.getString("pdesc")));
                        txtfpgroup.setText(cvth.ASCII2Unicode(rs.getString("pgroup")));
                        txtfpgroupname.setText(getGroupName(txtfpgroup.getText()));
                        combo_unit.setSelectedItem(cvth.ASCII2Unicode(rs.getString("punit1")));
                        txtparea.setText(cvth.ASCII2Unicode(rs.getString("parea")));
                        PShortDesc.setText(cvth.ASCII2Unicode(rs.getString("pshortdesc")));
                        txtrefcode.setText(cvth.ASCII2Unicode(rs.getString("preferent")));
                        ptype = cvth.ASCII2Unicode(rs.getString("ptype"));
                        pnormal = cvth.ASCII2Unicode(rs.getString("pnormal"));
                        pvat = cvth.ASCII2Unicode(rs.getString("pvat"));
                        pstock = cvth.ASCII2Unicode(rs.getString("pstock"));
                        pset = cvth.ASCII2Unicode(rs.getString("pset"));
                        pabtype = cvth.ASCII2Unicode(rs.getString("pabtype"));
                        pactive = cvth.ASCII2Unicode(rs.getString("pactive"));
                        pstatus = cvth.ASCII2Unicode(rs.getString("pstatus"));
                        pservice = cvth.ASCII2Unicode(rs.getString("pservice"));
                        pdiscont = cvth.ASCII2Unicode(rs.getString("pdiscount"));
                        pcharge1 = cvth.ASCII2Unicode(rs.getString("charge1"));
                        pcharge2 = cvth.ASCII2Unicode(rs.getString("charge2"));
                        pcharge3 = cvth.ASCII2Unicode(rs.getString("charge3"));
                        porder = cvth.ASCII2Unicode(rs.getString("porder"));
                        if (ptype.equals("1")) {
                            d_rdofood.setSelected(true);
                        } else if (ptype.equals("2")) {
                            d_rdodrink.setSelected(true);
                        } else {
                            d_rdoproduct.setSelected(true);
                        }

                        if (pnormal.equals("N")) {
                            d_rdostatus1.setSelected(true);
                        } else if (pnormal.equals("C")) {
                            d_rdostatus2.setSelected(true);
                        } else {
                            d_rdostatus3.setSelected(true);
                        }

                        if (pstock.equals("Y")) {
                            d_rdostockYes.setSelected(true);
                        } else {
                            d_rdostockNo.setSelected(true);
                        }

                        if (pset.equals("Y")) {
                            d_rdoSet.setSelected(true);
                            showpset();
                        } else if (pset.equals("C")) {
                            d_rdocouse.setSelected(true);
                            loadtblpcourse(txtfPcode.getText());
                        } else {
                            d_rdoNomal.setSelected(true);
                        }

                        if (pvat.equals("V")) {
                            d_rdovatYes.setSelected(true);
                        } else {
                            d_rdovatNo.setSelected(true);
                        }

                        if (pabtype.equals("F")) {
                            d_rdoGoods.setSelected(true);
                        } else {
                            d_rdoHaveMaterial.setSelected(true);
                        }

                        if (pactive.equals("Y")) {
                            d_rdoactiveYes.setSelected(true);
                        } else {
                            d_rdoactiveNo.setSelected(true);
                        }

                        if (pstatus.equals("P")) {
                            d_rdoAuto.setSelected(true);
                        } else {
                            d_rdoCustom.setSelected(true);
                        }

                        if (pservice.equals("Y")) {
                            d_rdoserviceYes.setSelected(true);
                        } else {
                            d_rdoserviceNo.setSelected(true);
                        }

                        if (pdiscont.equals("Y")) {
                            d_rdoDiscountYes.setSelected(true);
                        } else {
                            d_rdoDiscountNo.setSelected(true);
                        }

                        if (pcharge1.equals("Y")) {
                            d_chkchart1.setSelected(true);
                        } else {
                            d_chkchart1.setSelected(false);
                        }
                        if (pcharge2.equals("Y")) {
                            d_chkchart2.setSelected(true);
                        } else {
                            d_chkchart2.setSelected(false);
                        }
                        if (pcharge3.equals("Y")) {
                            d_chkchart3.setSelected(true);
                        } else {
                            d_chkchart3.setSelected(false);
                        }

                        if (porder.equals("0")) {
                            d_rdoporder1.setSelected(true);
                        } else if (porder.equals("1")) {
                            d_rdoporder2.setSelected(true);
                        } else if (porder.equals("2")) {
                            d_rdoporder3.setSelected(true);
                        } else if (porder.equals("3")) {
                            d_rdoporder4.setSelected(true);
                        }

                        txtpabdept.setText(cvth.ASCII2Unicode(rs.getString("pabdept")));
                        txtvendor.setText(cvth.ASCII2Unicode(rs.getString("pvender")));
                        txtvendorname.setText(getVenderName(txtvendor.getText()));
                        combo_unit1.setSelectedItem(cvth.ASCII2Unicode(rs.getString("pbunit")));
                        txtfmbpack.setText(DoubleFmt2.format(rs.getDouble("pbpack")));
                        txtfmEatIn.setText(DoubleFmt.format(rs.getDouble("pprice11")));
                        txtfmTakeAway.setText(DoubleFmt.format(rs.getDouble("pprice12")));
                        txtfmDelivery.setText(DoubleFmt.format(rs.getDouble("pprice13")));
                        txtfmPinto.setText(DoubleFmt.format(rs.getDouble("pprice14")));
                        txtfmWhole.setText(DoubleFmt.format(rs.getDouble("pprice15")));
                        txtfmscost.setText(DoubleFmt2.format(rs.getDouble("pscost")));
                        txtfmlcost.setText(DoubleFmt2.format(calculateLCostPLU.calculatecost(cvth.Unicode2ASCII(txtfPcode.getText()))));
                        txtfmacost.setText(DoubleFmt2.format(rs.getDouble("pacost")));
                        kic.setSelectedItem(cvth.ASCII2Unicode(rs.getString("pkic")));
                        t_pcooktime.setText(cvth.ASCII2Unicode(rs.getString("pcooktime")));
                        txtfOption.setText(cvth.ASCII2Unicode(rs.getString("poption")));
                        txtfkitname.setText(cvth.ASCII2Unicode(rs.getString("pkicdesc")));
                        txtfpsetsetgroup.setText(cvth.ASCII2Unicode(rs.getString("psetselectqty")));
                        txtfPcode.setBackground(new java.awt.Color(255, 246, 143));
                        txtfPcode.setEditable(false);
                        startfrm();
                    }

                } else {
                    stmt = (Statement) db.con.createStatement();
                    String sql = "select * from product where pcode ='" + txtfPcode.getText() + "'";
                    rs = stmt.executeQuery(sql);
                    if (rs.next()) {

                        txtbarcode.setText(rs.getString("pbarcode"));
                        txtfPdesc.setText(rs.getString("pdesc"));
                        txtfpgroup.setText(rs.getString("pgroup"));
                        txtfpgroupname.setText(getGroupName(txtfpgroup.getText()));
                        combo_unit.setSelectedItem(rs.getString("punit1"));
                        txtparea.setText(rs.getString("parea"));
                        PShortDesc.setText(rs.getString("pshortdesc"));
                        txtrefcode.setText(rs.getString("preferent"));

                        ptype = rs.getString("ptype");
                        pnormal = rs.getString("pnormal");
                        pvat = rs.getString("pvat");
                        pstock = rs.getString("pstock");
                        pset = rs.getString("pset");
                        pabtype = rs.getString("pabtype");
                        pactive = rs.getString("pactive");
                        pstatus = rs.getString("pstatus");
                        pservice = rs.getString("pservice");
                        pdiscont = rs.getString("pdiscount");
                        pcharge1 = rs.getString("charge1");
                        pcharge2 = rs.getString("charge2");
                        pcharge3 = rs.getString("charge3");
                        porder = rs.getString("porder");
                        if (ptype.equals("1")) {
                            d_rdofood.setSelected(true);
                        } else if (ptype.equals("2")) {
                            d_rdodrink.setSelected(true);
                        } else {
                            d_rdoproduct.setSelected(true);
                        }

                        if (pnormal.equals("N")) {
                            d_rdostatus1.setSelected(true);
                        } else if (pnormal.equals("C")) {
                            d_rdostatus2.setSelected(true);
                        } else {
                            d_rdostatus3.setSelected(true);
                        }
                        if (pset.equals("Y")) {
                            d_rdoSet.setSelected(true);
                        } else if (pset.equals("C")) {
                            d_rdocouse.setSelected(true);
                        } else {
                            d_rdoNomal.setSelected(true);
                        }

                        if (pstock.equals("Y")) {
                            d_rdostockYes.setSelected(true);
                        } else {
                            d_rdostockNo.setSelected(true);
                        }

                        if (pvat.equals("V")) {
                            d_rdovatYes.setSelected(true);
                        } else {
                            d_rdovatNo.setSelected(true);
                        }

                        if (pabtype.equals("F")) {
                            d_rdoGoods.setSelected(true);
                        } else {
                            d_rdoHaveMaterial.setSelected(true);
                        }

                        if (pactive.equals("Y")) {
                            d_rdoactiveYes.setSelected(true);
                        } else {
                            d_rdoactiveNo.setSelected(true);
                        }

                        if (pstatus.equals("P")) {
                            d_rdoAuto.setSelected(true);
                        } else {
                            d_rdoCustom.setSelected(true);
                        }

                        if (pservice.equals("Y")) {
                            d_rdoserviceYes.setSelected(true);
                        } else {
                            d_rdoserviceNo.setSelected(true);
                        }

                        if (pcharge1.equals("Y")) {
                            d_chkchart1.setSelected(true);
                        } else {
                            d_chkchart1.setSelected(false);
                        }
                        if (pcharge2.equals("Y")) {
                            d_chkchart2.setSelected(true);
                        } else {
                            d_chkchart2.setSelected(false);
                        }
                        if (pcharge3.equals("Y")) {
                            d_chkchart3.setSelected(true);
                        } else {
                            d_chkchart3.setSelected(false);
                        }

                        if (porder.equals("0")) {
                            d_rdoporder1.setSelected(true);
                        } else if (porder.equals("1")) {
                            d_rdoporder2.setSelected(true);
                        } else if (porder.equals("2")) {
                            d_rdoporder3.setSelected(true);
                        } else if (porder.equals("3")) {
                            d_rdoporder4.setSelected(true);
                        }

                        txtpabdept.setText(rs.getString("pabdept"));
                        txtvendor.setText(rs.getString("pvender"));
                        txtvendorname.setText(getVenderName(txtvendor.getText()));
                        combo_unit1.setSelectedItem(rs.getString("pbunit"));
                        txtfmbpack.setText(DoubleFmt2.format(rs.getDouble("pbpack")));
                        txtfmEatIn.setText(DoubleFmt.format(rs.getDouble("pprice11")));
                        txtfmTakeAway.setText(DoubleFmt.format(rs.getDouble("pprice12")));
                        txtfmDelivery.setText(DoubleFmt.format(rs.getDouble("pprice13")));
                        txtfmPinto.setText(DoubleFmt.format(rs.getDouble("pprice14")));
                        txtfmWhole.setText(DoubleFmt.format(rs.getDouble("pprice15")));
                        txtfmscost.setText(DoubleFmt2.format(rs.getDouble("pscost")));
                        txtfmlcost.setText(DoubleFmt2.format(rs.getDouble("plcost")));
                        txtfmacost.setText(DoubleFmt2.format(rs.getDouble("pacost")));
                        kic.setSelectedItem(rs.getString("pkic"));
                        t_pcooktime.setText(rs.getString("pcooktime"));
                        txtfOption.setText(rs.getString("poption"));
                        txtfkitname.setText(rs.getString("pkicdesc"));
                        txtfpsetsetgroup.setText(rs.getString("psetselectqty"));
                        txtfPcode.setBackground(new java.awt.Color(255, 246, 143));
                        txtfPcode.setEditable(false);
                        startfrm();
                    }

                }
                getDataSAP(rs);
                cleartxtpcourse();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        } else {

        }

        chkTabPsetOpen();
        chkPLUtype();
        chkqtybalance(txtfPcode.getText());
    }

    public boolean chkTabPsetOpen() {
        boolean chk = true;
        if (d_rdoNomal.isSelected()) {
            if (!chkpset(txtfPcode.getText())) {
                jTabbedPane1.setEnabledAt(2, false);
                chk = false;
            } else {
                int confirm = JOptionPane.showConfirmDialog(this, "ไม่สามารถเปลี่ยนแปลงข้อมูลได้ เนื่องจากคุณมีรายการสินค้าชุดอยู่ในสินค้า คุณต้องการลบรายการสินค้าชุดหรือไม่. . .?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    deletepsetall(txtfPcode.getText());
                    calculateLCostPLU.updatePsetselectqtyPLU(txtfPcode.getText(), 1);

                    jTabbedPane1.setEnabledAt(2, false);
                } else {
                    d_rdoSet.setSelected(true);
                    jTabbedPane1.setEnabledAt(2, true);
                }
                showpset();
            }

            if (!chkpcourse(txtfPcode.getText())) {
                jTabbedPane1.setEnabledAt(4, false);
                chk = false;
            } else {
                int confirm = JOptionPane.showConfirmDialog(this, "ไม่สามารถเปลี่ยนแปลงข้อมูลได้ เนื่องจากคุณมีรายการสินค้า Course คุณต้องการลบรายการสินค้า Course หรือไม่. . .?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    deletepcourseall();

                    jTabbedPane1.setEnabledAt(4, false);
                } else {
                    d_rdocouse.setSelected(true);
                    jTabbedPane1.setEnabledAt(4, true);
                }
                loadtblpcourse(txtfPcode.getText());
            }
        } else if (d_rdoSet.isSelected()) {

            if (!chkpcourse(txtfPcode.getText())) {
                jTabbedPane1.setEnabledAt(2, true);
                jTabbedPane1.setEnabledAt(4, false);
                chk = false;
            } else {
                int confirm = JOptionPane.showConfirmDialog(this, "ไม่สามารถเปลี่ยนแปลงข้อมูลได้ เนื่องจากคุณมีรายการสินค้า Course คุณต้องการลบรายการสินค้า Course หรือไม่. . .?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    deletepcourseall();

                    jTabbedPane1.setEnabledAt(4, false);
                    jTabbedPane1.setEnabledAt(2, true);
                } else {
                    d_rdocouse.setSelected(true);
                    jTabbedPane1.setEnabledAt(4, true);
                    jTabbedPane1.setEnabledAt(2, false);
                }
                loadtblpcourse(txtfPcode.getText());
            }

        } else if (d_rdocouse.isSelected()) {

            if (!chkpset(txtfPcode.getText())) {
                jTabbedPane1.setEnabledAt(2, false);
                jTabbedPane1.setEnabledAt(4, true);
                chk = false;
            } else {
                int confirm = JOptionPane.showConfirmDialog(this, "ไม่สามารถเปลี่ยนแปลงข้อมูลได้ เนื่องจากคุณมีรายการสินค้าชุดอยู่ในสินค้า คุณต้องการลบรายการสินค้าชุดหรือไม่. . .?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    deletepsetall(txtfPcode.getText());
                    calculateLCostPLU.updatePsetselectqtyPLU(txtfPcode.getText(), 1);

                    jTabbedPane1.setEnabledAt(2, false);
                    jTabbedPane1.setEnabledAt(4, true);
                } else {
                    d_rdoSet.setSelected(true);
                    jTabbedPane1.setEnabledAt(2, true);
                    jTabbedPane1.setEnabledAt(4, false);
                }
                showpset();
            }
        }

        return chk;
    }

    public void showpset() {
        ResultSet rs = null;
        int count = 0;
        cleartblPset();
        tbPset = (DefaultTableModel) tblPset.getModel();

        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset inner join product on pset.psubcode = product.pcode where pset.pcode = '" + cvth.Unicode2ASCII(txtfPcode.getText()) + "' order by pset.pcode,pset.psetgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    tbPset.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("psubcode")),
                        cvth.ASCII2Unicode(rs.getString("pdesc")),
                        rs.getInt("psetgroup"),
                        rs.getInt("psetgroupqty"),
                        rs.getInt("psubqty"),
                        cvth.ASCII2Unicode(rs.getString("punit1"))
                    });
                    count++;
                }

                stmt = (Statement) db.con.createStatement();
                sql = "select * from  product  where pcode = '" + cvth.Unicode2ASCII(txtfPcode.getText()) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfpsetsetgroup.setText(rs.getString("psetselectqty"));
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset inner join product on pset.psubcode = product.pcode where pset.pcode = '" + cvth.Unicode2ASCII(txtfPcode.getText()) + "' order by pset.pcode,pset.psetgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    tbPset.addRow(new Object[]{rs.getString("psubcode"),
                        rs.getString("pdesc"),
                        rs.getInt("psetgroup"),
                        rs.getInt("psetgroupqty"),
                        rs.getInt("psubqty"),
                        rs.getString("punit1")
                    });
                    count++;
                }
                stmt = (Statement) db.con.createStatement();
                sql = "select * from  product  where pcode = '" + txtfPcode.getText() + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfpsetsetgroup.setText(rs.getString("psetselectqty"));
                }
            }
            db_lblCount3.setText(count + "");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public void cleartblPset() {
        tbPset = (DefaultTableModel) tblPset.getModel();
        int cnt = tbPset.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                tbPset.removeRow(0);
            }
        }
    }

    public void cleartxtfPset() {

        txtfpsetcode.setText("");
        txtfpsetname.setText("");
        txtfpsetqty.setText("1");
        txtfpsetgroup.setText("1");
        txtfpsetgroupqty.setText("1");
        txtfpsetunit.setText("");
        txtfpsetcode.setEditable(true);
    }

    public boolean setPsetUnit() {
        txtfpsetname.setText("");
        txtfpsetqty.setText("1");
        txtfpsetgroupqty.setText("1");
        txtfpsetgroup.setText("1");
        txtfpsetunit.setText("");
        ResultSet rs = null;
        boolean chk = true;
        try {

            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                if (chkpluinpset(txtfPcode.getText(), txtfpsetcode.getText())) {
                    stmt = (Statement) db.con.createStatement();
                    String sql = "select * from pset inner join product on pset.psubcode = product.pcode where pset.psubcode = '" + cvth.Unicode2ASCII(txtfpsetcode.getText()) + "' and pset.pcode = '" + cvth.Unicode2ASCII(txtfPcode.getText()) + "'";
                    rs = stmt.executeQuery(sql);
                    if (rs.next()) {
                        txtfpsetname.setText(cvth.ASCII2Unicode(rs.getString("pdesc")));
                        txtfpsetunit.setText(cvth.ASCII2Unicode(rs.getString("punit1")));
                        txtfpsetqty.setText(Format.integerFmt.format(rs.getInt("psubqty")));
                        txtfpsetgroup.setText(Format.integerFmt.format(rs.getInt("psetgroup")));
                        txtfpsetgroupqty.setText(Format.integerFmt.format(rs.getInt("psetgroupqty")));

                    } else {
                        chk = false;

                    }
                } else {
                    stmt = (Statement) db.con.createStatement();
                    String sql = "select * from product where pcode = '" + cvth.Unicode2ASCII(txtfpsetcode.getText()) + "'";
                    rs = stmt.executeQuery(sql);
                    if (rs.next()) {
                        txtfpsetname.setText(cvth.ASCII2Unicode(rs.getString("pdesc")));
                        txtfpsetunit.setText(cvth.ASCII2Unicode(rs.getString("punit1")));
                        //txtfpsetcode.setEditable(false);                           

                    } else {
                        chk = false;

                    }
                }
            } else if (chkpluinpset(txtfPcode.getText(), txtfpsetcode.getText())) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset inner join product on pset.psubcode = product.pcode where pset.psubcode = '" + txtfpsetcode.getText() + "' and pset.pcode = '" + txtfPcode.getText() + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfpsetname.setText(rs.getString("pdesc"));
                    txtfpsetunit.setText(rs.getString("punit1"));
                    txtfpsetqty.setText(Format.integerFmt.format(rs.getInt("psubqty")));
                    txtfpsetgroup.setText(Format.integerFmt.format(rs.getInt("psetgroup")));
                    txtfpsetgroupqty.setText(Format.integerFmt.format(rs.getInt("psetgroupqty")));

                } else {
                    chk = false;

                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from product where pcode = '" + txtfpsetcode.getText() + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfpsetname.setText(cvth.ASCII2Unicode(rs.getString("pdesc")));
                    txtfpsetunit.setText(cvth.ASCII2Unicode(rs.getString("punit1")));

                } else {
                    chk = false;

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

        return chk;
    }

    public boolean savePset() {
        boolean chk = false;
        if (txtfPcode.getText().equals(txtfpsetcode.getText())) {
            JOptionPane.showMessageDialog(null, "กรุณกำหนดรหัสสินค้าชุดให้ถูกต้อง...");
            chk = false;
        } else if (!txtfPcode.getText().equals("")) {
            if (!txtfpsetcode.getText().equals("")) {
                if (!chkproduct(txtfPcode.getText())) {
                    int confirm = JOptionPane.showConfirmDialog(this, "รายการสินค้านี้ยังไม่ได้มีการบันทึกข้อมูล คุณต้องการบันทึกข้อมูลก่อนหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        if (save()) {
                            chk = savedetail();
                            txtfPcode.setBackground(new java.awt.Color(255, 246, 143));
                            txtfPcode.setEditable(false);
                        }
                    }
                } else {
                    chk = savedetail();
                }
                if (chk) {
                    showpset();
                }
            } else {
            }
        }
        return chk;
    }

    private boolean chkpluinpset(String codeplu, String codesubplu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + cvth.Unicode2ASCII(codeplu) + "' and psubcode='" + cvth.Unicode2ASCII(codesubplu) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + codeplu + "' and psubcode='" + codesubplu + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private boolean validatepset() {
        boolean chk = true;

        if (txtfpsetqty.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
            chk = false;
            txtfpsetqty.requestFocus();
            return chk;
        } else if (txtfpsetgroup.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
            chk = false;
            txtfpsetgroup.requestFocus();
            return chk;
        } else if (txtfpsetsetgroup.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
            chk = false;
            txtfpsetsetgroup.requestFocus();
            return chk;
        } else if (txtfpsetgroupqty.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
            chk = false;
            txtfpsetgroupqty.requestFocus();
            return chk;
        } else if (txtfpsetcode.getText().equals(txtfPcode.getText())) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ เนื่องจากรหัสสินค้าเหมือนกัน");
            chk = false;
            txtfpsetcode.requestFocus();
            txtfpsetcode.setText("");
            cleartxtfPset();
            return chk;
        }

        int max = maxpsetgroup(txtfPcode.getText());
        Double unit = Double.parseDouble(PUtility.ConvertReal(txtfpsetgroupqty.getText()));
        Double group = Double.parseDouble(PUtility.ConvertReal(txtfpsetgroup.getText()));
        Double setgroup = Double.parseDouble(PUtility.ConvertReal(txtfpsetsetgroup.getText()));
        if (group < 1 || group > setgroup) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนต้องไม่น้อยกว่า 0 และมากเกินรายการกลุ่มที่เลือกได้");
            chk = false;
            txtfpsetgroup.requestFocus();
        } else if (unit < 0 || unit > 99999999) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนต้องไม่น้อยกว่า 1 และมากเกิน 99,999,999 ล้าน");
            chk = false;
            txtfpsetgroupqty.requestFocus();
        } else if (group < 0 || group > 99999999) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนต้องไม่น้อยกว่า 1 และมากเกิน 99,999,999 ล้าน");
            chk = false;
            txtfpsetgroup.requestFocus();
        } else if (setgroup < max) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ เนื่องจากข้อมูลกลุ่มสำหรับการเลือกมีค่ามากกว่าจำนวนกลุ่มที่เลือกได้");
            chk = false;
            txtfpsetsetgroup.requestFocus();
        }

        return chk;
    }

    private void deletepset() {
        if (indexpsettbl != -1 && !txtfPcode.getText().equals("")) {
            if (chkproduct(txtfPcode.getText())) {

                int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการที่เลือกหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    try {
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "delete from pset where pcode = ? and psubcode = ?";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, cvth.Unicode2ASCII(txtfPcode.getText()));
                            prm.setString(2, cvth.Unicode2ASCII(tblPset.getValueAt(indexpsettbl, 0).toString()));

                            prm.executeUpdate();
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "delete from pset where pcode = ? and psubcode = ?";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, txtfPcode.getText());
                            prm.setString(2, tblPset.getValueAt(indexpsettbl, 0).toString());

                            prm.executeUpdate();

                        }
                        stmt.close();
                        cleartxtfPset();
                        indexpsettbl = -1;

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage(), "Delete Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    indexpsettbl = -1;
                }
            }
            showpset();
        }

    }

    private boolean savedetail() {
        boolean chk = false;
        if (validatepset()) {

            calculateLCostPLU.updatePsetselectqtyPLU(txtfPcode.getText(), Integer.parseInt(PUtility.ConvertReal(txtfpsetsetgroup.getText())));
            if (chkgroupqtypset(txtfPcode.getText(), txtfpsetgroup.getText())) {
                if (chkpluinpset(txtfPcode.getText(), txtfpsetcode.getText())) {

                    try {
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Update pset set psubqty= ?,psetgroup=?,psetgroupqty=? where pcode = ? and psubcode = ?";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                            prm.setInt(1, Integer.parseInt(PUtility.ConvertReal(txtfpsetqty.getText())));
                            prm.setInt(2, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroup.getText())));
                            prm.setInt(3, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroupqty.getText())));
                            prm.setString(4, cvth.Unicode2ASCII(txtfPcode.getText()));
                            prm.setString(5, cvth.Unicode2ASCII(txtfpsetcode.getText()));
                            prm.executeUpdate();
                            chk = true;
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Update pset set psubqty= ?,psetgroup=?,psetgroupqty=? where pcode = ? and psubcode = ?";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                            prm.setInt(1, Integer.parseInt(PUtility.ConvertReal(txtfpsetqty.getText())));
                            prm.setInt(2, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroup.getText())));
                            prm.setInt(3, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroupqty.getText())));
                            prm.setString(4, txtfPcode.getText());
                            prm.setString(5, txtfpsetcode.getText());
                            prm.executeUpdate();
                            chk = true;

                        }
                        stmt.close();
                        cleartxtfPset();
                        txtfpsetcode.requestFocus();

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage(), "Update Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    try {
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Insert into pset (pcode,psubcode,psetgroup,psubqty,psetgroupqty) values(?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);

                            prm.setString(1, cvth.Unicode2ASCII(txtfPcode.getText()));
                            prm.setString(2, cvth.Unicode2ASCII(txtfpsetcode.getText()));
                            prm.setInt(3, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroup.getText())));
                            prm.setInt(4, Integer.parseInt(PUtility.ConvertReal(txtfpsetqty.getText())));
                            prm.setInt(5, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroupqty.getText())));
                            prm.executeUpdate();
                            chk = true;
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Insert into pset (pcode,psubcode,psetgroup,psubqty,psetgroupqty) values(?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);

                            prm.setString(1, txtfPcode.getText());
                            prm.setString(2, txtfpsetcode.getText());
                            prm.setInt(3, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroup.getText())));
                            prm.setInt(4, Integer.parseInt(PUtility.ConvertReal(txtfpsetqty.getText())));
                            prm.setInt(5, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroupqty.getText())));

                            prm.executeUpdate();
                            chk = true;
                        }
                        stmt.close();
                        cleartxtfPset();
                        txtfpsetcode.requestFocus();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage(), "Insert Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
        return chk;
    }

    public boolean chkPLUtype() {
        boolean chk = true;
        if (d_rdoGoods.isSelected()) {
            if (!chkmenusetup(txtfPcode.getText())) {
                txtfmscost.setEditable(true);
                txtfmscost.setBackground(java.awt.Color.white);
                chk = false;
            } else {
                int confirm = JOptionPane.showConfirmDialog(this, "ไม่สามารถเปลี่ยนแปลงข้อมูลได้ เนื่องจากคุณมีรายการส่วนประกอบอยู่ในสินค้า คุณต้องการลบรายการส่วนประกอบหรือไม่. . .?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    deletemenusetup(txtfPcode.getText());
                    calculateLCostPLU.updatecostPLU(txtfPcode.getText(), 0);
                    txtfmlcost.setText("0.0000");
                    txtfmscost.setEditable(true);
                    txtfmscost.setBackground(java.awt.Color.white);
                } else {
                    txtfmscost.setEditable(false);
                    txtfmscost.setBackground(new java.awt.Color(249, 252, 186));
                    d_rdoHaveMaterial.setSelected(true);
                }
            }

        } else {
            txtfmscost.setText("0.0000");
            txtfmscost.setEditable(false);
            txtfmscost.setBackground(new java.awt.Color(249, 252, 186));
        }
        calpercost();
        return chk;
    }

    private boolean chkmenusetup(String codeplu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from menusetup where menucode ='" + cvth.Unicode2ASCII(codeplu) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from menusetup where menucode ='" + codeplu + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;

                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private boolean chkpset(String codeplu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + cvth.Unicode2ASCII(codeplu) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + codeplu + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;

                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private boolean deletemenusetup(String codeplu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "delete from menusetup where menucode ='" + cvth.Unicode2ASCII(codeplu) + "'";
                stmt.executeUpdate(sql);

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "delete from menusetup where menucode ='" + codeplu + "'";
                stmt.executeUpdate(sql);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private boolean deletepsetall(String codeplu) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "delete from pset where pcode ='" + cvth.Unicode2ASCII(codeplu) + "'";
                stmt.executeUpdate(sql);

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "delete from pset where pcode ='" + codeplu + "'";
                stmt.executeUpdate(sql);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private void calpercost() {
        double cost = 0;
        double price = 0;
        double total = 0;
        try {
            if (d_rdoGoods.isSelected()) {
                cost = Double.parseDouble(PUtility.ConvertReal(txtfmscost.getText()));
                price = Double.parseDouble(PUtility.ConvertReal(txtfmEatIn.getText()));
                if (price != 0) {
                    total = cost / price;
                }
                txtfmtcost.setText(Format.percentFmt.format(total));
            } else {
                cost = Double.parseDouble(PUtility.ConvertReal(txtfmlcost.getText()));
                price = Double.parseDouble(PUtility.ConvertReal(txtfmEatIn.getText()));
                if (price != 0) {
                    total = cost / price;
                }
                txtfmtcost.setText(Format.percentFmt.format(total));
            }
        } catch (Exception e) {
        }
    }

    private int maxpsetgroup(String plucode) {
        int max = 0;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select psetgroup from pset inner join product on pset.psubcode = product.pcode where pset.pcode = '" + cvth.Unicode2ASCII(txtfPcode.getText()) + "' order by pset.psetgroup desc";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    max = rs.getInt("psetgroup");
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select psetgroup from pset inner join product on pset.psubcode = product.pcode where pset.pcode = '" + txtfPcode.getText() + "' order by pset.psetgroup desc";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    max = rs.getInt("psetgroup");
                }
            }
        } catch (Exception e) {
        }
        return max;
    }

    private boolean chkgrouppset(String codeplu, String group) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + cvth.Unicode2ASCII(codeplu) + "' and psetgroup ='" + cvth.Unicode2ASCII(group) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + codeplu + "' and psetgroup ='" + group + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            }
        } catch (Exception e) {
        }
        return chk;
    }

    private boolean setgrouppset(String codeplu, String group) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + cvth.Unicode2ASCII(codeplu) + "' and psetgroup ='" + cvth.Unicode2ASCII(group) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfpsetgroupqty.setText(rs.getString("psetgroupqty"));
                } else {
                    txtfpsetgroupqty.setText("1");
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + codeplu + "' and psetgroup ='" + group + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfpsetgroupqty.setText(rs.getString("psetgroupqty"));
                } else {
                    txtfpsetgroupqty.setText("1");
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private boolean chkgroupqtypset(String codeplu, String group) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + cvth.Unicode2ASCII(codeplu) + "' and psetgroup ='" + cvth.Unicode2ASCII(group) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {

                    int qtyold = rs.getInt("psetgroupqty");
                    int qtynew = Integer.parseInt(PUtility.ConvertReal(txtfpsetgroupqty.getText()));
                    if (qtyold != qtynew) {
                        int confirm = JOptionPane.showConfirmDialog(this, "จำนวน(QTY) ไม่เท่ากัน คุณต้องการเปลี่ยนจำนวนทั้งหมดในกลุ่มหรือไม่. . .?", "Confirm", JOptionPane.YES_NO_OPTION);
                        if (confirm == JOptionPane.YES_OPTION) {
                            updatePsetqty(txtfPcode.getText(), txtfpsetgroup.getText());
                            showpset();
                            chk = true;
                        } else {
                            txtfpsetgroupqty.setText(rs.getString("psetgroupqty"));
                            txtfpsetgroupqty.requestFocus();
                        }
                    } else {
                        chk = true;
                    }
                } else {
                    chk = true;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset where pcode ='" + codeplu + "' and psetgroup ='" + group + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {

                    int qtyold = rs.getInt("psetgroupqty");
                    int qtynew = Integer.parseInt(PUtility.ConvertReal(txtfpsetgroupqty.getText()));
                    if (qtyold != qtynew) {
                        int confirm = JOptionPane.showConfirmDialog(this, "จำนวน(QTY) ไม่เท่ากัน คุณต้องการเปลี่ยนจำนวนทั้งหมดในกลุ่มหรือไม่. . .?", "Confirm", JOptionPane.YES_NO_OPTION);
                        if (confirm == JOptionPane.YES_OPTION) {
                            updatePsetqty(txtfPcode.getText(), txtfpsetgroup.getText());
                            showpset();
                            chk = true;
                        } else {
                            txtfpsetgroupqty.setText(rs.getString("psetgroupqty"));
                            txtfpsetgroupqty.requestFocus();
                        }
                    } else {
                        chk = true;
                    }
                } else {
                    chk = true;
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public void updatePsetqty(String plucode, String group) {

        if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
            try {
                String sqlplu = "update pset set psetgroupqty = ? where pcode = ? and psetgroup = ?";
                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sqlplu);
                prm.setInt(1, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroupqty.getText())));
                prm.setString(2, cvth.Unicode2ASCII(plucode));
                prm.setString(3, group);
                prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            try {
                String sqlplu = "update pset set psetgroupqty = ? where pcode = ? and psetgroup = ?";
                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sqlplu);
                prm.setInt(1, Integer.parseInt(PUtility.ConvertReal(txtfpsetgroupqty.getText())));
                prm.setString(2, plucode);
                prm.setString(3, group);
                prm.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }

    private boolean chkqtybalance(String codeplu) {
        boolean chk = true;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select psubcode,pcode,psetgroup,psetgroupqty,psubqty from pset where pcode = '" + cvth.Unicode2ASCII(codeplu) + "' ";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    int countqtygroup = getCountGroupPset(rs.getString("pcode"), rs.getString("psetgroup"));
                    int psetgroupqty = rs.getInt("psetgroupqty");
                    int psubqty = rs.getInt("psubqty");
                    String psetgroup = cvth.ASCII2Unicode(rs.getString("psetgroup"));
                    if (psetgroupqty > countqtygroup) {
                        JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณาเพิ่มรายการให้มากกว่าหรือเท่ากับ จำนวนที่เลือกได้ในกลุ่มที่ " + psetgroup);
                        jTabbedPane1.setSelectedIndex(2);
                        txtfpsetcode.requestFocus();
                        chk = false;
                        return chk;
                    }
//                    else if (psubqty > psetgroupqty)
//                    {
//                        JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง เนื่องจากรหัสสินค้า "+rs.getString("psubcode") +" มีจำนวนมากกว่าจำนวนที่เลือกในกลุ่ม ในกลุ่มที่" + psetgroup);
//                        jTabbedPane1.setSelectedIndex(2);
//                        txtfpsetcode.requestFocus();
//                        chk = false;
//                        return chk;
//                    }
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select psubcode,pcode,psetgroup,psetgroupqty,psubqty from pset where pcode = '" + codeplu + "' ";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    int countqtygroup = getCountGroupPset(rs.getString("pcode"), rs.getString("psetgroup"));
                    int psetgroupqty = rs.getInt("psetgroupqty");
                    int psubqty = rs.getInt("psubqty");
                    String psetgroup = rs.getString("psetgroup");
                    if (psubqty > countqtygroup) {
                        JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณาเพิ่มรายการให้มากกว่าหรือเท่ากับ จำนวนที่เลือกได้ในกลุ่มที่ " + psetgroup);
                        jTabbedPane1.setSelectedIndex(2);
                        txtfpsetcode.requestFocus();
                        chk = false;
                        return chk;
                    }
//                    else if (psubqty > psetgroupqty)
//                    {
//                        JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง เนื่องจากรหัสสินค้า "+rs.getString("psubcode") +" มีจำนวนมากกว่าจำนวนที่เลือกในกลุ่ม ในกลุ่มที่" + psetgroup);
//                        jTabbedPane1.setSelectedIndex(2);
//                        txtfpsetcode.requestFocus();
//                        chk = false;
//                        return chk;
//                    }
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private int getCountGroupPset(String pcode, String psetgroup) {
        int ans = 0;
        ResultSet rs = null;
        try {

            stmt = (Statement) db.con.createStatement();
            String sql = "select count(pcode) as count,psetgroup,psubqty from pset where pcode = '" + pcode + "' and psetgroup = '" + psetgroup + "' group by psetgroup ";
            rs = stmt.executeQuery(sql);
            if (rs.next()) {
                ans = rs.getInt("count");
            }

            rs.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return ans;
    }

    private void cleartblbgroup() {
        tbBgroup = (DefaultTableModel) tblBgroup.getModel();
        int cnt = tbBgroup.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                tbBgroup.removeRow(0);
            }
        }
    }

    private void showdatblbgroup(String code) {
        ResultSet rs = null;
        int count = 0;
        tbBgroup = (DefaultTableModel) tblBgroup.getModel();
        cleartblbgroup();
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from blink inner join branchgroup on blink.bgroup = branchgroup.bgroupcode inner join product on blink.pcode = product.pcode where blink.pcode = '" + cvth.Unicode2ASCII(code) + "' order by pdept,blink.bgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    tbBgroup.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("pgroup")),
                        cvth.ASCII2Unicode(rs.getString("bgroup")),
                        cvth.ASCII2Unicode(rs.getString("bgroupname")),
                        rs.getDouble("price1"),
                        rs.getDouble("price2"),
                        rs.getDouble("price3"),
                        rs.getDouble("price4"),
                        rs.getDouble("price5"),
                        cvth.ASCII2Unicode(rs.getString("promotion1")),
                        cvth.ASCII2Unicode(rs.getString("promotion2")),
                        cvth.ASCII2Unicode(rs.getString("promotion3"))
                    });
                    count++;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from blink inner join branchgroup on blink.bgroup = branchgroup.bgroupcode inner join product on blink.pcode = product.pcode where blink.pcode = '" + code + "' order by pdept,blink.bgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    tbBgroup.addRow(new Object[]{rs.getString("pgroup"),
                        rs.getString("pcode"),
                        rs.getString("pdesc"),
                        rs.getDouble("price1"),
                        rs.getDouble("price2"),
                        rs.getDouble("price3"),
                        rs.getDouble("price4"),
                        rs.getDouble("price5"),
                        rs.getString("promotion1"),
                        rs.getString("promotion2"),
                        rs.getString("promotion3")
                    });
                    count++;
                }

            }
            db_lblCount.setText(count + "");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }

    public boolean showbgroup() {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                if (chkblink(txtfPcode.getText(), txtfBgroup1.getText())) {
                    String sql = "select * from blink inner join product on blink.pcode = product.pcode where blink.pcode ='" + cvth.Unicode2ASCII(txtfPcode.getText()) + "' and bgroup='" + cvth.Unicode2ASCII(txtfBgroup1.getText()) + "'";
                    rs = stmt.executeQuery(sql);
                    if (rs.next()) {

                        txtfmEatIn1.setText(DoubleFmt.format(rs.getDouble("price1")));
                        txtfmTakeAway1.setText(DoubleFmt.format(rs.getDouble("price2")));
                        txtfmDelivery1.setText(DoubleFmt.format(rs.getDouble("price3")));
                        txtfmPinto1.setText(DoubleFmt.format(rs.getDouble("price4")));
                        txtfmWhole1.setText(DoubleFmt.format(rs.getDouble("price5")));
                        txtfPro1.setText(cvth.ASCII2Unicode(rs.getString("promotion1")));
                        txtfPro2.setText(cvth.ASCII2Unicode(rs.getString("promotion2")));
                        txtfPro3.setText(cvth.ASCII2Unicode(rs.getString("promotion3")));
                        chk = true;
                    }
                } else {
                    String sql = "select * from product  where pcode ='" + cvth.Unicode2ASCII(txtfPcode.getText()) + "'";
                    rs = stmt.executeQuery(sql);
                    if (rs.next()) {

                        txtfmEatIn1.setText(DoubleFmt.format(rs.getDouble("pprice11")));
                        txtfmTakeAway1.setText(DoubleFmt.format(rs.getDouble("pprice12")));
                        txtfmDelivery1.setText(DoubleFmt.format(rs.getDouble("pprice13")));
                        txtfmPinto1.setText(DoubleFmt.format(rs.getDouble("pprice14")));
                        txtfmWhole1.setText(DoubleFmt.format(rs.getDouble("pprice15")));
                        txtfPro1.setText(cvth.ASCII2Unicode(rs.getString("ppromotion1")));
                        txtfPro2.setText(cvth.ASCII2Unicode(rs.getString("ppromotion2")));
                        txtfPro3.setText(cvth.ASCII2Unicode(rs.getString("ppromotion3")));
                        chk = true;
                    }

                }
                settxtproname();

            } else {
                stmt = (Statement) db.con.createStatement();
                if (chkblink(txtfPcode.getText(), txtfBgroup1.getText())) {
                    String sql = "select * from blink inner join product on blink.pcode = product.pcode where blink.pcode ='" + cvth.Unicode2ASCII(txtfPcode.getText()) + "' and bgroup='" + cvth.Unicode2ASCII(txtfBgroup1.getText()) + "'";
                    rs = stmt.executeQuery(sql);
                    if (rs.next()) {

                        txtfmEatIn1.setText(DoubleFmt.format(rs.getDouble("price1")));
                        txtfmTakeAway1.setText(DoubleFmt.format(rs.getDouble("price2")));
                        txtfmDelivery1.setText(DoubleFmt.format(rs.getDouble("price3")));
                        txtfmPinto1.setText(DoubleFmt.format(rs.getDouble("price4")));
                        txtfmWhole1.setText(DoubleFmt.format(rs.getDouble("price5")));
                        txtfPro1.setText(rs.getString("promotion1"));
                        txtfPro2.setText(rs.getString("promotion2"));
                        txtfPro3.setText(rs.getString("promotion3"));
                        chk = true;
                    }
                } else {
                    String sql = "select * from product  where pcode ='" + cvth.Unicode2ASCII(txtfPcode.getText()) + "'";
                    rs = stmt.executeQuery(sql);
                    if (rs.next()) {

                        txtfmEatIn1.setText(DoubleFmt.format(rs.getDouble("pprice11")));
                        txtfmTakeAway1.setText(DoubleFmt.format(rs.getDouble("pprice12")));
                        txtfmDelivery1.setText(DoubleFmt.format(rs.getDouble("pprice13")));
                        txtfmPinto1.setText(DoubleFmt.format(rs.getDouble("pprice14")));
                        txtfmWhole1.setText(DoubleFmt.format(rs.getDouble("pprice15")));
                        txtfPro1.setText(rs.getString("ppromotion1"));
                        txtfPro2.setText(rs.getString("ppromotion2"));
                        txtfPro3.setText(rs.getString("ppromotion3"));
                        chk = true;
                    }

                }
                settxtproname();

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

        return chk;

    }

    public boolean chkblink(String code, String bgroupcode) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from blink where pcode ='" + cvth.Unicode2ASCII(code) + "' and bgroup='" + cvth.Unicode2ASCII(bgroupcode) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from blink where pcode ='" + code + "' and bgroup='" + bgroupcode + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;

                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public boolean setbgroup(String bgroupcode) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + cvth.Unicode2ASCII(bgroupcode) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfBranchName.setText(cvth.ASCII2Unicode(rs.getString("bgroupname")));
                    showbgroup();
                    chk = true;
                } else {
                    return false;
                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + bgroupcode + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfBranchName.setText(rs.getString("bgroupname"));
                    showbgroup();
                    chk = true;
                } else {
                    return false;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private void cleartxtbgroup() {
        txtfBgroup1.setText("");
        txtfBranchName.setText("");
        txtfmEatIn1.setText("0.00");
        txtfmTakeAway1.setText("0.00");
        txtfmDelivery1.setText("0.00");
        txtfmPinto1.setText("0.00");
        txtfmWhole1.setText("0.00");
        txtfPro1.setText("");
        txtfPro2.setText("");
        txtfPro3.setText("");
        txtfproname1.setText("");
        txtfproname2.setText("");
        txtfproname3.setText("");
        indexbgrouptbl = -1;
    }

    public void btnfindbgroup() {
        listBranchGroup2 f = new listBranchGroup2(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.bcode.equals("")) {
            txtfBgroup1.setText(f.bcode);
            setbgroup(txtfBgroup1.getText());

        }

    }

    private boolean savebgroup() {
        boolean chk = false;
        if (!txtfPcode.getText().equals("") && !txtfBgroup1.getText().equals("")) {

            if (!chkproduct(txtfPcode.getText())) {
                int confirm = JOptionPane.showConfirmDialog(this, "รายการสินค้านี้ยังไม่ได้มีการบันทึกข้อมูล คุณต้องการบันทึกข้อมูลก่อนหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    if (save()) {
                        chk = savebgroupdetail();
                        txtfPcode.setBackground(new java.awt.Color(255, 246, 143));
                        txtfPcode.setEditable(false);
                    }
                }
            } else {
                chk = savebgroupdetail();
            }
            if (chk) {
                showdatblbgroup(txtfPcode.getText());
                cleartxtbgroup();
            }

        }
        return chk;
    }

    public boolean savebgroupdetail() {
        boolean chk = false;

        if (validateSavebgroup()) {

            if (chkblink(txtfPcode.getText(), txtfBgroup1.getText())) {

                try {
                    if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Update blink set price1=?,price2 = ?,price3 = ?,price4 = ?,price5 = ?,promotion1 = ?,promotion2 = ?,promotion3 = ?,lastup = ? where pcode = ? and bgroup = ?";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setDouble(1, Double.parseDouble(PUtility.ConvertReal(txtfmEatIn1.getText())));
                        prm.setDouble(2, Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway1.getText())));
                        prm.setDouble(3, Double.parseDouble(PUtility.ConvertReal(txtfmDelivery1.getText())));
                        prm.setDouble(4, Double.parseDouble(PUtility.ConvertReal(txtfmPinto1.getText())));
                        prm.setDouble(5, Double.parseDouble(PUtility.ConvertReal(txtfmWhole1.getText())));
                        prm.setString(6, cvth.Unicode2ASCII(txtfPro1.getText()));
                        prm.setString(7, cvth.Unicode2ASCII(txtfPro2.getText()));
                        prm.setString(8, cvth.Unicode2ASCII(txtfPro3.getText()));
                        prm.setString(9, cvth.Unicode2ASCII(dateFmtSave.format(new java.util.Date())));
                        prm.setString(10, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.setString(11, cvth.Unicode2ASCII(txtfBgroup1.getText()));
                        prm.executeUpdate();
                        chk = true;
                    } else {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Update blink set price1=?,price2 = ?,price3 = ?,price4 = ?,price5 = ?,promotion1 = ?,promotion2 = ?,promotion3 = ?,lastup = ? where pcode = ? and bgroup = ?";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setDouble(1, Double.parseDouble(PUtility.ConvertReal(txtfmEatIn1.getText())));
                        prm.setDouble(2, Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway1.getText())));
                        prm.setDouble(3, Double.parseDouble(PUtility.ConvertReal(txtfmDelivery1.getText())));
                        prm.setDouble(4, Double.parseDouble(PUtility.ConvertReal(txtfmPinto1.getText())));
                        prm.setDouble(5, Double.parseDouble(PUtility.ConvertReal(txtfmWhole1.getText())));
                        prm.setString(6, txtfPro1.getText());
                        prm.setString(7, txtfPro2.getText());
                        prm.setString(8, txtfPro3.getText());
                        prm.setString(9, dateFmtSave.format(new java.util.Date()));
                        prm.setString(10, txtfPcode.getText());
                        prm.setString(11, txtfBgroup1.getText());
                        prm.executeUpdate();
                        chk = true;

                    }
                    stmt.close();
                    cleartxtbgroup();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "Update Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                try {
                    if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Insert into blink (pdept,pcode,lastup,flage,bgroup,price1,price2,price3,price4,price5,promotion1,promotion2,promotion3) values(?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        String[] pdept = getpdepand();
                        prm.setString(1, pdept[0]);
                        prm.setString(2, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.setString(3, cvth.Unicode2ASCII(dateFmtSave.format(new java.util.Date())));
                        prm.setString(4, "Y");
                        prm.setString(5, cvth.Unicode2ASCII(txtfBgroup1.getText()));
                        prm.setDouble(6, Double.parseDouble(PUtility.ConvertReal(txtfmEatIn1.getText())));
                        prm.setDouble(7, Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway1.getText())));
                        prm.setDouble(8, Double.parseDouble(PUtility.ConvertReal(txtfmDelivery1.getText())));
                        prm.setDouble(9, Double.parseDouble(PUtility.ConvertReal(txtfmPinto1.getText())));
                        prm.setDouble(10, Double.parseDouble(PUtility.ConvertReal(txtfmWhole1.getText())));
                        prm.setString(11, cvth.Unicode2ASCII(txtfPro1.getText()));
                        prm.setString(12, cvth.Unicode2ASCII(txtfPro2.getText()));
                        prm.setString(13, cvth.Unicode2ASCII(txtfPro3.getText()));

                        prm.executeUpdate();
                        chk = true;
                    } else {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Insert into blink (pdept,pcode,lastup,flage,bgroup,price1,price2,price3,price4,price5,promotion1,promotion2,promotion3) values(?,?,?,?,?,?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);

                        String[] pdept = getpdepand();

                        prm.setString(1, pdept[0]);
                        prm.setString(2, txtfPcode.getText());
                        prm.setString(3, dateFmtSave.format(new java.util.Date()));
                        prm.setString(4, "Y");
                        prm.setString(5, txtfBgroup1.getText());
                        prm.setDouble(6, Double.parseDouble(PUtility.ConvertReal(txtfmEatIn1.getText())));
                        prm.setDouble(7, Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway1.getText())));
                        prm.setDouble(8, Double.parseDouble(PUtility.ConvertReal(txtfmDelivery1.getText())));
                        prm.setDouble(9, Double.parseDouble(PUtility.ConvertReal(txtfmPinto1.getText())));
                        prm.setDouble(10, Double.parseDouble(PUtility.ConvertReal(txtfmWhole1.getText())));
                        prm.setString(11, txtfPro1.getText());
                        prm.setString(12, txtfPro2.getText());
                        prm.setString(13, txtfPro3.getText());

                        prm.executeUpdate();
                        chk = true;
                    }
                    stmt.close();
                    cleartxtbgroup();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "Insert Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        }
        return chk;
    }

    private boolean savebgroupall() {
        boolean chk = false;

        if (!chkproduct(txtfPcode.getText())) {
            int confirm = JOptionPane.showConfirmDialog(this, "รายการสินค้านี้ยังไม่ได้มีการบันทึกข้อมูล คุณต้องการบันทึกข้อมูลก่อนหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if (save()) {
                    chk = savebgroupalldetail();
                    txtfPcode.setBackground(new java.awt.Color(255, 246, 143));
                    txtfPcode.setEditable(false);
                }
            }
        } else {
            chk = savebgroupalldetail();
        }
        if (chk) {
            showdatblbgroup(txtfPcode.getText());
            cleartxtbgroup();

        }
        txtfBgroup1.requestFocus();

        return chk;
    }

    public boolean savebgroupalldetail() {
        boolean chk = false;
        ResultSet rs = null;
        ResultSet rs2 = null;
        String sql = "";
        try {

            stmt = (Statement) db.con.createStatement();
            stmt2 = (Statement) db.con.createStatement();

            sql = "select * from branchgroup";
            rs = stmt.executeQuery(sql);
            while (rs.next()) {

                if (!chkblink(txtfPcode.getText(), rs.getString("bgroupcode"))) {
                    if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                        sql = "select * from product where pcode = '" + cvth.Unicode2ASCII(txtfPcode.getText()) + "'";
                        rs2 = stmt2.executeQuery(sql);
                        if (rs2.next()) {
                            stmt = (Statement) db.con.createStatement();
                            sql = "Insert into blink (pdept,pcode,lastup,flage,bgroup,price1,price2,price3,price4,price5,promotion1,promotion2,promotion3) values(?,?,?,?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);

                            prm.setString(1, rs2.getString("pgroup"));
                            prm.setString(2, rs2.getString("pcode"));
                            prm.setString(3, dateFmtSave.format(new java.util.Date()));
                            prm.setString(4, "Y");
                            prm.setString(5, rs.getString("bgroupcode"));
                            prm.setDouble(6, rs2.getDouble("pprice11"));
                            prm.setDouble(7, rs2.getDouble("pprice12"));
                            prm.setDouble(8, rs2.getDouble("pprice13"));
                            prm.setDouble(9, rs2.getDouble("pprice14"));
                            prm.setDouble(10, rs2.getDouble("pprice15"));
                            prm.setString(11, rs2.getString("ppromotion1"));
                            prm.setString(12, rs2.getString("ppromotion2"));
                            prm.setString(13, rs2.getString("ppromotion3"));

                            prm.executeUpdate();
                            chk = true;
                        }
                    } else {
                        sql = "select * from product where pcode = '" + txtfPcode.getText() + "'";
                        rs2 = stmt2.executeQuery(sql);
                        if (rs2.next()) {
                            stmt = (Statement) db.con.createStatement();
                            sql = "Insert into blink (pdept,pcode,lastup,flage,bgroup,price1,price2,price3,price4,price5,promotion1,promotion2,promotion3) values(?,?,?,?,?,?,?,?,?,?,?,?,?)";
                            PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);

                            prm.setString(1, rs2.getString("pgroup"));
                            prm.setString(2, rs2.getString("pcode"));
                            prm.setString(3, dateFmtSave.format(new java.util.Date()));
                            prm.setString(4, "Y");
                            prm.setString(5, rs.getString("bgroupcode"));
                            prm.setDouble(6, rs2.getDouble("pprice11"));
                            prm.setDouble(7, rs2.getDouble("pprice12"));
                            prm.setDouble(8, rs2.getDouble("pprice13"));
                            prm.setDouble(9, rs2.getDouble("pprice14"));
                            prm.setDouble(10, rs2.getDouble("pprice15"));
                            prm.setString(11, rs2.getString("ppromotion1"));
                            prm.setString(12, rs2.getString("ppromotion2"));
                            prm.setString(13, rs2.getString("ppromotion3"));

                            prm.executeUpdate();
                            chk = true;
                        }
                    }
                    stmt.close();
                    cleartxtbgroup();
                }
                showdatblbgroup(txtfPcode.getText());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Insert Error", JOptionPane.ERROR_MESSAGE);
        }
        return chk;
    }

    private boolean validateSavebgroup() {
        boolean chk = true;

        if (!chkbgroup(txtfBgroup1.getText())) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสาขาไม่ถูกต้อง... ");
            chk = false;
            txtfBgroup1.requestFocus();
        } else if (txtfBgroup1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสาขาไม่ถูกต้อง... ");
            chk = false;
            txtfBgroup1.requestFocus();
        } else if (txtfBgroup1.getText().length() > 3) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสาขาไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 3 ตัวอักษร)");
            chk = false;
            txtfBgroup1.requestFocus();
        } else if (txtfPcode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสินค้าให้ถูกต้อง");
            chk = false;
            txtfPcode.requestFocus();
        } else if (txtfPcode.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสินค้าไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 13 ตัวอักษร)");
            chk = false;
            txtfPcode.requestFocus();
        } else if (txtfPro1.getText().length() > 3) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 3 ตัวอักษร)");
            chk = false;
            txtfPro1.requestFocus();
        } else if (txtfPro2.getText().length() > 3) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 3 ตัวอักษร)");
            chk = false;
            txtfPro2.requestFocus();
        } else if (txtfPro3.getText().length() > 3) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสโปรโมชั่นไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 3 ตัวอักษร)");
            chk = false;
            txtfPro3.requestFocus();
        } else if (txtfBgroup1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสาขาไม่ถูกต้อง... ");
            chk = false;
            txtfBgroup1.requestFocus();
        } else if (txtfBgroup1.getText().length() > 3) {
            JOptionPane.showMessageDialog(this, "กำหนดรหัสสาขาไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 3 ตัวอักษร)");
            chk = false;
            txtfBgroup1.requestFocus();
        } else if (txtfmEatIn1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            txtfmEatIn1.requestFocus();
        } else if (txtfmDelivery1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            txtfmDelivery1.requestFocus();
        } else if (txtfmPinto1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            txtfmPinto1.requestFocus();
        } else if (txtfmTakeAway1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            txtfmTakeAway1.requestFocus();
        } else if (txtfmWhole1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            txtfmWhole1.requestFocus();
        }

        Double eatin = Double.parseDouble(PUtility.ConvertReal(txtfmEatIn1.getText()));
        Double delivery = Double.parseDouble(PUtility.ConvertReal(txtfmDelivery1.getText()));
        Double pinto = Double.parseDouble(PUtility.ConvertReal(txtfmPinto1.getText()));
        Double take = Double.parseDouble(PUtility.ConvertReal(txtfmTakeAway1.getText()));
        Double whole = Double.parseDouble(PUtility.ConvertReal(txtfmWhole1.getText()));
        if (eatin < 0 || eatin > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmEatIn.requestFocus();
        } else if (delivery < 0 || delivery > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmDelivery.requestFocus();
        } else if (pinto < 0 || pinto > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmPinto.requestFocus();
        } else if (take < 0 || take > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmTakeAway.requestFocus();
        } else if (whole < 0 || whole > 99999999.99) {
            JOptionPane.showMessageDialog(this, "ระบบไม่สามารถจัดเก็บได้ จำนวนเงินต้องไม่น้อยกว่า 0.00 และมากเกิน 99,999,999.99 ล้านบาท");
            chk = false;
            txtfmWhole.requestFocus();
        }

        return chk;
    }

    public String[] getpdepand() {
        String[] aa = null;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();

                String sql = "select * from product  where pcode ='" + cvth.Unicode2ASCII(txtfPcode.getText()) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    aa = new String[]{cvth.ASCII2Unicode(rs.getString("pgroup"))
                    };

                } else {
                    JOptionPane.showMessageDialog(this, "กำหนดรหัสสินค้าไม่ถูกต้อง");
                    txtfPcode.requestFocus();
                    cleartxtbgroup();

                }

            } else {
                stmt = (Statement) db.con.createStatement();

                String sql = "select * from product  where pcode ='" + txtfPcode.getText() + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    aa = new String[]{rs.getString("pgroup")
                    };

                } else {
                    JOptionPane.showMessageDialog(this, "กำหนดรหัสสินค้าไม่ถูกต้อง");
                    txtfPcode.requestFocus();
                    cleartxtbgroup();

                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return aa;
    }

    public boolean chkbgroup(String code) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                } else {
                    chk = false;
                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                } else {
                    chk = false;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    private void deletebgroup() {
        if (indexbgrouptbl != -1 && !txtfPcode.getText().equals("")) {

            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการที่เลือกหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "delete from blink where bgroup = ? and pcode = ?";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(tblBgroup.getValueAt(indexbgrouptbl, 1).toString()));
                        prm.setString(2, cvth.Unicode2ASCII(txtfPcode.getText()));

                        prm.executeUpdate();
                    } else {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "delete from blink where bgroup = ? and pcode = ?";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, tblBgroup.getValueAt(indexbgrouptbl, 1).toString());
                        prm.setString(2, txtfPcode.getText());
                        prm.executeUpdate();

                    }
                    stmt.close();
                    cleartxtbgroup();
                    indexbgrouptbl = -1;

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "Delete Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                indexbgrouptbl = -1;
            }
            txtfBgroup1.requestFocus();
        }
        showdatblbgroup(txtfPcode.getText());

    }

    private void deletebgroupall() {
        if (!txtfPcode.getText().equals("") && tblBgroup.getRowCount() != 0) {

            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการทั้งหมดหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "delete from blink where pcode = ?";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.executeUpdate();
                    } else {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "delete from blink where pcode = ?";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, txtfPcode.getText());
                        prm.executeUpdate();

                    }
                    stmt.close();
                    cleartxtbgroup();
                    indexbgrouptbl = -1;

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage(), "Delete Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                indexbgrouptbl = -1;
            }
            txtfBgroup1.requestFocus();
        }

        showdatblbgroup(txtfPcode.getText());
    }

    public boolean chksale(String pk) {
        boolean chk = false;
        ResultSet rs = null;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                String sql = "select * from dplu where s_bran ='" + cvth.Unicode2ASCII(pk) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                String sql = "select * from dplu where s_branch ='" + pk + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
        }
        return chk;
    }

    public void delete() {
        try {
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรหัสสินค้ารายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if (!chksale(txtfPcode.getText())) {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                        String sql = "Delete from product where pcode = ?";
                        com.mysql.jdbc.PreparedStatement prm = (com.mysql.jdbc.PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.executeUpdate();
                    } else {
                        stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                        String sql = "Delete from procuct where pcode = ?";
                        com.mysql.jdbc.PreparedStatement prm = (com.mysql.jdbc.PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, txtfPcode.getText());
                        prm.executeUpdate();
                        stmt.close();
                    }
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                        String sql = "Delete from pset where pcode = ?";
                        com.mysql.jdbc.PreparedStatement prm = (com.mysql.jdbc.PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.executeUpdate();
                    } else {
                        stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                        String sql = "Delete from pset where pcode = ?";
                        com.mysql.jdbc.PreparedStatement prm = (com.mysql.jdbc.PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, txtfPcode.getText());
                        prm.executeUpdate();
                        stmt.close();
                    }
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                        String sql = "Delete from blink where pcode = ?";
                        com.mysql.jdbc.PreparedStatement prm = (com.mysql.jdbc.PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.executeUpdate();
                    } else {
                        stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                        String sql = "Delete from blink where pcode = ?";
                        com.mysql.jdbc.PreparedStatement prm = (com.mysql.jdbc.PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, txtfPcode.getText());
                        prm.executeUpdate();
                        stmt.close();
                    }

                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                        String sql = "Delete from pcourse where pcode = ?";
                        com.mysql.jdbc.PreparedStatement prm = (com.mysql.jdbc.PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.executeUpdate();
                    } else {
                        stmt = (com.mysql.jdbc.Statement) dbUtility.con.createStatement();
                        String sql = "Delete from pcourse where pcode = ?";
                        com.mysql.jdbc.PreparedStatement prm = (com.mysql.jdbc.PreparedStatement) dbUtility.con.prepareStatement(sql);
                        prm.setString(1, txtfPcode.getText());
                        prm.executeUpdate();
                        stmt.close();
                    }
                    setclearfrm();
                } else {
                    PUtility.ShowMsg("มีข้อมูลการขายสินค้า สำหรับรหัสสาขานี้อยู่ ไม่สามารถทำการลบได้ ...");
                }
            }

        } catch (Exception e) {
        }
    }

    private void btnFindOption() {
        if (txtfpgroup.isEditable()) {
            ListOption frm = new ListOption(new Frame(), true);
            frm.setVisible(true);

            txtfOption.setText(frm.code);

        }
    }

    private void btnSetOption() {
        if (txtfpgroup.isEditable()) {
            Main_setOptionDetial frm = new Main_setOptionDetial(new Frame(), true);
            frm.setVisible(true);
        }

    }

    private boolean setcourseName(String code) {
        boolean chk = false;
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                stmt = (Statement) db.con.createStatement();
                String sql = "select * from product where pcode = '" + code + "'";
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    t_pcoursename.setText(cvth.ASCII2Unicode(rs.getString("pdesc")));
                    t_pcook.setText(cvth.ASCII2Unicode(rs.getString("pcooktime")));
                    chk = true;

                } else {
                    chk = false;

                }

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from product where pcode = '" + code + "'";
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    t_pcoursename.setText(rs.getString("pdesc"));
                    t_pcook.setText(rs.getString("pcooktime"));
                    chk = true;

                } else {
                    chk = false;

                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(productPLU.class.getName()).log(Level.SEVERE, null, ex);
        }
        return chk;
    }

    private void cleartxtpcourse() {
        t_pcourse.setText("");
        t_pcoursename.setText("");
        t_qty1.setText("1");
        t_pkic.setText("1");
        t_pserve.setText("1");
        t_peat.setText("1");
        t_pcook.setText("1");
    }

    public void btnSearchPcourse() {

        ListProduct f = new ListProduct(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.code.equals("")) {
            t_pcourse.setText(f.code);
            setcourseName(t_pcourse.getText());
        }

        t_pcourse.requestFocus();
    }

    private boolean setDataTotxt(String code, String no) {
        stmt = null;
        ResultSet rs = null;
        boolean chk = false;
        //t_pcourse.setText("");
        t_pcoursename.setText("");
        t_qty1.setText("1");
        t_pkic.setText("1");
        t_pserve.setText("1");
        t_peat.setText("1");
        t_pcook.setText("1");
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "";

                sql = "select * from pcourse left join product on pcourse.psubcode = product.pcode where pcourse.pcode = '" + code + "' and pitemno = '" + no + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    t_no.setText(cvth.ASCII2Unicode(rs.getString("pitemno")));
                    t_pcourse.setText(cvth.ASCII2Unicode(rs.getString("psubcode")));
                    t_pcoursename.setText(cvth.ASCII2Unicode(rs.getString("pdesc")));
                    t_qty1.setText(rs.getString("psubqty"));
                    t_pkic.setText(rs.getString("pkictime"));
                    t_pserve.setText(rs.getString("pservetime"));
                    t_peat.setText(rs.getString("peattime"));
                    t_pcook.setText(rs.getString("pcooktime"));
                    chk = true;
                } else {
                }

            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "";

                sql = "select * from pcourse left join product on pcourse.psubcode = product.pcode where pcourse.pcode = '" + code + "' and pitemno = '" + no + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    t_no.setText(rs.getString("pitemno"));
                    t_pcourse.setText(rs.getString("psubcode"));
                    t_pcoursename.setText(rs.getString("pdesc"));
                    t_qty1.setText(rs.getString("psubqty"));
                    t_pkic.setText(rs.getString("pkictime"));
                    t_pserve.setText(rs.getString("pservetime"));
                    t_peat.setText(rs.getString("peattime"));
                    t_pcook.setText(rs.getString("pcooktime"));
                    chk = true;
                } else {
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private void setCourseYes() {
        try {

            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                String sqlplu = "update product set pset = ? where pcode = ? ";
                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sqlplu);
                prm.setString(1, "C");
                prm.setString(2, cvth.Unicode2ASCII(txtfPcode.getText()));

                prm.executeUpdate();
            } else {
                String sqlplu = "update product set pset = ? where pcode = ? ";
                PreparedStatement prm = (PreparedStatement) dbUtility.con.prepareStatement(sqlplu);
                prm.setString(1, "C");
                prm.setString(2, txtfPcode.getText());

                prm.executeUpdate();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void savepcourse() {
        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                if (CheckValidSavecourse()) {

                    if (chkMenuCourse(txtfPcode.getText(), t_no.getText())) {

                        //update
                        String sql2 = "Update pcourse Set psubcode = ?,psubqty = ?,pkictime = ?,pservetime = ?,peattime = ?,ptime = ? where pcode = ? and pitemno = ?";

                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);

                        prm.setString(1, cvth.Unicode2ASCII(t_pcourse.getText()));
                        prm.setString(2, t_qty1.getText());
                        prm.setString(3, t_pkic.getText());
                        prm.setString(4, t_pserve.getText());
                        prm.setString(5, t_peat.getText());
                        prm.setString(6, t_pcook.getText());
                        prm.setString(7, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.setString(8, t_no.getText());
                        prm.executeUpdate();
                        prm.close();
                    } else {
                        //insert

                        String sql2 = "Insert Into pcourse (psubcode,psubqty,pkictime,pservetime,peattime,ptime,pcode,pitemno )"
                                + "values(?,?,?,?,?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                        prm.setString(1, cvth.Unicode2ASCII(t_pcourse.getText()));
                        prm.setString(2, t_qty1.getText());
                        prm.setString(3, t_pkic.getText());
                        prm.setString(4, t_pserve.getText());
                        prm.setString(5, t_peat.getText());
                        prm.setString(6, t_pcook.getText());
                        prm.setString(7, cvth.Unicode2ASCII(txtfPcode.getText()));
                        prm.setString(8, t_no.getText());
                        prm.executeUpdate();
                        prm.close();
                    }
                    loadtblpcourse(txtfPcode.getText());
                    cleartxt();

                }

            } else if (CheckValidSavecourse()) {

                if (chkMenuCourse(txtfPcode.getText(), t_no.getText())) {

                    //update
                    String sql2 = "Update pcourse Set psubcode = ?,psubqty = ?,pkictime = ?,pservetime = ?,peattime = ?,ptime = ? where pcode = ? and pitemno = ?";

                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);

                    prm.setString(1, t_pcourse.getText());
                    prm.setString(2, t_qty1.getText());
                    prm.setString(3, t_pkic.getText());
                    prm.setString(4, t_pserve.getText());
                    prm.setString(5, t_peat.getText());
                    prm.setString(6, t_pcook.getText());
                    prm.setString(7, txtfPcode.getText());
                    prm.setString(8, t_no.getText());
                    prm.executeUpdate();
                    prm.close();
                } else {
                    //insert

                    String sql2 = "Insert Into pcourse (psubcode,psubqty,pkictime,pservetime,peattime,ptime,pcode,pitemno )"
                            + "values(?,?,?,?,?,?,?,?)";
                    PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                    prm.setString(1, t_pcourse.getText());
                    prm.setString(2, t_qty1.getText());
                    prm.setString(3, t_pkic.getText());
                    prm.setString(4, t_pserve.getText());
                    prm.setString(5, t_peat.getText());
                    prm.setString(6, t_pcook.getText());
                    prm.setString(7, txtfPcode.getText());
                    prm.setString(8, t_no.getText());
                    prm.executeUpdate();
                    prm.close();
                }
                loadtblpcourse(txtfPcode.getText());
                cleartxt();

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }

    private void setFocus(boolean chk) {

        t_no.setFocusable(chk);
        t_pcourse.setFocusable(chk);
        tblcourse.setEnabled(chk);

        db_btnOKc.setEnabled(chk);
        db_btndeletecall.setEnabled(chk);
        db_btnCancelc.setEnabled(chk);
        db_btndeletec.setEnabled(chk);

    }

    private void cleartxt() {

        t_pcourse.setText("");
        setFocus(true);
        t_no.requestFocus();
        cleartxtpcourse();
        getTextNo();
    }

    private void getTextNo() {
        int no = 1;
        if (tblcourse.getRowCount() > 0) {
            no = Integer.parseInt(tblcourse.getValueAt(tblcourse.getRowCount() - 1, 0).toString());
            no++;

        } else {
            no = 1;
        }
        t_no.setText(no + "");
    }

    public boolean CheckValidSavecourse() {
        boolean chk = true;

        if (txtfPcode.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 13 ตัวอักษร)");
            chk = false;
            txtfPcode.requestFocus();
        } else if (t_pcourse.getText().length() > 13) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 13 ตัวอักษร)");
            chk = false;
            t_pcourse.requestFocus();
        } else if (t_no.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนดลำดับ");
            chk = false;
            t_no.requestFocus();
        } else if (t_pcourse.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนด รหัสสินค้า");
            chk = false;
            t_pcourse.requestFocus();
        } else if (t_qty1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนด จำนวน");
            chk = false;
            t_qty1.requestFocus();
        } else if (t_pkic.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนด เวลาที่จะปริ้น");
            chk = false;
            t_pkic.requestFocus();
        } else if (t_pserve.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนด เวลาที่จะเสริฟ");
            chk = false;
            t_pserve.requestFocus();
        } else if (t_peat.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนด เวลาที่ทานอาหาร");
            chk = false;
            t_peat.requestFocus();
        } else if (txtfPcode.getText().equals(t_pcourse.getText())) {
            JOptionPane.showMessageDialog(this, "ไม่สามารถบันทึกสินค้าที่เหมือนกับสินค้าต้นฉบับได้");
            chk = false;
            cleartxtpcourse();
            t_pcourse.requestFocus();

        } else if (chkAllcourse(txtfPcode.getText(), t_pcourse.getText(), t_no.getText())) {

            chk = true;
        } else if (chkAllcourse(txtfPcode.getText(), t_pcourse.getText())) {
            JOptionPane.showMessageDialog(this, "ไม่สามารถเพิ่มข้อมูลได้ เนื่องจากมีข้อมูลอยู่ในกลุ่มนี้แล้ว");
            cleartxtpcourse();
            t_pcourse.requestFocus();
            chk = false;
        }

        int no = Integer.parseInt(t_no.getText());
        if (no < 0 || no > 999) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... (ลำดับห้ามน้อยกว่า 0 และมากกว่า 999)");
            chk = false;
            t_no.requestFocus();
        }
        return chk;
    }

    private boolean chkMenuCourse(String code, String no) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;

        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from pcourse where pcode = '" + cvth.Unicode2ASCII(code) + "' and pitemno = '" + cvth.Unicode2ASCII(no) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from pcourse where pcode = '" + code + "' and pitemno = '" + no + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private boolean chkAllcourse(String code, String scode) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;

        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {

                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from pcourse where pcode = '" + cvth.Unicode2ASCII(code) + "' and psubcode = '" + cvth.Unicode2ASCII(scode) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from pcourse where pcode = '" + code + "' and psubcode = '" + scode + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private boolean chkAllcourse(String code, String scode, String tno) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;

        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from pcourse where pcode = '" + cvth.Unicode2ASCII(code) + "' and psubcode = '" + cvth.Unicode2ASCII(scode) + "' and pitemno = '" + cvth.Unicode2ASCII(tno) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from pcourse where pcode = '" + code + "' and psubcode = '" + scode + "' and pitemno = '" + tno + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private void removedataintble(JTable tbl) {
        DefaultTableModel tb = (DefaultTableModel) tbl.getModel();
        int cnt = tb.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                tb.removeRow(0);
            }
        }
    }

    private void loadtblpcourse(String code) {
        stmt = null;
        ResultSet rs = null;

        removedataintble(tblcourse);
        DefaultTableModel tb = (DefaultTableModel) tblcourse.getModel();
        try {

            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "";

                sql = "select * from pcourse left join product on pcourse.psubcode = product.pcode where pcourse.pcode = '" + cvth.Unicode2ASCII(code) + "' order by pitemno";

                rs = stmt.executeQuery(sql);
                while (rs.next()) {

                    tb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("pitemno")),
                        cvth.ASCII2Unicode(rs.getString("psubcode")),
                        cvth.ASCII2Unicode(rs.getString("pdesc")),
                        rs.getString("psubqty"),
                        rs.getString("pkictime"),
                        rs.getString("pservetime"),
                        rs.getString("peattime"),
                        rs.getString("pcooktime")
                    });

                }

                getTextNo();
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "";

                sql = "select * from pcourse left join product on pcourse.psubcode = product.pcode where pcourse.pcode = '" + code + "' order by pitemno";

                rs = stmt.executeQuery(sql);
                while (rs.next()) {

                    tb.addRow(new Object[]{rs.getString("pitemno"),
                        rs.getString("psubcode"),
                        rs.getString("pdesc"),
                        rs.getString("psubqty"),
                        rs.getString("pkictime"),
                        rs.getString("pservetime"),
                        rs.getString("peattime"),
                        rs.getString("pcooktime")
                    });

                }

                getTextNo();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    public void deletepcourse() {
        ResultSet rs = null;
        try {

            String mcode = txtfPcode.getText();
            String no = t_no.getText();
            if (chkMenuCourse(mcode, no)) {
                int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Delete from pcourse where pcode=? and pitemno = ?";
                        java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, cvth.Unicode2ASCII(mcode));
                        prm.setString(2, cvth.Unicode2ASCII(no));
                        prm.executeUpdate();
                    } else {
                        stmt = (Statement) db.con.createStatement();
                        String sql = "Delete from pcourse where pcode=? and pitemno = ?";
                        java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                        prm.setString(1, mcode);
                        prm.setString(2, no);
                        prm.executeUpdate();
                    }
                    loadtblpcourse(mcode);
                    cleartxt();
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    private boolean chkpcourse(String code) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;

        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from pcourse where pcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from pcourse where pcode ='" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public void deletepcourseall() {
        ResultSet rs = null;
        try {

            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) db.con.createStatement();
                String sql = "Delete from pcourse where pcode=? ";
                java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                prm.setString(1, cvth.Unicode2ASCII(txtfPcode.getText()));
                prm.executeUpdate();

                loadtblpcourse(txtfPcode.getText());
                cleartxt();

            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "Delete from pcourse where pcode=? ";
                java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                prm.setString(1, txtfPcode.getText());
                prm.executeUpdate();

                loadtblpcourse(txtfPcode.getText());
                cleartxt();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    private void initablepcourse() {
        DefaultTableModel tb = (DefaultTableModel) tblcourse.getModel();
        tblcourse.setShowGrid(true);
        //tblPLU.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblcourse.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblcourse.setRowSelectionAllowed(true);
        tblcourse.setBackground(java.awt.Color.WHITE);
        tblcourse.setGridColor(java.awt.Color.gray);
        JTableHeader header = tblcourse.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        //tblBtype.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tblcourse.setRowHeight(24);
        TableTestFormatRenderer t;
        t = new TableTestFormatRenderer(DoubleFmt);
        t.setHorizontalAlignment(SwingConstants.RIGHT);

        DefaultTableCellRenderer r;
        r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c;
        c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer l;
        l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);

        TableColumnModel tcm = tblcourse.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(l);
        tcm.getColumn(3).setCellRenderer(r);
        tcm.getColumn(4).setCellRenderer(r);
        tcm.getColumn(5).setCellRenderer(r);
        tcm.getColumn(6).setCellRenderer(r);
        tcm.getColumn(7).setCellRenderer(r);
    }

    public boolean chkpset() {
        boolean chk = false;
        ResultSet rs = null;
        int count = 0;

        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                int psetqty = 0;
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset  where pset.pcode = '" + cvth.Unicode2ASCII(txtfPcode.getText()) + "' group by psetgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {

                    count++;
                }

                stmt = (Statement) db.con.createStatement();
//                sql = "select * from  product  where pcode = '" + txtfPcode.getText() + "'";
//                rs = stmt.executeQuery(sql);
//                if (rs.next()) {
//                    psetqty = rs.getInt("psetselectqty");
//                }
                psetqty = Integer.parseInt(txtfpsetsetgroup.getText());
                if (count < psetqty) {
                    chk = false;
                } else {
                    chk = true;
                }
            } else {
                int psetqty = 0;
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset  where pset.pcode = '" + txtfPcode.getText() + "' group by psetgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {

                    count++;
                }

                stmt = (Statement) db.con.createStatement();
//                sql = "select * from  product  where pcode = '" + txtfPcode.getText() + "'";
//                rs = stmt.executeQuery(sql);
//                if (rs.next()) {
//                    psetqty = rs.getInt("psetselectqty");
//                }
                psetqty = Integer.parseInt(txtfpsetsetgroup.getText());
                if (count < psetqty) {
                    chk = false;
                } else {
                    chk = true;
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    public boolean chkpset2() {
        boolean chk = false;
        ResultSet rs = null;
        int count = 0;

        try {
            if (!dbUtility.Char_Set.equalsIgnoreCase("utf-8")) {
                int psetqty = 0;
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset  where pset.pcode = '" + cvth.Unicode2ASCII(txtfPcode.getText()) + "' group by psetgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {

                    count++;
                }

                stmt = (Statement) db.con.createStatement();

                psetqty = Integer.parseInt(txtfpsetsetgroup.getText());

                if (count > psetqty) {
                    chk = false;
                } else {
                    chk = true;
                }

            } else {
                int psetqty = 0;
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from pset  where pset.pcode = '" + txtfPcode.getText() + "' group by psetgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {

                    count++;
                }

                stmt = (Statement) db.con.createStatement();

                psetqty = Integer.parseInt(txtfpsetsetgroup.getText());

                if (count > psetqty) {
                    chk = false;
                } else {
                    chk = true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        return chk;
    }

    private void getDataSAP(ResultSet rs) {
        try {
            sap_code.setText(rs.getString("sap_article"));
            sap_name.setText(rs.getString("sap_article_name"));
            sap_barcode.setText(rs.getString("sap_article_barcode"));
            sap_jde.setText(rs.getString("sap_article_jde"));
            sap_unit.setText(rs.getString("sap_article_unit"));
            if (rs.getString("sap_article_unit").equals("Y")) {
                rad_sap_active.setSelected(true);
            } else {
                rad_sap_noneactive.setSelected(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }
}
