/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package masterfile;

import com.lowagie.text.Image;
import dbutility.dbUtility;
import java.awt.event.KeyEvent;
import java.io.*;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import utilititiesfunction.ImageFilter;
import utilititiesfunction.ThaiUtilities;
import utilititiesfunction.UserLogin;
import utilititiesfunction.getLanguage;

/**
 *
 * @author s386
 */
public class SendLogoToBranch extends javax.swing.JDialog {

    /**
     * Creates new form SendLogoToBranch
     */
    public static String OS = "";
    DefaultTableModel tbPLU;
    DefaultTableModel tbCoupon;
    dbUtility db = new dbUtility();
    String CopyPath = "";

    Statement stmt;
    int indexplutbl = -1;
    int indexcoupontbl = -1;
    String frmName = "SendLogoToBranch";
    ThaiUtilities cvth = new ThaiUtilities();
    String ServerPath = "";
    String FolderPath = "/tobranch/";
    String FileName = "_logosp";
    String FileType = ".zip";
    String ClickPath = "";

    public SendLogoToBranch(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        checkuserconfig();
        OS = System.getProperty("os.name").toLowerCase();
        getServerPath();
        loadfile();
        getLanguage lang = new getLanguage();
        lang.setText(frmName, this, lang.getChklang());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        db_lblh1 = new javax.swing.JLabel();
        txtfBgroup1 = new javax.swing.JTextField();
        txtfBranchName = new javax.swing.JTextField();
        btnsearchplu = new javax.swing.JButton();
        db_btnSend = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        db_fildimg = new javax.swing.JButton();
        db_lbl1 = new javax.swing.JLabel();
        db_lastmodify1 = new javax.swing.JLabel();
        db_lastmodify2 = new javax.swing.JLabel();
        db_btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setText("กำหนดกลุ่มสาขา (Branch Group)");
        db_lblh1.setName("db_lblh1"); // NOI18N

        txtfBgroup1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfBgroup1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfBgroup1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfBgroup1FocusLost(evt);
            }
        });
        txtfBgroup1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyReleased(evt);
            }
        });

        txtfBranchName.setBackground(new java.awt.Color(255, 246, 143));
        txtfBranchName.setEditable(false);
        txtfBranchName.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        btnsearchplu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu.setFocusable(false);
        btnsearchplu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchpluActionPerformed(evt);
            }
        });

        db_btnSend.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Log-Out-icon.png"))); // NOI18N
        db_btnSend.setText("ส่งรูปภาพ Logo Screen ไป สาขา");
        db_btnSend.setFocusable(false);
        db_btnSend.setName("db_btnSend"); // NOI18N
        db_btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db_lblh1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfBgroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsearchplu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfBranchName, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtfBranchName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfBgroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_lblh1)))
                    .addComponent(btnsearchplu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        list.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        list.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                listKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel1.setIconTextGap(0);

        db_fildimg.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_fildimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        db_fildimg.setText("เลือกรูปภาพที่ต้องการ");
        db_fildimg.setName("db_fildimg");
        db_fildimg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_fildimgActionPerformed(evt);
            }
        });

        db_lbl1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lbl1.setForeground(new java.awt.Color(255, 0, 0));
        db_lbl1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        db_lbl1.setText("ขนาดรูปที่เหมาะสมกับ หน้าจอ POS 450X420 pixel (Flie Type jpg Only)");
        db_lbl1.setName("db_lbl1"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(db_lbl1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_fildimg, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(db_fildimg)
                    .addComponent(db_lbl1))
                .addGap(58, 58, 58)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        db_lastmodify1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lastmodify1.setText("Last Modify Date");
        db_lastmodify1.setName("db_lastmodify1"); // NOI18N

        db_lastmodify2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lastmodify2.setText(".............");
        db_lastmodify2.setName("db_lastmodify2"); // NOI18N

        db_btnDelete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        db_btnDelete.setText("ลบไฟล์รูปภาพ");
        db_btnDelete.setFocusable(false);
        db_btnDelete.setName("db_btnDelete"); // NOI18N
        db_btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(db_lastmodify1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_lastmodify2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(db_btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(db_lastmodify1)
                            .addComponent(db_lastmodify2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(db_btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1024)/2, (screenSize.height-768)/2, 1024, 768);
    }// </editor-fold>//GEN-END:initComponents
private void checkuserconfig() {
        //MenuName = Mast1
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getTran7().equals("1")) {
            db_btnSend.setEnabled(false);
            db_btnDelete.setEnabled(false);
        }
        if (userrec.getTran7().equals("2")) {
            db_btnSend.setEnabled(true);
            db_btnDelete.setEnabled(false);
        }
        if (userrec.getTran7().equals("3")) {
            db_btnSend.setEnabled(true);
            db_btnDelete.setEnabled(true);
        }
    }
    private void txtfBgroup1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfBgroup1FocusGained
        txtfBgroup1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1FocusGained

    private void txtfBgroup1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfBgroup1FocusLost
    }//GEN-LAST:event_txtfBgroup1FocusLost

    private void txtfBgroup1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtfBgroup1.setText("");
            txtfBranchName.setText("");
            txtfBgroup1.requestFocus();

        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            showbgtxtname(txtfBgroup1.getText());
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchBgroupSettext();
            showbgtxtname(txtfBgroup1.getText());
        }

    }//GEN-LAST:event_txtfBgroup1KeyPressed

    private void txtfBgroup1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyReleased
        String get = txtfBgroup1.getText();
        String out = get.toUpperCase();
        txtfBgroup1.setText(out);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1KeyReleased

    private void btnsearchpluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchpluActionPerformed
        btnSearchBgroupSettext();
        showbgtxtname(txtfBgroup1.getText());


    }//GEN-LAST:event_btnsearchpluActionPerformed

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
        click();
        // TODO add your handling code here:
    }//GEN-LAST:event_listMouseClicked

    private void listKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listKeyReleased
        click();
    }//GEN-LAST:event_listKeyReleased

    private void db_fildimgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_fildimgActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();

            chooser.setMultiSelectionEnabled(false);

            chooser.addChoosableFileFilter(new ImageFilter());

            int confirm = chooser.showOpenDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();
                jLabel1.setIcon(new ImageIcon(curFile.toString()));
                CopyPath = curFile.toString();

            }

            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(SendLogoToBranch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_db_fildimgActionPerformed

    private void db_btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnSendActionPerformed
        if (chkgb(txtfBgroup1.getText())) {
            sendLogo();
        } else {
            JOptionPane.showMessageDialog(this, "กำหนดกลุ่มสาขาไม่ถูกต้อง");
            txtfBranchName.setText("");
            txtfBgroup1.requestFocus();
        }

    }//GEN-LAST:event_db_btnSendActionPerformed

    private void db_btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnDeleteActionPerformed
        if (!ClickPath.equals("")) {

            File f = new File(ClickPath);
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบไฟล์รูปภาพ " + f.getName() + " หรือไม่?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                f.delete();
                ClickPath = "";
                loadfile();
                clear();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendLogoToBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendLogoToBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendLogoToBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendLogoToBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SendLogoToBranch dialog = new SendLogoToBranch(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsearchplu;
    private javax.swing.JButton db_btnDelete;
    private javax.swing.JButton db_btnSend;
    private javax.swing.JButton db_fildimg;
    private javax.swing.JLabel db_lastmodify1;
    private javax.swing.JLabel db_lastmodify2;
    private javax.swing.JLabel db_lbl1;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList list;
    private javax.swing.JTextField txtfBgroup1;
    private javax.swing.JTextField txtfBranchName;
    // End of variables declaration//GEN-END:variables
    private void setbgroup() {
    }

    public void showbgtxtname(String code) {
        ResultSet rs = null;
        try {

            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                db.dbconnect();
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfBranchName.setText(cvth.ASCII2Unicode(rs.getString("bgroupname")));

                } else {
                    JOptionPane.showMessageDialog(this, "กำหนดกลุ่มสาขาไม่ถูกต้อง");
                    txtfBranchName.setText("");
                    txtfBgroup1.requestFocus();
                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfBranchName.setText(rs.getString("bgroupname"));

                } else {
                    JOptionPane.showMessageDialog(this, "กำหนดกลุ่มสาขาไม่ถูกต้อง");
                    txtfBranchName.setText("");
                    txtfBgroup1.requestFocus();

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void btnSearchBgroupSettext() {
        listBranchGroup f = new listBranchGroup(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.bcode.equals("")) {
            txtfBgroup1.setText(f.bcode);
            txtfBgroup1.requestFocus();
        }
    }

    private void sendLogo() {
        if (!txtfBgroup1.getText().trim().equals("") && !txtfBranchName.getText().equals("")) {
            if (!CopyPath.equals("")) {
                InputStream inStream = null;
                OutputStream outStream = null;

                try {
                    boolean chk = false;
                    File afile = new File(CopyPath);
                    File bfile = new File(ServerPath + FolderPath);
                    if (!bfile.exists()) {
                        new File(ServerPath + FolderPath).mkdirs();
                    }

                    File b2file = new File(ServerPath + FolderPath + txtfBgroup1.getText() + FileName + FileType);
                    File b3file = new File(ServerPath + FolderPath + txtfBgroup1.getText() + FileName + FileType);

//                    if(b2file.exists())
//                    {
//                        b2file.delete();
//                    }
                    if (!CopyPath.equals(b3file.getPath())) {
                        inStream = new FileInputStream(afile);
                        outStream = new FileOutputStream(b3file);

                        byte[] buffer = new byte[1024];

                        int length;
                        //copy the file content in bytes 
                        while ((length = inStream.read(buffer)) > 0) {

                            outStream.write(buffer, 0, length);

                        }
                        inStream.close();
                        outStream.close();
                    }

                    JOptionPane.showMessageDialog(this, "File is copied successful!");

                } catch (IOException e) {
                    e.printStackTrace();
                }
                clear();
                loadfile();
            } else {
                JOptionPane.showMessageDialog(this, "เกิดข้อผิดพลาด กรุณาเลือกรูปภาพก่อน");
            }
        } else {
            JOptionPane.showMessageDialog(this, "ข้อมูลผิดพลาด กรุณาเลือกรหัสกลุ่มสาขาให้ถูกต้อง");
            txtfBgroup1.requestFocus();
        }
    }

    private void loadfile() {
        try {
            DefaultListModel model = new DefaultListModel();
            list.setModel(model);
            File chk = new File(ServerPath + FolderPath);
            if (!chk.exists()) {
                new File(ServerPath + FolderPath).mkdirs();
            }

            File directory[] = chk.listFiles();

            for (int i = 0; i < directory.length; i++) {
                String[] Name = directory[i].getName().split("_");
                if (Name.length == 2 && Name[1].equalsIgnoreCase("logosp.zip")) {
                    model.addElement(directory[i].getName());
                }
            }
        } catch (Exception e) {
        }

    }

    public boolean chkgb(String code) {
        boolean chk = false;
        ResultSet rs = null;
        try {

            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                db.dbconnect();
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;

                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return chk;
    }

    private void click() {

        File f = new File(ServerPath + FolderPath + list.getSelectedValue().toString());

        Date lm = new Date(f.lastModified());
        String lasmod = new SimpleDateFormat("HH:mm:ss a dd-MM-yyyy").format(lm);
        db_lastmodify2.setText(lasmod);
        ImageIcon img = new ImageIcon(ServerPath + FolderPath + list.getSelectedValue().toString());
        //jLabel1 = new JLabel(img);
        img.getImage().flush();
        jLabel1.setIcon(img);
        ClickPath = ServerPath + FolderPath + list.getSelectedValue().toString();
        CopyPath = ServerPath + FolderPath + list.getSelectedValue().toString();
        String name = list.getSelectedValue().toString();
        String ArrayStr[] = name.split("_");
        txtfBgroup1.setText(ArrayStr[0]);
        showbgtxtname(ArrayStr[0]);
        loadfile();
    }

    private void clear() {
        CopyPath = "";
        ClickPath = "";
        db_lastmodify2.setText("");
        jLabel1.setIcon(null);
        txtfBgroup1.setText("");
        txtfBranchName.setText("");
    }

    private void getServerPath() {

        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                db.dbconnect();
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from borpathsetup";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (OS.equalsIgnoreCase("linux")) {
                        ServerPath = cvth.ASCII2Unicode(rs.getString("backuppath"));
                    } else {
                        ServerPath = cvth.ASCII2Unicode(rs.getString("backuppath_w"));
                    }

                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from borpathsetup";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (OS.equalsIgnoreCase("linux")) {
                        ServerPath = cvth.ASCII2Unicode(rs.getString("backuppath"));
                    } else {
                        ServerPath = cvth.ASCII2Unicode(rs.getString("backuppath_w"));
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
}
