/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package masterfile;

import borfunction.GetApplicationName;
import borfunction.GetUser;
import dbutility.dbUtility;
import frmlist.ListProduct;
import frmlist.listBranchGroup2;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import jxl.write.WriteException;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.save.JRSingleSheetXlsSaveContributor;
import report.Report;
import utilititiesfunction.*;

/**
 *
 * @author s386
 */
public class setMenuList extends javax.swing.JDialog {

    /**
     * Creates new form setMenuList
     */
    Statement stmt ;
    dbUtility db = new dbUtility();
    ThaiUtilities cvth = new ThaiUtilities();
    getLanguage lang = new getLanguage();
    String frmName = "setmenulist";
    DecimalFormat DoubleFmt = new DecimalFormat("##,###,##0.00");
    public setMenuList(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        checkuserconfig();
        inittbl();
        db.dbconnect();
        loadtbl2();
        clearDisplay();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUpTbl2 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        popUpTbl1 = new javax.swing.JPopupMenu();
        delete = new javax.swing.JMenuItem();
        deleteAll = new javax.swing.JMenuItem();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        t_pcode = new javax.swing.JTextField();
        btnsearch1 = new javax.swing.JButton();
        t_pname = new javax.swing.JTextField();
        d_lblh1 = new javax.swing.JLabel();
        t_price = new javax.swing.JFormattedTextField();
        d_lblcost = new javax.swing.JLabel();
        d_lblcost1 = new javax.swing.JLabel();
        cboact = new javax.swing.JComboBox();
        db_btnOK = new javax.swing.JButton();
        db_btnCancel = new javax.swing.JButton();
        t_mcode = new javax.swing.JTextField();
        d_lblh2 = new javax.swing.JLabel();
        d_lblh3 = new javax.swing.JLabel();
        t_no = new javax.swing.JFormattedTextField();
        db_btnExel1 = new javax.swing.JButton();
        db_btnPrint = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl2 = new javax.swing.JTable();
        t_bcode = new javax.swing.JTextField();
        btnsearch2 = new javax.swing.JButton();
        t_bname = new javax.swing.JTextField();
        db_lblh1 = new javax.swing.JLabel();
        db_btnOK2 = new javax.swing.JButton();
        db_btnCancel2 = new javax.swing.JButton();
        db_btndelete = new javax.swing.JButton();
        db_btnlinkall = new javax.swing.JButton();
        db_btndeleteall = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl3 = new javax.swing.JTable();

        jMenuItem2.setText("เปิดการใช้งานเล่มเมนู");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        popUpTbl2.add(jMenuItem2);

        jMenuItem3.setText("ยกเลิกการใช้งานเล่มเมนู");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        popUpTbl2.add(jMenuItem3);

        jMenuItem1.setText("ลบเมนูนี้");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        popUpTbl2.add(jMenuItem1);

        delete.setText("ลบรายการที่เลือก");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        popUpTbl1.add(delete);

        deleteAll.setText("ลบรายการทั้งหมด");
        deleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllActionPerformed(evt);
            }
        });
        popUpTbl1.add(deleteAll);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        t_pcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_pcodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_pcodeFocusLost(evt);
            }
        });
        t_pcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_pcodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_pcodeKeyTyped(evt);
            }
        });

        btnsearch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearch1.setFocusable(false);
        btnsearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearch1ActionPerformed(evt);
            }
        });

        t_pname.setBackground(new java.awt.Color(249, 252, 186));
        t_pname.setEditable(false);
        t_pname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_pname.setFocusable(false);

        d_lblh1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh1.setText("รหัสสินค้า");
        d_lblh1.setName("d_lblh1"); // NOI18N

        t_price.setBackground(new java.awt.Color(249, 252, 186));
        t_price.setEditable(false);
        t_price.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        t_price.setText("0.00");
        t_price.setFocusable(false);
        t_price.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        d_lblcost.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblcost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblcost.setText("ราคา");
        d_lblcost.setName("d_lblcost"); // NOI18N

        d_lblcost1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblcost1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d_lblcost1.setText("ACT");
        d_lblcost1.setName("d_lblcost"); // NOI18N

        cboact.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        cboact.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Y", "N" }));
        cboact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboactKeyPressed(evt);
            }
        });

        db_btnOK.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnOK.setText("OK");
        db_btnOK.setName("db_btnOK"); // NOI18N
        db_btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnOKActionPerformed(evt);
            }
        });

        db_btnCancel.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnCancel.setText("Cancel");
        db_btnCancel.setName("db_btnCancel"); // NOI18N
        db_btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnCancelActionPerformed(evt);
            }
        });

        t_mcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_mcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_mcodeFocusLost(evt);
            }
        });
        t_mcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_mcodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_mcodeKeyTyped(evt);
            }
        });

        d_lblh2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh2.setText("รหัสเล่ม Menu");
        d_lblh2.setName("d_lblh1"); // NOI18N

        d_lblh3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        d_lblh3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        d_lblh3.setText("Menu Item");
        d_lblh3.setName("d_lblh1"); // NOI18N

        t_no.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        t_no.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        t_no.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        t_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_noFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_noFocusLost(evt);
            }
        });
        t_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_noKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(d_lblh3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_no, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d_lblh1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_pcode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(d_lblh2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_mcode)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_pname, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(t_price)
                    .addComponent(d_lblcost, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d_lblcost1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnCancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(d_lblcost1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(d_lblcost)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(t_pname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(t_price, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(d_lblh1)
                                        .addComponent(t_pcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(t_no, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(d_lblh2)
                                .addComponent(t_mcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(d_lblh3)
                            .addGap(6, 6, 6)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(db_btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(db_btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        db_btnExel1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnExel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Excel-icon.png"))); // NOI18N
        db_btnExel1.setText("Exel File");
        db_btnExel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnExel1.setIconTextGap(0);
        db_btnExel1.setName("db_btnExel"); // NOI18N
        db_btnExel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnExel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnExel1ActionPerformed(evt);
            }
        });

        db_btnPrint.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Printer-icon.png"))); // NOI18N
        db_btnPrint.setText("พิมม์");
        db_btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        db_btnPrint.setIconTextGap(0);
        db_btnPrint.setName("db_btnPrint"); // NOI18N
        db_btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        db_btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(db_btnExel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnExel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสเล่มเมนู", "Menu Item", "รหัสสินค้า", "ชื่อสินค้า", "ราคาขาย", "ACT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl1.setComponentPopupMenu(popUpTbl1);
        tbl1.setName("tbl1"); // NOI18N
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbl1MouseReleased(evt);
            }
        });
        tbl1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbl1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);
        tbl1.getColumnModel().getColumn(0).setPreferredWidth(120);
        tbl1.getColumnModel().getColumn(1).setPreferredWidth(30);
        tbl1.getColumnModel().getColumn(2).setPreferredWidth(100);
        tbl1.getColumnModel().getColumn(3).setPreferredWidth(200);
        tbl1.getColumnModel().getColumn(4).setPreferredWidth(100);
        tbl1.getColumnModel().getColumn(5).setPreferredWidth(50);

        tbl2.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "รหัสเล่ม", "ACT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl2.setComponentPopupMenu(popUpTbl2);
        tbl2.setName("tbl2"); // NOI18N
        tbl2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl2MouseClicked(evt);
            }
        });
        tbl2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbl2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbl2KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tbl2);
        tbl2.getColumnModel().getColumn(0).setPreferredWidth(200);

        t_bcode.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_bcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_bcodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_bcodeFocusLost(evt);
            }
        });
        t_bcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_bcodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                t_bcodeKeyReleased(evt);
            }
        });

        btnsearch2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearch2.setFocusable(false);
        btnsearch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearch2ActionPerformed(evt);
            }
        });

        t_bname.setBackground(new java.awt.Color(255, 246, 143));
        t_bname.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        t_bname.setFocusable(false);

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setText("กำหนดกลุ่มสาขา");
        db_lblh1.setName("db_lblh1"); // NOI18N

        db_btnOK2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnOK2.setText("OK");
        db_btnOK2.setName("db_btnOK"); // NOI18N
        db_btnOK2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnOK2ActionPerformed(evt);
            }
        });

        db_btnCancel2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnCancel2.setText("Cancel");
        db_btnCancel2.setName("db_btnCancel"); // NOI18N
        db_btnCancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnCancel2ActionPerformed(evt);
            }
        });

        db_btndelete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btndelete.setText("ลบรายการ");
        db_btndelete.setName("db_btnOK"); // NOI18N
        db_btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btndeleteActionPerformed(evt);
            }
        });

        db_btnlinkall.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnlinkall.setText("Link All");
        db_btnlinkall.setName("db_btnOK"); // NOI18N
        db_btnlinkall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnlinkallActionPerformed(evt);
            }
        });

        db_btndeleteall.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btndeleteall.setText("ลบทุกรายการ");
        db_btndeleteall.setName("db_btnOK"); // NOI18N
        db_btndeleteall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btndeleteallActionPerformed(evt);
            }
        });

        tbl3.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        tbl3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "กลุ่มสาขา", "รายละเอียด"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl3.setName("tbl3"); // NOI18N
        tbl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl3MouseClicked(evt);
            }
        });
        tbl3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbl3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbl3KeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tbl3);
        tbl3.getColumnModel().getColumn(1).setPreferredWidth(200);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(t_bcode, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_bname))
                            .addComponent(db_lblh1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(db_btnOK2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_btnCancel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(db_btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_btndeleteall, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(db_btnlinkall, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(db_btnOK2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_lblh1))
                        .addGap(0, 0, 0)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(t_bcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnsearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t_bname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(db_btnCancel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(db_btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_btnlinkall, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_btndeleteall, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1024)/2, (screenSize.height-768)/2, 1024, 768);
    }// </editor-fold>//GEN-END:initComponents
private void checkuserconfig() {
        //MenuName = Mast1
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getPlu8().equals("1")) {
            db_btnOK.setEnabled(false);
            db_btnOK2.setEnabled(false);
            db_btndelete.setEnabled(false);
            db_btndeleteall.setEnabled(false);
            db_btnlinkall.setEnabled(false);
        }
        if (userrec.getPlu8().equals("2")) {
            db_btnOK.setEnabled(true);
            db_btnOK2.setEnabled(true);
            db_btndelete.setEnabled(false);
            db_btndeleteall.setEnabled(false);
            db_btnlinkall.setEnabled(true);
        }
        if (userrec.getPlu8().equals("3")) {
            db_btnOK.setEnabled(true);
            db_btnOK2.setEnabled(true);
            db_btndelete.setEnabled(true);
            db_btndeleteall.setEnabled(true);
            db_btnlinkall.setEnabled(true);
        }
    }
    private void db_btnExel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnExel1ActionPerformed
        if(!t_mcode.getText().equals("")&&tbl1.getRowCount()>0)
        {
        Export2Excel test = new Export2Excel();
        JFileChooser chooser = new JFileChooser();

        try {
           

            chooser.setSelectedFile(test.getDefaulepath());
            chooser.setFileFilter(new JRSingleSheetXlsSaveContributor(Locale.ENGLISH, null));
            int confirm = chooser.showSaveDialog(this);
            if (confirm == JFileChooser.APPROVE_OPTION) {
                File curFile = chooser.getSelectedFile();
                if(curFile.exists())
                {
                    int confirm2 = JOptionPane.showConfirmDialog(this, "ข้อมูลนี้มีอยู่แล้ว คุณต้องการบันทึกรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm2 == JOptionPane.NO_OPTION) {
                        test.setDefaultpath(curFile);
                        db_btnExel1ActionPerformed(null);
                        
                        return;

                    }
                    
                }

                test.setOutputFile(curFile.toString());
                try {
                    test.writeTreetableNoSum2(tbl1, tbl1.getColumnModel());
                    test.setDefaultpath(curFile);
                } catch (WriteException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e);
        }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณาเพิ่มข้อมูลหรือเลือกข้อมูลให้ถูกต้อง");
        }
    }//GEN-LAST:event_db_btnExel1ActionPerformed

    private void db_btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnPrintActionPerformed
        Map parm = new HashMap();
        JRBeanCollectionDataSource ds = null;

        ds = new JRBeanCollectionDataSource(report.databeanReportPlu.getMenuList());
        parm.put("companyName", lang.getTextCompanyReport());
        parm.put("Reportheader", lang.getTextReport(frmName, "texthead"));
        
        parm.put("forname", lang.getTextReport(frmName, "for"));
        parm.put("code", lang.getTextReport(frmName, "code"));
        parm.put("name", lang.getTextReport(frmName, "name"));
        parm.put("other2", lang.getTextReport(frmName, "other2"));
        parm.put("other3", lang.getTextReport(frmName, "other3"));
        parm.put("other4", lang.getTextReport(frmName, "other4"));
        parm.put("total", lang.getTextReport(frmName, "total"));
        parm.put("totalall", lang.getTextReport(frmName, "totalall"));
        parm.put("branchtxt", lang.getTextReport(frmName, "branchtxt"));
        parm.put("application", new GetApplicationName().getApplicationName());
        parm.put("user", new GetUser().getUser());
        parm.put("currentDate", utilititiesfunction.Format.dateFmtReport.format(new java.util.Date()));
        String rptName = "rptMenuList";
        Report rpt = new Report();
        rpt.viewReportbean(rptName, parm, frmName, ds);


        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnPrintActionPerformed

    private void t_pcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!t_pcode.getText().equals("")) {
                db_btnOK.requestFocus();
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {

            btnplu();
        }
        
    }//GEN-LAST:event_t_pcodeKeyPressed

    private void t_pcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_pcodeKeyTyped
        if (t_pcode.getText().length() >= 13) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcodeKeyTyped

    private void btnsearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearch1ActionPerformed
        btnplu();
        //        btnfindPLU();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearch1ActionPerformed

    private void cboactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboactKeyPressed
      
        // TODO add your handling code here:
    }//GEN-LAST:event_cboactKeyPressed

    private void db_btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnOKActionPerformed
        saveMenulist();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnOKActionPerformed

    private void db_btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnCancelActionPerformed
//        clearplutxt();
        clearDisplay();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnCancelActionPerformed

    private void t_mcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_mcodeKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!t_mcode.getText().equals("")) {
                
                    setFocus(true);
                    t_no.requestFocus();
                
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_F1) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_mcodeKeyPressed

    private void t_mcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_mcodeKeyTyped
        if (t_pcode.getText().length() >= 13) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_mcodeKeyTyped

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        //indextbl = tbltable.getSelectedRow();
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl1MouseClicked

    private void tbl1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseReleased
        if (evt.getClickCount() == 2) {
            int rowSelect = tbl1.getSelectedRow();
            String nocode = tbl1.getValueAt(rowSelect, 1).toString();
            setDataTotxt(t_mcode.getText(), nocode);
       

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl1MouseReleased

    private void tbl1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl1KeyReleased
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl1KeyReleased

    private void tbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl2MouseClicked
        if (evt.getClickCount() == 2) {
            int rowSelect = tbl2.getSelectedRow();
            
            String code = tbl2.getValueAt(rowSelect, 0).toString();
            loaddataTotbl13(code);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl2MouseClicked

    private void tbl2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl2KeyPressed

        
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl2KeyPressed

    private void tbl2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl2KeyReleased
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl2KeyReleased

    private void t_bcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_bcodeFocusGained
        t_bcode.setText(t_bcode.getText());
        t_bcode.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_bcodeFocusGained

    private void t_bcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_bcodeFocusLost
        if(!t_bcode.getText().equals(""))
        {
        setbname(t_bcode.getText());
        }
        t_bcode.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_bcodeFocusLost

    private void t_bcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_bcodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
             db_btnOK2.requestFocus();
        }
        else if (evt.getKeyCode() == KeyEvent.VK_F1) {
             btnbgroup();
        }
        

        // TODO add your handling code here:
    }//GEN-LAST:event_t_bcodeKeyPressed

    private void t_bcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_bcodeKeyReleased
        t_bcode.setText(t_bcode.getText().toUpperCase());
        // TODO add your handling code here:
    }//GEN-LAST:event_t_bcodeKeyReleased

    private void btnsearch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearch2ActionPerformed
        btnbgroup();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearch2ActionPerformed

    private void db_btnOK2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnOK2ActionPerformed
        saveMenuLink();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnOK2ActionPerformed

    private void db_btnCancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnCancel2ActionPerformed
        t_bcode.setText("");
        t_bname.setText("");
        t_bcode.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnCancel2ActionPerformed

    private void db_btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btndeleteActionPerformed
        deleteintbl3();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btndeleteActionPerformed

    private void db_btnlinkallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnlinkallActionPerformed
        linkall();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnlinkallActionPerformed

    private void db_btndeleteallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btndeleteallActionPerformed
        deleteintbl3All();
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btndeleteallActionPerformed

    private void tbl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl3MouseClicked
        
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl3MouseClicked

    private void tbl3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl3KeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_tbl3KeyPressed

    private void tbl3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl3KeyReleased
      
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl3KeyReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
        deleteintbl2();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void t_mcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_mcodeFocusLost
        if(!t_mcode.getText().equals(""))
        {
            if (t_mcode.getText().length() < 15) {
            
                loaddataTotbl13(t_mcode.getText());
            }
            else {
                    JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง ห้ามกรอกข้อมูลเกิน 15 ตัวอักษร");
                    t_mcode.setText("");
                    t_mcode.requestFocus();
                    setFocus(false);
                }
            
         }
        // TODO add your handling code here:
    }//GEN-LAST:event_t_mcodeFocusLost

    private void t_pcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pcodeFocusLost
        if(!t_pcode.getText().equals(""))
        {
        setpname(t_pcode.getText());
        }
        t_pcode.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcodeFocusLost

    private void deleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllActionPerformed
        deleteintbl1All();
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteAllActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        deleteintbl1();
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        UpdateAct("Y");
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        UpdateAct("N");
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void t_noFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_noFocusGained
        
        t_no.setText(t_no.getText());
        t_no.selectAll();
    }//GEN-LAST:event_t_noFocusGained

    private void t_noFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_noFocusLost
        t_pcode.setText("");
        t_pname.setText("");
        t_price.setText("0.00");
        cboact.setSelectedIndex(0);
        setDataTotxt(t_mcode.getText(), t_no.getText());
        t_no.select(0, 0);
        // TODO add your handling code here:
    }//GEN-LAST:event_t_noFocusLost

    private void t_noKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_noKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            t_pcode.requestFocus();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_t_noKeyPressed

    private void t_pcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_pcodeFocusGained
        t_pcode.setText(t_pcode.getText());
        t_pcode.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_t_pcodeFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(setMenuList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(setMenuList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(setMenuList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(setMenuList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                setMenuList dialog = new setMenuList(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsearch1;
    private javax.swing.JButton btnsearch2;
    private javax.swing.JComboBox cboact;
    private javax.swing.JLabel d_lblcost;
    private javax.swing.JLabel d_lblcost1;
    private javax.swing.JLabel d_lblh1;
    private javax.swing.JLabel d_lblh2;
    private javax.swing.JLabel d_lblh3;
    private javax.swing.JButton db_btnCancel;
    private javax.swing.JButton db_btnCancel2;
    private javax.swing.JButton db_btnExel1;
    private javax.swing.JButton db_btnOK;
    private javax.swing.JButton db_btnOK2;
    private javax.swing.JButton db_btnPrint;
    private javax.swing.JButton db_btndelete;
    private javax.swing.JButton db_btndeleteall;
    private javax.swing.JButton db_btnlinkall;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JMenuItem delete;
    private javax.swing.JMenuItem deleteAll;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu popUpTbl1;
    private javax.swing.JPopupMenu popUpTbl2;
    private javax.swing.JTextField t_bcode;
    private javax.swing.JTextField t_bname;
    private javax.swing.JTextField t_mcode;
    private javax.swing.JFormattedTextField t_no;
    private javax.swing.JTextField t_pcode;
    private javax.swing.JTextField t_pname;
    private javax.swing.JFormattedTextField t_price;
    private javax.swing.JTable tbl1;
    private javax.swing.JTable tbl2;
    private javax.swing.JTable tbl3;
    // End of variables declaration//GEN-END:variables
private void removedataintble(JTable tbl)
{
    DefaultTableModel tb = (DefaultTableModel) tbl.getModel();
     int cnt = tb.getRowCount();
        if (cnt > 0) {
            for (int i = 0; i < cnt; i++) {
                tb.removeRow(0);
            }
        }
}
private void loadtbl2()
{
    stmt = null;
    ResultSet rs = null;
    
   
    removedataintble(tbl2);
    DefaultTableModel tb = (DefaultTableModel) tbl2.getModel() ;
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "select * from menulist group by menucode";
        rs = stmt.executeQuery(sql);
        while(rs.next())
        {
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
            tb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("menucode")),cvth.ASCII2Unicode(rs.getString("menuactive"))});
            }
            else
            {
            tb.addRow(new Object[]{rs.getString("menucode"),rs.getString("menuactive")});
            }
            
        }
    } catch (Exception e) {
    }
}
    private void loadtbl1(String code)
{
    stmt = null;
    ResultSet rs = null;
    
   
    removedataintble(tbl1);
    DefaultTableModel tb = (DefaultTableModel) tbl1.getModel() ;
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "";
        if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
        sql = "select menucode,menuitem,plucode,pdesc,pprice11,menuactive from "
                + "menulist left join product on plucode = pcode where menucode ='"+cvth.Unicode2ASCII(code)+"' "
                + "order by menuitem";
            }
        else
        {
         sql = "select menucode,menuitem,plucode,pdesc,pprice11,menuactive from "
                + "menulist left join product on plucode = pcode where menucode ='"+code+"' "
                + "order by menuitem";
        }
        rs = stmt.executeQuery(sql);
        while(rs.next())
        {
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
                
            tb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("menucode")),
                                   rs.getInt("menuitem"),
                                   cvth.ASCII2Unicode(rs.getString("plucode")),
                                   cvth.ASCII2Unicode(rs.getString("pdesc")),
                                   cvth.ASCII2Unicode(rs.getString("pprice11")),
                                   cvth.ASCII2Unicode(rs.getString("menuactive"))
                                  });
            }
            else
            {
            tb.addRow(new Object[]{rs.getString("menucode"),
                                   rs.getInt("menuitem"),
                                   rs.getString("plucode"),
                                   rs.getString("pdesc"),
                                   rs.getString("pprice11"),
                                   rs.getString("menuactive")
                                  });
            }
            
        }
    } catch (Exception e) {
        
    }
}
    
    private void loadtbl3(String code)
{
    stmt = null;
    ResultSet rs = null;
    
   
    removedataintble(tbl3);
    DefaultTableModel tb = (DefaultTableModel) tbl3.getModel() ;
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "";
        if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
        sql = "select * from menulink left join branchgroup on bgroupcode = bgroup "
                + "where menucode ='"+cvth.Unicode2ASCII(code)+"' "
                + "order by bgroup";
            }
        else
        {
         sql = "select * from menulink left join branchgroup on bgroupcode = bgroup "
                + "where menucode ='"+code+"' "
                + "order by bgroup";
        }
        rs = stmt.executeQuery(sql);
        while(rs.next())
        {
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
                
            tb.addRow(new Object[]{cvth.ASCII2Unicode(rs.getString("bgroup")),
                                   cvth.ASCII2Unicode(rs.getString("bgroupname"))
                                  });
            }
            else
            {
            tb.addRow(new Object[]{rs.getString("bgroup"),
                                   rs.getString("bgroupname")
                                  });
            }
            
        }
    } catch (Exception e) {
        
    }
}
    private void loaddataTotbl13(String code)
    {
        clearDisplay();
            loadtbl1(code);
            loadtbl3(code);
            
            t_mcode.setText(code);
            getTextNo();
            setFocus(true);
            
    }
    private boolean chkMenu(String code, String no) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;


        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menulist "
                        + "where menucode = '" + cvth.Unicode2ASCII(code) + "' and menuitem = '" + cvth.Unicode2ASCII(no) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menulist "
                        + "where menucode = '" + code + "' and menuitem = '" + no + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            }
        } catch (Exception e) {
        }
        return chk;
    }
    
    private boolean chkLink1(String code) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;


        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menulink "
                        + "where menucode = '" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menulink "
                        + "where menucode = '" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            }
        } catch (Exception e) {
        }
        return chk;
    }
    
    private boolean chkLink2(String code,String bcode) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;


        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menulink "
                        + "where menucode = '" + cvth.Unicode2ASCII(code) + "' and bgroup = '" + cvth.Unicode2ASCII(bcode) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menulink "
                        + "where menucode = '" + code + "' and bgroup = '" + bcode + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            }
        } catch (Exception e) {
        }
        return chk;
    }
    
    private boolean chkMenu2(String code) {
        boolean chk = false;
        stmt = null;
        ResultSet rs = null;


        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menulist "
                        + "where menucode = '" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from menulist "
                        + "where menucode = '" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }

            }
        } catch (Exception e) {
        }
        return chk;
    }
    private void saveMenulist()
    {
         try {
             
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                
            if(CheckValidSave())
            {
            if(chkMenu(t_mcode.getText(), t_no.getText()))
            {
               
                    //update
                    String sql2 = "Update menulist Set plucode = ?,menuactive = ? where menucode = ? and menuitem = ?";
                            
                   PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                  
                   prm.setString(1, cvth.Unicode2ASCII(t_pcode.getText()));
                   prm.setString(2, cvth.Unicode2ASCII(cboact.getSelectedItem().toString()));
                   prm.setString(3, cvth.Unicode2ASCII(t_mcode.getText()));
                   prm.setString(4, cvth.Unicode2ASCII(t_no.getText()));
                   prm.executeUpdate();
                   prm.close();
            }
            else
            {
                //insert
                
                String sql2 = "Insert Into menulist (plucode ,menuactive ,menucode ,menuitem )"
                        + "values(?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                   prm.setString(1, cvth.Unicode2ASCII(t_pcode.getText()));
                   prm.setString(2, cvth.Unicode2ASCII(cboact.getSelectedItem().toString()));
                   prm.setString(3, cvth.Unicode2ASCII(t_mcode.getText()));
                   prm.setString(4, cvth.Unicode2ASCII(t_no.getText()));
                   prm.executeUpdate();
                   prm.close();
            }
            loadtbl1(t_mcode.getText());
            loadtbl2();
            cleartxt();
            
            }
            }
            else
            {
                if(CheckValidSave())
            {
            if(chkMenu(t_mcode.getText(), t_no.getText()))
            {
               
                    //update
                    String sql2 = "Update menulist Set plucode = ?,menuactive = ? where menucode = ? and menuitem = ?";
                            
                   PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                  
                   prm.setString(1, t_pcode.getText());
                   prm.setString(2, cboact.getSelectedItem().toString());
                   prm.setString(3, t_mcode.getText());
                   prm.setString(4, t_no.getText());
                   prm.executeUpdate();
                   prm.close();
            }
            else
            {
                //insert
                
                String sql2 = "Insert Into menulist (plucode ,menuactive ,menucode ,menuitem )"
                        + "values(?,?,?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                   prm.setString(1, t_pcode.getText());
                   prm.setString(2, cboact.getSelectedItem().toString());
                   prm.setString(3, t_mcode.getText());
                   prm.setString(4, t_no.getText());
                   prm.executeUpdate();
                   prm.close();
            }
            loadtbl1(t_mcode.getText());
            loadtbl2();
            cleartxt();
            
            }
            
            }
            
            
            
        
         } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
    }
    
    private void saveMenuLink()
    {
         try {
             
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                
            if(CheckValidSaveLink())
            {
            if(!chkLink2(t_mcode.getText(), t_bcode.getText()))
            {
               String sql2 = "Insert Into menulink (bgroup,menucode)"
                        + "values(?,?)";
                   PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                   prm.setString(1, cvth.Unicode2ASCII(t_bcode.getText()));
                   prm.setString(2, cvth.Unicode2ASCII(t_mcode.getText()));
                   prm.executeUpdate();
                   prm.close();
                    
            }
            
            loadtbl3(t_mcode.getText());
            t_bcode.setText("");
            t_bname.setText("");
            t_bcode.requestFocus();
            }
            
            
            }
            else
            {
                if(CheckValidSaveLink())
            {
            if(!chkLink2(t_mcode.getText(), t_bcode.getText()))
            {
               String sql2 = "Insert Into menulink (bgroup,menucode)"
                        + "values(?,?)";
                   PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                   prm.setString(1, t_bcode.getText());
                   prm.setString(2, t_mcode.getText());
                   prm.executeUpdate();
                   prm.close();
                    
            }
            
            loadtbl3(t_mcode.getText());
            t_bcode.setText("");
            t_bname.setText("");
            t_bcode.requestFocus();
            }
            
            }
            
        
         } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
    }
    private void getTextNo()
    {
            int no = 1;
            if(tbl1.getRowCount()>0)
            {
                no = Integer.parseInt(tbl1.getValueAt(tbl1.getRowCount()-1, 1).toString());
                no ++;
                
            }
            else
            {
                no = 1;
            }
            t_no.setText(no+"");
    }
    
    private void setFocus(boolean chk)
    {
    
    t_no.setFocusable(chk);
    t_pcode.setFocusable(chk);
    cboact.setEnabled(chk);
    tbl1.setEnabled(chk);
    tbl3.setEnabled(chk);
    btnsearch1.setEnabled(chk);
    btnsearch2.setEnabled(chk);
    t_bcode.setFocusable(chk);
    db_btnOK.setEnabled(chk);
    db_btnCancel.setEnabled(chk);
    db_btnOK2.setEnabled(chk);
    db_btnCancel2.setEnabled(chk);
    db_btndelete.setEnabled(chk);
    db_btndeleteall.setEnabled(chk);
    db_btnlinkall.setEnabled(chk);
    if(chk==false)
    {
    t_mcode.setFocusable(true);
    t_mcode.setBackground(Color.WHITE);
    
    
    }
    else
    {
    t_mcode.setBackground(new java.awt.Color(255, 246, 143));
    t_mcode.setFocusable(false);
    }
    }
    private void clearDisplay()
    {
        t_no.setText("");
        t_pcode.setText("");
        t_pname.setText("");
        t_mcode.setText("");
        t_price.setText("0.00");
        t_no.setText("1");
        cboact.setSelectedIndex(0);
        setFocus(false);
        removedataintble(tbl1);
        removedataintble(tbl3);
        t_mcode.requestFocus();
    }
    private void cleartxt()
    {
        
        t_pcode.setText("");
        t_pname.setText("");
        t_price.setText("0.00");
        cboact.setSelectedIndex(0);
        setFocus(true);
        t_no.requestFocus();
        getTextNo();
    }
    private void setDataTotxt(String code,String no)
    {
         stmt = null;
    ResultSet rs = null;
    
   
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "";
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
                
                sql = "select menucode,menuitem,plucode,pdesc,pprice11,menuactive from "
                + "menulist left join product on plucode = pcode "
                + "where menucode ='"+cvth.Unicode2ASCII(code)+"' and menuitem = '"+cvth.Unicode2ASCII(no)+"'"
                + "order by menuitem";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   t_no.setText(cvth.ASCII2Unicode(rs.getString("menuitem")));
                   t_pcode.setText(cvth.ASCII2Unicode(rs.getString("plucode")));
                   t_pname.setText(cvth.ASCII2Unicode(rs.getString("pdesc")));
                   t_price.setText(utilititiesfunction.Format.doubleFmt.format(rs.getDouble("pprice11")));
                   
                   if(cvth.ASCII2Unicode(rs.getString("menuactive")).equals("Y"))
                   {
                       cboact.setSelectedIndex(0);
                   }
                   else
                   {
                       cboact.setSelectedIndex(1);
                   }
                }
            
            }
            else
            {
                 
                sql = "select menucode,menuitem,plucode,pdesc,pprice11,menuactive from "
                + "menulist left join product on plucode = pcode "
                + "where menucode ='"+code+"' and menuitem = '"+no+"'"
                + "order by menuitem";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                    t_no.setText(rs.getString("menuitem"));
                   t_pcode.setText(rs.getString("plucode"));
                   t_pname.setText(rs.getString("pdesc"));
                   t_price.setText(utilititiesfunction.Format.doubleFmt.format(rs.getDouble("pprice11")));
                   
                   if(rs.getString("menuactive").equals("Y"))
                   {
                       cboact.setSelectedIndex(0);
                   }
                   else
                   {
                       cboact.setSelectedIndex(1);
                   }
                }
            }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
    }
    
    private void setpname(String code)
    {
        stmt = null;
    ResultSet rs = null;
    
   
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "";
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
                
                sql = "select pdesc,pprice11 from product "
                + "where pcode ='"+cvth.Unicode2ASCII(code)+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   t_pname.setText(cvth.ASCII2Unicode(rs.getString("pdesc")));
                   t_price.setText(utilititiesfunction.Format.doubleFmt.format(rs.getDouble("pprice11")));
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                    t_pcode.setText("");
                    t_pcode.requestFocus();
                }
            
            }
            else
            {
                 sql = "select pdesc,pprice11 from product "
                + "where pcode ='"+code+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   t_pname.setText(rs.getString("pdesc"));
                   t_price.setText(utilititiesfunction.Format.doubleFmt.format(rs.getDouble("pprice11")));
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                    t_pcode.setText("");
                    t_pcode.requestFocus();
                }
                
            }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
    }
    
    private boolean chkplu(String code)
    {
        stmt = null;
    ResultSet rs = null;
    boolean chk = false;
   
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "";
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
                
                sql = "select pdesc,pprice11 from product "
                + "where pcode ='"+cvth.Unicode2ASCII(code)+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   chk = true;
                }
               
            
            }
            else
            {
                 sql = "select pdesc,pprice11 from product "
                + "where pcode ='"+code+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   chk = true;
                }
                
            }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
    return chk;
    }
    
     private void setbname(String code)
    {
        stmt = null;
    ResultSet rs = null;
    
   
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "";
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
                
                sql = "select * from branchgroup "
                + "where bgroupcode ='"+cvth.Unicode2ASCII(code)+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   t_bname.setText(cvth.ASCII2Unicode(rs.getString("bgroupname")));
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                    t_bcode.setText("");
                    t_bcode.requestFocus();
                }
            
            }
            else
            {
                  sql = "select bgroupname from branchgroup "
                + "where bgroupcode ='"+code+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   t_bname.setText(rs.getString("bgroupname"));
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                    t_bname.setText("");
                    t_bname.requestFocus();
                }
                
            }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
    }
     
     private boolean chkbgroup(String code)
    {
        stmt = null;
    ResultSet rs = null;
    boolean chk = false;
   
    try {
        stmt = (Statement) dbUtility.con.createStatement();
        String sql = "";
            if(!db.Char_Set.equalsIgnoreCase("utf-8"))
            {
                
                sql = "select * from branchgroup "
                + "where bgroupcode ='"+cvth.Unicode2ASCII(code)+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   chk = true;
                }
                
            }
            else
            {
                  sql = "select bgroupname from branchgroup "
                + "where bgroupcode ='"+code+"'";
                rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                   chk = true;
                }
                
                
            }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e);
    }
    
    return chk;
    }
    
        public void deleteintbl1()
    {
        ResultSet rs = null;
        try {
            int row = tbl1.getSelectedRow();
            if (row != -1) {
                String mcode = tbl1.getValueAt(row, 0).toString();
                String no = tbl1.getValueAt(row, 1).toString();
                if (chkMenu(mcode, no)) {
                    
                    int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulist where menucode=? and menuitem = ?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, cvth.Unicode2ASCII(mcode));
                            prm.setString(2, cvth.Unicode2ASCII(no));
                            prm.executeUpdate();
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulist where menucode=? and menuitem = ?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, mcode);
                            prm.setString(2, no);
                            prm.executeUpdate();
                        }
                        if(tbl1.getRowCount()==1)
                        {
                        deleteintbl3All2();
                        clearDisplay();
                        loadtbl2();
                        }
                        else
                        {
                        loadtbl1(t_mcode.getText());
                        getTextNo();
                        }
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "กรุณาเลือกรายการที่จะลบ");
            }
        } catch (Exception e) {
        }
    }
        
        public void deleteintbl2()
    {
        ResultSet rs = null;
        try {
            int row = tbl2.getSelectedRow();
            if (row != -1) {
                String mcode = tbl2.getValueAt(row, 0).toString();
                if (chkMenu2(mcode)) {
                    int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulist where menucode=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, cvth.Unicode2ASCII(mcode));
                            prm.executeUpdate();
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulist where menucode=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, mcode);
                            prm.executeUpdate();
                        }
                        loadtbl2();
                        clearDisplay();
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "กรุณาเลือกรายการที่จะลบ");
            }
        } catch (Exception e) {
        }
    }
        
        
        
        public void deleteintbl1All()
    {
        ResultSet rs = null;
        try {
            int row = tbl1.getSelectedRow();
            
                String mcode = t_mcode.getText();
                if (chkMenu2(mcode)) {
                    int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบรายการทั้งหมดหรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulist where menucode=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, cvth.Unicode2ASCII(mcode));
                            prm.executeUpdate();
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulist where menucode=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, mcode);
                            prm.executeUpdate();
                        }
                        deleteintbl3All2();
                        clearDisplay();
                        loadtbl2();
                    }

                }
                 
           
        } catch (Exception e) {
        }
    }
         public void deleteintbl3()
    {
        ResultSet rs = null;
        try {
            int row = tbl3.getSelectedRow();
            if (row != -1) {
                String mcode = t_mcode.getText();
                String bcode = tbl3.getValueAt(row, 0).toString();
                if (chkLink2(mcode,bcode)) {
                    int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulink where menucode=? and bgroup=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, cvth.Unicode2ASCII(mcode));
                            prm.setString(2, cvth.Unicode2ASCII(bcode));
                            prm.executeUpdate();
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulink where menucode=? and bgroup=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, mcode);
                            prm.setString(2, bcode);
                            prm.executeUpdate();
                        }
                        loadtbl3(mcode);
                        
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "กรุณาเลือกรายการที่จะลบ");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
         
         public void deleteintbl3All()
    {
        ResultSet rs = null;
        try {
            
                String mcode = t_mcode.getText();
                if (chkLink1(mcode)) {
                    int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบข้อมูลรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulink where menucode=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, cvth.Unicode2ASCII(mcode));
                            prm.executeUpdate();
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulink where menucode=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, mcode);
                            prm.executeUpdate();
                        }
                        loadtbl3(mcode);
                        
                    }

                }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
         public void deleteintbl3All2()
    {
        ResultSet rs = null;
        try {
            
                String mcode = t_mcode.getText();
                if (chkLink1(mcode)) {
                    
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulink where menucode=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, cvth.Unicode2ASCII(mcode));
                            prm.executeUpdate();
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Delete from menulink where menucode=?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, mcode);
                            prm.executeUpdate();
                        }
                        loadtbl3(mcode);
                        
                    

                }
           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
        public void UpdateAct(String act)
    {
        ResultSet rs = null;
        try {
            int row = tbl2.getSelectedRow();
            if (row != -1) {
                String mcode = tbl2.getValueAt(row, 0).toString();
                if (chkMenu2(mcode)) {
                    int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องเปลี่ยนสถานะรายการนี้หรือไม่...?", "Confirm", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Update menulist Set menuactive = ? where menucode = ?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, cvth.Unicode2ASCII(act));
                            prm.setString(2, cvth.Unicode2ASCII(mcode));
                            prm.executeUpdate();
                        } else {
                            stmt = (Statement) db.con.createStatement();
                            String sql = "Update menulist Set menuactive = ? where menucode = ?";
                            java.sql.PreparedStatement prm = (java.sql.PreparedStatement) db.con.prepareStatement(sql);
                            prm.setString(1, act);
                            prm.setString(2, mcode);
                            prm.executeUpdate();
                        }
                        loadtbl2();
                        loadtbl1(t_mcode.getText());
                    }

                }
                } else {
                JOptionPane.showMessageDialog(this, "กรุณาเลือกรายการที่จะ Update");
            }
           
        } catch (Exception e) {
        }
    }
        public void linkall()
        {
            stmt = null;
        ResultSet rs = null;
        String mcode = t_mcode.getText();
        if(chkMenu2(mcode))
        {
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from branchgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    if(!chkLink2(mcode, cvth.ASCII2Unicode(rs.getString("bgroupcode"))))
                    {
                        String sql2 = "Insert Into menulink (bgroup,menucode)"
                        + "values(?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                        prm.setString(1, rs.getString("bgroupcode"));
                        prm.setString(2, cvth.Unicode2ASCII(mcode));
                        prm.executeUpdate();
                        prm.close();
                    }
                }
                loadtbl3(t_mcode.getText());
                t_bcode.setText("");
                t_bname.setText("");
                t_bcode.requestFocus();
            } else {
                stmt = (Statement) dbUtility.con.createStatement();
                String sql = "select * from branchgroup";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    if(!chkLink2(mcode, rs.getString("bgroupcode")))
                    {
                        String sql2 = "Insert Into menulink (bgroup,menucode)"
                        + "values(?,?)";
                        PreparedStatement prm = (PreparedStatement) db.con.prepareStatement(sql2);
                        prm.setString(1, rs.getString("bgroupcode"));
                        prm.setString(2, cvth.Unicode2ASCII(mcode));
                        prm.executeUpdate();
                        prm.close();
                    }
                }
                loadtbl3(t_mcode.getText());
                t_bcode.setText("");
                t_bname.setText("");
                t_bcode.requestFocus();

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,e);
        }
        }
        }
        public boolean CheckValidSave() {
        boolean chk = true;


        if (t_mcode.getText().length() > 15) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 15 ตัวอักษร)");
            chk = false;
            t_mcode.requestFocus();
        } else if (t_pcode.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนด PLU");
            chk = false;
            t_pcode.requestFocus();
        } else if (t_no.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "กรุณากำหนดลำดับ");
            chk = false;
            t_no.requestFocus();
        }
        else if(!chkplu(t_pcode.getText()))
        {
            JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                    t_pcode.setText("");
                    t_pcode.requestFocus();
                    chk = false;
        }
        
        int no = Integer.parseInt(t_no.getText());
        if(no < 0 || no >999)
        {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... (ลำดับห้ามน้อยกว่า 0 และมากกว่า 999)");
            chk = false;
            t_no.requestFocus();
        }
        return chk;
    }
        
        public boolean CheckValidSaveLink() {
        boolean chk = true;

        
        if (t_bcode.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... ");
            chk = false;
            t_bcode.requestFocus();
        } else if (!chkMenu2(t_mcode.getText())) {
            JOptionPane.showMessageDialog(this, "รายการนี้ยังไม่มีข้อมูล กรุณาเพิ่มรายการก่อน....");
            chk = false;
            t_no.requestFocus();
        }else if (t_bcode.getText().length()>3) {
            JOptionPane.showMessageDialog(this, "กำหนดข้อมูลไม่ถูกต้อง... (ต้องมีขนาดไม่เกิน 3 ตัวอักษร)");
            chk = false;
            t_bcode.requestFocus();
        } else if (!chkbgroup(t_bcode.getText()))
        {
            JOptionPane.showMessageDialog(this, "ข้อมูลไม่ถูกต้อง กรุณากรอกข้อมูลให้ถูกต้อง");
                    t_bcode.setText("");
                    t_bcode.requestFocus();
                    chk = false;
        }
        
        return chk;
    }
    
        
        private void initable1() {
        DefaultTableModel tb = (DefaultTableModel) tbl1.getModel();
        tbl1.setShowGrid(true);
        //tblPLU.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl1.setRowSelectionAllowed(true);
        tbl1.setBackground(java.awt.Color.WHITE);
        tbl1.setGridColor(java.awt.Color.gray);
        JTableHeader header = tbl1.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        //tblBtype.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl1.setRowHeight(24);
        tbl1.setAutoCreateRowSorter(true);
        TableTestFormatRenderer t;
        t = new TableTestFormatRenderer(DoubleFmt);
        t.setHorizontalAlignment(SwingConstants.RIGHT);


        DefaultTableCellRenderer r;
        r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c;
        c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer l;
        l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);

        TableColumnModel tcm = tbl1.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);
        tcm.getColumn(2).setCellRenderer(l);
        tcm.getColumn(3).setCellRenderer(l);
        tcm.getColumn(4).setCellRenderer(r);
        tcm.getColumn(5).setCellRenderer(l);

    }
        private void initable2() {
        tbl2.setShowGrid(true);
        //tblPLU.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl2.setRowSelectionAllowed(true);
        tbl2.setBackground(java.awt.Color.WHITE);
        tbl2.setGridColor(java.awt.Color.gray);
        JTableHeader header = tbl2.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        //tblBtype.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl2.setRowHeight(24);
        tbl2.setAutoCreateRowSorter(true);
        TableTestFormatRenderer t;
        t = new TableTestFormatRenderer(DoubleFmt);
        t.setHorizontalAlignment(SwingConstants.RIGHT);


        DefaultTableCellRenderer r;
        r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c;
        c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer l;
        l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);

        TableColumnModel tcm = tbl2.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(c);

    }
        private void initable3() {
        tbl3.setShowGrid(true);
        //tblPLU.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl3.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl3.setRowSelectionAllowed(true);
        tbl3.setBackground(java.awt.Color.WHITE);
        tbl3.setGridColor(java.awt.Color.gray);
        JTableHeader header = tbl3.getTableHeader();
        header.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        //tblBtype.setFont(new java.awt.Font("Norasi", java.awt.Font.BOLD, 14));
        tbl3.setRowHeight(24);
        tbl3.setAutoCreateRowSorter(true);
        TableTestFormatRenderer t;
        t = new TableTestFormatRenderer(DoubleFmt);
        t.setHorizontalAlignment(SwingConstants.RIGHT);


        DefaultTableCellRenderer r;
        r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(SwingConstants.RIGHT);
        DefaultTableCellRenderer c;
        c = new DefaultTableCellRenderer();
        c.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer l;
        l = new DefaultTableCellRenderer();
        l.setHorizontalAlignment(SwingConstants.LEFT);

        TableColumnModel tcm = tbl3.getColumnModel();
        tcm.getColumn(0).setCellRenderer(l);
        tcm.getColumn(1).setCellRenderer(l);

    }
        private void inittbl()
        {
            initable1();
            initable2();
            initable3();
        }
        
        private void btnplu()
        {
            ListProduct f = new ListProduct(new NimbusFrame(), true);
        f.setVisible(true);
        if(!f.code.equals(""))
        {
            t_pcode.setText(f.code);
            setpname(t_pcode.getText());
        }
        t_pcode.requestFocus();
        }
        
        private void btnbgroup()
        {
            listBranchGroup2 f = new listBranchGroup2(new NimbusFrame(), true);
        f.setVisible(true);
        if(!f.bcode.equals(""))
        {
            t_bcode.setText(f.bcode);
            setbname(t_bcode.getText());
        }
        t_bcode.requestFocus();
        }
}

