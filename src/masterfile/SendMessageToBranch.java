/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SendMessageToBranch.java
 *
 * Created on Dec 10, 2012, 9:51:01 AM
 */
package masterfile;

import dbutility.dbUtility;
import directory_utility.DirectoryUtility;
import java.awt.event.KeyEvent;
import java.io.*;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utilititiesfunction.PUtility;
import utilititiesfunction.ThaiUtilities;
import utilititiesfunction.UserLogin;
import utilititiesfunction.getLanguage;
import write_to_text.TextWriter;

/**
 *
 * @author natee
 */
public class SendMessageToBranch extends javax.swing.JDialog {

    public static String OS = "";
    DefaultTableModel tbPLU;
    DefaultTableModel tbCoupon;
    dbUtility db = new dbUtility();
    String CopyPath = "";
    Statement stmt;
    int indexplutbl = -1;
    int indexcoupontbl = -1;
    String frmName = "SendMessageToBranch";
    ThaiUtilities cvth = new ThaiUtilities();
    String ServerPath = "";
    String FolderPath = "/tobranch/";
    String FileName = "_message";
    String FileType = ".zip";
    String ClickPath = "";
    String Pathtemp = "/spapplication/temp";

    /**
     * Creates new form SendMessageToBranch
     */
    public SendMessageToBranch(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        checkuserconfig();
        OS = System.getProperty("os.name").toLowerCase();
        getServerPath();
        loadfile();
        //getLanguage lang = new getLanguage();
        //lang.setText(frmName, this, lang.getChklang());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        db_lblh1 = new javax.swing.JLabel();
        txtfBgroup1 = new javax.swing.JTextField();
        txtfBranchName = new javax.swing.JTextField();
        btnsearchplu = new javax.swing.JButton();
        db_btnSend = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        db_m1 = new javax.swing.JRadioButton();
        db_m2 = new javax.swing.JRadioButton();
        db_m3 = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        db_lastmodify1 = new javax.swing.JLabel();
        db_lastmodify2 = new javax.swing.JLabel();
        db_btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        db_lblh1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lblh1.setText("กำหนดกลุ่มสาขา (Branch Group)");
        db_lblh1.setName("db_lblh1"); // NOI18N

        txtfBgroup1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        txtfBgroup1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfBgroup1FocusGained(evt);
            }
        });
        txtfBgroup1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfBgroup1KeyReleased(evt);
            }
        });

        txtfBranchName.setBackground(new java.awt.Color(255, 246, 143));
        txtfBranchName.setEditable(false);
        txtfBranchName.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N

        btnsearchplu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Windows-Magnifier-icon.png"))); // NOI18N
        btnsearchplu.setFocusable(false);
        btnsearchplu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchpluActionPerformed(evt);
            }
        });

        db_btnSend.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Log-Out-icon.png"))); // NOI18N
        db_btnSend.setText("ส่งข้อความไปยังสาขา");
        db_btnSend.setFocusable(false);
        db_btnSend.setName("db_btnSend"); // NOI18N
        db_btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(db_lblh1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfBgroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsearchplu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfBranchName, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtfBranchName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfBgroup1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db_lblh1)))
                    .addComponent(btnsearchplu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(db_btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        list.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        list.setVerifyInputWhenFocusTarget(false);
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        list.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                listKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(db_m1);
        db_m1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_m1.setSelected(true);
        db_m1.setText("ข้อความปกติ");
        db_m1.setName("db_m1"); // NOI18N

        buttonGroup1.add(db_m2);
        db_m2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_m2.setText("ข้อความสำคัญ");
        db_m2.setName("db_m2"); // NOI18N

        buttonGroup1.add(db_m3);
        db_m3.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_m3.setText("ข้อความสำคัญมาก");
        db_m3.setName("db_m3"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(db_m1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(db_m2)
                .addGap(117, 117, 117)
                .addComponent(db_m3)
                .addGap(33, 33, 33))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(db_m1)
                    .addComponent(db_m2)
                    .addComponent(db_m3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Norasi", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                .addContainerGap())
        );

        db_lastmodify1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lastmodify1.setText("Last Modify Date");
        db_lastmodify1.setName("db_lblh1"); // NOI18N

        db_lastmodify2.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_lastmodify2.setName("db_lblh1"); // NOI18N

        db_btnDelete.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        db_btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Delete-icons.png"))); // NOI18N
        db_btnDelete.setText("ลบไฟล์ข้อมูล");
        db_btnDelete.setFocusable(false);
        db_btnDelete.setName("db_btnDelete"); // NOI18N
        db_btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                db_btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(db_lastmodify1)
                                .addGap(18, 18, 18)
                                .addComponent(db_lastmodify2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(db_btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(db_lastmodify1)
                            .addComponent(db_lastmodify2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(db_btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1024)/2, (screenSize.height-768)/2, 1024, 768);
    }// </editor-fold>//GEN-END:initComponents
private void checkuserconfig() {
        //MenuName = Mast1
        UserLogin userrec = UserLogin.userlogin;
        if (userrec.getTran6().equals("1")) {
            db_btnSend.setEnabled(false);
            db_btnDelete.setEnabled(false);
        }
        if (userrec.getTran6().equals("2")) {
            db_btnSend.setEnabled(true);
            db_btnDelete.setEnabled(false);
        }
        if (userrec.getTran6().equals("3")) {
            db_btnSend.setEnabled(true);
            db_btnDelete.setEnabled(true);
        }
    }
    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
        click();

    }//GEN-LAST:event_listMouseClicked

    private void listKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listKeyReleased
    }//GEN-LAST:event_listKeyReleased

    private void btnsearchpluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchpluActionPerformed
        btnSearchBgroupSettext();
        showbgtxtname(txtfBgroup1.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_btnsearchpluActionPerformed

    private void txtfBgroup1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtfBgroup1.setText("");
            txtfBranchName.setText("");
            txtfBgroup1.requestFocus();

        } else if (evt.getKeyCode() == KeyEvent.VK_F5) {
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            showbgtxtname(txtfBgroup1.getText());
        } else if (evt.getKeyCode() == KeyEvent.VK_F1) {
            btnSearchBgroupSettext();
            showbgtxtname(txtfBgroup1.getText());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1KeyPressed

    private void txtfBgroup1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfBgroup1FocusGained
        txtfBgroup1.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1FocusGained

    private void db_btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnSendActionPerformed
        if (chkgb(txtfBgroup1.getText())) {
            sendMessage();
        } else {
            JOptionPane.showMessageDialog(this, "กำหนดกลุ่มสาขาไม่ถูกต้อง");
            txtfBranchName.setText("");
            txtfBgroup1.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnSendActionPerformed

    private void txtfBgroup1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfBgroup1KeyReleased
        String get = txtfBgroup1.getText();
        String out = get.toUpperCase();
        txtfBgroup1.setText(out);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfBgroup1KeyReleased

    private void db_btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_db_btnDeleteActionPerformed
        if (!ClickPath.equals("")) {

            File f = new File(ClickPath);
            int confirm = JOptionPane.showConfirmDialog(this, "คุณต้องการลบไฟล์ข้อความ " + f.getName() + " หรือไม่?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                f.delete();
                ClickPath = "";
                loadfile();
                clear();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_db_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendMessageToBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendMessageToBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendMessageToBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendMessageToBranch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SendMessageToBranch dialog = new SendMessageToBranch(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsearchplu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton db_btnDelete;
    private javax.swing.JButton db_btnSend;
    private javax.swing.JLabel db_lastmodify1;
    private javax.swing.JLabel db_lastmodify2;
    private javax.swing.JLabel db_lblh1;
    private javax.swing.JRadioButton db_m1;
    private javax.swing.JRadioButton db_m2;
    private javax.swing.JRadioButton db_m3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JList list;
    private javax.swing.JTextField txtfBgroup1;
    private javax.swing.JTextField txtfBranchName;
    // End of variables declaration//GEN-END:variables

    public void showbgtxtname(String code) {
        ResultSet rs = null;
        try {

            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                db.dbconnect();
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfBranchName.setText(cvth.ASCII2Unicode(rs.getString("bgroupname")));

                } else {
                    JOptionPane.showMessageDialog(this, "กำหนดกลุ่มสาขาไม่ถูกต้อง");
                    txtfBranchName.setText("");
                    txtfBgroup1.requestFocus();
                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    txtfBranchName.setText(rs.getString("bgroupname"));


                } else {
                    JOptionPane.showMessageDialog(this, "กำหนดกลุ่มสาขาไม่ถูกต้อง");
                    txtfBranchName.setText("");
                    txtfBgroup1.requestFocus();

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public boolean chkgb(String code) {
        boolean chk = false;
        ResultSet rs = null;
        try {

            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                db.dbconnect();
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + cvth.Unicode2ASCII(code) + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;

                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from branchgroup where bgroupcode ='" + code + "'";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    chk = true;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return chk;
    }

    public void btnSearchBgroupSettext() {
        listBranchGroup f = new listBranchGroup(new NimbusFrame(), true);
        f.setVisible(true);
        if (!f.bcode.equals("")) {
            txtfBgroup1.setText(f.bcode);
            txtfBgroup1.requestFocus();
        }
    }

    private void sendMessage() {

        if (!txtfBgroup1.getText().trim().equals("") && !txtfBranchName.getText().equals("")) {

            try {
                String inFile = Pathtemp+"/" + txtfBgroup1.getText() + FileName + FileType;
                String outFile = ServerPath + FolderPath + txtfBgroup1.getText().trim() + FileName + FileType;
                boolean chk = false;

                File TempPath = new File(Pathtemp);
                DirectoryUtility dirUtil = new DirectoryUtility();
                File fl[] = TempPath.listFiles();
                try {
                    for (int i = 0; i < fl.length; i++) {
                        dirUtil.deleteDir(fl[i]);
                    }
                    if (!dirUtil.deleteDir(TempPath)) {
                        JOptionPane.showMessageDialog(this, "Can'n Delete" + TempPath);
                    }
                    if (!dirUtil.createDir(TempPath)) {
                        JOptionPane.showMessageDialog(this, "Can'n Create" + TempPath);
                    }
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                String rdomessage = "";
                if (db_m1.isSelected()) {
                    rdomessage = "STATUS:1\n";
                } else if (db_m2.isSelected()) {
                    rdomessage = "STATUS:2\n";
                } else if (db_m3.isSelected()) {
                    rdomessage = "STATUS:3\n";
                }

                String message = jTextArea1.getText();
                TextWriter write = new TextWriter();
                write.writeToText(inFile, rdomessage + message);



                String inCharset = "UTF-8";
                String outCharset = "TIS-620";

                if (!OS.equalsIgnoreCase("linux")) {

                    copyFile(inFile, outFile);
                } else {

                    ConverCharSet(inFile, inCharset, outFile, outCharset);

                }
                JOptionPane.showMessageDialog(this, "File is copied successful!");

            } catch (Exception e) {
            }
            clear();
            loadfile();

        } else {
            JOptionPane.showMessageDialog(this, "ข้อมูลผิดพลาด กรุณาเลือกรหัสกลุ่มสาขาให้ถูกต้อง");
            txtfBgroup1.requestFocus();
            txtfBgroup1.setText("");
        }
    }

    private void loadfile() {
        try {
            DefaultListModel model = new DefaultListModel();
            list.setModel(model);
            File chk = new File(ServerPath + FolderPath);
            if (!chk.exists()) {
                new File(ServerPath + FolderPath).mkdirs();
            }

            File directory[] = chk.listFiles();

            for (int i = 0; i < directory.length; i++) {
                String[] Name = directory[i].getName().split("_");
                if (Name.length == 2 && Name[1].equalsIgnoreCase("message.zip")) {
                    model.addElement(directory[i].getName());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }

    private void click() {
        String outFile = Pathtemp+"/" + list.getSelectedValue().toString();
        String inFile = ServerPath + FolderPath + list.getSelectedValue().toString();
        String inCharset = "TIS-620";
        String outCharset = "UTF-8";
        File f = new File(inFile);

        Date lm = new Date(f.lastModified());
        String lasmod = new SimpleDateFormat("HH:mm:ss a dd-MM-yyyy").format(lm);
        db_lastmodify2.setText(lasmod);

        try {
            if (!OS.equalsIgnoreCase("linux")) {

                copyFile(inFile, outFile);
            } else {
                ConverCharSet(inFile, inCharset, outFile, outCharset);
            }
            boolean eof = false;
            FileReader file = new FileReader(outFile);
            BufferedReader buff = new BufferedReader(file);
            String text = "";
            jTextArea1.setText("");
            String status = "";
            while ((text = buff.readLine()) != null) {
                String[] txtstatus = text.split(":");
                if (!txtstatus[0].equalsIgnoreCase("status")) {
                    jTextArea1.append(text + "\n");
                } else {
                    status = text;
                }
            }
            file.close();
            if (status.equalsIgnoreCase("STATUS:1")) {
                db_m1.setSelected(true);
            } else if (status.equalsIgnoreCase("STATUS:2")) {
                db_m2.setSelected(true);
            } else if (status.equalsIgnoreCase("STATUS:3")) {
                db_m3.setSelected(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }


        ClickPath = ServerPath + FolderPath + list.getSelectedValue().toString();
        CopyPath = ServerPath + FolderPath + list.getSelectedValue().toString();
        String name = list.getSelectedValue().toString();
        String ArrayStr[] = name.split("_");
        txtfBgroup1.setText(ArrayStr[0]);
        showbgtxtname(ArrayStr[0]);
        loadfile();
    }

    private void clear() {
        CopyPath = "";
        ClickPath = "";
        db_lastmodify2.setText("");
        jTextArea1.setText("");
        txtfBgroup1.setText("");
        txtfBranchName.setText("");
        db_m1.setSelected(true);
    }

    private void getServerPath() {
        ResultSet rs = null;
        try {
            if (!db.Char_Set.equalsIgnoreCase("utf-8")) {
                db.dbconnect();
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from borpathsetup";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (OS.equalsIgnoreCase("linux")) {
                        ServerPath = cvth.ASCII2Unicode(rs.getString("backuppath"));
                    } else {
                        ServerPath = cvth.ASCII2Unicode(rs.getString("backuppath_w"));
                        Pathtemp = "c:/spapplication/temp";
                    }


                }
            } else {
                stmt = (Statement) db.con.createStatement();
                String sql = "select * from borpath ";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    if (OS.equalsIgnoreCase("linux")) {
                        ServerPath = cvth.ASCII2Unicode(rs.getString("backuppath"));
                    } else {
                        ServerPath = cvth.ASCII2Unicode(rs.getString("backuppath_w"));
                        Pathtemp = "c:/spapplication/temp";
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void ConverCharSet(String inFile, String inCharsetName, String outFile, String outCharsetName) {
        DirectoryUtility dirUtil = new DirectoryUtility();
        try {
            dirUtil.getFileAndCreateDir(outFile);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        try {
            InputStreamReader in = new InputStreamReader(
                    new FileInputStream(inFile), inCharsetName);
            OutputStreamWriter out = new OutputStreamWriter(
                    new FileOutputStream(outFile), outCharsetName);
            int c = in.read();
            int n = 0;
            while (c != -1) {
                out.write(c);
                n++;
                c = in.read();
            }
            in.close();
            out.close();
        } catch (IOException e) {
            System.out.println(e.toString());
        }
    }

    public boolean copyFile(String des, String target) {
        boolean RetValues = false;
        new File(target).getParentFile().mkdir();
        if (des.equals(target)) {
            RetValues = true;
        } else {
            try {
                InputStream in = new FileInputStream(des);
                OutputStream out = new FileOutputStream(target);
                long max = 0;
                max = new File(des).length();
                byte[] buf = new byte[1024];
                int len;
                long use = 0;
                while ((len = in.read(buf)) > 0) {
                    use += len;
                    out.write(buf, 0, len);
                    out.flush();
                }
                in.close();
                out.close();
                RetValues = true;
            } catch (Exception e) {
                e.printStackTrace();
                RetValues = false;
            }
        }
        return RetValues;

    }
}
