/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ping.interfaceSAP.checkData;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import ping.interfaceSAP.formatDateNum;
import ping.interfaceSAP.showMessage;
import ping.interfaceSAP.utilitySAP;
import utilititiesfunction.ThaiUtilities;

/**
 *
 * @author soneping
 */
public class main_browse_detail extends javax.swing.JDialog {

    /**
     * Creates new form main_browse_detail
     */
    DefaultTableModel model1;
    DefaultTableModel model2;
    formatDateNum fdn = new formatDateNum();
    utilitySAP us = new utilitySAP();
    String strdate = "";
    String branchcode = "";

    public main_browse_detail(java.awt.Frame parent, boolean modal, String date, String branch) {
        super(parent, modal);
        initComponents();

        this.strdate = fdn.convertDateshowToSQL(date);
        this.branchcode = branch;

        model1 = us.setTable(jTable1, "0,", "", "1,");
        model2 = us.setTable(jTable2, "0,1", "", "");

        clearForm();
    }

    private void closePS(PreparedStatement ps) {
        try {
            if (ps != null) {
                ps.close();
                ps = null;
            }
        } catch (Exception e) {
        }
    }

    private void closeRS(ResultSet rs) {
        try {
            if (rs != null) {
                rs.close();
                rs = null;
            }
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_title = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txt_title.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        txt_title.setText("jTextField1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ConditionType", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(130);
        }

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "PLU", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        jLabel1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jLabel1.setText("รายการสินค้าที่ไม่พบ Article ของสาขา");

        jButton1.setFont(new java.awt.Font("Norasi", 1, 14)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_title, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_title, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_browse_detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_browse_detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_browse_detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_browse_detail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                main_browse_detail dialog = new main_browse_detail(new javax.swing.JFrame(), true, "1000-01-01", "");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txt_title;
    // End of variables declaration//GEN-END:variables

    private void clearForm() {
        us.closeTextFiled(txt_title, true);
        us.resetTable(model1);
        us.resetTable(model2);
        
        txt_title.setText("รายละเอียดของสาขา " + this.branchcode);
        loadZPOS();
        loadArticleLost();
    }

    private void loadZPOS() {
        PreparedStatement ps = null;
        ResultSet rs = null;
        String sql = "select  "
                + "zrtint10_zpos,  "
                + "ZRTINT10_sumX , "
                + "ZRTINT10_sumX_sumACTUALSALEPRICE, "
                + "ZRTINT10_sumX_sumTAX, "
                + "ZRTINT10_sumX_sumZAR0_SIGNPLUS, "
                + "ZRTINT10_sumX_sumZDIF_SIGNPLUS, "
                + "ZRTINT10_sumX_sumZS11_Service, "
                + "ZRTINT10_sumY, "
                + "ZRTINT10_sumY_sumCD123, "
                + "ZRTINT10_sumY_sumPAYIN, "
                + "ZRTINT10_sumY_sumSMC, "
                + "ZRTINT10_sumY_sumSMS, "
                + "ZRTINT10_sumY_sumZAR0_SIGN_, "
                + "ZRTINT10_sumY_sumZARC, "
                + "ZRTINT10_sumY_sumZD04_Deposit, "
                + "ZRTINT10_sumY_sumZD07, "
                + "ZRTINT10_sumY_sumZD08, "
                + "ZRTINT10_sumY_sumZD13_Emp, "
                + "ZRTINT10_sumY_sumZD14_Mem, "
                + "ZRTINT10_sumY_sumZD15_Pro, "
                + "ZRTINT10_sumY_sumZDIF_SIGN_, "
                + "ZRTINT10_sumY_sumZEVC, "
                + "ZRTINT10_sumY_sumZGIF, "
                + "ZRTINT10_sumY_sumZT2P, "
                + "ZRTINT10_sumY_sumZVCH "
                + "from resultsapxml "
                + "where strdate=? and branchcode=?";
        try {
            ps = dbutility.dbUtility.con.prepareStatement(sql);
            ps.setString(1, this.strdate);
            ps.setString(2, this.branchcode);
            rs = ps.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                model1.addRow(new Object[]{"sumACTUALSALEPRICE", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumX_sumACTUALSALEPRICE"))});
                model1.addRow(new Object[]{"sumTAX", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumX_sumTAX"))});
                model1.addRow(new Object[]{"sumZAR0_SIGNPLUS", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumX_sumZAR0_SIGNPLUS"))});
                model1.addRow(new Object[]{"sumZDIF_SIGNPLUS", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumX_sumZDIF_SIGNPLUS"))});
                model1.addRow(new Object[]{"sumZS11_Service", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumX_sumZS11_Service"))});
                model1.addRow(new Object[]{"sumX", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumX"))});
                
                model1.addRow(new Object[]{"-------------------------------------", "----------------------"});
                
                model1.addRow(new Object[]{"sumCD123", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumCD123"))});
                model1.addRow(new Object[]{"sumPAYIN", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumPAYIN"))});
                model1.addRow(new Object[]{"sumSMC", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumSMC"))});
                model1.addRow(new Object[]{"sumSMS", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumSMS"))});
                model1.addRow(new Object[]{"sumZAR0_SIGN_", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZAR0_SIGN_"))});
                model1.addRow(new Object[]{"sumZARC", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZARC"))});
                model1.addRow(new Object[]{"sumZD04_Deposit", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZD04_Deposit"))});
                model1.addRow(new Object[]{"sumZD07", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZD07"))});
                model1.addRow(new Object[]{"sumZD08", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZD08"))});
                model1.addRow(new Object[]{"sumZD13_Emp", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZD13_Emp"))});
                model1.addRow(new Object[]{"sumZD14_Mem", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZD14_Mem"))});
                model1.addRow(new Object[]{"sumZD15_Pro", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZD15_Pro"))});
                model1.addRow(new Object[]{"sumZDIF_SIGN_", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZDIF_SIGN_"))});
                model1.addRow(new Object[]{"sumZEVC", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZEVC"))});
                model1.addRow(new Object[]{"sumZGIF", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZGIF"))});
                model1.addRow(new Object[]{"sumZT2P", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZT2P"))});
                model1.addRow(new Object[]{"sumZVCH", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY_sumZVCH"))});
                model1.addRow(new Object[]{"sumY", fdn.doubleFmtShow(rs.getDouble("ZRTINT10_sumY"))});
                
                model1.addRow(new Object[]{"-------------------------------------", "----------------------"});
                model1.addRow(new Object[]{"ZPOS", fdn.doubleFmtShow(rs.getDouble("zrtint10_zpos"))});
            }
        } catch (Exception e) {
            e.printStackTrace();
            new showMessage().showMessageError(e.getMessage(), "main_browse_detail.loadZPOS");
        } finally {
            closePS(ps);
            closeRS(rs);
        }
    }

    private void loadArticleLost() {
        ThaiUtilities cvth = new ThaiUtilities();
        PreparedStatement ps = null;
        ResultSet rs = null;
        String sql = "select a.plu, p.pdesc, p.pgroup "
                + "from articlelost a "
                + "left join product p on a.plu=p.pcode "
                + "where a.strdate=? and a.branchcode=? "
                + "order by p.pgroup, a.plu";
        try {
            ps = dbutility.dbUtility.con.prepareStatement(sql);
            ps.setString(1, this.strdate);
            ps.setString(2, this.branchcode);
            rs = ps.executeQuery();
            rs.first();
            if (rs.getRow() != 0) {
                do {
                    model2.addRow(new Object[]{
                        rs.getString("a.plu"),
                        cvth.ASCII2Unicode(rs.getString("p.pdesc"))
                    });
                } while(rs.next());
            }
        } catch (Exception e) {
            e.printStackTrace();
            new showMessage().showMessageError(e.getMessage(), "main_browse_detail.loadArticleLost");
        } finally {
            closePS(ps);
            closeRS(rs);
        }
    }
}
